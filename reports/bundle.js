/*! For license information please see bundle.js.LICENSE.txt */
(()=>{var t={9282:(t,e,n)=>{"use strict";var r=n(4155),a=n(5108);function o(t){return o="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},o(t)}var i,l,u=n(2136).codes,c=u.ERR_AMBIGUOUS_ARGUMENT,p=u.ERR_INVALID_ARG_TYPE,s=u.ERR_INVALID_ARG_VALUE,A=u.ERR_INVALID_RETURN_VALUE,f=u.ERR_MISSING_ARGS,m=n(5961),d=n(9539).inspect,g=n(9539).types,h=g.isPromise,C=g.isRegExp,y=Object.assign?Object.assign:n(8091).assign,b=Object.is?Object.is:n(609);function v(){var t=n(9158);i=t.isDeepEqual,l=t.isDeepStrictEqual}new Map;var x=!1,E=t.exports=S,w={};function B(t){if(t.message instanceof Error)throw t.message;throw new m(t)}function I(t,e,n,r){if(!n){var a=!1;if(0===e)a=!0,r="No value argument passed to `assert.ok()`";else if(r instanceof Error)throw r;var o=new m({actual:n,expected:!0,message:r,operator:"==",stackStartFn:t});throw o.generatedMessage=a,o}}function S(){for(var t=arguments.length,e=new Array(t),n=0;n<t;n++)e[n]=arguments[n];I.apply(void 0,[S,e.length].concat(e))}E.fail=function t(e,n,o,i,l){var u,c=arguments.length;if(0===c)u="Failed";else if(1===c)o=e,e=void 0;else{if(!1===x){x=!0;var p=r.emitWarning?r.emitWarning:a.warn.bind(a);p("assert.fail() with more than one argument is deprecated. Please use assert.strictEqual() instead or only pass a message.","DeprecationWarning","DEP0094")}2===c&&(i="!=")}if(o instanceof Error)throw o;var s={actual:e,expected:n,operator:void 0===i?"fail":i,stackStartFn:l||t};void 0!==o&&(s.message=o);var A=new m(s);throw u&&(A.message=u,A.generatedMessage=!0),A},E.AssertionError=m,E.ok=S,E.equal=function t(e,n,r){if(arguments.length<2)throw new f("actual","expected");e!=n&&B({actual:e,expected:n,message:r,operator:"==",stackStartFn:t})},E.notEqual=function t(e,n,r){if(arguments.length<2)throw new f("actual","expected");e==n&&B({actual:e,expected:n,message:r,operator:"!=",stackStartFn:t})},E.deepEqual=function t(e,n,r){if(arguments.length<2)throw new f("actual","expected");void 0===i&&v(),i(e,n)||B({actual:e,expected:n,message:r,operator:"deepEqual",stackStartFn:t})},E.notDeepEqual=function t(e,n,r){if(arguments.length<2)throw new f("actual","expected");void 0===i&&v(),i(e,n)&&B({actual:e,expected:n,message:r,operator:"notDeepEqual",stackStartFn:t})},E.deepStrictEqual=function t(e,n,r){if(arguments.length<2)throw new f("actual","expected");void 0===i&&v(),l(e,n)||B({actual:e,expected:n,message:r,operator:"deepStrictEqual",stackStartFn:t})},E.notDeepStrictEqual=function t(e,n,r){if(arguments.length<2)throw new f("actual","expected");void 0===i&&v(),l(e,n)&&B({actual:e,expected:n,message:r,operator:"notDeepStrictEqual",stackStartFn:t})},E.strictEqual=function t(e,n,r){if(arguments.length<2)throw new f("actual","expected");b(e,n)||B({actual:e,expected:n,message:r,operator:"strictEqual",stackStartFn:t})},E.notStrictEqual=function t(e,n,r){if(arguments.length<2)throw new f("actual","expected");b(e,n)&&B({actual:e,expected:n,message:r,operator:"notStrictEqual",stackStartFn:t})};var k=function t(e,n,r){var a=this;!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),n.forEach((function(t){t in e&&(void 0!==r&&"string"==typeof r[t]&&C(e[t])&&e[t].test(r[t])?a[t]=r[t]:a[t]=e[t])}))};function O(t,e,n,r,a,o){if(!(n in t)||!l(t[n],e[n])){if(!r){var i=new k(t,a),u=new k(e,a,t),c=new m({actual:i,expected:u,operator:"deepStrictEqual",stackStartFn:o});throw c.actual=t,c.expected=e,c.operator=o.name,c}B({actual:t,expected:e,message:r,operator:o.name,stackStartFn:o})}}function J(t,e,n,r){if("function"!=typeof e){if(C(e))return e.test(t);if(2===arguments.length)throw new p("expected",["Function","RegExp"],e);if("object"!==o(t)||null===t){var a=new m({actual:t,expected:e,message:n,operator:"deepStrictEqual",stackStartFn:r});throw a.operator=r.name,a}var l=Object.keys(e);if(e instanceof Error)l.push("name","message");else if(0===l.length)throw new s("error",e,"may not be an empty object");return void 0===i&&v(),l.forEach((function(a){"string"==typeof t[a]&&C(e[a])&&e[a].test(t[a])||O(t,e,a,n,l,r)})),!0}return void 0!==e.prototype&&t instanceof e||!Error.isPrototypeOf(e)&&!0===e.call({},t)}function _(t){if("function"!=typeof t)throw new p("fn","Function",t);try{t()}catch(t){return t}return w}function P(t){return h(t)||null!==t&&"object"===o(t)&&"function"==typeof t.then&&"function"==typeof t.catch}function M(t){return Promise.resolve().then((function(){var e;if("function"==typeof t){if(!P(e=t()))throw new A("instance of Promise","promiseFn",e)}else{if(!P(t))throw new p("promiseFn",["Function","Promise"],t);e=t}return Promise.resolve().then((function(){return e})).then((function(){return w})).catch((function(t){return t}))}))}function N(t,e,n,r){if("string"==typeof n){if(4===arguments.length)throw new p("error",["Object","Error","Function","RegExp"],n);if("object"===o(e)&&null!==e){if(e.message===n)throw new c("error/message",'The error message "'.concat(e.message,'" is identical to the message.'))}else if(e===n)throw new c("error/message",'The error "'.concat(e,'" is identical to the message.'));r=n,n=void 0}else if(null!=n&&"object"!==o(n)&&"function"!=typeof n)throw new p("error",["Object","Error","Function","RegExp"],n);if(e===w){var a="";n&&n.name&&(a+=" (".concat(n.name,")")),a+=r?": ".concat(r):".";var i="rejects"===t.name?"rejection":"exception";B({actual:void 0,expected:n,operator:t.name,message:"Missing expected ".concat(i).concat(a),stackStartFn:t})}if(n&&!J(e,n,r,t))throw e}function j(t,e,n,r){if(e!==w){if("string"==typeof n&&(r=n,n=void 0),!n||J(e,n)){var a=r?": ".concat(r):".",o="doesNotReject"===t.name?"rejection":"exception";B({actual:e,expected:n,operator:t.name,message:"Got unwanted ".concat(o).concat(a,"\n")+'Actual message: "'.concat(e&&e.message,'"'),stackStartFn:t})}throw e}}function T(){for(var t=arguments.length,e=new Array(t),n=0;n<t;n++)e[n]=arguments[n];I.apply(void 0,[T,e.length].concat(e))}E.throws=function t(e){for(var n=arguments.length,r=new Array(n>1?n-1:0),a=1;a<n;a++)r[a-1]=arguments[a];N.apply(void 0,[t,_(e)].concat(r))},E.rejects=function t(e){for(var n=arguments.length,r=new Array(n>1?n-1:0),a=1;a<n;a++)r[a-1]=arguments[a];return M(e).then((function(e){return N.apply(void 0,[t,e].concat(r))}))},E.doesNotThrow=function t(e){for(var n=arguments.length,r=new Array(n>1?n-1:0),a=1;a<n;a++)r[a-1]=arguments[a];j.apply(void 0,[t,_(e)].concat(r))},E.doesNotReject=function t(e){for(var n=arguments.length,r=new Array(n>1?n-1:0),a=1;a<n;a++)r[a-1]=arguments[a];return M(e).then((function(e){return j.apply(void 0,[t,e].concat(r))}))},E.ifError=function t(e){if(null!=e){var n="ifError got unwanted exception: ";"object"===o(e)&&"string"==typeof e.message?0===e.message.length&&e.constructor?n+=e.constructor.name:n+=e.message:n+=d(e);var r=new m({actual:e,expected:null,operator:"ifError",message:n,stackStartFn:t}),a=e.stack;if("string"==typeof a){var i=a.split("\n");i.shift();for(var l=r.stack.split("\n"),u=0;u<i.length;u++){var c=l.indexOf(i[u]);if(-1!==c){l=l.slice(0,c);break}}r.stack="".concat(l.join("\n"),"\n").concat(i.join("\n"))}throw r}},E.strict=y(T,E,{equal:E.strictEqual,deepEqual:E.deepStrictEqual,notEqual:E.notStrictEqual,notDeepEqual:E.notDeepStrictEqual}),E.strict.strict=E.strict},5961:(t,e,n)=>{"use strict";var r=n(4155);function a(t,e,n){return e in t?Object.defineProperty(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[e]=n,t}function o(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,r.key,r)}}function i(t,e){return!e||"object"!==f(e)&&"function"!=typeof e?l(t):e}function l(t){if(void 0===t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return t}function u(t){var e="function"==typeof Map?new Map:void 0;return u=function(t){if(null===t||(n=t,-1===Function.toString.call(n).indexOf("[native code]")))return t;var n;if("function"!=typeof t)throw new TypeError("Super expression must either be null or a function");if(void 0!==e){if(e.has(t))return e.get(t);e.set(t,r)}function r(){return p(t,arguments,A(this).constructor)}return r.prototype=Object.create(t.prototype,{constructor:{value:r,enumerable:!1,writable:!0,configurable:!0}}),s(r,t)},u(t)}function c(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Date.prototype.toString.call(Reflect.construct(Date,[],(function(){}))),!0}catch(t){return!1}}function p(t,e,n){return p=c()?Reflect.construct:function(t,e,n){var r=[null];r.push.apply(r,e);var a=new(Function.bind.apply(t,r));return n&&s(a,n.prototype),a},p.apply(null,arguments)}function s(t,e){return s=Object.setPrototypeOf||function(t,e){return t.__proto__=e,t},s(t,e)}function A(t){return A=Object.setPrototypeOf?Object.getPrototypeOf:function(t){return t.__proto__||Object.getPrototypeOf(t)},A(t)}function f(t){return f="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},f(t)}var m=n(9539).inspect,d=n(2136).codes.ERR_INVALID_ARG_TYPE;function g(t,e,n){return(void 0===n||n>t.length)&&(n=t.length),t.substring(n-e.length,n)===e}var h="",C="",y="",b="",v={deepStrictEqual:"Expected values to be strictly deep-equal:",strictEqual:"Expected values to be strictly equal:",strictEqualObject:'Expected "actual" to be reference-equal to "expected":',deepEqual:"Expected values to be loosely deep-equal:",equal:"Expected values to be loosely equal:",notDeepStrictEqual:'Expected "actual" not to be strictly deep-equal to:',notStrictEqual:'Expected "actual" to be strictly unequal to:',notStrictEqualObject:'Expected "actual" not to be reference-equal to "expected":',notDeepEqual:'Expected "actual" not to be loosely deep-equal to:',notEqual:'Expected "actual" to be loosely unequal to:',notIdentical:"Values identical but not reference-equal:"};function x(t){var e=Object.keys(t),n=Object.create(Object.getPrototypeOf(t));return e.forEach((function(e){n[e]=t[e]})),Object.defineProperty(n,"message",{value:t.message}),n}function E(t){return m(t,{compact:!1,customInspect:!1,depth:1e3,maxArrayLength:1/0,showHidden:!1,breakLength:1/0,showProxy:!1,sorted:!0,getters:!0})}var w=function(t){function e(t){var n;if(function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,e),"object"!==f(t)||null===t)throw new d("options","Object",t);var a=t.message,o=t.operator,u=t.stackStartFn,c=t.actual,p=t.expected,s=Error.stackTraceLimit;if(Error.stackTraceLimit=0,null!=a)n=i(this,A(e).call(this,String(a)));else if(r.stderr&&r.stderr.isTTY&&(r.stderr&&r.stderr.getColorDepth&&1!==r.stderr.getColorDepth()?(h="[34m",C="[32m",b="[39m",y="[31m"):(h="",C="",b="",y="")),"object"===f(c)&&null!==c&&"object"===f(p)&&null!==p&&"stack"in c&&c instanceof Error&&"stack"in p&&p instanceof Error&&(c=x(c),p=x(p)),"deepStrictEqual"===o||"strictEqual"===o)n=i(this,A(e).call(this,function(t,e,n){var a="",o="",i=0,l="",u=!1,c=E(t),p=c.split("\n"),s=E(e).split("\n"),A=0,m="";if("strictEqual"===n&&"object"===f(t)&&"object"===f(e)&&null!==t&&null!==e&&(n="strictEqualObject"),1===p.length&&1===s.length&&p[0]!==s[0]){var d=p[0].length+s[0].length;if(d<=10){if(!("object"===f(t)&&null!==t||"object"===f(e)&&null!==e||0===t&&0===e))return"".concat(v[n],"\n\n")+"".concat(p[0]," !== ").concat(s[0],"\n")}else if("strictEqualObject"!==n&&d<(r.stderr&&r.stderr.isTTY?r.stderr.columns:80)){for(;p[0][A]===s[0][A];)A++;A>2&&(m="\n  ".concat(function(t,e){if(e=Math.floor(e),0==t.length||0==e)return"";var n=t.length*e;for(e=Math.floor(Math.log(e)/Math.log(2));e;)t+=t,e--;return t+t.substring(0,n-t.length)}(" ",A),"^"),A=0)}}for(var x=p[p.length-1],w=s[s.length-1];x===w&&(A++<2?l="\n  ".concat(x).concat(l):a=x,p.pop(),s.pop(),0!==p.length&&0!==s.length);)x=p[p.length-1],w=s[s.length-1];var B=Math.max(p.length,s.length);if(0===B){var I=c.split("\n");if(I.length>30)for(I[26]="".concat(h,"...").concat(b);I.length>27;)I.pop();return"".concat(v.notIdentical,"\n\n").concat(I.join("\n"),"\n")}A>3&&(l="\n".concat(h,"...").concat(b).concat(l),u=!0),""!==a&&(l="\n  ".concat(a).concat(l),a="");var S=0,k=v[n]+"\n".concat(C,"+ actual").concat(b," ").concat(y,"- expected").concat(b),O=" ".concat(h,"...").concat(b," Lines skipped");for(A=0;A<B;A++){var J=A-i;if(p.length<A+1)J>1&&A>2&&(J>4?(o+="\n".concat(h,"...").concat(b),u=!0):J>3&&(o+="\n  ".concat(s[A-2]),S++),o+="\n  ".concat(s[A-1]),S++),i=A,a+="\n".concat(y,"-").concat(b," ").concat(s[A]),S++;else if(s.length<A+1)J>1&&A>2&&(J>4?(o+="\n".concat(h,"...").concat(b),u=!0):J>3&&(o+="\n  ".concat(p[A-2]),S++),o+="\n  ".concat(p[A-1]),S++),i=A,o+="\n".concat(C,"+").concat(b," ").concat(p[A]),S++;else{var _=s[A],P=p[A],M=P!==_&&(!g(P,",")||P.slice(0,-1)!==_);M&&g(_,",")&&_.slice(0,-1)===P&&(M=!1,P+=","),M?(J>1&&A>2&&(J>4?(o+="\n".concat(h,"...").concat(b),u=!0):J>3&&(o+="\n  ".concat(p[A-2]),S++),o+="\n  ".concat(p[A-1]),S++),i=A,o+="\n".concat(C,"+").concat(b," ").concat(P),a+="\n".concat(y,"-").concat(b," ").concat(_),S+=2):(o+=a,a="",1!==J&&0!==A||(o+="\n  ".concat(P),S++))}if(S>20&&A<B-2)return"".concat(k).concat(O,"\n").concat(o,"\n").concat(h,"...").concat(b).concat(a,"\n")+"".concat(h,"...").concat(b)}return"".concat(k).concat(u?O:"","\n").concat(o).concat(a).concat(l).concat(m)}(c,p,o)));else if("notDeepStrictEqual"===o||"notStrictEqual"===o){var m=v[o],w=E(c).split("\n");if("notStrictEqual"===o&&"object"===f(c)&&null!==c&&(m=v.notStrictEqualObject),w.length>30)for(w[26]="".concat(h,"...").concat(b);w.length>27;)w.pop();n=1===w.length?i(this,A(e).call(this,"".concat(m," ").concat(w[0]))):i(this,A(e).call(this,"".concat(m,"\n\n").concat(w.join("\n"),"\n")))}else{var B=E(c),I="",S=v[o];"notDeepEqual"===o||"notEqual"===o?(B="".concat(v[o],"\n\n").concat(B)).length>1024&&(B="".concat(B.slice(0,1021),"...")):(I="".concat(E(p)),B.length>512&&(B="".concat(B.slice(0,509),"...")),I.length>512&&(I="".concat(I.slice(0,509),"...")),"deepEqual"===o||"equal"===o?B="".concat(S,"\n\n").concat(B,"\n\nshould equal\n\n"):I=" ".concat(o," ").concat(I)),n=i(this,A(e).call(this,"".concat(B).concat(I)))}return Error.stackTraceLimit=s,n.generatedMessage=!a,Object.defineProperty(l(n),"name",{value:"AssertionError [ERR_ASSERTION]",enumerable:!1,writable:!0,configurable:!0}),n.code="ERR_ASSERTION",n.actual=c,n.expected=p,n.operator=o,Error.captureStackTrace&&Error.captureStackTrace(l(n),u),n.stack,n.name="AssertionError",i(n)}var n,u;return function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),e&&s(t,e)}(e,t),n=e,u=[{key:"toString",value:function(){return"".concat(this.name," [").concat(this.code,"]: ").concat(this.message)}},{key:m.custom,value:function(t,e){return m(this,function(t){for(var e=1;e<arguments.length;e++){var n=null!=arguments[e]?arguments[e]:{},r=Object.keys(n);"function"==typeof Object.getOwnPropertySymbols&&(r=r.concat(Object.getOwnPropertySymbols(n).filter((function(t){return Object.getOwnPropertyDescriptor(n,t).enumerable})))),r.forEach((function(e){a(t,e,n[e])}))}return t}({},e,{customInspect:!1,depth:0}))}}],u&&o(n.prototype,u),e}(u(Error));t.exports=w},2136:(t,e,n)=>{"use strict";function r(t){return r="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},r(t)}function a(t){return a=Object.setPrototypeOf?Object.getPrototypeOf:function(t){return t.__proto__||Object.getPrototypeOf(t)},a(t)}function o(t,e){return o=Object.setPrototypeOf||function(t,e){return t.__proto__=e,t},o(t,e)}var i,l,u={};function c(t,e,n){n||(n=Error);var i=function(n){function i(n,o,l){var u,c,p;return function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,i),c=this,p=a(i).call(this,function(t,n,r){return"string"==typeof e?e:e(t,n,r)}(n,o,l)),u=!p||"object"!==r(p)&&"function"!=typeof p?function(t){if(void 0===t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return t}(c):p,u.code=t,u}return function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),e&&o(t,e)}(i,n),i}(n);u[t]=i}function p(t,e){if(Array.isArray(t)){var n=t.length;return t=t.map((function(t){return String(t)})),n>2?"one of ".concat(e," ").concat(t.slice(0,n-1).join(", "),", or ")+t[n-1]:2===n?"one of ".concat(e," ").concat(t[0]," or ").concat(t[1]):"of ".concat(e," ").concat(t[0])}return"of ".concat(e," ").concat(String(t))}c("ERR_AMBIGUOUS_ARGUMENT",'The "%s" argument is ambiguous. %s',TypeError),c("ERR_INVALID_ARG_TYPE",(function(t,e,a){var o,l,u,c,s;if(void 0===i&&(i=n(9282)),i("string"==typeof t,"'name' must be a string"),"string"==typeof e&&(l="not ",e.substr(0,l.length)===l)?(o="must not be",e=e.replace(/^not /,"")):o="must be",function(t,e,n){return(void 0===n||n>t.length)&&(n=t.length),t.substring(n-e.length,n)===e}(t," argument"))u="The ".concat(t," ").concat(o," ").concat(p(e,"type"));else{var A=("number"!=typeof s&&(s=0),s+".".length>(c=t).length||-1===c.indexOf(".",s)?"argument":"property");u='The "'.concat(t,'" ').concat(A," ").concat(o," ").concat(p(e,"type"))}return u+". Received type ".concat(r(a))}),TypeError),c("ERR_INVALID_ARG_VALUE",(function(t,e){var r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"is invalid";void 0===l&&(l=n(9539));var a=l.inspect(e);return a.length>128&&(a="".concat(a.slice(0,128),"...")),"The argument '".concat(t,"' ").concat(r,". Received ").concat(a)}),TypeError,RangeError),c("ERR_INVALID_RETURN_VALUE",(function(t,e,n){var a;return a=n&&n.constructor&&n.constructor.name?"instance of ".concat(n.constructor.name):"type ".concat(r(n)),"Expected ".concat(t,' to be returned from the "').concat(e,'"')+" function but got ".concat(a,".")}),TypeError),c("ERR_MISSING_ARGS",(function(){for(var t=arguments.length,e=new Array(t),r=0;r<t;r++)e[r]=arguments[r];void 0===i&&(i=n(9282)),i(e.length>0,"At least one arg needs to be specified");var a="The ",o=e.length;switch(e=e.map((function(t){return'"'.concat(t,'"')})),o){case 1:a+="".concat(e[0]," argument");break;case 2:a+="".concat(e[0]," and ").concat(e[1]," arguments");break;default:a+=e.slice(0,o-1).join(", "),a+=", and ".concat(e[o-1]," arguments")}return"".concat(a," must be specified")}),TypeError),t.exports.codes=u},9158:(t,e,n)=>{"use strict";function r(t,e){return function(t){if(Array.isArray(t))return t}(t)||function(t,e){var n=[],r=!0,a=!1,o=void 0;try{for(var i,l=t[Symbol.iterator]();!(r=(i=l.next()).done)&&(n.push(i.value),!e||n.length!==e);r=!0);}catch(t){a=!0,o=t}finally{try{r||null==l.return||l.return()}finally{if(a)throw o}}return n}(t,e)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance")}()}function a(t){return a="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},a(t)}var o=void 0!==/a/g.flags,i=function(t){var e=[];return t.forEach((function(t){return e.push(t)})),e},l=function(t){var e=[];return t.forEach((function(t,n){return e.push([n,t])})),e},u=Object.is?Object.is:n(609),c=Object.getOwnPropertySymbols?Object.getOwnPropertySymbols:function(){return[]},p=Number.isNaN?Number.isNaN:n(360);function s(t){return t.call.bind(t)}var A=s(Object.prototype.hasOwnProperty),f=s(Object.prototype.propertyIsEnumerable),m=s(Object.prototype.toString),d=n(9539).types,g=d.isAnyArrayBuffer,h=d.isArrayBufferView,C=d.isDate,y=d.isMap,b=d.isRegExp,v=d.isSet,x=d.isNativeError,E=d.isBoxedPrimitive,w=d.isNumberObject,B=d.isStringObject,I=d.isBooleanObject,S=d.isBigIntObject,k=d.isSymbolObject,O=d.isFloat32Array,J=d.isFloat64Array;function _(t){if(0===t.length||t.length>10)return!0;for(var e=0;e<t.length;e++){var n=t.charCodeAt(e);if(n<48||n>57)return!0}return 10===t.length&&t>=Math.pow(2,32)}function P(t){return Object.keys(t).filter(_).concat(c(t).filter(Object.prototype.propertyIsEnumerable.bind(t)))}function M(t,e){if(t===e)return 0;for(var n=t.length,r=e.length,a=0,o=Math.min(n,r);a<o;++a)if(t[a]!==e[a]){n=t[a],r=e[a];break}return n<r?-1:r<n?1:0}function N(t,e,n,r){if(t===e)return 0!==t||!n||u(t,e);if(n){if("object"!==a(t))return"number"==typeof t&&p(t)&&p(e);if("object"!==a(e)||null===t||null===e)return!1;if(Object.getPrototypeOf(t)!==Object.getPrototypeOf(e))return!1}else{if(null===t||"object"!==a(t))return(null===e||"object"!==a(e))&&t==e;if(null===e||"object"!==a(e))return!1}var i,l,c,s,A=m(t);if(A!==m(e))return!1;if(Array.isArray(t)){if(t.length!==e.length)return!1;var f=P(t),d=P(e);return f.length===d.length&&T(t,e,n,r,1,f)}if("[object Object]"===A&&(!y(t)&&y(e)||!v(t)&&v(e)))return!1;if(C(t)){if(!C(e)||Date.prototype.getTime.call(t)!==Date.prototype.getTime.call(e))return!1}else if(b(t)){if(!b(e)||(c=t,s=e,!(o?c.source===s.source&&c.flags===s.flags:RegExp.prototype.toString.call(c)===RegExp.prototype.toString.call(s))))return!1}else if(x(t)||t instanceof Error){if(t.message!==e.message||t.name!==e.name)return!1}else{if(h(t)){if(n||!O(t)&&!J(t)){if(!function(t,e){return t.byteLength===e.byteLength&&0===M(new Uint8Array(t.buffer,t.byteOffset,t.byteLength),new Uint8Array(e.buffer,e.byteOffset,e.byteLength))}(t,e))return!1}else if(!function(t,e){if(t.byteLength!==e.byteLength)return!1;for(var n=0;n<t.byteLength;n++)if(t[n]!==e[n])return!1;return!0}(t,e))return!1;var _=P(t),N=P(e);return _.length===N.length&&T(t,e,n,r,0,_)}if(v(t))return!(!v(e)||t.size!==e.size)&&T(t,e,n,r,2);if(y(t))return!(!y(e)||t.size!==e.size)&&T(t,e,n,r,3);if(g(t)){if(l=e,(i=t).byteLength!==l.byteLength||0!==M(new Uint8Array(i),new Uint8Array(l)))return!1}else if(E(t)&&!function(t,e){return w(t)?w(e)&&u(Number.prototype.valueOf.call(t),Number.prototype.valueOf.call(e)):B(t)?B(e)&&String.prototype.valueOf.call(t)===String.prototype.valueOf.call(e):I(t)?I(e)&&Boolean.prototype.valueOf.call(t)===Boolean.prototype.valueOf.call(e):S(t)?S(e)&&BigInt.prototype.valueOf.call(t)===BigInt.prototype.valueOf.call(e):k(e)&&Symbol.prototype.valueOf.call(t)===Symbol.prototype.valueOf.call(e)}(t,e))return!1}return T(t,e,n,r,0)}function j(t,e){return e.filter((function(e){return f(t,e)}))}function T(t,e,n,r,a,o){if(5===arguments.length){o=Object.keys(t);var i=Object.keys(e);if(o.length!==i.length)return!1}for(var l=0;l<o.length;l++)if(!A(e,o[l]))return!1;if(n&&5===arguments.length){var u=c(t);if(0!==u.length){var p=0;for(l=0;l<u.length;l++){var s=u[l];if(f(t,s)){if(!f(e,s))return!1;o.push(s),p++}else if(f(e,s))return!1}var m=c(e);if(u.length!==m.length&&j(e,m).length!==p)return!1}else{var d=c(e);if(0!==d.length&&0!==j(e,d).length)return!1}}if(0===o.length&&(0===a||1===a&&0===t.length||0===t.size))return!0;if(void 0===r)r={val1:new Map,val2:new Map,position:0};else{var g=r.val1.get(t);if(void 0!==g){var h=r.val2.get(e);if(void 0!==h)return g===h}r.position++}r.val1.set(t,r.position),r.val2.set(e,r.position);var C=L(t,e,n,o,r,a);return r.val1.delete(t),r.val2.delete(e),C}function $(t,e,n,r){for(var a=i(t),o=0;o<a.length;o++){var l=a[o];if(N(e,l,n,r))return t.delete(l),!0}return!1}function U(t){switch(a(t)){case"undefined":return null;case"object":return;case"symbol":return!1;case"string":t=+t;case"number":if(p(t))return!1}return!0}function z(t,e,n){var r=U(n);return null!=r?r:e.has(r)&&!t.has(r)}function R(t,e,n,r,a){var o=U(n);if(null!=o)return o;var i=e.get(o);return!(void 0===i&&!e.has(o)||!N(r,i,!1,a))&&!t.has(o)&&N(r,i,!1,a)}function F(t,e,n,r,a,o){for(var l=i(t),u=0;u<l.length;u++){var c=l[u];if(N(n,c,a,o)&&N(r,e.get(c),a,o))return t.delete(c),!0}return!1}function L(t,e,n,o,u,c){var p=0;if(2===c){if(!function(t,e,n,r){for(var o=null,l=i(t),u=0;u<l.length;u++){var c=l[u];if("object"===a(c)&&null!==c)null===o&&(o=new Set),o.add(c);else if(!e.has(c)){if(n)return!1;if(!z(t,e,c))return!1;null===o&&(o=new Set),o.add(c)}}if(null!==o){for(var p=i(e),s=0;s<p.length;s++){var A=p[s];if("object"===a(A)&&null!==A){if(!$(o,A,n,r))return!1}else if(!n&&!t.has(A)&&!$(o,A,n,r))return!1}return 0===o.size}return!0}(t,e,n,u))return!1}else if(3===c){if(!function(t,e,n,o){for(var i=null,u=l(t),c=0;c<u.length;c++){var p=r(u[c],2),s=p[0],A=p[1];if("object"===a(s)&&null!==s)null===i&&(i=new Set),i.add(s);else{var f=e.get(s);if(void 0===f&&!e.has(s)||!N(A,f,n,o)){if(n)return!1;if(!R(t,e,s,A,o))return!1;null===i&&(i=new Set),i.add(s)}}}if(null!==i){for(var m=l(e),d=0;d<m.length;d++){var g=r(m[d],2),h=(s=g[0],g[1]);if("object"===a(s)&&null!==s){if(!F(i,t,s,h,n,o))return!1}else if(!(n||t.has(s)&&N(t.get(s),h,!1,o)||F(i,t,s,h,!1,o)))return!1}return 0===i.size}return!0}(t,e,n,u))return!1}else if(1===c)for(;p<t.length;p++){if(!A(t,p)){if(A(e,p))return!1;for(var s=Object.keys(t);p<s.length;p++){var f=s[p];if(!A(e,f)||!N(t[f],e[f],n,u))return!1}return s.length===Object.keys(e).length}if(!A(e,p)||!N(t[p],e[p],n,u))return!1}for(p=0;p<o.length;p++){var m=o[p];if(!N(t[m],e[m],n,u))return!1}return!0}t.exports={isDeepEqual:function(t,e){return N(t,e,!1)},isDeepStrictEqual:function(t,e){return N(t,e,!0)}}},1924:(t,e,n)=>{"use strict";var r=n(210),a=n(5559),o=a(r("String.prototype.indexOf"));t.exports=function(t,e){var n=r(t,!!e);return"function"==typeof n&&o(t,".prototype.")>-1?a(n):n}},5559:(t,e,n)=>{"use strict";var r=n(8612),a=n(210),o=a("%Function.prototype.apply%"),i=a("%Function.prototype.call%"),l=a("%Reflect.apply%",!0)||r.call(i,o),u=a("%Object.getOwnPropertyDescriptor%",!0),c=a("%Object.defineProperty%",!0),p=a("%Math.max%");if(c)try{c({},"a",{value:1})}catch(t){c=null}t.exports=function(t){var e=l(r,i,arguments);if(u&&c){var n=u(e,"length");n.configurable&&c(e,"length",{value:1+p(0,t.length-(arguments.length-1))})}return e};var s=function(){return l(r,o,arguments)};c?c(t.exports,"apply",{value:s}):t.exports.apply=s},5108:(t,e,n)=>{var r=n(9539),a=n(9282);function o(){return(new Date).getTime()}var i,l=Array.prototype.slice,u={};i=void 0!==n.g&&n.g.console?n.g.console:"undefined"!=typeof window&&window.console?window.console:{};for(var c=[[function(){},"log"],[function(){i.log.apply(i,arguments)},"info"],[function(){i.log.apply(i,arguments)},"warn"],[function(){i.warn.apply(i,arguments)},"error"],[function(t){u[t]=o()},"time"],[function(t){var e=u[t];if(!e)throw new Error("No such label: "+t);delete u[t];var n=o()-e;i.log(t+": "+n+"ms")},"timeEnd"],[function(){var t=new Error;t.name="Trace",t.message=r.format.apply(null,arguments),i.error(t.stack)},"trace"],[function(t){i.log(r.inspect(t)+"\n")},"dir"],[function(t){if(!t){var e=l.call(arguments,1);a.ok(!1,r.format.apply(null,e))}},"assert"]],p=0;p<c.length;p++){var s=c[p],A=s[0],f=s[1];i[f]||(i[f]=A)}t.exports=i},9167:(t,e,n)=>{"use strict";n.d(e,{Z:()=>l});var r=n(7537),a=n.n(r),o=n(3645),i=n.n(o)()(a());i.push([t.id,'html{height:100vh;width:100vw;overflow:hidden;font-family:system-ui,-apple-system,BlinkMacSystemFont,"Segoe UI",Roboto,Oxygen,Ubuntu,Cantarell,"Open Sans","Helvetica Neue",sans-serif}body{height:100%;width:100%}html,body{margin:0;padding:0;font-size:14px}code{font-family:source-code-pro,Menlo,Monaco,Consolas,"Courier New",monospace}#root{height:100%;width:100%;margin:0;overflow:hidden}.title-1{font-size:24px;margin:0}.title-2{font-size:18px;color:#000;margin:0}.title-3{font-size:18px;font-weight:600;color:#000;margin:0}.title-4{font-size:16px;font-weight:600;color:#000;margin:0}.eog-card{cursor:pointer;background:rgba(0,0,0,0);height:218px;width:177px;box-shadow:2px 2px 4px 2px #ccc;border-radius:8px}.eog-card:hover{background:rgba(238,238,238,.6)}.eog-card__img{height:177px;width:177px;border-radius:8px 8px 0 0}.eog-card__caption{margin-top:8px;display:block;font-size:14px;color:#000;cursor:pointer;text-align:center}.eog-card-img{cursor:pointer;background:rgba(0,0,0,0);margin:20px 20px 20px 0;height:550px;width:460px;box-shadow:2px 2px 4px 2px #ccc;border-radius:8px;text-align:center}.eog-card-img:not(:nth-child(3n+1)){margin-left:20px}.eog-card-img__img{height:400px;width:400px;border-radius:8px 8px 0 0}.eog-card-img__caption{margin-top:8px;display:block;font-size:14px;color:#000;cursor:pointer;text-align:center}.eog-breadcrumbs{display:flex;align-items:center;height:31px;padding:10px 0;margin-top:20px;padding-left:20px}.eog-breadcrumbs__item{font-size:18px;font-weight:600;color:#000;text-decoration:none}.eog-breadcrumbs__item.active{color:#00bcd4}.eog-list-data__label{font-weight:600;font-size:14px;display:inline-block}.eog-list-data__value{font-size:14px;display:inline-block;margin-left:20px}.eog-btn{height:35px;border:none;padding:8px 16px;border-radius:5px}.eog-btn-primary{background:#00bcd4;color:#fff}.eog-header{height:26px;width:100%;background:#00bcd4;padding:13px 20px}.eog-header__title{margin:0;color:#fff;font-weight:bold;font-size:20px}.eog-main{padding:20px;height:calc(100% - 173px);width:calc(100% - 20px)}.eog-grid{display:flex;flex-wrap:wrap;padding:1.4285714286rem 0;height:calc(100% - 20px);width:100%;overflow-y:auto}.ma-0{margin:0px !important}.mt-0{margin-top:0px !important}.mb-0{margin-bottom:0px !important}.ml-0{margin-left:0px !important}.mr-0{margin-right:0px !important}.mx-0{margin-left:0px !important;margin-right:0px !important}.my-0{margin-top:0px !important;margin-bottom:0px !important}.ma-n0{margin:0px !important}.mt-n0{margin-top:0px !important}.mb-n0{margin-bottom:0px !important}.ml-n0{margin-left:0px !important}.mr-n0{margin-right:0px !important}.mx-n0{margin-left:0px !important;margin-right:0px !important}.my-n0{margin-top:0px !important;margin-bottom:0px !important}.ma-sm-0{margin:0px !important}.mt-sm-0{margin-top:0px !important}.mt-sm-n0{margin-top:0px !important}.mb-sm-0{margin-bottom:0px !important}.ml-sm-0{margin-left:0px !important}.mr-sm-0{margin-right:0px !important}.mx-sm-0{margin-left:0px !important;margin-right:0px !important}.my-sm-0{margin-top:0px !important;margin-bottom:0px !important}.pa-0{padding:0px !important}.pt-0{padding-top:0px !important}.pb-0{padding-bottom:0px !important}.pl-0{padding-left:0px !important}.pr-0{padding-right:0px !important}.px-0{padding-left:0px !important;padding-right:0px !important}.py-0{padding-top:0px !important;padding-bottom:0px !important}.ma-1{margin:8px !important}.mt-1{margin-top:8px !important}.mb-1{margin-bottom:8px !important}.ml-1{margin-left:8px !important}.mr-1{margin-right:8px !important}.mx-1{margin-left:8px !important;margin-right:8px !important}.my-1{margin-top:8px !important;margin-bottom:8px !important}.ma-n1{margin:-8px !important}.mt-n1{margin-top:-8px !important}.mb-n1{margin-bottom:-8px !important}.ml-n1{margin-left:-8px !important}.mr-n1{margin-right:-8px !important}.mx-n1{margin-left:-8px !important;margin-right:-8px !important}.my-n1{margin-top:-8px !important;margin-bottom:-8px !important}.ma-sm-1{margin:4px !important}.mt-sm-1{margin-top:4px !important}.mt-sm-n1{margin-top:-4px !important}.mb-sm-1{margin-bottom:4px !important}.ml-sm-1{margin-left:4px !important}.mr-sm-1{margin-right:4px !important}.mx-sm-1{margin-left:4px !important;margin-right:4px !important}.my-sm-1{margin-top:4px !important;margin-bottom:4px !important}.pa-1{padding:8px !important}.pt-1{padding-top:8px !important}.pb-1{padding-bottom:8px !important}.pl-1{padding-left:8px !important}.pr-1{padding-right:8px !important}.px-1{padding-left:8px !important;padding-right:8px !important}.py-1{padding-top:8px !important;padding-bottom:8px !important}.ma-2{margin:16px !important}.mt-2{margin-top:16px !important}.mb-2{margin-bottom:16px !important}.ml-2{margin-left:16px !important}.mr-2{margin-right:16px !important}.mx-2{margin-left:16px !important;margin-right:16px !important}.my-2{margin-top:16px !important;margin-bottom:16px !important}.ma-n2{margin:-16px !important}.mt-n2{margin-top:-16px !important}.mb-n2{margin-bottom:-16px !important}.ml-n2{margin-left:-16px !important}.mr-n2{margin-right:-16px !important}.mx-n2{margin-left:-16px !important;margin-right:-16px !important}.my-n2{margin-top:-16px !important;margin-bottom:-16px !important}.ma-sm-2{margin:8px !important}.mt-sm-2{margin-top:8px !important}.mt-sm-n2{margin-top:-8px !important}.mb-sm-2{margin-bottom:8px !important}.ml-sm-2{margin-left:8px !important}.mr-sm-2{margin-right:8px !important}.mx-sm-2{margin-left:8px !important;margin-right:8px !important}.my-sm-2{margin-top:8px !important;margin-bottom:8px !important}.pa-2{padding:16px !important}.pt-2{padding-top:16px !important}.pb-2{padding-bottom:16px !important}.pl-2{padding-left:16px !important}.pr-2{padding-right:16px !important}.px-2{padding-left:16px !important;padding-right:16px !important}.py-2{padding-top:16px !important;padding-bottom:16px !important}.ma-3{margin:24px !important}.mt-3{margin-top:24px !important}.mb-3{margin-bottom:24px !important}.ml-3{margin-left:24px !important}.mr-3{margin-right:24px !important}.mx-3{margin-left:24px !important;margin-right:24px !important}.my-3{margin-top:24px !important;margin-bottom:24px !important}.ma-n3{margin:-24px !important}.mt-n3{margin-top:-24px !important}.mb-n3{margin-bottom:-24px !important}.ml-n3{margin-left:-24px !important}.mr-n3{margin-right:-24px !important}.mx-n3{margin-left:-24px !important;margin-right:-24px !important}.my-n3{margin-top:-24px !important;margin-bottom:-24px !important}.ma-sm-3{margin:12px !important}.mt-sm-3{margin-top:12px !important}.mt-sm-n3{margin-top:-12px !important}.mb-sm-3{margin-bottom:12px !important}.ml-sm-3{margin-left:12px !important}.mr-sm-3{margin-right:12px !important}.mx-sm-3{margin-left:12px !important;margin-right:12px !important}.my-sm-3{margin-top:12px !important;margin-bottom:12px !important}.pa-3{padding:24px !important}.pt-3{padding-top:24px !important}.pb-3{padding-bottom:24px !important}.pl-3{padding-left:24px !important}.pr-3{padding-right:24px !important}.px-3{padding-left:24px !important;padding-right:24px !important}.py-3{padding-top:24px !important;padding-bottom:24px !important}.ma-4{margin:32px !important}.mt-4{margin-top:32px !important}.mb-4{margin-bottom:32px !important}.ml-4{margin-left:32px !important}.mr-4{margin-right:32px !important}.mx-4{margin-left:32px !important;margin-right:32px !important}.my-4{margin-top:32px !important;margin-bottom:32px !important}.ma-n4{margin:-32px !important}.mt-n4{margin-top:-32px !important}.mb-n4{margin-bottom:-32px !important}.ml-n4{margin-left:-32px !important}.mr-n4{margin-right:-32px !important}.mx-n4{margin-left:-32px !important;margin-right:-32px !important}.my-n4{margin-top:-32px !important;margin-bottom:-32px !important}.ma-sm-4{margin:16px !important}.mt-sm-4{margin-top:16px !important}.mt-sm-n4{margin-top:-16px !important}.mb-sm-4{margin-bottom:16px !important}.ml-sm-4{margin-left:16px !important}.mr-sm-4{margin-right:16px !important}.mx-sm-4{margin-left:16px !important;margin-right:16px !important}.my-sm-4{margin-top:16px !important;margin-bottom:16px !important}.pa-4{padding:32px !important}.pt-4{padding-top:32px !important}.pb-4{padding-bottom:32px !important}.pl-4{padding-left:32px !important}.pr-4{padding-right:32px !important}.px-4{padding-left:32px !important;padding-right:32px !important}.py-4{padding-top:32px !important;padding-bottom:32px !important}.ma-5{margin:40px !important}.mt-5{margin-top:40px !important}.mb-5{margin-bottom:40px !important}.ml-5{margin-left:40px !important}.mr-5{margin-right:40px !important}.mx-5{margin-left:40px !important;margin-right:40px !important}.my-5{margin-top:40px !important;margin-bottom:40px !important}.ma-n5{margin:-40px !important}.mt-n5{margin-top:-40px !important}.mb-n5{margin-bottom:-40px !important}.ml-n5{margin-left:-40px !important}.mr-n5{margin-right:-40px !important}.mx-n5{margin-left:-40px !important;margin-right:-40px !important}.my-n5{margin-top:-40px !important;margin-bottom:-40px !important}.ma-sm-5{margin:20px !important}.mt-sm-5{margin-top:20px !important}.mt-sm-n5{margin-top:-20px !important}.mb-sm-5{margin-bottom:20px !important}.ml-sm-5{margin-left:20px !important}.mr-sm-5{margin-right:20px !important}.mx-sm-5{margin-left:20px !important;margin-right:20px !important}.my-sm-5{margin-top:20px !important;margin-bottom:20px !important}.pa-5{padding:40px !important}.pt-5{padding-top:40px !important}.pb-5{padding-bottom:40px !important}.pl-5{padding-left:40px !important}.pr-5{padding-right:40px !important}.px-5{padding-left:40px !important;padding-right:40px !important}.py-5{padding-top:40px !important;padding-bottom:40px !important}.ma-6{margin:48px !important}.mt-6{margin-top:48px !important}.mb-6{margin-bottom:48px !important}.ml-6{margin-left:48px !important}.mr-6{margin-right:48px !important}.mx-6{margin-left:48px !important;margin-right:48px !important}.my-6{margin-top:48px !important;margin-bottom:48px !important}.ma-n6{margin:-48px !important}.mt-n6{margin-top:-48px !important}.mb-n6{margin-bottom:-48px !important}.ml-n6{margin-left:-48px !important}.mr-n6{margin-right:-48px !important}.mx-n6{margin-left:-48px !important;margin-right:-48px !important}.my-n6{margin-top:-48px !important;margin-bottom:-48px !important}.ma-sm-6{margin:24px !important}.mt-sm-6{margin-top:24px !important}.mt-sm-n6{margin-top:-24px !important}.mb-sm-6{margin-bottom:24px !important}.ml-sm-6{margin-left:24px !important}.mr-sm-6{margin-right:24px !important}.mx-sm-6{margin-left:24px !important;margin-right:24px !important}.my-sm-6{margin-top:24px !important;margin-bottom:24px !important}.pa-6{padding:48px !important}.pt-6{padding-top:48px !important}.pb-6{padding-bottom:48px !important}.pl-6{padding-left:48px !important}.pr-6{padding-right:48px !important}.px-6{padding-left:48px !important;padding-right:48px !important}.py-6{padding-top:48px !important;padding-bottom:48px !important}.ma-7{margin:56px !important}.mt-7{margin-top:56px !important}.mb-7{margin-bottom:56px !important}.ml-7{margin-left:56px !important}.mr-7{margin-right:56px !important}.mx-7{margin-left:56px !important;margin-right:56px !important}.my-7{margin-top:56px !important;margin-bottom:56px !important}.ma-n7{margin:-56px !important}.mt-n7{margin-top:-56px !important}.mb-n7{margin-bottom:-56px !important}.ml-n7{margin-left:-56px !important}.mr-n7{margin-right:-56px !important}.mx-n7{margin-left:-56px !important;margin-right:-56px !important}.my-n7{margin-top:-56px !important;margin-bottom:-56px !important}.ma-sm-7{margin:28px !important}.mt-sm-7{margin-top:28px !important}.mt-sm-n7{margin-top:-28px !important}.mb-sm-7{margin-bottom:28px !important}.ml-sm-7{margin-left:28px !important}.mr-sm-7{margin-right:28px !important}.mx-sm-7{margin-left:28px !important;margin-right:28px !important}.my-sm-7{margin-top:28px !important;margin-bottom:28px !important}.pa-7{padding:56px !important}.pt-7{padding-top:56px !important}.pb-7{padding-bottom:56px !important}.pl-7{padding-left:56px !important}.pr-7{padding-right:56px !important}.px-7{padding-left:56px !important;padding-right:56px !important}.py-7{padding-top:56px !important;padding-bottom:56px !important}.ma-8{margin:64px !important}.mt-8{margin-top:64px !important}.mb-8{margin-bottom:64px !important}.ml-8{margin-left:64px !important}.mr-8{margin-right:64px !important}.mx-8{margin-left:64px !important;margin-right:64px !important}.my-8{margin-top:64px !important;margin-bottom:64px !important}.ma-n8{margin:-64px !important}.mt-n8{margin-top:-64px !important}.mb-n8{margin-bottom:-64px !important}.ml-n8{margin-left:-64px !important}.mr-n8{margin-right:-64px !important}.mx-n8{margin-left:-64px !important;margin-right:-64px !important}.my-n8{margin-top:-64px !important;margin-bottom:-64px !important}.ma-sm-8{margin:32px !important}.mt-sm-8{margin-top:32px !important}.mt-sm-n8{margin-top:-32px !important}.mb-sm-8{margin-bottom:32px !important}.ml-sm-8{margin-left:32px !important}.mr-sm-8{margin-right:32px !important}.mx-sm-8{margin-left:32px !important;margin-right:32px !important}.my-sm-8{margin-top:32px !important;margin-bottom:32px !important}.pa-8{padding:64px !important}.pt-8{padding-top:64px !important}.pb-8{padding-bottom:64px !important}.pl-8{padding-left:64px !important}.pr-8{padding-right:64px !important}.px-8{padding-left:64px !important;padding-right:64px !important}.py-8{padding-top:64px !important;padding-bottom:64px !important}.ma-9{margin:72px !important}.mt-9{margin-top:72px !important}.mb-9{margin-bottom:72px !important}.ml-9{margin-left:72px !important}.mr-9{margin-right:72px !important}.mx-9{margin-left:72px !important;margin-right:72px !important}.my-9{margin-top:72px !important;margin-bottom:72px !important}.ma-n9{margin:-72px !important}.mt-n9{margin-top:-72px !important}.mb-n9{margin-bottom:-72px !important}.ml-n9{margin-left:-72px !important}.mr-n9{margin-right:-72px !important}.mx-n9{margin-left:-72px !important;margin-right:-72px !important}.my-n9{margin-top:-72px !important;margin-bottom:-72px !important}.ma-sm-9{margin:36px !important}.mt-sm-9{margin-top:36px !important}.mt-sm-n9{margin-top:-36px !important}.mb-sm-9{margin-bottom:36px !important}.ml-sm-9{margin-left:36px !important}.mr-sm-9{margin-right:36px !important}.mx-sm-9{margin-left:36px !important;margin-right:36px !important}.my-sm-9{margin-top:36px !important;margin-bottom:36px !important}.pa-9{padding:72px !important}.pt-9{padding-top:72px !important}.pb-9{padding-bottom:72px !important}.pl-9{padding-left:72px !important}.pr-9{padding-right:72px !important}.px-9{padding-left:72px !important;padding-right:72px !important}.py-9{padding-top:72px !important;padding-bottom:72px !important}.ma-10{margin:80px !important}.mt-10{margin-top:80px !important}.mb-10{margin-bottom:80px !important}.ml-10{margin-left:80px !important}.mr-10{margin-right:80px !important}.mx-10{margin-left:80px !important;margin-right:80px !important}.my-10{margin-top:80px !important;margin-bottom:80px !important}.ma-n10{margin:-80px !important}.mt-n10{margin-top:-80px !important}.mb-n10{margin-bottom:-80px !important}.ml-n10{margin-left:-80px !important}.mr-n10{margin-right:-80px !important}.mx-n10{margin-left:-80px !important;margin-right:-80px !important}.my-n10{margin-top:-80px !important;margin-bottom:-80px !important}.ma-sm-10{margin:40px !important}.mt-sm-10{margin-top:40px !important}.mt-sm-n10{margin-top:-40px !important}.mb-sm-10{margin-bottom:40px !important}.ml-sm-10{margin-left:40px !important}.mr-sm-10{margin-right:40px !important}.mx-sm-10{margin-left:40px !important;margin-right:40px !important}.my-sm-10{margin-top:40px !important;margin-bottom:40px !important}.pa-10{padding:80px !important}.pt-10{padding-top:80px !important}.pb-10{padding-bottom:80px !important}.pl-10{padding-left:80px !important}.pr-10{padding-right:80px !important}.px-10{padding-left:80px !important;padding-right:80px !important}.py-10{padding-top:80px !important;padding-bottom:80px !important}.ma-11{margin:88px !important}.mt-11{margin-top:88px !important}.mb-11{margin-bottom:88px !important}.ml-11{margin-left:88px !important}.mr-11{margin-right:88px !important}.mx-11{margin-left:88px !important;margin-right:88px !important}.my-11{margin-top:88px !important;margin-bottom:88px !important}.ma-n11{margin:-88px !important}.mt-n11{margin-top:-88px !important}.mb-n11{margin-bottom:-88px !important}.ml-n11{margin-left:-88px !important}.mr-n11{margin-right:-88px !important}.mx-n11{margin-left:-88px !important;margin-right:-88px !important}.my-n11{margin-top:-88px !important;margin-bottom:-88px !important}.ma-sm-11{margin:44px !important}.mt-sm-11{margin-top:44px !important}.mt-sm-n11{margin-top:-44px !important}.mb-sm-11{margin-bottom:44px !important}.ml-sm-11{margin-left:44px !important}.mr-sm-11{margin-right:44px !important}.mx-sm-11{margin-left:44px !important;margin-right:44px !important}.my-sm-11{margin-top:44px !important;margin-bottom:44px !important}.pa-11{padding:88px !important}.pt-11{padding-top:88px !important}.pb-11{padding-bottom:88px !important}.pl-11{padding-left:88px !important}.pr-11{padding-right:88px !important}.px-11{padding-left:88px !important;padding-right:88px !important}.py-11{padding-top:88px !important;padding-bottom:88px !important}.ma-12{margin:96px !important}.mt-12{margin-top:96px !important}.mb-12{margin-bottom:96px !important}.ml-12{margin-left:96px !important}.mr-12{margin-right:96px !important}.mx-12{margin-left:96px !important;margin-right:96px !important}.my-12{margin-top:96px !important;margin-bottom:96px !important}.ma-n12{margin:-96px !important}.mt-n12{margin-top:-96px !important}.mb-n12{margin-bottom:-96px !important}.ml-n12{margin-left:-96px !important}.mr-n12{margin-right:-96px !important}.mx-n12{margin-left:-96px !important;margin-right:-96px !important}.my-n12{margin-top:-96px !important;margin-bottom:-96px !important}.ma-sm-12{margin:48px !important}.mt-sm-12{margin-top:48px !important}.mt-sm-n12{margin-top:-48px !important}.mb-sm-12{margin-bottom:48px !important}.ml-sm-12{margin-left:48px !important}.mr-sm-12{margin-right:48px !important}.mx-sm-12{margin-left:48px !important;margin-right:48px !important}.my-sm-12{margin-top:48px !important;margin-bottom:48px !important}.pa-12{padding:96px !important}.pt-12{padding-top:96px !important}.pb-12{padding-bottom:96px !important}.pl-12{padding-left:96px !important}.pr-12{padding-right:96px !important}.px-12{padding-left:96px !important;padding-right:96px !important}.py-12{padding-top:96px !important;padding-bottom:96px !important}.ma-13{margin:104px !important}.mt-13{margin-top:104px !important}.mb-13{margin-bottom:104px !important}.ml-13{margin-left:104px !important}.mr-13{margin-right:104px !important}.mx-13{margin-left:104px !important;margin-right:104px !important}.my-13{margin-top:104px !important;margin-bottom:104px !important}.ma-n13{margin:-104px !important}.mt-n13{margin-top:-104px !important}.mb-n13{margin-bottom:-104px !important}.ml-n13{margin-left:-104px !important}.mr-n13{margin-right:-104px !important}.mx-n13{margin-left:-104px !important;margin-right:-104px !important}.my-n13{margin-top:-104px !important;margin-bottom:-104px !important}.ma-sm-13{margin:52px !important}.mt-sm-13{margin-top:52px !important}.mt-sm-n13{margin-top:-52px !important}.mb-sm-13{margin-bottom:52px !important}.ml-sm-13{margin-left:52px !important}.mr-sm-13{margin-right:52px !important}.mx-sm-13{margin-left:52px !important;margin-right:52px !important}.my-sm-13{margin-top:52px !important;margin-bottom:52px !important}.pa-13{padding:104px !important}.pt-13{padding-top:104px !important}.pb-13{padding-bottom:104px !important}.pl-13{padding-left:104px !important}.pr-13{padding-right:104px !important}.px-13{padding-left:104px !important;padding-right:104px !important}.py-13{padding-top:104px !important;padding-bottom:104px !important}.ma-14{margin:112px !important}.mt-14{margin-top:112px !important}.mb-14{margin-bottom:112px !important}.ml-14{margin-left:112px !important}.mr-14{margin-right:112px !important}.mx-14{margin-left:112px !important;margin-right:112px !important}.my-14{margin-top:112px !important;margin-bottom:112px !important}.ma-n14{margin:-112px !important}.mt-n14{margin-top:-112px !important}.mb-n14{margin-bottom:-112px !important}.ml-n14{margin-left:-112px !important}.mr-n14{margin-right:-112px !important}.mx-n14{margin-left:-112px !important;margin-right:-112px !important}.my-n14{margin-top:-112px !important;margin-bottom:-112px !important}.ma-sm-14{margin:56px !important}.mt-sm-14{margin-top:56px !important}.mt-sm-n14{margin-top:-56px !important}.mb-sm-14{margin-bottom:56px !important}.ml-sm-14{margin-left:56px !important}.mr-sm-14{margin-right:56px !important}.mx-sm-14{margin-left:56px !important;margin-right:56px !important}.my-sm-14{margin-top:56px !important;margin-bottom:56px !important}.pa-14{padding:112px !important}.pt-14{padding-top:112px !important}.pb-14{padding-bottom:112px !important}.pl-14{padding-left:112px !important}.pr-14{padding-right:112px !important}.px-14{padding-left:112px !important;padding-right:112px !important}.py-14{padding-top:112px !important;padding-bottom:112px !important}.ma-15{margin:120px !important}.mt-15{margin-top:120px !important}.mb-15{margin-bottom:120px !important}.ml-15{margin-left:120px !important}.mr-15{margin-right:120px !important}.mx-15{margin-left:120px !important;margin-right:120px !important}.my-15{margin-top:120px !important;margin-bottom:120px !important}.ma-n15{margin:-120px !important}.mt-n15{margin-top:-120px !important}.mb-n15{margin-bottom:-120px !important}.ml-n15{margin-left:-120px !important}.mr-n15{margin-right:-120px !important}.mx-n15{margin-left:-120px !important;margin-right:-120px !important}.my-n15{margin-top:-120px !important;margin-bottom:-120px !important}.ma-sm-15{margin:60px !important}.mt-sm-15{margin-top:60px !important}.mt-sm-n15{margin-top:-60px !important}.mb-sm-15{margin-bottom:60px !important}.ml-sm-15{margin-left:60px !important}.mr-sm-15{margin-right:60px !important}.mx-sm-15{margin-left:60px !important;margin-right:60px !important}.my-sm-15{margin-top:60px !important;margin-bottom:60px !important}.pa-15{padding:120px !important}.pt-15{padding-top:120px !important}.pb-15{padding-bottom:120px !important}.pl-15{padding-left:120px !important}.pr-15{padding-right:120px !important}.px-15{padding-left:120px !important;padding-right:120px !important}.py-15{padding-top:120px !important;padding-bottom:120px !important}.ma-16{margin:128px !important}.mt-16{margin-top:128px !important}.mb-16{margin-bottom:128px !important}.ml-16{margin-left:128px !important}.mr-16{margin-right:128px !important}.mx-16{margin-left:128px !important;margin-right:128px !important}.my-16{margin-top:128px !important;margin-bottom:128px !important}.ma-n16{margin:-128px !important}.mt-n16{margin-top:-128px !important}.mb-n16{margin-bottom:-128px !important}.ml-n16{margin-left:-128px !important}.mr-n16{margin-right:-128px !important}.mx-n16{margin-left:-128px !important;margin-right:-128px !important}.my-n16{margin-top:-128px !important;margin-bottom:-128px !important}.ma-sm-16{margin:64px !important}.mt-sm-16{margin-top:64px !important}.mt-sm-n16{margin-top:-64px !important}.mb-sm-16{margin-bottom:64px !important}.ml-sm-16{margin-left:64px !important}.mr-sm-16{margin-right:64px !important}.mx-sm-16{margin-left:64px !important;margin-right:64px !important}.my-sm-16{margin-top:64px !important;margin-bottom:64px !important}.pa-16{padding:128px !important}.pt-16{padding-top:128px !important}.pb-16{padding-bottom:128px !important}.pl-16{padding-left:128px !important}.pr-16{padding-right:128px !important}.px-16{padding-left:128px !important;padding-right:128px !important}.py-16{padding-top:128px !important;padding-bottom:128px !important}.ma-17{margin:136px !important}.mt-17{margin-top:136px !important}.mb-17{margin-bottom:136px !important}.ml-17{margin-left:136px !important}.mr-17{margin-right:136px !important}.mx-17{margin-left:136px !important;margin-right:136px !important}.my-17{margin-top:136px !important;margin-bottom:136px !important}.ma-n17{margin:-136px !important}.mt-n17{margin-top:-136px !important}.mb-n17{margin-bottom:-136px !important}.ml-n17{margin-left:-136px !important}.mr-n17{margin-right:-136px !important}.mx-n17{margin-left:-136px !important;margin-right:-136px !important}.my-n17{margin-top:-136px !important;margin-bottom:-136px !important}.ma-sm-17{margin:68px !important}.mt-sm-17{margin-top:68px !important}.mt-sm-n17{margin-top:-68px !important}.mb-sm-17{margin-bottom:68px !important}.ml-sm-17{margin-left:68px !important}.mr-sm-17{margin-right:68px !important}.mx-sm-17{margin-left:68px !important;margin-right:68px !important}.my-sm-17{margin-top:68px !important;margin-bottom:68px !important}.pa-17{padding:136px !important}.pt-17{padding-top:136px !important}.pb-17{padding-bottom:136px !important}.pl-17{padding-left:136px !important}.pr-17{padding-right:136px !important}.px-17{padding-left:136px !important;padding-right:136px !important}.py-17{padding-top:136px !important;padding-bottom:136px !important}.ma-18{margin:144px !important}.mt-18{margin-top:144px !important}.mb-18{margin-bottom:144px !important}.ml-18{margin-left:144px !important}.mr-18{margin-right:144px !important}.mx-18{margin-left:144px !important;margin-right:144px !important}.my-18{margin-top:144px !important;margin-bottom:144px !important}.ma-n18{margin:-144px !important}.mt-n18{margin-top:-144px !important}.mb-n18{margin-bottom:-144px !important}.ml-n18{margin-left:-144px !important}.mr-n18{margin-right:-144px !important}.mx-n18{margin-left:-144px !important;margin-right:-144px !important}.my-n18{margin-top:-144px !important;margin-bottom:-144px !important}.ma-sm-18{margin:72px !important}.mt-sm-18{margin-top:72px !important}.mt-sm-n18{margin-top:-72px !important}.mb-sm-18{margin-bottom:72px !important}.ml-sm-18{margin-left:72px !important}.mr-sm-18{margin-right:72px !important}.mx-sm-18{margin-left:72px !important;margin-right:72px !important}.my-sm-18{margin-top:72px !important;margin-bottom:72px !important}.pa-18{padding:144px !important}.pt-18{padding-top:144px !important}.pb-18{padding-bottom:144px !important}.pl-18{padding-left:144px !important}.pr-18{padding-right:144px !important}.px-18{padding-left:144px !important;padding-right:144px !important}.py-18{padding-top:144px !important;padding-bottom:144px !important}.ma-19{margin:152px !important}.mt-19{margin-top:152px !important}.mb-19{margin-bottom:152px !important}.ml-19{margin-left:152px !important}.mr-19{margin-right:152px !important}.mx-19{margin-left:152px !important;margin-right:152px !important}.my-19{margin-top:152px !important;margin-bottom:152px !important}.ma-n19{margin:-152px !important}.mt-n19{margin-top:-152px !important}.mb-n19{margin-bottom:-152px !important}.ml-n19{margin-left:-152px !important}.mr-n19{margin-right:-152px !important}.mx-n19{margin-left:-152px !important;margin-right:-152px !important}.my-n19{margin-top:-152px !important;margin-bottom:-152px !important}.ma-sm-19{margin:76px !important}.mt-sm-19{margin-top:76px !important}.mt-sm-n19{margin-top:-76px !important}.mb-sm-19{margin-bottom:76px !important}.ml-sm-19{margin-left:76px !important}.mr-sm-19{margin-right:76px !important}.mx-sm-19{margin-left:76px !important;margin-right:76px !important}.my-sm-19{margin-top:76px !important;margin-bottom:76px !important}.pa-19{padding:152px !important}.pt-19{padding-top:152px !important}.pb-19{padding-bottom:152px !important}.pl-19{padding-left:152px !important}.pr-19{padding-right:152px !important}.px-19{padding-left:152px !important;padding-right:152px !important}.py-19{padding-top:152px !important;padding-bottom:152px !important}.ma-20{margin:160px !important}.mt-20{margin-top:160px !important}.mb-20{margin-bottom:160px !important}.ml-20{margin-left:160px !important}.mr-20{margin-right:160px !important}.mx-20{margin-left:160px !important;margin-right:160px !important}.my-20{margin-top:160px !important;margin-bottom:160px !important}.ma-n20{margin:-160px !important}.mt-n20{margin-top:-160px !important}.mb-n20{margin-bottom:-160px !important}.ml-n20{margin-left:-160px !important}.mr-n20{margin-right:-160px !important}.mx-n20{margin-left:-160px !important;margin-right:-160px !important}.my-n20{margin-top:-160px !important;margin-bottom:-160px !important}.ma-sm-20{margin:80px !important}.mt-sm-20{margin-top:80px !important}.mt-sm-n20{margin-top:-80px !important}.mb-sm-20{margin-bottom:80px !important}.ml-sm-20{margin-left:80px !important}.mr-sm-20{margin-right:80px !important}.mx-sm-20{margin-left:80px !important;margin-right:80px !important}.my-sm-20{margin-top:80px !important;margin-bottom:80px !important}.pa-20{padding:160px !important}.pt-20{padding-top:160px !important}.pb-20{padding-bottom:160px !important}.pl-20{padding-left:160px !important}.pr-20{padding-right:160px !important}.px-20{padding-left:160px !important;padding-right:160px !important}.py-20{padding-top:160px !important;padding-bottom:160px !important}.float-l{float:left}.float-r{float:right}.text-r{text-align:right}.text-l{text-align:left}.text-c{text-align:center}.text-uppercase{text-transform:uppercase}.wb-all{word-break:break-all}.d-block{display:block}.d-none{display:none}.d-iblock{display:inline-block}.d-iflex{display:inline-flex}.d-flex{display:flex}.d-flex--wrap{flex-wrap:wrap}.d-none{display:none}.ai-flex-start{align-items:flex-start}.ai-center{align-items:center}.pos-rel{position:relative}.pos-abs{position:absolute}.fw-bold{font-weight:bold}.fw-normal{font-weight:normal}.fw-400{font-weight:400}.fw-500{font-weight:500}.fw-600{font-weight:600}.h-100{height:100%}.w-100{width:100%}.overflow-hidden{overflow:hidden}.overflow-visible{overflow:visible}.overflow-auto{overflow:auto}.overflow-scroll{overflow-y:auto;overflow-x:hidden}.overflow-scroll::-webkit-scrollbar{width:10px}.overflow-scroll::-webkit-scrollbar-track{-webkit-box-shadow:inset 0 0 6px rgba(0,0,0,.3);box-shadow:inset 0 0 6px rgba(0,0,0,.3);-webkit-border-radius:10px;-moz-border-radius:10px;border-radius:10px;background-clip:padding-box;background-color:#f5f5f5}.overflow-scroll::-webkit-scrollbar-thumb{background-color:#888;-webkit-border-radius:10px;-moz-border-radius:10px;border-radius:10px;background-clip:padding-box;-webkit-box-shadow:inset 0 0 6px rgba(0,0,0,.3);box-shadow:inset 0 0 6px rgba(0,0,0,.3)}.overflow-scroll::-webkit-scrollbar-thumb:hover{background-color:#555}.overflow-x{overflow-x:auto !important}.overflow-x::-webkit-scrollbar{height:10px}.overflow-x::-webkit-scrollbar-track{-webkit-box-shadow:inset 0 0 6px rgba(0,0,0,.3);box-shadow:inset 0 0 6px rgba(0,0,0,.3);-webkit-border-radius:10px;-moz-border-radius:10px;border-radius:10px;background-clip:padding-box;background-color:#f5f5f5}.overflow-x::-webkit-scrollbar-thumb{background-color:#888;-webkit-border-radius:10px;-moz-border-radius:10px;border-radius:10px;background-clip:padding-box;-webkit-box-shadow:inset 0 0 6px rgba(0,0,0,.3);box-shadow:inset 0 0 6px rgba(0,0,0,.3)}.overflow-x::-webkit-scrollbar-thumb:hover{background-color:#555}.pmiddle{position:absolute;top:50%;transform:translate(-50%, -50%);left:50%}.cursor-pointer{cursor:pointer}.cursor-default{cursor:default}',"",{version:3,sources:["webpack://./src/scss/common/_reset.scss","webpack://./src/scss/common/_variables.scss","webpack://./src/scss/common/_typography.scss","webpack://./src/scss/components/_card.scss","webpack://./src/scss/components/_breadcrumbs.scss","webpack://./src/scss/components/_list.scss","webpack://./src/scss/components/_button.scss","webpack://./src/scss/layout/_main.scss","webpack://./src/scss/layout/_grid.scss","webpack://./src/scss/common/_utilities.scss","webpack://./src/scss/common/_mixins.scss"],names:[],mappings:"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",sourcesContent:["html {\r\n    height: 100vh;\r\n    width: 100vw;\r\n    overflow: hidden;\r\n    font-family: system-ui, -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\r\n}\r\n\r\nbody {\r\n    height: 100%;\r\n    width: 100%;\r\n}\r\n\r\nhtml, body {\r\n  margin: 0;\r\n  padding: 0;\r\n  font-size: $font_size;\r\n}\r\n\r\ncode {\r\n  font-family: source-code-pro, Menlo, Monaco, Consolas, 'Courier New',\r\n    monospace;\r\n}\r\n\r\n#root {\r\n    height: 100%;\r\n    width: 100%;\r\n    margin: 0;\r\n    overflow: hidden;\r\n}","$brand: '.eog';\r\n$spacer: 8px;\r\n$small_spacer: 4px;\r\n$font_size: 14px;\r\n$baseUnit: 14;",".title {\r\n    &-1 {\r\n        font-size: 24px;\r\n        margin: 0;\r\n    }\r\n    &-2 {\r\n        font-size: 18px;\r\n        color: black;\r\n        margin: 0\r\n    }\r\n    &-3 {\r\n        font-size: 18px;\r\n        font-weight: 600;\r\n        color: black;\r\n        margin: 0;\r\n    }\r\n    &-4 {\r\n        font-size: 16px;\r\n        font-weight: 600;\r\n        color: black;\r\n        margin: 0;\r\n    }\r\n}","#{$brand}-card {\r\n    cursor: pointer;\r\n    background: transparent;\r\n    height: 218px;\r\n    width: 177px;\r\n    box-shadow: 2px 2px 4px 2px #ccc;\r\n    border-radius: 8px;\r\n\r\n    &:hover {\r\n        background: rgba(238, 238, 238, 0.6);\r\n    }\r\n    &__img {\r\n        height: 177px;\r\n        width: 177px;\r\n        border-radius: 8px 8px 0 0;\r\n    }\r\n    &__caption {\r\n        margin-top: 8px;\r\n        display: block;\r\n        font-size: 14px;\r\n        color: black;\r\n        cursor: pointer;\r\n        text-align: center;\r\n    }\r\n\r\n    &-img {\r\n        cursor: pointer;\r\n        background: transparent;\r\n        margin: 20px 20px 20px 0;\r\n        height: 550px;\r\n        width: 460px;\r\n        box-shadow: 2px 2px 4px 2px #ccc;\r\n        border-radius: 8px;\r\n        text-align: center;\r\n        &:not(:nth-child(3n+1)) {\r\n            margin-left: 20px;\r\n        }\r\n\r\n        &__img {\r\n            height: 400px;\r\n            width: 400px;\r\n            border-radius: 8px 8px 0 0;\r\n        }\r\n        &__caption {\r\n            margin-top: 8px;\r\n            display: block;\r\n            font-size: 14px;\r\n            color: black;\r\n            cursor: pointer;\r\n            text-align: center;\r\n        }\r\n    }\r\n}","#{$brand}-breadcrumbs {\r\n    display: flex;\r\n    align-items: center;\r\n    height: 31px;\r\n    padding: 10px 0;\r\n    margin-top: 20px;\r\n    padding-left: 20px;\r\n\r\n    &__item {\r\n        font-size: 18px;\r\n        font-weight: 600;\r\n        color: black;\r\n        text-decoration: none;\r\n\r\n        &.active {\r\n            color: map-get($green, '00BCD4');\r\n        }\r\n    }\r\n}","#{$brand}-list {\r\n    &-data {\r\n        &__label {\r\n            font-weight: 600;\r\n            font-size: 14px;\r\n            display: inline-block;\r\n        }\r\n        &__value {\r\n            font-size: 14px;\r\n            display: inline-block;\r\n            margin-left: 20px;\r\n        }\r\n    }\r\n}","#{$brand}-btn {\r\n    height: 35px;\r\n    border: none;\r\n    padding: 8px 16px;\r\n    border-radius: 5px;\r\n\r\n    &-primary {\r\n        background: map-get($green, '00BCD4');\r\n        color: white;\r\n    }\r\n}","#{$brand} {\r\n    &-header {\r\n        height: 26px;\r\n        width: 100%;\r\n        background: map-get($green, '00BCD4');\r\n        padding: 13px 20px;\r\n        &__title {\r\n            margin: 0;\r\n            color: white;\r\n            font-weight: bold;\r\n            font-size: 20px;\r\n        }\r\n    }\r\n    &-main {\r\n        padding: 20px;\r\n        height: calc(100% - 173px);\r\n        width: calc(100% - 20px);\r\n    }\r\n};","#{$brand}-grid {\r\n    display: flex;\r\n    flex-wrap: wrap;\r\n    padding: pxToRem(20) 0;\r\n    height: calc(100% - 20px);\r\n    width: 100%;\r\n    overflow-y: auto;\r\n}","@for $i from 0 through 20 {\r\n    .ma-#{$i} {\r\n        margin:$i * $spacer !important;\r\n    }\r\n    .mt-#{$i} {\r\n        margin-top:$i * $spacer !important;\r\n    }\r\n    .mb-#{$i} {\r\n        margin-bottom:$i * $spacer !important;\r\n    }\r\n    .ml-#{$i} {\r\n        margin-left:$i * $spacer !important;\r\n    }\r\n    .mr-#{$i} {\r\n        margin-right:$i * $spacer !important;\r\n    }\r\n    .mx-#{$i} {\r\n        margin-left:$i * $spacer !important;\r\n        margin-right:$i * $spacer !important;\r\n    }\r\n    .my-#{$i} {\r\n        margin-top:$i * $spacer !important;\r\n        margin-bottom:$i * $spacer !important;\r\n    }\r\n\r\n    .ma-n#{$i} {\r\n        margin:-$i * $spacer !important;\r\n    }\r\n    .mt-n#{$i} {\r\n        margin-top:-$i * $spacer !important;\r\n    }\r\n    .mb-n#{$i} {\r\n        margin-bottom:-$i * $spacer !important;\r\n    }\r\n    .ml-n#{$i} {\r\n        margin-left:-$i * $spacer !important;\r\n    }\r\n    .mr-n#{$i} {\r\n        margin-right:-$i * $spacer !important;\r\n    }\r\n    .mx-n#{$i} {\r\n        margin-left:-$i * $spacer !important;\r\n        margin-right:-$i * $spacer !important;\r\n    }\r\n    .my-n#{$i} {\r\n        margin-top:-$i * $spacer !important;\r\n        margin-bottom:-$i * $spacer !important;\r\n    }\r\n    \r\n    .ma-sm-#{$i} {\r\n        margin:$i * $small_spacer!important;\r\n    }\r\n    .mt-sm-#{$i} {\r\n        margin-top:$i * $small_spacer !important;\r\n    }\r\n    .mt-sm-n#{$i} {\r\n        margin-top:- $i * $small_spacer !important;\r\n    }\r\n    .mb-sm-#{$i} {\r\n        margin-bottom:$i * $small_spacer !important;\r\n    }\r\n    .ml-sm-#{$i} {\r\n        margin-left:$i * $small_spacer !important;\r\n    }\r\n    .mr-sm-#{$i} {\r\n        margin-right:$i * $small_spacer !important;\r\n    }\r\n    .mx-sm-#{$i} {\r\n        margin-left:$i * $small_spacer !important;\r\n        margin-right:$i * $small_spacer !important;\r\n    }\r\n    .my-sm-#{$i} {\r\n        margin-top:$i * $small_spacer !important;\r\n        margin-bottom:$i * $small_spacer !important;\r\n    }\r\n     \r\n    .pa-#{$i} {\r\n        padding:$i * $spacer !important;\r\n    }\r\n    .pt-#{$i} {\r\n        padding-top:$i * $spacer !important;\r\n    }\r\n    .pb-#{$i} {\r\n        padding-bottom:$i * $spacer !important;\r\n    }\r\n    .pl-#{$i} {\r\n        padding-left:$i * $spacer !important;\r\n    }\r\n    .pr-#{$i} {\r\n        padding-right:$i * $spacer !important;\r\n    }\r\n    .px-#{$i} {\r\n        padding-left:$i * $spacer !important;\r\n        padding-right:$i * $spacer !important;\r\n    }\r\n    .py-#{$i} {\r\n        padding-top:$i * $spacer !important;\r\n        padding-bottom:$i * $spacer !important;\r\n    }\r\n}\r\n\r\n.float {\r\n    &-l{\r\n        float: left;\r\n    }\r\n\r\n    &-r{\r\n        float: right;\r\n    }\r\n}\r\n\r\n.text {\r\n    &-r {\r\n        text-align: right;\r\n    }\r\n    &-l {\r\n        text-align: left;\r\n    }\r\n    &-c {\r\n        text-align: center;\r\n    }\r\n    &-uppercase {\r\n        text-transform: uppercase;\r\n    }\r\n}\r\n\r\n.wb {\r\n    &-all {\r\n        word-break: break-all;\r\n    }\r\n}\r\n\r\n.d {\r\n    &-block {\r\n        display:block;\r\n    }\r\n\r\n    &-none {\r\n        display: none;\r\n    }\r\n\r\n    &-iblock {\r\n        display:inline-block;\r\n    }\r\n    &-iflex {\r\n        display: inline-flex;\r\n    }\r\n    &-flex {\r\n        display:flex;\r\n\r\n        &--wrap {\r\n            flex-wrap: wrap;\r\n        }\r\n    }\r\n    &-none {\r\n        display: none;\r\n    }\r\n}\r\n\r\n.ai {\r\n    &-flex-start {\r\n        align-items: flex-start;\r\n    }\r\n    &-center {\r\n        align-items: center;\r\n    }\r\n}\r\n\r\n.pos {\r\n    &-rel {\r\n        position:relative;\r\n    }\r\n    &-abs {\r\n        position:absolute;\r\n    }\r\n}\r\n\r\n.fw {\r\n    &-bold {\r\n        font-weight: bold;\r\n    }\r\n    &-normal {\r\n        font-weight: normal;\r\n    }\r\n    &-400 {\r\n        font-weight: 400;\r\n    }\r\n    &-500 {\r\n        font-weight: 500;\r\n    }\r\n    &-600 {\r\n        font-weight: 600;\r\n    }\r\n}\r\n\r\n.h-100 {\r\n    height: 100%;\r\n}\r\n\r\n.w-100 {\r\n    width: 100%;\r\n}\r\n\r\n.overflow {\r\n    &-hidden {\r\n        overflow: hidden;\r\n    }\r\n    &-visible {\r\n        overflow: visible;\r\n    }\r\n    &-auto {\r\n        overflow: auto;\r\n    }\r\n    &-scroll {\r\n        overflow-y: auto;\r\n        overflow-x: hidden;\r\n\r\n        &::-webkit-scrollbar {\r\n            width: $spacer + 2;\r\n        }\r\n\r\n        &::-webkit-scrollbar-track {\r\n            -webkit-box-shadow: inset 0 0 6px rgba(0,0,0,0.3);\r\n            box-shadow: inset 0 0 6px rgba(0,0,0,.3);\r\n            @include border-radius($spacer + 2);\r\n            @include bg-color(map-get($grey, 'F5F5F5'));\r\n        }\r\n\r\n        &::-webkit-scrollbar-thumb {\r\n            @include bg-color(map-get($grey, '888888'));\r\n            @include border-radius($spacer + 2);\r\n            -webkit-box-shadow: inset 0 0 6px rgba(0,0,0,.3);\r\n            box-shadow: inset 0 0 6px rgba(0,0,0,.3);\r\n\r\n            &:hover {\r\n                @include bg-color(map-get($grey, '555555'));\r\n            }\r\n        }\r\n    }\r\n    &-x {\r\n        overflow-x: auto !important;\r\n\r\n        &::-webkit-scrollbar {\r\n            height: $spacer + 2;\r\n        }\r\n\r\n        &::-webkit-scrollbar-track {\r\n            -webkit-box-shadow: inset 0 0 6px rgba(0,0,0,0.3);\r\n            box-shadow: inset 0 0 6px rgba(0,0,0,.3);\r\n            @include border-radius($spacer + 2);\r\n            @include bg-color(map-get($grey, 'F5F5F5'));\r\n        }\r\n\r\n        &::-webkit-scrollbar-thumb {\r\n            @include bg-color(map-get($grey, '888888'));\r\n            @include border-radius($spacer + 2);\r\n            -webkit-box-shadow: inset 0 0 6px rgba(0,0,0,.3);\r\n            box-shadow: inset 0 0 6px rgba(0,0,0,.3);\r\n\r\n            &:hover {\r\n                @include bg-color(map-get($grey, '555555'));\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n.pmiddle {\r\n    position: absolute;\r\n    top: 50%;\r\n    transform: translate(-50%, -50%);\r\n    left: 50%;\r\n}\r\n\r\n.cursor {\r\n    &-pointer {\r\n        cursor: pointer;\r\n    }\r\n    &-default {\r\n        cursor: default;\r\n    }\r\n}\r\n","/*\r\n***\r\n    The mixin below is used to\r\n    width and height values\r\n***\r\n*/\r\n@mixin size($width, $height: $width) {\r\n    width: $width;\r\n    height: $height;\r\n}\r\n/*\r\n***\r\n    The mixin below is used to\r\n    border radius\r\n***\r\n*/\r\n@mixin border-radius($radius) {\r\n    -webkit-border-radius: $radius;\r\n    -moz-border-radius: $radius;\r\n    border-radius: $radius;\r\n    background-clip: padding-box;\r\n}\r\n/*\r\n***\r\n    The mixin below is used to\r\n    background color\r\n***\r\n*/\r\n@mixin bg-color($color) {\r\n    background-color: $color;\r\n}\r\n/*\r\n***\r\n    The mixin below is used to\r\n    positions\r\n***\r\n*/\r\n@mixin position($position, $top: null, $right: null, $bottom: null, $left: null) {\r\n    position: $position;\r\n    top: $top;\r\n    right: $right;\r\n    bottom: $bottom;\r\n    left: $left;\r\n}\r\n/*\r\n***\r\n    The mixin below is used to\r\n    margins and padings\r\n***\r\n*/\r\n@mixin space($type: margin, $direction: all, $amount: null) {\r\n    @if $type == padding {\r\n        @if $direction == all {\r\n            padding: $amount;\r\n        }\r\n        @else if $direction == top {\r\n            padding-top: $amount\r\n        }\r\n        @else if $direction == left {\r\n            padding-left: $amount\r\n        }\r\n        @else if $direction == right {\r\n            padding-right: $amount\r\n        }\r\n        @else if $direction == y {\r\n            padding-top: $amount;\r\n            padding-bottom: $amount;\r\n        }\r\n        @else if $direction == x {\r\n            padding-left: $amount;\r\n            padding-right: $amount;\r\n        }\r\n        @else {\r\n            padding-bottom: $amount\r\n        }\r\n    }\r\n    @else {\r\n        @if $direction == all {\r\n            margin: $amount;\r\n        }\r\n        @else if $direction == top {\r\n            margin-top: $amount\r\n        }\r\n        @else if $direction == left {\r\n            margin-left: $amount\r\n        }\r\n        @else if $direction == right {\r\n            margin-right: $amount\r\n        }\r\n        @else if $direction == leftright {\r\n            margin-left: $amount;\r\n            margin-right: $amount\r\n        }\r\n        @else {\r\n            margin-bottom: $amount\r\n        }\r\n    }\r\n}\r\n/*\r\n***\r\n    The mixin below is used to\r\n    border for all sides\r\n***\r\n*/\r\n@mixin border-all( $width, $style, $color) {\r\n    border: $width $style $color;\r\n}\r\n/*\r\n***\r\n    The mixin below is used to\r\n    specifit borders\r\n***\r\n*/\r\n@mixin border($direction, $width, $style, $color) {\r\n    border-#{$direction}: $width $style $color;\r\n}\r\n\r\n@mixin ellipsis() {\r\n    text-overflow: ellipsis;\r\n    overflow: hidden;\r\n    white-space: nowrap;\r\n}"],sourceRoot:""}]);const l=i},3645:t=>{"use strict";t.exports=function(t){var e=[];return e.toString=function(){return this.map((function(e){var n="",r=void 0!==e[5];return e[4]&&(n+="@supports (".concat(e[4],") {")),e[2]&&(n+="@media ".concat(e[2]," {")),r&&(n+="@layer".concat(e[5].length>0?" ".concat(e[5]):""," {")),n+=t(e),r&&(n+="}"),e[2]&&(n+="}"),e[4]&&(n+="}"),n})).join("")},e.i=function(t,n,r,a,o){"string"==typeof t&&(t=[[null,t,void 0]]);var i={};if(r)for(var l=0;l<this.length;l++){var u=this[l][0];null!=u&&(i[u]=!0)}for(var c=0;c<t.length;c++){var p=[].concat(t[c]);r&&i[p[0]]||(void 0!==o&&(void 0===p[5]||(p[1]="@layer".concat(p[5].length>0?" ".concat(p[5]):""," {").concat(p[1],"}")),p[5]=o),n&&(p[2]?(p[1]="@media ".concat(p[2]," {").concat(p[1],"}"),p[2]=n):p[2]=n),a&&(p[4]?(p[1]="@supports (".concat(p[4],") {").concat(p[1],"}"),p[4]=a):p[4]="".concat(a)),e.push(p))}},e}},7537:t=>{"use strict";t.exports=function(t){var e=t[1],n=t[3];if(!n)return e;if("function"==typeof btoa){var r=btoa(unescape(encodeURIComponent(JSON.stringify(n)))),a="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(r),o="/*# ".concat(a," */"),i=n.sources.map((function(t){return"/*# sourceURL=".concat(n.sourceRoot||"").concat(t," */")}));return[e].concat(i).concat([o]).join("\n")}return[e].join("\n")}},4289:(t,e,n)=>{"use strict";var r=n(2215),a="function"==typeof Symbol&&"symbol"==typeof Symbol("foo"),o=Object.prototype.toString,i=Array.prototype.concat,l=Object.defineProperty,u=n(1044)(),c=l&&u,p=function(t,e,n,r){var a;(!(e in t)||"function"==typeof(a=r)&&"[object Function]"===o.call(a)&&r())&&(c?l(t,e,{configurable:!0,enumerable:!1,value:n,writable:!0}):t[e]=n)},s=function(t,e){var n=arguments.length>2?arguments[2]:{},o=r(e);a&&(o=i.call(o,Object.getOwnPropertySymbols(e)));for(var l=0;l<o.length;l+=1)p(t,o[l],e[o[l]],n[o[l]])};s.supportsDescriptors=!!c,t.exports=s},8091:t=>{"use strict";function e(t,e){if(null==t)throw new TypeError("Cannot convert first argument to object");for(var n=Object(t),r=1;r<arguments.length;r++){var a=arguments[r];if(null!=a)for(var o=Object.keys(Object(a)),i=0,l=o.length;i<l;i++){var u=o[i],c=Object.getOwnPropertyDescriptor(a,u);void 0!==c&&c.enumerable&&(n[u]=a[u])}}return n}t.exports={assign:e,polyfill:function(){Object.assign||Object.defineProperty(Object,"assign",{enumerable:!1,configurable:!0,writable:!0,value:e})}}},4029:(t,e,n)=>{"use strict";var r=n(5320),a=Object.prototype.toString,o=Object.prototype.hasOwnProperty,i=function(t,e,n){for(var r=0,a=t.length;r<a;r++)o.call(t,r)&&(null==n?e(t[r],r,t):e.call(n,t[r],r,t))},l=function(t,e,n){for(var r=0,a=t.length;r<a;r++)null==n?e(t.charAt(r),r,t):e.call(n,t.charAt(r),r,t)},u=function(t,e,n){for(var r in t)o.call(t,r)&&(null==n?e(t[r],r,t):e.call(n,t[r],r,t))};t.exports=function(t,e,n){if(!r(e))throw new TypeError("iterator must be a function");var o;arguments.length>=3&&(o=n),"[object Array]"===a.call(t)?i(t,e,o):"string"==typeof t?l(t,e,o):u(t,e,o)}},7648:t=>{"use strict";var e="Function.prototype.bind called on incompatible ",n=Array.prototype.slice,r=Object.prototype.toString,a="[object Function]";t.exports=function(t){var o=this;if("function"!=typeof o||r.call(o)!==a)throw new TypeError(e+o);for(var i,l=n.call(arguments,1),u=function(){if(this instanceof i){var e=o.apply(this,l.concat(n.call(arguments)));return Object(e)===e?e:this}return o.apply(t,l.concat(n.call(arguments)))},c=Math.max(0,o.length-l.length),p=[],s=0;s<c;s++)p.push("$"+s);if(i=Function("binder","return function ("+p.join(",")+"){ return binder.apply(this,arguments); }")(u),o.prototype){var A=function(){};A.prototype=o.prototype,i.prototype=new A,A.prototype=null}return i}},8612:(t,e,n)=>{"use strict";var r=n(7648);t.exports=Function.prototype.bind||r},210:(t,e,n)=>{"use strict";var r,a=SyntaxError,o=Function,i=TypeError,l=function(t){try{return o('"use strict"; return ('+t+").constructor;")()}catch(t){}},u=Object.getOwnPropertyDescriptor;if(u)try{u({},"")}catch(t){u=null}var c=function(){throw new i},p=u?function(){try{return c}catch(t){try{return u(arguments,"callee").get}catch(t){return c}}}():c,s=n(1405)(),A=Object.getPrototypeOf||function(t){return t.__proto__},f={},m="undefined"==typeof Uint8Array?r:A(Uint8Array),d={"%AggregateError%":"undefined"==typeof AggregateError?r:AggregateError,"%Array%":Array,"%ArrayBuffer%":"undefined"==typeof ArrayBuffer?r:ArrayBuffer,"%ArrayIteratorPrototype%":s?A([][Symbol.iterator]()):r,"%AsyncFromSyncIteratorPrototype%":r,"%AsyncFunction%":f,"%AsyncGenerator%":f,"%AsyncGeneratorFunction%":f,"%AsyncIteratorPrototype%":f,"%Atomics%":"undefined"==typeof Atomics?r:Atomics,"%BigInt%":"undefined"==typeof BigInt?r:BigInt,"%Boolean%":Boolean,"%DataView%":"undefined"==typeof DataView?r:DataView,"%Date%":Date,"%decodeURI%":decodeURI,"%decodeURIComponent%":decodeURIComponent,"%encodeURI%":encodeURI,"%encodeURIComponent%":encodeURIComponent,"%Error%":Error,"%eval%":eval,"%EvalError%":EvalError,"%Float32Array%":"undefined"==typeof Float32Array?r:Float32Array,"%Float64Array%":"undefined"==typeof Float64Array?r:Float64Array,"%FinalizationRegistry%":"undefined"==typeof FinalizationRegistry?r:FinalizationRegistry,"%Function%":o,"%GeneratorFunction%":f,"%Int8Array%":"undefined"==typeof Int8Array?r:Int8Array,"%Int16Array%":"undefined"==typeof Int16Array?r:Int16Array,"%Int32Array%":"undefined"==typeof Int32Array?r:Int32Array,"%isFinite%":isFinite,"%isNaN%":isNaN,"%IteratorPrototype%":s?A(A([][Symbol.iterator]())):r,"%JSON%":"object"==typeof JSON?JSON:r,"%Map%":"undefined"==typeof Map?r:Map,"%MapIteratorPrototype%":"undefined"!=typeof Map&&s?A((new Map)[Symbol.iterator]()):r,"%Math%":Math,"%Number%":Number,"%Object%":Object,"%parseFloat%":parseFloat,"%parseInt%":parseInt,"%Promise%":"undefined"==typeof Promise?r:Promise,"%Proxy%":"undefined"==typeof Proxy?r:Proxy,"%RangeError%":RangeError,"%ReferenceError%":ReferenceError,"%Reflect%":"undefined"==typeof Reflect?r:Reflect,"%RegExp%":RegExp,"%Set%":"undefined"==typeof Set?r:Set,"%SetIteratorPrototype%":"undefined"!=typeof Set&&s?A((new Set)[Symbol.iterator]()):r,"%SharedArrayBuffer%":"undefined"==typeof SharedArrayBuffer?r:SharedArrayBuffer,"%String%":String,"%StringIteratorPrototype%":s?A(""[Symbol.iterator]()):r,"%Symbol%":s?Symbol:r,"%SyntaxError%":a,"%ThrowTypeError%":p,"%TypedArray%":m,"%TypeError%":i,"%Uint8Array%":"undefined"==typeof Uint8Array?r:Uint8Array,"%Uint8ClampedArray%":"undefined"==typeof Uint8ClampedArray?r:Uint8ClampedArray,"%Uint16Array%":"undefined"==typeof Uint16Array?r:Uint16Array,"%Uint32Array%":"undefined"==typeof Uint32Array?r:Uint32Array,"%URIError%":URIError,"%WeakMap%":"undefined"==typeof WeakMap?r:WeakMap,"%WeakRef%":"undefined"==typeof WeakRef?r:WeakRef,"%WeakSet%":"undefined"==typeof WeakSet?r:WeakSet},g=function t(e){var n;if("%AsyncFunction%"===e)n=l("async function () {}");else if("%GeneratorFunction%"===e)n=l("function* () {}");else if("%AsyncGeneratorFunction%"===e)n=l("async function* () {}");else if("%AsyncGenerator%"===e){var r=t("%AsyncGeneratorFunction%");r&&(n=r.prototype)}else if("%AsyncIteratorPrototype%"===e){var a=t("%AsyncGenerator%");a&&(n=A(a.prototype))}return d[e]=n,n},h={"%ArrayBufferPrototype%":["ArrayBuffer","prototype"],"%ArrayPrototype%":["Array","prototype"],"%ArrayProto_entries%":["Array","prototype","entries"],"%ArrayProto_forEach%":["Array","prototype","forEach"],"%ArrayProto_keys%":["Array","prototype","keys"],"%ArrayProto_values%":["Array","prototype","values"],"%AsyncFunctionPrototype%":["AsyncFunction","prototype"],"%AsyncGenerator%":["AsyncGeneratorFunction","prototype"],"%AsyncGeneratorPrototype%":["AsyncGeneratorFunction","prototype","prototype"],"%BooleanPrototype%":["Boolean","prototype"],"%DataViewPrototype%":["DataView","prototype"],"%DatePrototype%":["Date","prototype"],"%ErrorPrototype%":["Error","prototype"],"%EvalErrorPrototype%":["EvalError","prototype"],"%Float32ArrayPrototype%":["Float32Array","prototype"],"%Float64ArrayPrototype%":["Float64Array","prototype"],"%FunctionPrototype%":["Function","prototype"],"%Generator%":["GeneratorFunction","prototype"],"%GeneratorPrototype%":["GeneratorFunction","prototype","prototype"],"%Int8ArrayPrototype%":["Int8Array","prototype"],"%Int16ArrayPrototype%":["Int16Array","prototype"],"%Int32ArrayPrototype%":["Int32Array","prototype"],"%JSONParse%":["JSON","parse"],"%JSONStringify%":["JSON","stringify"],"%MapPrototype%":["Map","prototype"],"%NumberPrototype%":["Number","prototype"],"%ObjectPrototype%":["Object","prototype"],"%ObjProto_toString%":["Object","prototype","toString"],"%ObjProto_valueOf%":["Object","prototype","valueOf"],"%PromisePrototype%":["Promise","prototype"],"%PromiseProto_then%":["Promise","prototype","then"],"%Promise_all%":["Promise","all"],"%Promise_reject%":["Promise","reject"],"%Promise_resolve%":["Promise","resolve"],"%RangeErrorPrototype%":["RangeError","prototype"],"%ReferenceErrorPrototype%":["ReferenceError","prototype"],"%RegExpPrototype%":["RegExp","prototype"],"%SetPrototype%":["Set","prototype"],"%SharedArrayBufferPrototype%":["SharedArrayBuffer","prototype"],"%StringPrototype%":["String","prototype"],"%SymbolPrototype%":["Symbol","prototype"],"%SyntaxErrorPrototype%":["SyntaxError","prototype"],"%TypedArrayPrototype%":["TypedArray","prototype"],"%TypeErrorPrototype%":["TypeError","prototype"],"%Uint8ArrayPrototype%":["Uint8Array","prototype"],"%Uint8ClampedArrayPrototype%":["Uint8ClampedArray","prototype"],"%Uint16ArrayPrototype%":["Uint16Array","prototype"],"%Uint32ArrayPrototype%":["Uint32Array","prototype"],"%URIErrorPrototype%":["URIError","prototype"],"%WeakMapPrototype%":["WeakMap","prototype"],"%WeakSetPrototype%":["WeakSet","prototype"]},C=n(8612),y=n(7642),b=C.call(Function.call,Array.prototype.concat),v=C.call(Function.apply,Array.prototype.splice),x=C.call(Function.call,String.prototype.replace),E=C.call(Function.call,String.prototype.slice),w=C.call(Function.call,RegExp.prototype.exec),B=/[^%.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\\]|\\.)*?)\2)\]|(?=(?:\.|\[\])(?:\.|\[\]|%$))/g,I=/\\(\\)?/g,S=function(t){var e=E(t,0,1),n=E(t,-1);if("%"===e&&"%"!==n)throw new a("invalid intrinsic syntax, expected closing `%`");if("%"===n&&"%"!==e)throw new a("invalid intrinsic syntax, expected opening `%`");var r=[];return x(t,B,(function(t,e,n,a){r[r.length]=n?x(a,I,"$1"):e||t})),r},k=function(t,e){var n,r=t;if(y(h,r)&&(r="%"+(n=h[r])[0]+"%"),y(d,r)){var o=d[r];if(o===f&&(o=g(r)),void 0===o&&!e)throw new i("intrinsic "+t+" exists, but is not available. Please file an issue!");return{alias:n,name:r,value:o}}throw new a("intrinsic "+t+" does not exist!")};t.exports=function(t,e){if("string"!=typeof t||0===t.length)throw new i("intrinsic name must be a non-empty string");if(arguments.length>1&&"boolean"!=typeof e)throw new i('"allowMissing" argument must be a boolean');if(null===w(/^%?[^%]*%?$/g,t))throw new a("`%` may not be present anywhere but at the beginning and end of the intrinsic name");var n=S(t),r=n.length>0?n[0]:"",o=k("%"+r+"%",e),l=o.name,c=o.value,p=!1,s=o.alias;s&&(r=s[0],v(n,b([0,1],s)));for(var A=1,f=!0;A<n.length;A+=1){var m=n[A],g=E(m,0,1),h=E(m,-1);if(('"'===g||"'"===g||"`"===g||'"'===h||"'"===h||"`"===h)&&g!==h)throw new a("property names with quotes must have matching quotes");if("constructor"!==m&&f||(p=!0),y(d,l="%"+(r+="."+m)+"%"))c=d[l];else if(null!=c){if(!(m in c)){if(!e)throw new i("base intrinsic for "+t+" exists, but the property is not available.");return}if(u&&A+1>=n.length){var C=u(c,m);c=(f=!!C)&&"get"in C&&!("originalValue"in C.get)?C.get:c[m]}else f=y(c,m),c=c[m];f&&!p&&(d[l]=c)}}return c}},1044:(t,e,n)=>{"use strict";var r=n(210)("%Object.defineProperty%",!0),a=function(){if(r)try{return r({},"a",{value:1}),!0}catch(t){return!1}return!1};a.hasArrayLengthDefineBug=function(){if(!a())return null;try{return 1!==r([],"length",{value:1}).length}catch(t){return!0}},t.exports=a},1405:(t,e,n)=>{"use strict";var r="undefined"!=typeof Symbol&&Symbol,a=n(5419);t.exports=function(){return"function"==typeof r&&"function"==typeof Symbol&&"symbol"==typeof r("foo")&&"symbol"==typeof Symbol("bar")&&a()}},5419:t=>{"use strict";t.exports=function(){if("function"!=typeof Symbol||"function"!=typeof Object.getOwnPropertySymbols)return!1;if("symbol"==typeof Symbol.iterator)return!0;var t={},e=Symbol("test"),n=Object(e);if("string"==typeof e)return!1;if("[object Symbol]"!==Object.prototype.toString.call(e))return!1;if("[object Symbol]"!==Object.prototype.toString.call(n))return!1;for(e in t[e]=42,t)return!1;if("function"==typeof Object.keys&&0!==Object.keys(t).length)return!1;if("function"==typeof Object.getOwnPropertyNames&&0!==Object.getOwnPropertyNames(t).length)return!1;var r=Object.getOwnPropertySymbols(t);if(1!==r.length||r[0]!==e)return!1;if(!Object.prototype.propertyIsEnumerable.call(t,e))return!1;if("function"==typeof Object.getOwnPropertyDescriptor){var a=Object.getOwnPropertyDescriptor(t,e);if(42!==a.value||!0!==a.enumerable)return!1}return!0}},6410:(t,e,n)=>{"use strict";var r=n(5419);t.exports=function(){return r()&&!!Symbol.toStringTag}},7642:(t,e,n)=>{"use strict";var r=n(8612);t.exports=r.call(Function.call,Object.prototype.hasOwnProperty)},5717:t=>{"function"==typeof Object.create?t.exports=function(t,e){e&&(t.super_=e,t.prototype=Object.create(e.prototype,{constructor:{value:t,enumerable:!1,writable:!0,configurable:!0}}))}:t.exports=function(t,e){if(e){t.super_=e;var n=function(){};n.prototype=e.prototype,t.prototype=new n,t.prototype.constructor=t}}},2584:(t,e,n)=>{"use strict";var r=n(6410)(),a=n(1924)("Object.prototype.toString"),o=function(t){return!(r&&t&&"object"==typeof t&&Symbol.toStringTag in t)&&"[object Arguments]"===a(t)},i=function(t){return!!o(t)||null!==t&&"object"==typeof t&&"number"==typeof t.length&&t.length>=0&&"[object Array]"!==a(t)&&"[object Function]"===a(t.callee)},l=function(){return o(arguments)}();o.isLegacyArguments=i,t.exports=l?o:i},5320:t=>{"use strict";var e,n,r=Function.prototype.toString,a="object"==typeof Reflect&&null!==Reflect&&Reflect.apply;if("function"==typeof a&&"function"==typeof Object.defineProperty)try{e=Object.defineProperty({},"length",{get:function(){throw n}}),n={},a((function(){throw 42}),null,e)}catch(t){t!==n&&(a=null)}else a=null;var o=/^\s*class\b/,i=function(t){try{var e=r.call(t);return o.test(e)}catch(t){return!1}},l=Object.prototype.toString,u="function"==typeof Symbol&&!!Symbol.toStringTag,c="object"==typeof document&&void 0===document.all&&void 0!==document.all?document.all:{};t.exports=a?function(t){if(t===c)return!0;if(!t)return!1;if("function"!=typeof t&&"object"!=typeof t)return!1;if("function"==typeof t&&!t.prototype)return!0;try{a(t,null,e)}catch(t){if(t!==n)return!1}return!i(t)}:function(t){if(t===c)return!0;if(!t)return!1;if("function"!=typeof t&&"object"!=typeof t)return!1;if("function"==typeof t&&!t.prototype)return!0;if(u)return function(t){try{return!i(t)&&(r.call(t),!0)}catch(t){return!1}}(t);if(i(t))return!1;var e=l.call(t);return"[object Function]"===e||"[object GeneratorFunction]"===e}},8662:(t,e,n)=>{"use strict";var r,a=Object.prototype.toString,o=Function.prototype.toString,i=/^\s*(?:function)?\*/,l=n(6410)(),u=Object.getPrototypeOf;t.exports=function(t){if("function"!=typeof t)return!1;if(i.test(o.call(t)))return!0;if(!l)return"[object GeneratorFunction]"===a.call(t);if(!u)return!1;if(void 0===r){var e=function(){if(!l)return!1;try{return Function("return function*() {}")()}catch(t){}}();r=!!e&&u(e)}return u(t)===r}},8611:t=>{"use strict";t.exports=function(t){return t!=t}},360:(t,e,n)=>{"use strict";var r=n(5559),a=n(4289),o=n(8611),i=n(9415),l=n(3194),u=r(i(),Number);a(u,{getPolyfill:i,implementation:o,shim:l}),t.exports=u},9415:(t,e,n)=>{"use strict";var r=n(8611);t.exports=function(){return Number.isNaN&&Number.isNaN(NaN)&&!Number.isNaN("a")?Number.isNaN:r}},3194:(t,e,n)=>{"use strict";var r=n(4289),a=n(9415);t.exports=function(){var t=a();return r(Number,{isNaN:t},{isNaN:function(){return Number.isNaN!==t}}),t}},5692:(t,e,n)=>{"use strict";var r=n(4029),a=n(3083),o=n(1924),i=o("Object.prototype.toString"),l=n(6410)(),u="undefined"==typeof globalThis?n.g:globalThis,c=a(),p=o("Array.prototype.indexOf",!0)||function(t,e){for(var n=0;n<t.length;n+=1)if(t[n]===e)return n;return-1},s=o("String.prototype.slice"),A={},f=n(882),m=Object.getPrototypeOf;l&&f&&m&&r(c,(function(t){var e=new u[t];if(Symbol.toStringTag in e){var n=m(e),r=f(n,Symbol.toStringTag);if(!r){var a=m(n);r=f(a,Symbol.toStringTag)}A[t]=r.get}})),t.exports=function(t){if(!t||"object"!=typeof t)return!1;if(!l||!(Symbol.toStringTag in t)){var e=s(i(t),8,-1);return p(c,e)>-1}return!!f&&function(t){var e=!1;return r(A,(function(n,r){if(!e)try{e=n.call(t)===r}catch(t){}})),e}(t)}},4244:t=>{"use strict";var e=function(t){return t!=t};t.exports=function(t,n){return 0===t&&0===n?1/t==1/n:t===n||!(!e(t)||!e(n))}},609:(t,e,n)=>{"use strict";var r=n(4289),a=n(5559),o=n(4244),i=n(5624),l=n(2281),u=a(i(),Object);r(u,{getPolyfill:i,implementation:o,shim:l}),t.exports=u},5624:(t,e,n)=>{"use strict";var r=n(4244);t.exports=function(){return"function"==typeof Object.is?Object.is:r}},2281:(t,e,n)=>{"use strict";var r=n(5624),a=n(4289);t.exports=function(){var t=r();return a(Object,{is:t},{is:function(){return Object.is!==t}}),t}},8987:(t,e,n)=>{"use strict";var r;if(!Object.keys){var a=Object.prototype.hasOwnProperty,o=Object.prototype.toString,i=n(1414),l=Object.prototype.propertyIsEnumerable,u=!l.call({toString:null},"toString"),c=l.call((function(){}),"prototype"),p=["toString","toLocaleString","valueOf","hasOwnProperty","isPrototypeOf","propertyIsEnumerable","constructor"],s=function(t){var e=t.constructor;return e&&e.prototype===t},A={$applicationCache:!0,$console:!0,$external:!0,$frame:!0,$frameElement:!0,$frames:!0,$innerHeight:!0,$innerWidth:!0,$onmozfullscreenchange:!0,$onmozfullscreenerror:!0,$outerHeight:!0,$outerWidth:!0,$pageXOffset:!0,$pageYOffset:!0,$parent:!0,$scrollLeft:!0,$scrollTop:!0,$scrollX:!0,$scrollY:!0,$self:!0,$webkitIndexedDB:!0,$webkitStorageInfo:!0,$window:!0},f=function(){if("undefined"==typeof window)return!1;for(var t in window)try{if(!A["$"+t]&&a.call(window,t)&&null!==window[t]&&"object"==typeof window[t])try{s(window[t])}catch(t){return!0}}catch(t){return!0}return!1}();r=function(t){var e=null!==t&&"object"==typeof t,n="[object Function]"===o.call(t),r=i(t),l=e&&"[object String]"===o.call(t),A=[];if(!e&&!n&&!r)throw new TypeError("Object.keys called on a non-object");var m=c&&n;if(l&&t.length>0&&!a.call(t,0))for(var d=0;d<t.length;++d)A.push(String(d));if(r&&t.length>0)for(var g=0;g<t.length;++g)A.push(String(g));else for(var h in t)m&&"prototype"===h||!a.call(t,h)||A.push(String(h));if(u)for(var C=function(t){if("undefined"==typeof window||!f)return s(t);try{return s(t)}catch(t){return!1}}(t),y=0;y<p.length;++y)C&&"constructor"===p[y]||!a.call(t,p[y])||A.push(p[y]);return A}}t.exports=r},2215:(t,e,n)=>{"use strict";var r=Array.prototype.slice,a=n(1414),o=Object.keys,i=o?function(t){return o(t)}:n(8987),l=Object.keys;i.shim=function(){if(Object.keys){var t=function(){var t=Object.keys(arguments);return t&&t.length===arguments.length}(1,2);t||(Object.keys=function(t){return a(t)?l(r.call(t)):l(t)})}else Object.keys=i;return Object.keys||i},t.exports=i},1414:t=>{"use strict";var e=Object.prototype.toString;t.exports=function(t){var n=e.call(t),r="[object Arguments]"===n;return r||(r="[object Array]"!==n&&null!==t&&"object"==typeof t&&"number"==typeof t.length&&t.length>=0&&"[object Function]"===e.call(t.callee)),r}},4155:t=>{var e,n,r=t.exports={};function a(){throw new Error("setTimeout has not been defined")}function o(){throw new Error("clearTimeout has not been defined")}function i(t){if(e===setTimeout)return setTimeout(t,0);if((e===a||!e)&&setTimeout)return e=setTimeout,setTimeout(t,0);try{return e(t,0)}catch(n){try{return e.call(null,t,0)}catch(n){return e.call(this,t,0)}}}!function(){try{e="function"==typeof setTimeout?setTimeout:a}catch(t){e=a}try{n="function"==typeof clearTimeout?clearTimeout:o}catch(t){n=o}}();var l,u=[],c=!1,p=-1;function s(){c&&l&&(c=!1,l.length?u=l.concat(u):p=-1,u.length&&A())}function A(){if(!c){var t=i(s);c=!0;for(var e=u.length;e;){for(l=u,u=[];++p<e;)l&&l[p].run();p=-1,e=u.length}l=null,c=!1,function(t){if(n===clearTimeout)return clearTimeout(t);if((n===o||!n)&&clearTimeout)return n=clearTimeout,clearTimeout(t);try{n(t)}catch(e){try{return n.call(null,t)}catch(e){return n.call(this,t)}}}(t)}}function f(t,e){this.fun=t,this.array=e}function m(){}r.nextTick=function(t){var e=new Array(arguments.length-1);if(arguments.length>1)for(var n=1;n<arguments.length;n++)e[n-1]=arguments[n];u.push(new f(t,e)),1!==u.length||c||i(A)},f.prototype.run=function(){this.fun.apply(null,this.array)},r.title="browser",r.browser=!0,r.env={},r.argv=[],r.version="",r.versions={},r.on=m,r.addListener=m,r.once=m,r.off=m,r.removeListener=m,r.removeAllListeners=m,r.emit=m,r.prependListener=m,r.prependOnceListener=m,r.listeners=function(t){return[]},r.binding=function(t){throw new Error("process.binding is not supported")},r.cwd=function(){return"/"},r.chdir=function(t){throw new Error("process.chdir is not supported")},r.umask=function(){return 0}},4448:(t,e,n)=>{"use strict";var r=n(5108),a=n(7294),o=n(3840);function i(t){for(var e="https://reactjs.org/docs/error-decoder.html?invariant="+t,n=1;n<arguments.length;n++)e+="&args[]="+encodeURIComponent(arguments[n]);return"Minified React error #"+t+"; visit "+e+" for the full message or use the non-minified dev environment for full errors and additional helpful warnings."}var l=new Set,u={};function c(t,e){p(t,e),p(t+"Capture",e)}function p(t,e){for(u[t]=e,t=0;t<e.length;t++)l.add(e[t])}var s=!("undefined"==typeof window||void 0===window.document||void 0===window.document.createElement),A=Object.prototype.hasOwnProperty,f=/^[:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD][:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD\-.0-9\u00B7\u0300-\u036F\u203F-\u2040]*$/,m={},d={};function g(t,e,n,r,a,o,i){this.acceptsBooleans=2===e||3===e||4===e,this.attributeName=r,this.attributeNamespace=a,this.mustUseProperty=n,this.propertyName=t,this.type=e,this.sanitizeURL=o,this.removeEmptyString=i}var h={};"children dangerouslySetInnerHTML defaultValue defaultChecked innerHTML suppressContentEditableWarning suppressHydrationWarning style".split(" ").forEach((function(t){h[t]=new g(t,0,!1,t,null,!1,!1)})),[["acceptCharset","accept-charset"],["className","class"],["htmlFor","for"],["httpEquiv","http-equiv"]].forEach((function(t){var e=t[0];h[e]=new g(e,1,!1,t[1],null,!1,!1)})),["contentEditable","draggable","spellCheck","value"].forEach((function(t){h[t]=new g(t,2,!1,t.toLowerCase(),null,!1,!1)})),["autoReverse","externalResourcesRequired","focusable","preserveAlpha"].forEach((function(t){h[t]=new g(t,2,!1,t,null,!1,!1)})),"allowFullScreen async autoFocus autoPlay controls default defer disabled disablePictureInPicture disableRemotePlayback formNoValidate hidden loop noModule noValidate open playsInline readOnly required reversed scoped seamless itemScope".split(" ").forEach((function(t){h[t]=new g(t,3,!1,t.toLowerCase(),null,!1,!1)})),["checked","multiple","muted","selected"].forEach((function(t){h[t]=new g(t,3,!0,t,null,!1,!1)})),["capture","download"].forEach((function(t){h[t]=new g(t,4,!1,t,null,!1,!1)})),["cols","rows","size","span"].forEach((function(t){h[t]=new g(t,6,!1,t,null,!1,!1)})),["rowSpan","start"].forEach((function(t){h[t]=new g(t,5,!1,t.toLowerCase(),null,!1,!1)}));var C=/[\-:]([a-z])/g;function y(t){return t[1].toUpperCase()}function b(t,e,n,r){var a=h.hasOwnProperty(e)?h[e]:null;(null!==a?0!==a.type:r||!(2<e.length)||"o"!==e[0]&&"O"!==e[0]||"n"!==e[1]&&"N"!==e[1])&&(function(t,e,n,r){if(null==e||function(t,e,n,r){if(null!==n&&0===n.type)return!1;switch(typeof e){case"function":case"symbol":return!0;case"boolean":return!r&&(null!==n?!n.acceptsBooleans:"data-"!==(t=t.toLowerCase().slice(0,5))&&"aria-"!==t);default:return!1}}(t,e,n,r))return!0;if(r)return!1;if(null!==n)switch(n.type){case 3:return!e;case 4:return!1===e;case 5:return isNaN(e);case 6:return isNaN(e)||1>e}return!1}(e,n,a,r)&&(n=null),r||null===a?function(t){return!!A.call(d,t)||!A.call(m,t)&&(f.test(t)?d[t]=!0:(m[t]=!0,!1))}(e)&&(null===n?t.removeAttribute(e):t.setAttribute(e,""+n)):a.mustUseProperty?t[a.propertyName]=null===n?3!==a.type&&"":n:(e=a.attributeName,r=a.attributeNamespace,null===n?t.removeAttribute(e):(n=3===(a=a.type)||4===a&&!0===n?"":""+n,r?t.setAttributeNS(r,e,n):t.setAttribute(e,n))))}"accent-height alignment-baseline arabic-form baseline-shift cap-height clip-path clip-rule color-interpolation color-interpolation-filters color-profile color-rendering dominant-baseline enable-background fill-opacity fill-rule flood-color flood-opacity font-family font-size font-size-adjust font-stretch font-style font-variant font-weight glyph-name glyph-orientation-horizontal glyph-orientation-vertical horiz-adv-x horiz-origin-x image-rendering letter-spacing lighting-color marker-end marker-mid marker-start overline-position overline-thickness paint-order panose-1 pointer-events rendering-intent shape-rendering stop-color stop-opacity strikethrough-position strikethrough-thickness stroke-dasharray stroke-dashoffset stroke-linecap stroke-linejoin stroke-miterlimit stroke-opacity stroke-width text-anchor text-decoration text-rendering underline-position underline-thickness unicode-bidi unicode-range units-per-em v-alphabetic v-hanging v-ideographic v-mathematical vector-effect vert-adv-y vert-origin-x vert-origin-y word-spacing writing-mode xmlns:xlink x-height".split(" ").forEach((function(t){var e=t.replace(C,y);h[e]=new g(e,1,!1,t,null,!1,!1)})),"xlink:actuate xlink:arcrole xlink:role xlink:show xlink:title xlink:type".split(" ").forEach((function(t){var e=t.replace(C,y);h[e]=new g(e,1,!1,t,"http://www.w3.org/1999/xlink",!1,!1)})),["xml:base","xml:lang","xml:space"].forEach((function(t){var e=t.replace(C,y);h[e]=new g(e,1,!1,t,"http://www.w3.org/XML/1998/namespace",!1,!1)})),["tabIndex","crossOrigin"].forEach((function(t){h[t]=new g(t,1,!1,t.toLowerCase(),null,!1,!1)})),h.xlinkHref=new g("xlinkHref",1,!1,"xlink:href","http://www.w3.org/1999/xlink",!0,!1),["src","href","action","formAction"].forEach((function(t){h[t]=new g(t,1,!1,t.toLowerCase(),null,!0,!0)}));var v=a.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED,x=Symbol.for("react.element"),E=Symbol.for("react.portal"),w=Symbol.for("react.fragment"),B=Symbol.for("react.strict_mode"),I=Symbol.for("react.profiler"),S=Symbol.for("react.provider"),k=Symbol.for("react.context"),O=Symbol.for("react.forward_ref"),J=Symbol.for("react.suspense"),_=Symbol.for("react.suspense_list"),P=Symbol.for("react.memo"),M=Symbol.for("react.lazy");Symbol.for("react.scope"),Symbol.for("react.debug_trace_mode");var N=Symbol.for("react.offscreen");Symbol.for("react.legacy_hidden"),Symbol.for("react.cache"),Symbol.for("react.tracing_marker");var j=Symbol.iterator;function T(t){return null===t||"object"!=typeof t?null:"function"==typeof(t=j&&t[j]||t["@@iterator"])?t:null}var $,U=Object.assign;function z(t){if(void 0===$)try{throw Error()}catch(t){var e=t.stack.trim().match(/\n( *(at )?)/);$=e&&e[1]||""}return"\n"+$+t}var R=!1;function F(t,e){if(!t||R)return"";R=!0;var n=Error.prepareStackTrace;Error.prepareStackTrace=void 0;try{if(e)if(e=function(){throw Error()},Object.defineProperty(e.prototype,"props",{set:function(){throw Error()}}),"object"==typeof Reflect&&Reflect.construct){try{Reflect.construct(e,[])}catch(t){var r=t}Reflect.construct(t,[],e)}else{try{e.call()}catch(t){r=t}t.call(e.prototype)}else{try{throw Error()}catch(t){r=t}t()}}catch(e){if(e&&r&&"string"==typeof e.stack){for(var a=e.stack.split("\n"),o=r.stack.split("\n"),i=a.length-1,l=o.length-1;1<=i&&0<=l&&a[i]!==o[l];)l--;for(;1<=i&&0<=l;i--,l--)if(a[i]!==o[l]){if(1!==i||1!==l)do{if(i--,0>--l||a[i]!==o[l]){var u="\n"+a[i].replace(" at new "," at ");return t.displayName&&u.includes("<anonymous>")&&(u=u.replace("<anonymous>",t.displayName)),u}}while(1<=i&&0<=l);break}}}finally{R=!1,Error.prepareStackTrace=n}return(t=t?t.displayName||t.name:"")?z(t):""}function L(t){switch(t.tag){case 5:return z(t.type);case 16:return z("Lazy");case 13:return z("Suspense");case 19:return z("SuspenseList");case 0:case 2:case 15:return F(t.type,!1);case 11:return F(t.type.render,!1);case 1:return F(t.type,!0);default:return""}}function D(t){if(null==t)return null;if("function"==typeof t)return t.displayName||t.name||null;if("string"==typeof t)return t;switch(t){case w:return"Fragment";case E:return"Portal";case I:return"Profiler";case B:return"StrictMode";case J:return"Suspense";case _:return"SuspenseList"}if("object"==typeof t)switch(t.$$typeof){case k:return(t.displayName||"Context")+".Consumer";case S:return(t._context.displayName||"Context")+".Provider";case O:var e=t.render;return(t=t.displayName)||(t=""!==(t=e.displayName||e.name||"")?"ForwardRef("+t+")":"ForwardRef"),t;case P:return null!==(e=t.displayName||null)?e:D(t.type)||"Memo";case M:e=t._payload,t=t._init;try{return D(t(e))}catch(t){}}return null}function Q(t){var e=t.type;switch(t.tag){case 24:return"Cache";case 9:return(e.displayName||"Context")+".Consumer";case 10:return(e._context.displayName||"Context")+".Provider";case 18:return"DehydratedFragment";case 11:return t=(t=e.render).displayName||t.name||"",e.displayName||(""!==t?"ForwardRef("+t+")":"ForwardRef");case 7:return"Fragment";case 5:return e;case 4:return"Portal";case 3:return"Root";case 6:return"Text";case 16:return D(e);case 8:return e===B?"StrictMode":"Mode";case 22:return"Offscreen";case 12:return"Profiler";case 21:return"Scope";case 13:return"Suspense";case 19:return"SuspenseList";case 25:return"TracingMarker";case 1:case 0:case 17:case 2:case 14:case 15:if("function"==typeof e)return e.displayName||e.name||null;if("string"==typeof e)return e}return null}function G(t){switch(typeof t){case"boolean":case"number":case"string":case"undefined":case"object":return t;default:return""}}function W(t){var e=t.type;return(t=t.nodeName)&&"input"===t.toLowerCase()&&("checkbox"===e||"radio"===e)}function V(t){t._valueTracker||(t._valueTracker=function(t){var e=W(t)?"checked":"value",n=Object.getOwnPropertyDescriptor(t.constructor.prototype,e),r=""+t[e];if(!t.hasOwnProperty(e)&&void 0!==n&&"function"==typeof n.get&&"function"==typeof n.set){var a=n.get,o=n.set;return Object.defineProperty(t,e,{configurable:!0,get:function(){return a.call(this)},set:function(t){r=""+t,o.call(this,t)}}),Object.defineProperty(t,e,{enumerable:n.enumerable}),{getValue:function(){return r},setValue:function(t){r=""+t},stopTracking:function(){t._valueTracker=null,delete t[e]}}}}(t))}function q(t){if(!t)return!1;var e=t._valueTracker;if(!e)return!0;var n=e.getValue(),r="";return t&&(r=W(t)?t.checked?"true":"false":t.value),(t=r)!==n&&(e.setValue(t),!0)}function H(t){if(void 0===(t=t||("undefined"!=typeof document?document:void 0)))return null;try{return t.activeElement||t.body}catch(e){return t.body}}function K(t,e){var n=e.checked;return U({},e,{defaultChecked:void 0,defaultValue:void 0,value:void 0,checked:null!=n?n:t._wrapperState.initialChecked})}function Y(t,e){var n=null==e.defaultValue?"":e.defaultValue,r=null!=e.checked?e.checked:e.defaultChecked;n=G(null!=e.value?e.value:n),t._wrapperState={initialChecked:r,initialValue:n,controlled:"checkbox"===e.type||"radio"===e.type?null!=e.checked:null!=e.value}}function X(t,e){null!=(e=e.checked)&&b(t,"checked",e,!1)}function Z(t,e){X(t,e);var n=G(e.value),r=e.type;if(null!=n)"number"===r?(0===n&&""===t.value||t.value!=n)&&(t.value=""+n):t.value!==""+n&&(t.value=""+n);else if("submit"===r||"reset"===r)return void t.removeAttribute("value");e.hasOwnProperty("value")?et(t,e.type,n):e.hasOwnProperty("defaultValue")&&et(t,e.type,G(e.defaultValue)),null==e.checked&&null!=e.defaultChecked&&(t.defaultChecked=!!e.defaultChecked)}function tt(t,e,n){if(e.hasOwnProperty("value")||e.hasOwnProperty("defaultValue")){var r=e.type;if(!("submit"!==r&&"reset"!==r||void 0!==e.value&&null!==e.value))return;e=""+t._wrapperState.initialValue,n||e===t.value||(t.value=e),t.defaultValue=e}""!==(n=t.name)&&(t.name=""),t.defaultChecked=!!t._wrapperState.initialChecked,""!==n&&(t.name=n)}function et(t,e,n){"number"===e&&H(t.ownerDocument)===t||(null==n?t.defaultValue=""+t._wrapperState.initialValue:t.defaultValue!==""+n&&(t.defaultValue=""+n))}var nt=Array.isArray;function rt(t,e,n,r){if(t=t.options,e){e={};for(var a=0;a<n.length;a++)e["$"+n[a]]=!0;for(n=0;n<t.length;n++)a=e.hasOwnProperty("$"+t[n].value),t[n].selected!==a&&(t[n].selected=a),a&&r&&(t[n].defaultSelected=!0)}else{for(n=""+G(n),e=null,a=0;a<t.length;a++){if(t[a].value===n)return t[a].selected=!0,void(r&&(t[a].defaultSelected=!0));null!==e||t[a].disabled||(e=t[a])}null!==e&&(e.selected=!0)}}function at(t,e){if(null!=e.dangerouslySetInnerHTML)throw Error(i(91));return U({},e,{value:void 0,defaultValue:void 0,children:""+t._wrapperState.initialValue})}function ot(t,e){var n=e.value;if(null==n){if(n=e.children,e=e.defaultValue,null!=n){if(null!=e)throw Error(i(92));if(nt(n)){if(1<n.length)throw Error(i(93));n=n[0]}e=n}null==e&&(e=""),n=e}t._wrapperState={initialValue:G(n)}}function it(t,e){var n=G(e.value),r=G(e.defaultValue);null!=n&&((n=""+n)!==t.value&&(t.value=n),null==e.defaultValue&&t.defaultValue!==n&&(t.defaultValue=n)),null!=r&&(t.defaultValue=""+r)}function lt(t){var e=t.textContent;e===t._wrapperState.initialValue&&""!==e&&null!==e&&(t.value=e)}function ut(t){switch(t){case"svg":return"http://www.w3.org/2000/svg";case"math":return"http://www.w3.org/1998/Math/MathML";default:return"http://www.w3.org/1999/xhtml"}}function ct(t,e){return null==t||"http://www.w3.org/1999/xhtml"===t?ut(e):"http://www.w3.org/2000/svg"===t&&"foreignObject"===e?"http://www.w3.org/1999/xhtml":t}var pt,st,At=(st=function(t,e){if("http://www.w3.org/2000/svg"!==t.namespaceURI||"innerHTML"in t)t.innerHTML=e;else{for((pt=pt||document.createElement("div")).innerHTML="<svg>"+e.valueOf().toString()+"</svg>",e=pt.firstChild;t.firstChild;)t.removeChild(t.firstChild);for(;e.firstChild;)t.appendChild(e.firstChild)}},"undefined"!=typeof MSApp&&MSApp.execUnsafeLocalFunction?function(t,e,n,r){MSApp.execUnsafeLocalFunction((function(){return st(t,e)}))}:st);function ft(t,e){if(e){var n=t.firstChild;if(n&&n===t.lastChild&&3===n.nodeType)return void(n.nodeValue=e)}t.textContent=e}var mt={animationIterationCount:!0,aspectRatio:!0,borderImageOutset:!0,borderImageSlice:!0,borderImageWidth:!0,boxFlex:!0,boxFlexGroup:!0,boxOrdinalGroup:!0,columnCount:!0,columns:!0,flex:!0,flexGrow:!0,flexPositive:!0,flexShrink:!0,flexNegative:!0,flexOrder:!0,gridArea:!0,gridRow:!0,gridRowEnd:!0,gridRowSpan:!0,gridRowStart:!0,gridColumn:!0,gridColumnEnd:!0,gridColumnSpan:!0,gridColumnStart:!0,fontWeight:!0,lineClamp:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,tabSize:!0,widows:!0,zIndex:!0,zoom:!0,fillOpacity:!0,floodOpacity:!0,stopOpacity:!0,strokeDasharray:!0,strokeDashoffset:!0,strokeMiterlimit:!0,strokeOpacity:!0,strokeWidth:!0},dt=["Webkit","ms","Moz","O"];function gt(t,e,n){return null==e||"boolean"==typeof e||""===e?"":n||"number"!=typeof e||0===e||mt.hasOwnProperty(t)&&mt[t]?(""+e).trim():e+"px"}function ht(t,e){for(var n in t=t.style,e)if(e.hasOwnProperty(n)){var r=0===n.indexOf("--"),a=gt(n,e[n],r);"float"===n&&(n="cssFloat"),r?t.setProperty(n,a):t[n]=a}}Object.keys(mt).forEach((function(t){dt.forEach((function(e){e=e+t.charAt(0).toUpperCase()+t.substring(1),mt[e]=mt[t]}))}));var Ct=U({menuitem:!0},{area:!0,base:!0,br:!0,col:!0,embed:!0,hr:!0,img:!0,input:!0,keygen:!0,link:!0,meta:!0,param:!0,source:!0,track:!0,wbr:!0});function yt(t,e){if(e){if(Ct[t]&&(null!=e.children||null!=e.dangerouslySetInnerHTML))throw Error(i(137,t));if(null!=e.dangerouslySetInnerHTML){if(null!=e.children)throw Error(i(60));if("object"!=typeof e.dangerouslySetInnerHTML||!("__html"in e.dangerouslySetInnerHTML))throw Error(i(61))}if(null!=e.style&&"object"!=typeof e.style)throw Error(i(62))}}function bt(t,e){if(-1===t.indexOf("-"))return"string"==typeof e.is;switch(t){case"annotation-xml":case"color-profile":case"font-face":case"font-face-src":case"font-face-uri":case"font-face-format":case"font-face-name":case"missing-glyph":return!1;default:return!0}}var vt=null;function xt(t){return(t=t.target||t.srcElement||window).correspondingUseElement&&(t=t.correspondingUseElement),3===t.nodeType?t.parentNode:t}var Et=null,wt=null,Bt=null;function It(t){if(t=ba(t)){if("function"!=typeof Et)throw Error(i(280));var e=t.stateNode;e&&(e=xa(e),Et(t.stateNode,t.type,e))}}function St(t){wt?Bt?Bt.push(t):Bt=[t]:wt=t}function kt(){if(wt){var t=wt,e=Bt;if(Bt=wt=null,It(t),e)for(t=0;t<e.length;t++)It(e[t])}}function Ot(t,e){return t(e)}function Jt(){}var _t=!1;function Pt(t,e,n){if(_t)return t(e,n);_t=!0;try{return Ot(t,e,n)}finally{_t=!1,(null!==wt||null!==Bt)&&(Jt(),kt())}}function Mt(t,e){var n=t.stateNode;if(null===n)return null;var r=xa(n);if(null===r)return null;n=r[e];t:switch(e){case"onClick":case"onClickCapture":case"onDoubleClick":case"onDoubleClickCapture":case"onMouseDown":case"onMouseDownCapture":case"onMouseMove":case"onMouseMoveCapture":case"onMouseUp":case"onMouseUpCapture":case"onMouseEnter":(r=!r.disabled)||(r=!("button"===(t=t.type)||"input"===t||"select"===t||"textarea"===t)),t=!r;break t;default:t=!1}if(t)return null;if(n&&"function"!=typeof n)throw Error(i(231,e,typeof n));return n}var Nt=!1;if(s)try{var jt={};Object.defineProperty(jt,"passive",{get:function(){Nt=!0}}),window.addEventListener("test",jt,jt),window.removeEventListener("test",jt,jt)}catch(st){Nt=!1}function Tt(t,e,n,r,a,o,i,l,u){var c=Array.prototype.slice.call(arguments,3);try{e.apply(n,c)}catch(t){this.onError(t)}}var $t=!1,Ut=null,zt=!1,Rt=null,Ft={onError:function(t){$t=!0,Ut=t}};function Lt(t,e,n,r,a,o,i,l,u){$t=!1,Ut=null,Tt.apply(Ft,arguments)}function Dt(t){var e=t,n=t;if(t.alternate)for(;e.return;)e=e.return;else{t=e;do{0!=(4098&(e=t).flags)&&(n=e.return),t=e.return}while(t)}return 3===e.tag?n:null}function Qt(t){if(13===t.tag){var e=t.memoizedState;if(null===e&&null!==(t=t.alternate)&&(e=t.memoizedState),null!==e)return e.dehydrated}return null}function Gt(t){if(Dt(t)!==t)throw Error(i(188))}function Wt(t){return null!==(t=function(t){var e=t.alternate;if(!e){if(null===(e=Dt(t)))throw Error(i(188));return e!==t?null:t}for(var n=t,r=e;;){var a=n.return;if(null===a)break;var o=a.alternate;if(null===o){if(null!==(r=a.return)){n=r;continue}break}if(a.child===o.child){for(o=a.child;o;){if(o===n)return Gt(a),t;if(o===r)return Gt(a),e;o=o.sibling}throw Error(i(188))}if(n.return!==r.return)n=a,r=o;else{for(var l=!1,u=a.child;u;){if(u===n){l=!0,n=a,r=o;break}if(u===r){l=!0,r=a,n=o;break}u=u.sibling}if(!l){for(u=o.child;u;){if(u===n){l=!0,n=o,r=a;break}if(u===r){l=!0,r=o,n=a;break}u=u.sibling}if(!l)throw Error(i(189))}}if(n.alternate!==r)throw Error(i(190))}if(3!==n.tag)throw Error(i(188));return n.stateNode.current===n?t:e}(t))?Vt(t):null}function Vt(t){if(5===t.tag||6===t.tag)return t;for(t=t.child;null!==t;){var e=Vt(t);if(null!==e)return e;t=t.sibling}return null}var qt=o.unstable_scheduleCallback,Ht=o.unstable_cancelCallback,Kt=o.unstable_shouldYield,Yt=o.unstable_requestPaint,Xt=o.unstable_now,Zt=o.unstable_getCurrentPriorityLevel,te=o.unstable_ImmediatePriority,ee=o.unstable_UserBlockingPriority,ne=o.unstable_NormalPriority,re=o.unstable_LowPriority,ae=o.unstable_IdlePriority,oe=null,ie=null,le=Math.clz32?Math.clz32:function(t){return 0==(t>>>=0)?32:31-(ue(t)/ce|0)|0},ue=Math.log,ce=Math.LN2,pe=64,se=4194304;function Ae(t){switch(t&-t){case 1:return 1;case 2:return 2;case 4:return 4;case 8:return 8;case 16:return 16;case 32:return 32;case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:return 4194240&t;case 4194304:case 8388608:case 16777216:case 33554432:case 67108864:return 130023424&t;case 134217728:return 134217728;case 268435456:return 268435456;case 536870912:return 536870912;case 1073741824:return 1073741824;default:return t}}function fe(t,e){var n=t.pendingLanes;if(0===n)return 0;var r=0,a=t.suspendedLanes,o=t.pingedLanes,i=268435455&n;if(0!==i){var l=i&~a;0!==l?r=Ae(l):0!=(o&=i)&&(r=Ae(o))}else 0!=(i=n&~a)?r=Ae(i):0!==o&&(r=Ae(o));if(0===r)return 0;if(0!==e&&e!==r&&0==(e&a)&&((a=r&-r)>=(o=e&-e)||16===a&&0!=(4194240&o)))return e;if(0!=(4&r)&&(r|=16&n),0!==(e=t.entangledLanes))for(t=t.entanglements,e&=r;0<e;)a=1<<(n=31-le(e)),r|=t[n],e&=~a;return r}function me(t,e){switch(t){case 1:case 2:case 4:return e+250;case 8:case 16:case 32:case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:return e+5e3;default:return-1}}function de(t){return 0!=(t=-1073741825&t.pendingLanes)?t:1073741824&t?1073741824:0}function ge(){var t=pe;return 0==(4194240&(pe<<=1))&&(pe=64),t}function he(t){for(var e=[],n=0;31>n;n++)e.push(t);return e}function Ce(t,e,n){t.pendingLanes|=e,536870912!==e&&(t.suspendedLanes=0,t.pingedLanes=0),(t=t.eventTimes)[e=31-le(e)]=n}function ye(t,e){var n=t.entangledLanes|=e;for(t=t.entanglements;n;){var r=31-le(n),a=1<<r;a&e|t[r]&e&&(t[r]|=e),n&=~a}}var be=0;function ve(t){return 1<(t&=-t)?4<t?0!=(268435455&t)?16:536870912:4:1}var xe,Ee,we,Be,Ie,Se=!1,ke=[],Oe=null,Je=null,_e=null,Pe=new Map,Me=new Map,Ne=[],je="mousedown mouseup touchcancel touchend touchstart auxclick dblclick pointercancel pointerdown pointerup dragend dragstart drop compositionend compositionstart keydown keypress keyup input textInput copy cut paste click change contextmenu reset submit".split(" ");function Te(t,e){switch(t){case"focusin":case"focusout":Oe=null;break;case"dragenter":case"dragleave":Je=null;break;case"mouseover":case"mouseout":_e=null;break;case"pointerover":case"pointerout":Pe.delete(e.pointerId);break;case"gotpointercapture":case"lostpointercapture":Me.delete(e.pointerId)}}function $e(t,e,n,r,a,o){return null===t||t.nativeEvent!==o?(t={blockedOn:e,domEventName:n,eventSystemFlags:r,nativeEvent:o,targetContainers:[a]},null!==e&&null!==(e=ba(e))&&Ee(e),t):(t.eventSystemFlags|=r,e=t.targetContainers,null!==a&&-1===e.indexOf(a)&&e.push(a),t)}function Ue(t){var e=ya(t.target);if(null!==e){var n=Dt(e);if(null!==n)if(13===(e=n.tag)){if(null!==(e=Qt(n)))return t.blockedOn=e,void Ie(t.priority,(function(){we(n)}))}else if(3===e&&n.stateNode.current.memoizedState.isDehydrated)return void(t.blockedOn=3===n.tag?n.stateNode.containerInfo:null)}t.blockedOn=null}function ze(t){if(null!==t.blockedOn)return!1;for(var e=t.targetContainers;0<e.length;){var n=Ke(t.domEventName,t.eventSystemFlags,e[0],t.nativeEvent);if(null!==n)return null!==(e=ba(n))&&Ee(e),t.blockedOn=n,!1;var r=new(n=t.nativeEvent).constructor(n.type,n);vt=r,n.target.dispatchEvent(r),vt=null,e.shift()}return!0}function Re(t,e,n){ze(t)&&n.delete(e)}function Fe(){Se=!1,null!==Oe&&ze(Oe)&&(Oe=null),null!==Je&&ze(Je)&&(Je=null),null!==_e&&ze(_e)&&(_e=null),Pe.forEach(Re),Me.forEach(Re)}function Le(t,e){t.blockedOn===e&&(t.blockedOn=null,Se||(Se=!0,o.unstable_scheduleCallback(o.unstable_NormalPriority,Fe)))}function De(t){function e(e){return Le(e,t)}if(0<ke.length){Le(ke[0],t);for(var n=1;n<ke.length;n++){var r=ke[n];r.blockedOn===t&&(r.blockedOn=null)}}for(null!==Oe&&Le(Oe,t),null!==Je&&Le(Je,t),null!==_e&&Le(_e,t),Pe.forEach(e),Me.forEach(e),n=0;n<Ne.length;n++)(r=Ne[n]).blockedOn===t&&(r.blockedOn=null);for(;0<Ne.length&&null===(n=Ne[0]).blockedOn;)Ue(n),null===n.blockedOn&&Ne.shift()}var Qe=v.ReactCurrentBatchConfig,Ge=!0;function We(t,e,n,r){var a=be,o=Qe.transition;Qe.transition=null;try{be=1,qe(t,e,n,r)}finally{be=a,Qe.transition=o}}function Ve(t,e,n,r){var a=be,o=Qe.transition;Qe.transition=null;try{be=4,qe(t,e,n,r)}finally{be=a,Qe.transition=o}}function qe(t,e,n,r){if(Ge){var a=Ke(t,e,n,r);if(null===a)Gr(t,e,r,He,n),Te(t,r);else if(function(t,e,n,r,a){switch(e){case"focusin":return Oe=$e(Oe,t,e,n,r,a),!0;case"dragenter":return Je=$e(Je,t,e,n,r,a),!0;case"mouseover":return _e=$e(_e,t,e,n,r,a),!0;case"pointerover":var o=a.pointerId;return Pe.set(o,$e(Pe.get(o)||null,t,e,n,r,a)),!0;case"gotpointercapture":return o=a.pointerId,Me.set(o,$e(Me.get(o)||null,t,e,n,r,a)),!0}return!1}(a,t,e,n,r))r.stopPropagation();else if(Te(t,r),4&e&&-1<je.indexOf(t)){for(;null!==a;){var o=ba(a);if(null!==o&&xe(o),null===(o=Ke(t,e,n,r))&&Gr(t,e,r,He,n),o===a)break;a=o}null!==a&&r.stopPropagation()}else Gr(t,e,r,null,n)}}var He=null;function Ke(t,e,n,r){if(He=null,null!==(t=ya(t=xt(r))))if(null===(e=Dt(t)))t=null;else if(13===(n=e.tag)){if(null!==(t=Qt(e)))return t;t=null}else if(3===n){if(e.stateNode.current.memoizedState.isDehydrated)return 3===e.tag?e.stateNode.containerInfo:null;t=null}else e!==t&&(t=null);return He=t,null}function Ye(t){switch(t){case"cancel":case"click":case"close":case"contextmenu":case"copy":case"cut":case"auxclick":case"dblclick":case"dragend":case"dragstart":case"drop":case"focusin":case"focusout":case"input":case"invalid":case"keydown":case"keypress":case"keyup":case"mousedown":case"mouseup":case"paste":case"pause":case"play":case"pointercancel":case"pointerdown":case"pointerup":case"ratechange":case"reset":case"resize":case"seeked":case"submit":case"touchcancel":case"touchend":case"touchstart":case"volumechange":case"change":case"selectionchange":case"textInput":case"compositionstart":case"compositionend":case"compositionupdate":case"beforeblur":case"afterblur":case"beforeinput":case"blur":case"fullscreenchange":case"focus":case"hashchange":case"popstate":case"select":case"selectstart":return 1;case"drag":case"dragenter":case"dragexit":case"dragleave":case"dragover":case"mousemove":case"mouseout":case"mouseover":case"pointermove":case"pointerout":case"pointerover":case"scroll":case"toggle":case"touchmove":case"wheel":case"mouseenter":case"mouseleave":case"pointerenter":case"pointerleave":return 4;case"message":switch(Zt()){case te:return 1;case ee:return 4;case ne:case re:return 16;case ae:return 536870912;default:return 16}default:return 16}}var Xe=null,Ze=null,tn=null;function en(){if(tn)return tn;var t,e,n=Ze,r=n.length,a="value"in Xe?Xe.value:Xe.textContent,o=a.length;for(t=0;t<r&&n[t]===a[t];t++);var i=r-t;for(e=1;e<=i&&n[r-e]===a[o-e];e++);return tn=a.slice(t,1<e?1-e:void 0)}function nn(t){var e=t.keyCode;return"charCode"in t?0===(t=t.charCode)&&13===e&&(t=13):t=e,10===t&&(t=13),32<=t||13===t?t:0}function rn(){return!0}function an(){return!1}function on(t){function e(e,n,r,a,o){for(var i in this._reactName=e,this._targetInst=r,this.type=n,this.nativeEvent=a,this.target=o,this.currentTarget=null,t)t.hasOwnProperty(i)&&(e=t[i],this[i]=e?e(a):a[i]);return this.isDefaultPrevented=(null!=a.defaultPrevented?a.defaultPrevented:!1===a.returnValue)?rn:an,this.isPropagationStopped=an,this}return U(e.prototype,{preventDefault:function(){this.defaultPrevented=!0;var t=this.nativeEvent;t&&(t.preventDefault?t.preventDefault():"unknown"!=typeof t.returnValue&&(t.returnValue=!1),this.isDefaultPrevented=rn)},stopPropagation:function(){var t=this.nativeEvent;t&&(t.stopPropagation?t.stopPropagation():"unknown"!=typeof t.cancelBubble&&(t.cancelBubble=!0),this.isPropagationStopped=rn)},persist:function(){},isPersistent:rn}),e}var ln,un,cn,pn={eventPhase:0,bubbles:0,cancelable:0,timeStamp:function(t){return t.timeStamp||Date.now()},defaultPrevented:0,isTrusted:0},sn=on(pn),An=U({},pn,{view:0,detail:0}),fn=on(An),mn=U({},An,{screenX:0,screenY:0,clientX:0,clientY:0,pageX:0,pageY:0,ctrlKey:0,shiftKey:0,altKey:0,metaKey:0,getModifierState:In,button:0,buttons:0,relatedTarget:function(t){return void 0===t.relatedTarget?t.fromElement===t.srcElement?t.toElement:t.fromElement:t.relatedTarget},movementX:function(t){return"movementX"in t?t.movementX:(t!==cn&&(cn&&"mousemove"===t.type?(ln=t.screenX-cn.screenX,un=t.screenY-cn.screenY):un=ln=0,cn=t),ln)},movementY:function(t){return"movementY"in t?t.movementY:un}}),dn=on(mn),gn=on(U({},mn,{dataTransfer:0})),hn=on(U({},An,{relatedTarget:0})),Cn=on(U({},pn,{animationName:0,elapsedTime:0,pseudoElement:0})),yn=U({},pn,{clipboardData:function(t){return"clipboardData"in t?t.clipboardData:window.clipboardData}}),bn=on(yn),vn=on(U({},pn,{data:0})),xn={Esc:"Escape",Spacebar:" ",Left:"ArrowLeft",Up:"ArrowUp",Right:"ArrowRight",Down:"ArrowDown",Del:"Delete",Win:"OS",Menu:"ContextMenu",Apps:"ContextMenu",Scroll:"ScrollLock",MozPrintableKey:"Unidentified"},En={8:"Backspace",9:"Tab",12:"Clear",13:"Enter",16:"Shift",17:"Control",18:"Alt",19:"Pause",20:"CapsLock",27:"Escape",32:" ",33:"PageUp",34:"PageDown",35:"End",36:"Home",37:"ArrowLeft",38:"ArrowUp",39:"ArrowRight",40:"ArrowDown",45:"Insert",46:"Delete",112:"F1",113:"F2",114:"F3",115:"F4",116:"F5",117:"F6",118:"F7",119:"F8",120:"F9",121:"F10",122:"F11",123:"F12",144:"NumLock",145:"ScrollLock",224:"Meta"},wn={Alt:"altKey",Control:"ctrlKey",Meta:"metaKey",Shift:"shiftKey"};function Bn(t){var e=this.nativeEvent;return e.getModifierState?e.getModifierState(t):!!(t=wn[t])&&!!e[t]}function In(){return Bn}var Sn=U({},An,{key:function(t){if(t.key){var e=xn[t.key]||t.key;if("Unidentified"!==e)return e}return"keypress"===t.type?13===(t=nn(t))?"Enter":String.fromCharCode(t):"keydown"===t.type||"keyup"===t.type?En[t.keyCode]||"Unidentified":""},code:0,location:0,ctrlKey:0,shiftKey:0,altKey:0,metaKey:0,repeat:0,locale:0,getModifierState:In,charCode:function(t){return"keypress"===t.type?nn(t):0},keyCode:function(t){return"keydown"===t.type||"keyup"===t.type?t.keyCode:0},which:function(t){return"keypress"===t.type?nn(t):"keydown"===t.type||"keyup"===t.type?t.keyCode:0}}),kn=on(Sn),On=on(U({},mn,{pointerId:0,width:0,height:0,pressure:0,tangentialPressure:0,tiltX:0,tiltY:0,twist:0,pointerType:0,isPrimary:0})),Jn=on(U({},An,{touches:0,targetTouches:0,changedTouches:0,altKey:0,metaKey:0,ctrlKey:0,shiftKey:0,getModifierState:In})),_n=on(U({},pn,{propertyName:0,elapsedTime:0,pseudoElement:0})),Pn=U({},mn,{deltaX:function(t){return"deltaX"in t?t.deltaX:"wheelDeltaX"in t?-t.wheelDeltaX:0},deltaY:function(t){return"deltaY"in t?t.deltaY:"wheelDeltaY"in t?-t.wheelDeltaY:"wheelDelta"in t?-t.wheelDelta:0},deltaZ:0,deltaMode:0}),Mn=on(Pn),Nn=[9,13,27,32],jn=s&&"CompositionEvent"in window,Tn=null;s&&"documentMode"in document&&(Tn=document.documentMode);var $n=s&&"TextEvent"in window&&!Tn,Un=s&&(!jn||Tn&&8<Tn&&11>=Tn),zn=String.fromCharCode(32),Rn=!1;function Fn(t,e){switch(t){case"keyup":return-1!==Nn.indexOf(e.keyCode);case"keydown":return 229!==e.keyCode;case"keypress":case"mousedown":case"focusout":return!0;default:return!1}}function Ln(t){return"object"==typeof(t=t.detail)&&"data"in t?t.data:null}var Dn=!1,Qn={color:!0,date:!0,datetime:!0,"datetime-local":!0,email:!0,month:!0,number:!0,password:!0,range:!0,search:!0,tel:!0,text:!0,time:!0,url:!0,week:!0};function Gn(t){var e=t&&t.nodeName&&t.nodeName.toLowerCase();return"input"===e?!!Qn[t.type]:"textarea"===e}function Wn(t,e,n,r){St(r),0<(e=Vr(e,"onChange")).length&&(n=new sn("onChange","change",null,n,r),t.push({event:n,listeners:e}))}var Vn=null,qn=null;function Hn(t){zr(t,0)}function Kn(t){if(q(va(t)))return t}function Yn(t,e){if("change"===t)return e}var Xn=!1;if(s){var Zn;if(s){var tr="oninput"in document;if(!tr){var er=document.createElement("div");er.setAttribute("oninput","return;"),tr="function"==typeof er.oninput}Zn=tr}else Zn=!1;Xn=Zn&&(!document.documentMode||9<document.documentMode)}function nr(){Vn&&(Vn.detachEvent("onpropertychange",rr),qn=Vn=null)}function rr(t){if("value"===t.propertyName&&Kn(qn)){var e=[];Wn(e,qn,t,xt(t)),Pt(Hn,e)}}function ar(t,e,n){"focusin"===t?(nr(),qn=n,(Vn=e).attachEvent("onpropertychange",rr)):"focusout"===t&&nr()}function or(t){if("selectionchange"===t||"keyup"===t||"keydown"===t)return Kn(qn)}function ir(t,e){if("click"===t)return Kn(e)}function lr(t,e){if("input"===t||"change"===t)return Kn(e)}var ur="function"==typeof Object.is?Object.is:function(t,e){return t===e&&(0!==t||1/t==1/e)||t!=t&&e!=e};function cr(t,e){if(ur(t,e))return!0;if("object"!=typeof t||null===t||"object"!=typeof e||null===e)return!1;var n=Object.keys(t),r=Object.keys(e);if(n.length!==r.length)return!1;for(r=0;r<n.length;r++){var a=n[r];if(!A.call(e,a)||!ur(t[a],e[a]))return!1}return!0}function pr(t){for(;t&&t.firstChild;)t=t.firstChild;return t}function sr(t,e){var n,r=pr(t);for(t=0;r;){if(3===r.nodeType){if(n=t+r.textContent.length,t<=e&&n>=e)return{node:r,offset:e-t};t=n}t:{for(;r;){if(r.nextSibling){r=r.nextSibling;break t}r=r.parentNode}r=void 0}r=pr(r)}}function Ar(t,e){return!(!t||!e)&&(t===e||(!t||3!==t.nodeType)&&(e&&3===e.nodeType?Ar(t,e.parentNode):"contains"in t?t.contains(e):!!t.compareDocumentPosition&&!!(16&t.compareDocumentPosition(e))))}function fr(){for(var t=window,e=H();e instanceof t.HTMLIFrameElement;){try{var n="string"==typeof e.contentWindow.location.href}catch(t){n=!1}if(!n)break;e=H((t=e.contentWindow).document)}return e}function mr(t){var e=t&&t.nodeName&&t.nodeName.toLowerCase();return e&&("input"===e&&("text"===t.type||"search"===t.type||"tel"===t.type||"url"===t.type||"password"===t.type)||"textarea"===e||"true"===t.contentEditable)}function dr(t){var e=fr(),n=t.focusedElem,r=t.selectionRange;if(e!==n&&n&&n.ownerDocument&&Ar(n.ownerDocument.documentElement,n)){if(null!==r&&mr(n))if(e=r.start,void 0===(t=r.end)&&(t=e),"selectionStart"in n)n.selectionStart=e,n.selectionEnd=Math.min(t,n.value.length);else if((t=(e=n.ownerDocument||document)&&e.defaultView||window).getSelection){t=t.getSelection();var a=n.textContent.length,o=Math.min(r.start,a);r=void 0===r.end?o:Math.min(r.end,a),!t.extend&&o>r&&(a=r,r=o,o=a),a=sr(n,o);var i=sr(n,r);a&&i&&(1!==t.rangeCount||t.anchorNode!==a.node||t.anchorOffset!==a.offset||t.focusNode!==i.node||t.focusOffset!==i.offset)&&((e=e.createRange()).setStart(a.node,a.offset),t.removeAllRanges(),o>r?(t.addRange(e),t.extend(i.node,i.offset)):(e.setEnd(i.node,i.offset),t.addRange(e)))}for(e=[],t=n;t=t.parentNode;)1===t.nodeType&&e.push({element:t,left:t.scrollLeft,top:t.scrollTop});for("function"==typeof n.focus&&n.focus(),n=0;n<e.length;n++)(t=e[n]).element.scrollLeft=t.left,t.element.scrollTop=t.top}}var gr=s&&"documentMode"in document&&11>=document.documentMode,hr=null,Cr=null,yr=null,br=!1;function vr(t,e,n){var r=n.window===n?n.document:9===n.nodeType?n:n.ownerDocument;br||null==hr||hr!==H(r)||(r="selectionStart"in(r=hr)&&mr(r)?{start:r.selectionStart,end:r.selectionEnd}:{anchorNode:(r=(r.ownerDocument&&r.ownerDocument.defaultView||window).getSelection()).anchorNode,anchorOffset:r.anchorOffset,focusNode:r.focusNode,focusOffset:r.focusOffset},yr&&cr(yr,r)||(yr=r,0<(r=Vr(Cr,"onSelect")).length&&(e=new sn("onSelect","select",null,e,n),t.push({event:e,listeners:r}),e.target=hr)))}function xr(t,e){var n={};return n[t.toLowerCase()]=e.toLowerCase(),n["Webkit"+t]="webkit"+e,n["Moz"+t]="moz"+e,n}var Er={animationend:xr("Animation","AnimationEnd"),animationiteration:xr("Animation","AnimationIteration"),animationstart:xr("Animation","AnimationStart"),transitionend:xr("Transition","TransitionEnd")},wr={},Br={};function Ir(t){if(wr[t])return wr[t];if(!Er[t])return t;var e,n=Er[t];for(e in n)if(n.hasOwnProperty(e)&&e in Br)return wr[t]=n[e];return t}s&&(Br=document.createElement("div").style,"AnimationEvent"in window||(delete Er.animationend.animation,delete Er.animationiteration.animation,delete Er.animationstart.animation),"TransitionEvent"in window||delete Er.transitionend.transition);var Sr=Ir("animationend"),kr=Ir("animationiteration"),Or=Ir("animationstart"),Jr=Ir("transitionend"),_r=new Map,Pr="abort auxClick cancel canPlay canPlayThrough click close contextMenu copy cut drag dragEnd dragEnter dragExit dragLeave dragOver dragStart drop durationChange emptied encrypted ended error gotPointerCapture input invalid keyDown keyPress keyUp load loadedData loadedMetadata loadStart lostPointerCapture mouseDown mouseMove mouseOut mouseOver mouseUp paste pause play playing pointerCancel pointerDown pointerMove pointerOut pointerOver pointerUp progress rateChange reset resize seeked seeking stalled submit suspend timeUpdate touchCancel touchEnd touchStart volumeChange scroll toggle touchMove waiting wheel".split(" ");function Mr(t,e){_r.set(t,e),c(e,[t])}for(var Nr=0;Nr<Pr.length;Nr++){var jr=Pr[Nr];Mr(jr.toLowerCase(),"on"+(jr[0].toUpperCase()+jr.slice(1)))}Mr(Sr,"onAnimationEnd"),Mr(kr,"onAnimationIteration"),Mr(Or,"onAnimationStart"),Mr("dblclick","onDoubleClick"),Mr("focusin","onFocus"),Mr("focusout","onBlur"),Mr(Jr,"onTransitionEnd"),p("onMouseEnter",["mouseout","mouseover"]),p("onMouseLeave",["mouseout","mouseover"]),p("onPointerEnter",["pointerout","pointerover"]),p("onPointerLeave",["pointerout","pointerover"]),c("onChange","change click focusin focusout input keydown keyup selectionchange".split(" ")),c("onSelect","focusout contextmenu dragend focusin keydown keyup mousedown mouseup selectionchange".split(" ")),c("onBeforeInput",["compositionend","keypress","textInput","paste"]),c("onCompositionEnd","compositionend focusout keydown keypress keyup mousedown".split(" ")),c("onCompositionStart","compositionstart focusout keydown keypress keyup mousedown".split(" ")),c("onCompositionUpdate","compositionupdate focusout keydown keypress keyup mousedown".split(" "));var Tr="abort canplay canplaythrough durationchange emptied encrypted ended error loadeddata loadedmetadata loadstart pause play playing progress ratechange resize seeked seeking stalled suspend timeupdate volumechange waiting".split(" "),$r=new Set("cancel close invalid load scroll toggle".split(" ").concat(Tr));function Ur(t,e,n){var r=t.type||"unknown-event";t.currentTarget=n,function(t,e,n,r,a,o,l,u,c){if(Lt.apply(this,arguments),$t){if(!$t)throw Error(i(198));var p=Ut;$t=!1,Ut=null,zt||(zt=!0,Rt=p)}}(r,e,void 0,t),t.currentTarget=null}function zr(t,e){e=0!=(4&e);for(var n=0;n<t.length;n++){var r=t[n],a=r.event;r=r.listeners;t:{var o=void 0;if(e)for(var i=r.length-1;0<=i;i--){var l=r[i],u=l.instance,c=l.currentTarget;if(l=l.listener,u!==o&&a.isPropagationStopped())break t;Ur(a,l,c),o=u}else for(i=0;i<r.length;i++){if(u=(l=r[i]).instance,c=l.currentTarget,l=l.listener,u!==o&&a.isPropagationStopped())break t;Ur(a,l,c),o=u}}}if(zt)throw t=Rt,zt=!1,Rt=null,t}function Rr(t,e){var n=e[ga];void 0===n&&(n=e[ga]=new Set);var r=t+"__bubble";n.has(r)||(Qr(e,t,2,!1),n.add(r))}function Fr(t,e,n){var r=0;e&&(r|=4),Qr(n,t,r,e)}var Lr="_reactListening"+Math.random().toString(36).slice(2);function Dr(t){if(!t[Lr]){t[Lr]=!0,l.forEach((function(e){"selectionchange"!==e&&($r.has(e)||Fr(e,!1,t),Fr(e,!0,t))}));var e=9===t.nodeType?t:t.ownerDocument;null===e||e[Lr]||(e[Lr]=!0,Fr("selectionchange",!1,e))}}function Qr(t,e,n,r){switch(Ye(e)){case 1:var a=We;break;case 4:a=Ve;break;default:a=qe}n=a.bind(null,e,n,t),a=void 0,!Nt||"touchstart"!==e&&"touchmove"!==e&&"wheel"!==e||(a=!0),r?void 0!==a?t.addEventListener(e,n,{capture:!0,passive:a}):t.addEventListener(e,n,!0):void 0!==a?t.addEventListener(e,n,{passive:a}):t.addEventListener(e,n,!1)}function Gr(t,e,n,r,a){var o=r;if(0==(1&e)&&0==(2&e)&&null!==r)t:for(;;){if(null===r)return;var i=r.tag;if(3===i||4===i){var l=r.stateNode.containerInfo;if(l===a||8===l.nodeType&&l.parentNode===a)break;if(4===i)for(i=r.return;null!==i;){var u=i.tag;if((3===u||4===u)&&((u=i.stateNode.containerInfo)===a||8===u.nodeType&&u.parentNode===a))return;i=i.return}for(;null!==l;){if(null===(i=ya(l)))return;if(5===(u=i.tag)||6===u){r=o=i;continue t}l=l.parentNode}}r=r.return}Pt((function(){var r=o,a=xt(n),i=[];t:{var l=_r.get(t);if(void 0!==l){var u=sn,c=t;switch(t){case"keypress":if(0===nn(n))break t;case"keydown":case"keyup":u=kn;break;case"focusin":c="focus",u=hn;break;case"focusout":c="blur",u=hn;break;case"beforeblur":case"afterblur":u=hn;break;case"click":if(2===n.button)break t;case"auxclick":case"dblclick":case"mousedown":case"mousemove":case"mouseup":case"mouseout":case"mouseover":case"contextmenu":u=dn;break;case"drag":case"dragend":case"dragenter":case"dragexit":case"dragleave":case"dragover":case"dragstart":case"drop":u=gn;break;case"touchcancel":case"touchend":case"touchmove":case"touchstart":u=Jn;break;case Sr:case kr:case Or:u=Cn;break;case Jr:u=_n;break;case"scroll":u=fn;break;case"wheel":u=Mn;break;case"copy":case"cut":case"paste":u=bn;break;case"gotpointercapture":case"lostpointercapture":case"pointercancel":case"pointerdown":case"pointermove":case"pointerout":case"pointerover":case"pointerup":u=On}var p=0!=(4&e),s=!p&&"scroll"===t,A=p?null!==l?l+"Capture":null:l;p=[];for(var f,m=r;null!==m;){var d=(f=m).stateNode;if(5===f.tag&&null!==d&&(f=d,null!==A&&null!=(d=Mt(m,A))&&p.push(Wr(m,d,f))),s)break;m=m.return}0<p.length&&(l=new u(l,c,null,n,a),i.push({event:l,listeners:p}))}}if(0==(7&e)){if(u="mouseout"===t||"pointerout"===t,(!(l="mouseover"===t||"pointerover"===t)||n===vt||!(c=n.relatedTarget||n.fromElement)||!ya(c)&&!c[da])&&(u||l)&&(l=a.window===a?a:(l=a.ownerDocument)?l.defaultView||l.parentWindow:window,u?(u=r,null!==(c=(c=n.relatedTarget||n.toElement)?ya(c):null)&&(c!==(s=Dt(c))||5!==c.tag&&6!==c.tag)&&(c=null)):(u=null,c=r),u!==c)){if(p=dn,d="onMouseLeave",A="onMouseEnter",m="mouse","pointerout"!==t&&"pointerover"!==t||(p=On,d="onPointerLeave",A="onPointerEnter",m="pointer"),s=null==u?l:va(u),f=null==c?l:va(c),(l=new p(d,m+"leave",u,n,a)).target=s,l.relatedTarget=f,d=null,ya(a)===r&&((p=new p(A,m+"enter",c,n,a)).target=f,p.relatedTarget=s,d=p),s=d,u&&c)t:{for(A=c,m=0,f=p=u;f;f=qr(f))m++;for(f=0,d=A;d;d=qr(d))f++;for(;0<m-f;)p=qr(p),m--;for(;0<f-m;)A=qr(A),f--;for(;m--;){if(p===A||null!==A&&p===A.alternate)break t;p=qr(p),A=qr(A)}p=null}else p=null;null!==u&&Hr(i,l,u,p,!1),null!==c&&null!==s&&Hr(i,s,c,p,!0)}if("select"===(u=(l=r?va(r):window).nodeName&&l.nodeName.toLowerCase())||"input"===u&&"file"===l.type)var g=Yn;else if(Gn(l))if(Xn)g=lr;else{g=or;var h=ar}else(u=l.nodeName)&&"input"===u.toLowerCase()&&("checkbox"===l.type||"radio"===l.type)&&(g=ir);switch(g&&(g=g(t,r))?Wn(i,g,n,a):(h&&h(t,l,r),"focusout"===t&&(h=l._wrapperState)&&h.controlled&&"number"===l.type&&et(l,"number",l.value)),h=r?va(r):window,t){case"focusin":(Gn(h)||"true"===h.contentEditable)&&(hr=h,Cr=r,yr=null);break;case"focusout":yr=Cr=hr=null;break;case"mousedown":br=!0;break;case"contextmenu":case"mouseup":case"dragend":br=!1,vr(i,n,a);break;case"selectionchange":if(gr)break;case"keydown":case"keyup":vr(i,n,a)}var C;if(jn)t:{switch(t){case"compositionstart":var y="onCompositionStart";break t;case"compositionend":y="onCompositionEnd";break t;case"compositionupdate":y="onCompositionUpdate";break t}y=void 0}else Dn?Fn(t,n)&&(y="onCompositionEnd"):"keydown"===t&&229===n.keyCode&&(y="onCompositionStart");y&&(Un&&"ko"!==n.locale&&(Dn||"onCompositionStart"!==y?"onCompositionEnd"===y&&Dn&&(C=en()):(Ze="value"in(Xe=a)?Xe.value:Xe.textContent,Dn=!0)),0<(h=Vr(r,y)).length&&(y=new vn(y,t,null,n,a),i.push({event:y,listeners:h}),(C||null!==(C=Ln(n)))&&(y.data=C))),(C=$n?function(t,e){switch(t){case"compositionend":return Ln(e);case"keypress":return 32!==e.which?null:(Rn=!0,zn);case"textInput":return(t=e.data)===zn&&Rn?null:t;default:return null}}(t,n):function(t,e){if(Dn)return"compositionend"===t||!jn&&Fn(t,e)?(t=en(),tn=Ze=Xe=null,Dn=!1,t):null;switch(t){case"paste":default:return null;case"keypress":if(!(e.ctrlKey||e.altKey||e.metaKey)||e.ctrlKey&&e.altKey){if(e.char&&1<e.char.length)return e.char;if(e.which)return String.fromCharCode(e.which)}return null;case"compositionend":return Un&&"ko"!==e.locale?null:e.data}}(t,n))&&0<(r=Vr(r,"onBeforeInput")).length&&(a=new vn("onBeforeInput","beforeinput",null,n,a),i.push({event:a,listeners:r}),a.data=C)}zr(i,e)}))}function Wr(t,e,n){return{instance:t,listener:e,currentTarget:n}}function Vr(t,e){for(var n=e+"Capture",r=[];null!==t;){var a=t,o=a.stateNode;5===a.tag&&null!==o&&(a=o,null!=(o=Mt(t,n))&&r.unshift(Wr(t,o,a)),null!=(o=Mt(t,e))&&r.push(Wr(t,o,a))),t=t.return}return r}function qr(t){if(null===t)return null;do{t=t.return}while(t&&5!==t.tag);return t||null}function Hr(t,e,n,r,a){for(var o=e._reactName,i=[];null!==n&&n!==r;){var l=n,u=l.alternate,c=l.stateNode;if(null!==u&&u===r)break;5===l.tag&&null!==c&&(l=c,a?null!=(u=Mt(n,o))&&i.unshift(Wr(n,u,l)):a||null!=(u=Mt(n,o))&&i.push(Wr(n,u,l))),n=n.return}0!==i.length&&t.push({event:e,listeners:i})}var Kr=/\r\n?/g,Yr=/\u0000|\uFFFD/g;function Xr(t){return("string"==typeof t?t:""+t).replace(Kr,"\n").replace(Yr,"")}function Zr(t,e,n){if(e=Xr(e),Xr(t)!==e&&n)throw Error(i(425))}function ta(){}var ea=null,na=null;function ra(t,e){return"textarea"===t||"noscript"===t||"string"==typeof e.children||"number"==typeof e.children||"object"==typeof e.dangerouslySetInnerHTML&&null!==e.dangerouslySetInnerHTML&&null!=e.dangerouslySetInnerHTML.__html}var aa="function"==typeof setTimeout?setTimeout:void 0,oa="function"==typeof clearTimeout?clearTimeout:void 0,ia="function"==typeof Promise?Promise:void 0,la="function"==typeof queueMicrotask?queueMicrotask:void 0!==ia?function(t){return ia.resolve(null).then(t).catch(ua)}:aa;function ua(t){setTimeout((function(){throw t}))}function ca(t,e){var n=e,r=0;do{var a=n.nextSibling;if(t.removeChild(n),a&&8===a.nodeType)if("/$"===(n=a.data)){if(0===r)return t.removeChild(a),void De(e);r--}else"$"!==n&&"$?"!==n&&"$!"!==n||r++;n=a}while(n);De(e)}function pa(t){for(;null!=t;t=t.nextSibling){var e=t.nodeType;if(1===e||3===e)break;if(8===e){if("$"===(e=t.data)||"$!"===e||"$?"===e)break;if("/$"===e)return null}}return t}function sa(t){t=t.previousSibling;for(var e=0;t;){if(8===t.nodeType){var n=t.data;if("$"===n||"$!"===n||"$?"===n){if(0===e)return t;e--}else"/$"===n&&e++}t=t.previousSibling}return null}var Aa=Math.random().toString(36).slice(2),fa="__reactFiber$"+Aa,ma="__reactProps$"+Aa,da="__reactContainer$"+Aa,ga="__reactEvents$"+Aa,ha="__reactListeners$"+Aa,Ca="__reactHandles$"+Aa;function ya(t){var e=t[fa];if(e)return e;for(var n=t.parentNode;n;){if(e=n[da]||n[fa]){if(n=e.alternate,null!==e.child||null!==n&&null!==n.child)for(t=sa(t);null!==t;){if(n=t[fa])return n;t=sa(t)}return e}n=(t=n).parentNode}return null}function ba(t){return!(t=t[fa]||t[da])||5!==t.tag&&6!==t.tag&&13!==t.tag&&3!==t.tag?null:t}function va(t){if(5===t.tag||6===t.tag)return t.stateNode;throw Error(i(33))}function xa(t){return t[ma]||null}var Ea=[],wa=-1;function Ba(t){return{current:t}}function Ia(t){0>wa||(t.current=Ea[wa],Ea[wa]=null,wa--)}function Sa(t,e){wa++,Ea[wa]=t.current,t.current=e}var ka={},Oa=Ba(ka),Ja=Ba(!1),_a=ka;function Pa(t,e){var n=t.type.contextTypes;if(!n)return ka;var r=t.stateNode;if(r&&r.__reactInternalMemoizedUnmaskedChildContext===e)return r.__reactInternalMemoizedMaskedChildContext;var a,o={};for(a in n)o[a]=e[a];return r&&((t=t.stateNode).__reactInternalMemoizedUnmaskedChildContext=e,t.__reactInternalMemoizedMaskedChildContext=o),o}function Ma(t){return null!=t.childContextTypes}function Na(){Ia(Ja),Ia(Oa)}function ja(t,e,n){if(Oa.current!==ka)throw Error(i(168));Sa(Oa,e),Sa(Ja,n)}function Ta(t,e,n){var r=t.stateNode;if(e=e.childContextTypes,"function"!=typeof r.getChildContext)return n;for(var a in r=r.getChildContext())if(!(a in e))throw Error(i(108,Q(t)||"Unknown",a));return U({},n,r)}function $a(t){return t=(t=t.stateNode)&&t.__reactInternalMemoizedMergedChildContext||ka,_a=Oa.current,Sa(Oa,t),Sa(Ja,Ja.current),!0}function Ua(t,e,n){var r=t.stateNode;if(!r)throw Error(i(169));n?(t=Ta(t,e,_a),r.__reactInternalMemoizedMergedChildContext=t,Ia(Ja),Ia(Oa),Sa(Oa,t)):Ia(Ja),Sa(Ja,n)}var za=null,Ra=!1,Fa=!1;function La(t){null===za?za=[t]:za.push(t)}function Da(){if(!Fa&&null!==za){Fa=!0;var t=0,e=be;try{var n=za;for(be=1;t<n.length;t++){var r=n[t];do{r=r(!0)}while(null!==r)}za=null,Ra=!1}catch(e){throw null!==za&&(za=za.slice(t+1)),qt(te,Da),e}finally{be=e,Fa=!1}}return null}var Qa=[],Ga=0,Wa=null,Va=0,qa=[],Ha=0,Ka=null,Ya=1,Xa="";function Za(t,e){Qa[Ga++]=Va,Qa[Ga++]=Wa,Wa=t,Va=e}function to(t,e,n){qa[Ha++]=Ya,qa[Ha++]=Xa,qa[Ha++]=Ka,Ka=t;var r=Ya;t=Xa;var a=32-le(r)-1;r&=~(1<<a),n+=1;var o=32-le(e)+a;if(30<o){var i=a-a%5;o=(r&(1<<i)-1).toString(32),r>>=i,a-=i,Ya=1<<32-le(e)+a|n<<a|r,Xa=o+t}else Ya=1<<o|n<<a|r,Xa=t}function eo(t){null!==t.return&&(Za(t,1),to(t,1,0))}function no(t){for(;t===Wa;)Wa=Qa[--Ga],Qa[Ga]=null,Va=Qa[--Ga],Qa[Ga]=null;for(;t===Ka;)Ka=qa[--Ha],qa[Ha]=null,Xa=qa[--Ha],qa[Ha]=null,Ya=qa[--Ha],qa[Ha]=null}var ro=null,ao=null,oo=!1,io=null;function lo(t,e){var n=Pc(5,null,null,0);n.elementType="DELETED",n.stateNode=e,n.return=t,null===(e=t.deletions)?(t.deletions=[n],t.flags|=16):e.push(n)}function uo(t,e){switch(t.tag){case 5:var n=t.type;return null!==(e=1!==e.nodeType||n.toLowerCase()!==e.nodeName.toLowerCase()?null:e)&&(t.stateNode=e,ro=t,ao=pa(e.firstChild),!0);case 6:return null!==(e=""===t.pendingProps||3!==e.nodeType?null:e)&&(t.stateNode=e,ro=t,ao=null,!0);case 13:return null!==(e=8!==e.nodeType?null:e)&&(n=null!==Ka?{id:Ya,overflow:Xa}:null,t.memoizedState={dehydrated:e,treeContext:n,retryLane:1073741824},(n=Pc(18,null,null,0)).stateNode=e,n.return=t,t.child=n,ro=t,ao=null,!0);default:return!1}}function co(t){return 0!=(1&t.mode)&&0==(128&t.flags)}function po(t){if(oo){var e=ao;if(e){var n=e;if(!uo(t,e)){if(co(t))throw Error(i(418));e=pa(n.nextSibling);var r=ro;e&&uo(t,e)?lo(r,n):(t.flags=-4097&t.flags|2,oo=!1,ro=t)}}else{if(co(t))throw Error(i(418));t.flags=-4097&t.flags|2,oo=!1,ro=t}}}function so(t){for(t=t.return;null!==t&&5!==t.tag&&3!==t.tag&&13!==t.tag;)t=t.return;ro=t}function Ao(t){if(t!==ro)return!1;if(!oo)return so(t),oo=!0,!1;var e;if((e=3!==t.tag)&&!(e=5!==t.tag)&&(e="head"!==(e=t.type)&&"body"!==e&&!ra(t.type,t.memoizedProps)),e&&(e=ao)){if(co(t))throw fo(),Error(i(418));for(;e;)lo(t,e),e=pa(e.nextSibling)}if(so(t),13===t.tag){if(!(t=null!==(t=t.memoizedState)?t.dehydrated:null))throw Error(i(317));t:{for(t=t.nextSibling,e=0;t;){if(8===t.nodeType){var n=t.data;if("/$"===n){if(0===e){ao=pa(t.nextSibling);break t}e--}else"$"!==n&&"$!"!==n&&"$?"!==n||e++}t=t.nextSibling}ao=null}}else ao=ro?pa(t.stateNode.nextSibling):null;return!0}function fo(){for(var t=ao;t;)t=pa(t.nextSibling)}function mo(){ao=ro=null,oo=!1}function go(t){null===io?io=[t]:io.push(t)}var ho=v.ReactCurrentBatchConfig;function Co(t,e){if(t&&t.defaultProps){for(var n in e=U({},e),t=t.defaultProps)void 0===e[n]&&(e[n]=t[n]);return e}return e}var yo=Ba(null),bo=null,vo=null,xo=null;function Eo(){xo=vo=bo=null}function wo(t){var e=yo.current;Ia(yo),t._currentValue=e}function Bo(t,e,n){for(;null!==t;){var r=t.alternate;if((t.childLanes&e)!==e?(t.childLanes|=e,null!==r&&(r.childLanes|=e)):null!==r&&(r.childLanes&e)!==e&&(r.childLanes|=e),t===n)break;t=t.return}}function Io(t,e){bo=t,xo=vo=null,null!==(t=t.dependencies)&&null!==t.firstContext&&(0!=(t.lanes&e)&&(vl=!0),t.firstContext=null)}function So(t){var e=t._currentValue;if(xo!==t)if(t={context:t,memoizedValue:e,next:null},null===vo){if(null===bo)throw Error(i(308));vo=t,bo.dependencies={lanes:0,firstContext:t}}else vo=vo.next=t;return e}var ko=null;function Oo(t){null===ko?ko=[t]:ko.push(t)}function Jo(t,e,n,r){var a=e.interleaved;return null===a?(n.next=n,Oo(e)):(n.next=a.next,a.next=n),e.interleaved=n,_o(t,r)}function _o(t,e){t.lanes|=e;var n=t.alternate;for(null!==n&&(n.lanes|=e),n=t,t=t.return;null!==t;)t.childLanes|=e,null!==(n=t.alternate)&&(n.childLanes|=e),n=t,t=t.return;return 3===n.tag?n.stateNode:null}var Po=!1;function Mo(t){t.updateQueue={baseState:t.memoizedState,firstBaseUpdate:null,lastBaseUpdate:null,shared:{pending:null,interleaved:null,lanes:0},effects:null}}function No(t,e){t=t.updateQueue,e.updateQueue===t&&(e.updateQueue={baseState:t.baseState,firstBaseUpdate:t.firstBaseUpdate,lastBaseUpdate:t.lastBaseUpdate,shared:t.shared,effects:t.effects})}function jo(t,e){return{eventTime:t,lane:e,tag:0,payload:null,callback:null,next:null}}function To(t,e,n){var r=t.updateQueue;if(null===r)return null;if(r=r.shared,0!=(2&Ou)){var a=r.pending;return null===a?e.next=e:(e.next=a.next,a.next=e),r.pending=e,_o(t,n)}return null===(a=r.interleaved)?(e.next=e,Oo(r)):(e.next=a.next,a.next=e),r.interleaved=e,_o(t,n)}function $o(t,e,n){if(null!==(e=e.updateQueue)&&(e=e.shared,0!=(4194240&n))){var r=e.lanes;n|=r&=t.pendingLanes,e.lanes=n,ye(t,n)}}function Uo(t,e){var n=t.updateQueue,r=t.alternate;if(null!==r&&n===(r=r.updateQueue)){var a=null,o=null;if(null!==(n=n.firstBaseUpdate)){do{var i={eventTime:n.eventTime,lane:n.lane,tag:n.tag,payload:n.payload,callback:n.callback,next:null};null===o?a=o=i:o=o.next=i,n=n.next}while(null!==n);null===o?a=o=e:o=o.next=e}else a=o=e;return n={baseState:r.baseState,firstBaseUpdate:a,lastBaseUpdate:o,shared:r.shared,effects:r.effects},void(t.updateQueue=n)}null===(t=n.lastBaseUpdate)?n.firstBaseUpdate=e:t.next=e,n.lastBaseUpdate=e}function zo(t,e,n,r){var a=t.updateQueue;Po=!1;var o=a.firstBaseUpdate,i=a.lastBaseUpdate,l=a.shared.pending;if(null!==l){a.shared.pending=null;var u=l,c=u.next;u.next=null,null===i?o=c:i.next=c,i=u;var p=t.alternate;null!==p&&(l=(p=p.updateQueue).lastBaseUpdate)!==i&&(null===l?p.firstBaseUpdate=c:l.next=c,p.lastBaseUpdate=u)}if(null!==o){var s=a.baseState;for(i=0,p=c=u=null,l=o;;){var A=l.lane,f=l.eventTime;if((r&A)===A){null!==p&&(p=p.next={eventTime:f,lane:0,tag:l.tag,payload:l.payload,callback:l.callback,next:null});t:{var m=t,d=l;switch(A=e,f=n,d.tag){case 1:if("function"==typeof(m=d.payload)){s=m.call(f,s,A);break t}s=m;break t;case 3:m.flags=-65537&m.flags|128;case 0:if(null==(A="function"==typeof(m=d.payload)?m.call(f,s,A):m))break t;s=U({},s,A);break t;case 2:Po=!0}}null!==l.callback&&0!==l.lane&&(t.flags|=64,null===(A=a.effects)?a.effects=[l]:A.push(l))}else f={eventTime:f,lane:A,tag:l.tag,payload:l.payload,callback:l.callback,next:null},null===p?(c=p=f,u=s):p=p.next=f,i|=A;if(null===(l=l.next)){if(null===(l=a.shared.pending))break;l=(A=l).next,A.next=null,a.lastBaseUpdate=A,a.shared.pending=null}}if(null===p&&(u=s),a.baseState=u,a.firstBaseUpdate=c,a.lastBaseUpdate=p,null!==(e=a.shared.interleaved)){a=e;do{i|=a.lane,a=a.next}while(a!==e)}else null===o&&(a.shared.lanes=0);$u|=i,t.lanes=i,t.memoizedState=s}}function Ro(t,e,n){if(t=e.effects,e.effects=null,null!==t)for(e=0;e<t.length;e++){var r=t[e],a=r.callback;if(null!==a){if(r.callback=null,r=n,"function"!=typeof a)throw Error(i(191,a));a.call(r)}}}var Fo=(new a.Component).refs;function Lo(t,e,n,r){n=null==(n=n(r,e=t.memoizedState))?e:U({},e,n),t.memoizedState=n,0===t.lanes&&(t.updateQueue.baseState=n)}var Do={isMounted:function(t){return!!(t=t._reactInternals)&&Dt(t)===t},enqueueSetState:function(t,e,n){t=t._reactInternals;var r=ec(),a=nc(t),o=jo(r,a);o.payload=e,null!=n&&(o.callback=n),null!==(e=To(t,o,a))&&(rc(e,t,a,r),$o(e,t,a))},enqueueReplaceState:function(t,e,n){t=t._reactInternals;var r=ec(),a=nc(t),o=jo(r,a);o.tag=1,o.payload=e,null!=n&&(o.callback=n),null!==(e=To(t,o,a))&&(rc(e,t,a,r),$o(e,t,a))},enqueueForceUpdate:function(t,e){t=t._reactInternals;var n=ec(),r=nc(t),a=jo(n,r);a.tag=2,null!=e&&(a.callback=e),null!==(e=To(t,a,r))&&(rc(e,t,r,n),$o(e,t,r))}};function Qo(t,e,n,r,a,o,i){return"function"==typeof(t=t.stateNode).shouldComponentUpdate?t.shouldComponentUpdate(r,o,i):!(e.prototype&&e.prototype.isPureReactComponent&&cr(n,r)&&cr(a,o))}function Go(t,e,n){var r=!1,a=ka,o=e.contextType;return"object"==typeof o&&null!==o?o=So(o):(a=Ma(e)?_a:Oa.current,o=(r=null!=(r=e.contextTypes))?Pa(t,a):ka),e=new e(n,o),t.memoizedState=null!==e.state&&void 0!==e.state?e.state:null,e.updater=Do,t.stateNode=e,e._reactInternals=t,r&&((t=t.stateNode).__reactInternalMemoizedUnmaskedChildContext=a,t.__reactInternalMemoizedMaskedChildContext=o),e}function Wo(t,e,n,r){t=e.state,"function"==typeof e.componentWillReceiveProps&&e.componentWillReceiveProps(n,r),"function"==typeof e.UNSAFE_componentWillReceiveProps&&e.UNSAFE_componentWillReceiveProps(n,r),e.state!==t&&Do.enqueueReplaceState(e,e.state,null)}function Vo(t,e,n,r){var a=t.stateNode;a.props=n,a.state=t.memoizedState,a.refs=Fo,Mo(t);var o=e.contextType;"object"==typeof o&&null!==o?a.context=So(o):(o=Ma(e)?_a:Oa.current,a.context=Pa(t,o)),a.state=t.memoizedState,"function"==typeof(o=e.getDerivedStateFromProps)&&(Lo(t,e,o,n),a.state=t.memoizedState),"function"==typeof e.getDerivedStateFromProps||"function"==typeof a.getSnapshotBeforeUpdate||"function"!=typeof a.UNSAFE_componentWillMount&&"function"!=typeof a.componentWillMount||(e=a.state,"function"==typeof a.componentWillMount&&a.componentWillMount(),"function"==typeof a.UNSAFE_componentWillMount&&a.UNSAFE_componentWillMount(),e!==a.state&&Do.enqueueReplaceState(a,a.state,null),zo(t,n,a,r),a.state=t.memoizedState),"function"==typeof a.componentDidMount&&(t.flags|=4194308)}function qo(t,e,n){if(null!==(t=n.ref)&&"function"!=typeof t&&"object"!=typeof t){if(n._owner){if(n=n._owner){if(1!==n.tag)throw Error(i(309));var r=n.stateNode}if(!r)throw Error(i(147,t));var a=r,o=""+t;return null!==e&&null!==e.ref&&"function"==typeof e.ref&&e.ref._stringRef===o?e.ref:(e=function(t){var e=a.refs;e===Fo&&(e=a.refs={}),null===t?delete e[o]:e[o]=t},e._stringRef=o,e)}if("string"!=typeof t)throw Error(i(284));if(!n._owner)throw Error(i(290,t))}return t}function Ho(t,e){throw t=Object.prototype.toString.call(e),Error(i(31,"[object Object]"===t?"object with keys {"+Object.keys(e).join(", ")+"}":t))}function Ko(t){return(0,t._init)(t._payload)}function Yo(t){function e(e,n){if(t){var r=e.deletions;null===r?(e.deletions=[n],e.flags|=16):r.push(n)}}function n(n,r){if(!t)return null;for(;null!==r;)e(n,r),r=r.sibling;return null}function r(t,e){for(t=new Map;null!==e;)null!==e.key?t.set(e.key,e):t.set(e.index,e),e=e.sibling;return t}function a(t,e){return(t=Nc(t,e)).index=0,t.sibling=null,t}function o(e,n,r){return e.index=r,t?null!==(r=e.alternate)?(r=r.index)<n?(e.flags|=2,n):r:(e.flags|=2,n):(e.flags|=1048576,n)}function l(e){return t&&null===e.alternate&&(e.flags|=2),e}function u(t,e,n,r){return null===e||6!==e.tag?((e=Uc(n,t.mode,r)).return=t,e):((e=a(e,n)).return=t,e)}function c(t,e,n,r){var o=n.type;return o===w?s(t,e,n.props.children,r,n.key):null!==e&&(e.elementType===o||"object"==typeof o&&null!==o&&o.$$typeof===M&&Ko(o)===e.type)?((r=a(e,n.props)).ref=qo(t,e,n),r.return=t,r):((r=jc(n.type,n.key,n.props,null,t.mode,r)).ref=qo(t,e,n),r.return=t,r)}function p(t,e,n,r){return null===e||4!==e.tag||e.stateNode.containerInfo!==n.containerInfo||e.stateNode.implementation!==n.implementation?((e=zc(n,t.mode,r)).return=t,e):((e=a(e,n.children||[])).return=t,e)}function s(t,e,n,r,o){return null===e||7!==e.tag?((e=Tc(n,t.mode,r,o)).return=t,e):((e=a(e,n)).return=t,e)}function A(t,e,n){if("string"==typeof e&&""!==e||"number"==typeof e)return(e=Uc(""+e,t.mode,n)).return=t,e;if("object"==typeof e&&null!==e){switch(e.$$typeof){case x:return(n=jc(e.type,e.key,e.props,null,t.mode,n)).ref=qo(t,null,e),n.return=t,n;case E:return(e=zc(e,t.mode,n)).return=t,e;case M:return A(t,(0,e._init)(e._payload),n)}if(nt(e)||T(e))return(e=Tc(e,t.mode,n,null)).return=t,e;Ho(t,e)}return null}function f(t,e,n,r){var a=null!==e?e.key:null;if("string"==typeof n&&""!==n||"number"==typeof n)return null!==a?null:u(t,e,""+n,r);if("object"==typeof n&&null!==n){switch(n.$$typeof){case x:return n.key===a?c(t,e,n,r):null;case E:return n.key===a?p(t,e,n,r):null;case M:return f(t,e,(a=n._init)(n._payload),r)}if(nt(n)||T(n))return null!==a?null:s(t,e,n,r,null);Ho(t,n)}return null}function m(t,e,n,r,a){if("string"==typeof r&&""!==r||"number"==typeof r)return u(e,t=t.get(n)||null,""+r,a);if("object"==typeof r&&null!==r){switch(r.$$typeof){case x:return c(e,t=t.get(null===r.key?n:r.key)||null,r,a);case E:return p(e,t=t.get(null===r.key?n:r.key)||null,r,a);case M:return m(t,e,n,(0,r._init)(r._payload),a)}if(nt(r)||T(r))return s(e,t=t.get(n)||null,r,a,null);Ho(e,r)}return null}function d(a,i,l,u){for(var c=null,p=null,s=i,d=i=0,g=null;null!==s&&d<l.length;d++){s.index>d?(g=s,s=null):g=s.sibling;var h=f(a,s,l[d],u);if(null===h){null===s&&(s=g);break}t&&s&&null===h.alternate&&e(a,s),i=o(h,i,d),null===p?c=h:p.sibling=h,p=h,s=g}if(d===l.length)return n(a,s),oo&&Za(a,d),c;if(null===s){for(;d<l.length;d++)null!==(s=A(a,l[d],u))&&(i=o(s,i,d),null===p?c=s:p.sibling=s,p=s);return oo&&Za(a,d),c}for(s=r(a,s);d<l.length;d++)null!==(g=m(s,a,d,l[d],u))&&(t&&null!==g.alternate&&s.delete(null===g.key?d:g.key),i=o(g,i,d),null===p?c=g:p.sibling=g,p=g);return t&&s.forEach((function(t){return e(a,t)})),oo&&Za(a,d),c}function g(a,l,u,c){var p=T(u);if("function"!=typeof p)throw Error(i(150));if(null==(u=p.call(u)))throw Error(i(151));for(var s=p=null,d=l,g=l=0,h=null,C=u.next();null!==d&&!C.done;g++,C=u.next()){d.index>g?(h=d,d=null):h=d.sibling;var y=f(a,d,C.value,c);if(null===y){null===d&&(d=h);break}t&&d&&null===y.alternate&&e(a,d),l=o(y,l,g),null===s?p=y:s.sibling=y,s=y,d=h}if(C.done)return n(a,d),oo&&Za(a,g),p;if(null===d){for(;!C.done;g++,C=u.next())null!==(C=A(a,C.value,c))&&(l=o(C,l,g),null===s?p=C:s.sibling=C,s=C);return oo&&Za(a,g),p}for(d=r(a,d);!C.done;g++,C=u.next())null!==(C=m(d,a,g,C.value,c))&&(t&&null!==C.alternate&&d.delete(null===C.key?g:C.key),l=o(C,l,g),null===s?p=C:s.sibling=C,s=C);return t&&d.forEach((function(t){return e(a,t)})),oo&&Za(a,g),p}return function t(r,o,i,u){if("object"==typeof i&&null!==i&&i.type===w&&null===i.key&&(i=i.props.children),"object"==typeof i&&null!==i){switch(i.$$typeof){case x:t:{for(var c=i.key,p=o;null!==p;){if(p.key===c){if((c=i.type)===w){if(7===p.tag){n(r,p.sibling),(o=a(p,i.props.children)).return=r,r=o;break t}}else if(p.elementType===c||"object"==typeof c&&null!==c&&c.$$typeof===M&&Ko(c)===p.type){n(r,p.sibling),(o=a(p,i.props)).ref=qo(r,p,i),o.return=r,r=o;break t}n(r,p);break}e(r,p),p=p.sibling}i.type===w?((o=Tc(i.props.children,r.mode,u,i.key)).return=r,r=o):((u=jc(i.type,i.key,i.props,null,r.mode,u)).ref=qo(r,o,i),u.return=r,r=u)}return l(r);case E:t:{for(p=i.key;null!==o;){if(o.key===p){if(4===o.tag&&o.stateNode.containerInfo===i.containerInfo&&o.stateNode.implementation===i.implementation){n(r,o.sibling),(o=a(o,i.children||[])).return=r,r=o;break t}n(r,o);break}e(r,o),o=o.sibling}(o=zc(i,r.mode,u)).return=r,r=o}return l(r);case M:return t(r,o,(p=i._init)(i._payload),u)}if(nt(i))return d(r,o,i,u);if(T(i))return g(r,o,i,u);Ho(r,i)}return"string"==typeof i&&""!==i||"number"==typeof i?(i=""+i,null!==o&&6===o.tag?(n(r,o.sibling),(o=a(o,i)).return=r,r=o):(n(r,o),(o=Uc(i,r.mode,u)).return=r,r=o),l(r)):n(r,o)}}var Xo=Yo(!0),Zo=Yo(!1),ti={},ei=Ba(ti),ni=Ba(ti),ri=Ba(ti);function ai(t){if(t===ti)throw Error(i(174));return t}function oi(t,e){switch(Sa(ri,e),Sa(ni,t),Sa(ei,ti),t=e.nodeType){case 9:case 11:e=(e=e.documentElement)?e.namespaceURI:ct(null,"");break;default:e=ct(e=(t=8===t?e.parentNode:e).namespaceURI||null,t=t.tagName)}Ia(ei),Sa(ei,e)}function ii(){Ia(ei),Ia(ni),Ia(ri)}function li(t){ai(ri.current);var e=ai(ei.current),n=ct(e,t.type);e!==n&&(Sa(ni,t),Sa(ei,n))}function ui(t){ni.current===t&&(Ia(ei),Ia(ni))}var ci=Ba(0);function pi(t){for(var e=t;null!==e;){if(13===e.tag){var n=e.memoizedState;if(null!==n&&(null===(n=n.dehydrated)||"$?"===n.data||"$!"===n.data))return e}else if(19===e.tag&&void 0!==e.memoizedProps.revealOrder){if(0!=(128&e.flags))return e}else if(null!==e.child){e.child.return=e,e=e.child;continue}if(e===t)break;for(;null===e.sibling;){if(null===e.return||e.return===t)return null;e=e.return}e.sibling.return=e.return,e=e.sibling}return null}var si=[];function Ai(){for(var t=0;t<si.length;t++)si[t]._workInProgressVersionPrimary=null;si.length=0}var fi=v.ReactCurrentDispatcher,mi=v.ReactCurrentBatchConfig,di=0,gi=null,hi=null,Ci=null,yi=!1,bi=!1,vi=0,xi=0;function Ei(){throw Error(i(321))}function wi(t,e){if(null===e)return!1;for(var n=0;n<e.length&&n<t.length;n++)if(!ur(t[n],e[n]))return!1;return!0}function Bi(t,e,n,r,a,o){if(di=o,gi=e,e.memoizedState=null,e.updateQueue=null,e.lanes=0,fi.current=null===t||null===t.memoizedState?ul:cl,t=n(r,a),bi){o=0;do{if(bi=!1,vi=0,25<=o)throw Error(i(301));o+=1,Ci=hi=null,e.updateQueue=null,fi.current=pl,t=n(r,a)}while(bi)}if(fi.current=ll,e=null!==hi&&null!==hi.next,di=0,Ci=hi=gi=null,yi=!1,e)throw Error(i(300));return t}function Ii(){var t=0!==vi;return vi=0,t}function Si(){var t={memoizedState:null,baseState:null,baseQueue:null,queue:null,next:null};return null===Ci?gi.memoizedState=Ci=t:Ci=Ci.next=t,Ci}function ki(){if(null===hi){var t=gi.alternate;t=null!==t?t.memoizedState:null}else t=hi.next;var e=null===Ci?gi.memoizedState:Ci.next;if(null!==e)Ci=e,hi=t;else{if(null===t)throw Error(i(310));t={memoizedState:(hi=t).memoizedState,baseState:hi.baseState,baseQueue:hi.baseQueue,queue:hi.queue,next:null},null===Ci?gi.memoizedState=Ci=t:Ci=Ci.next=t}return Ci}function Oi(t,e){return"function"==typeof e?e(t):e}function Ji(t){var e=ki(),n=e.queue;if(null===n)throw Error(i(311));n.lastRenderedReducer=t;var r=hi,a=r.baseQueue,o=n.pending;if(null!==o){if(null!==a){var l=a.next;a.next=o.next,o.next=l}r.baseQueue=a=o,n.pending=null}if(null!==a){o=a.next,r=r.baseState;var u=l=null,c=null,p=o;do{var s=p.lane;if((di&s)===s)null!==c&&(c=c.next={lane:0,action:p.action,hasEagerState:p.hasEagerState,eagerState:p.eagerState,next:null}),r=p.hasEagerState?p.eagerState:t(r,p.action);else{var A={lane:s,action:p.action,hasEagerState:p.hasEagerState,eagerState:p.eagerState,next:null};null===c?(u=c=A,l=r):c=c.next=A,gi.lanes|=s,$u|=s}p=p.next}while(null!==p&&p!==o);null===c?l=r:c.next=u,ur(r,e.memoizedState)||(vl=!0),e.memoizedState=r,e.baseState=l,e.baseQueue=c,n.lastRenderedState=r}if(null!==(t=n.interleaved)){a=t;do{o=a.lane,gi.lanes|=o,$u|=o,a=a.next}while(a!==t)}else null===a&&(n.lanes=0);return[e.memoizedState,n.dispatch]}function _i(t){var e=ki(),n=e.queue;if(null===n)throw Error(i(311));n.lastRenderedReducer=t;var r=n.dispatch,a=n.pending,o=e.memoizedState;if(null!==a){n.pending=null;var l=a=a.next;do{o=t(o,l.action),l=l.next}while(l!==a);ur(o,e.memoizedState)||(vl=!0),e.memoizedState=o,null===e.baseQueue&&(e.baseState=o),n.lastRenderedState=o}return[o,r]}function Pi(){}function Mi(t,e){var n=gi,r=ki(),a=e(),o=!ur(r.memoizedState,a);if(o&&(r.memoizedState=a,vl=!0),r=r.queue,Gi(Ti.bind(null,n,r,t),[t]),r.getSnapshot!==e||o||null!==Ci&&1&Ci.memoizedState.tag){if(n.flags|=2048,Ri(9,ji.bind(null,n,r,a,e),void 0,null),null===Ju)throw Error(i(349));0!=(30&di)||Ni(n,e,a)}return a}function Ni(t,e,n){t.flags|=16384,t={getSnapshot:e,value:n},null===(e=gi.updateQueue)?(e={lastEffect:null,stores:null},gi.updateQueue=e,e.stores=[t]):null===(n=e.stores)?e.stores=[t]:n.push(t)}function ji(t,e,n,r){e.value=n,e.getSnapshot=r,$i(e)&&Ui(t)}function Ti(t,e,n){return n((function(){$i(e)&&Ui(t)}))}function $i(t){var e=t.getSnapshot;t=t.value;try{var n=e();return!ur(t,n)}catch(t){return!0}}function Ui(t){var e=_o(t,1);null!==e&&rc(e,t,1,-1)}function zi(t){var e=Si();return"function"==typeof t&&(t=t()),e.memoizedState=e.baseState=t,t={pending:null,interleaved:null,lanes:0,dispatch:null,lastRenderedReducer:Oi,lastRenderedState:t},e.queue=t,t=t.dispatch=rl.bind(null,gi,t),[e.memoizedState,t]}function Ri(t,e,n,r){return t={tag:t,create:e,destroy:n,deps:r,next:null},null===(e=gi.updateQueue)?(e={lastEffect:null,stores:null},gi.updateQueue=e,e.lastEffect=t.next=t):null===(n=e.lastEffect)?e.lastEffect=t.next=t:(r=n.next,n.next=t,t.next=r,e.lastEffect=t),t}function Fi(){return ki().memoizedState}function Li(t,e,n,r){var a=Si();gi.flags|=t,a.memoizedState=Ri(1|e,n,void 0,void 0===r?null:r)}function Di(t,e,n,r){var a=ki();r=void 0===r?null:r;var o=void 0;if(null!==hi){var i=hi.memoizedState;if(o=i.destroy,null!==r&&wi(r,i.deps))return void(a.memoizedState=Ri(e,n,o,r))}gi.flags|=t,a.memoizedState=Ri(1|e,n,o,r)}function Qi(t,e){return Li(8390656,8,t,e)}function Gi(t,e){return Di(2048,8,t,e)}function Wi(t,e){return Di(4,2,t,e)}function Vi(t,e){return Di(4,4,t,e)}function qi(t,e){return"function"==typeof e?(t=t(),e(t),function(){e(null)}):null!=e?(t=t(),e.current=t,function(){e.current=null}):void 0}function Hi(t,e,n){return n=null!=n?n.concat([t]):null,Di(4,4,qi.bind(null,e,t),n)}function Ki(){}function Yi(t,e){var n=ki();e=void 0===e?null:e;var r=n.memoizedState;return null!==r&&null!==e&&wi(e,r[1])?r[0]:(n.memoizedState=[t,e],t)}function Xi(t,e){var n=ki();e=void 0===e?null:e;var r=n.memoizedState;return null!==r&&null!==e&&wi(e,r[1])?r[0]:(t=t(),n.memoizedState=[t,e],t)}function Zi(t,e,n){return 0==(21&di)?(t.baseState&&(t.baseState=!1,vl=!0),t.memoizedState=n):(ur(n,e)||(n=ge(),gi.lanes|=n,$u|=n,t.baseState=!0),e)}function tl(t,e){var n=be;be=0!==n&&4>n?n:4,t(!0);var r=mi.transition;mi.transition={};try{t(!1),e()}finally{be=n,mi.transition=r}}function el(){return ki().memoizedState}function nl(t,e,n){var r=nc(t);n={lane:r,action:n,hasEagerState:!1,eagerState:null,next:null},al(t)?ol(e,n):null!==(n=Jo(t,e,n,r))&&(rc(n,t,r,ec()),il(n,e,r))}function rl(t,e,n){var r=nc(t),a={lane:r,action:n,hasEagerState:!1,eagerState:null,next:null};if(al(t))ol(e,a);else{var o=t.alternate;if(0===t.lanes&&(null===o||0===o.lanes)&&null!==(o=e.lastRenderedReducer))try{var i=e.lastRenderedState,l=o(i,n);if(a.hasEagerState=!0,a.eagerState=l,ur(l,i)){var u=e.interleaved;return null===u?(a.next=a,Oo(e)):(a.next=u.next,u.next=a),void(e.interleaved=a)}}catch(t){}null!==(n=Jo(t,e,a,r))&&(rc(n,t,r,a=ec()),il(n,e,r))}}function al(t){var e=t.alternate;return t===gi||null!==e&&e===gi}function ol(t,e){bi=yi=!0;var n=t.pending;null===n?e.next=e:(e.next=n.next,n.next=e),t.pending=e}function il(t,e,n){if(0!=(4194240&n)){var r=e.lanes;n|=r&=t.pendingLanes,e.lanes=n,ye(t,n)}}var ll={readContext:So,useCallback:Ei,useContext:Ei,useEffect:Ei,useImperativeHandle:Ei,useInsertionEffect:Ei,useLayoutEffect:Ei,useMemo:Ei,useReducer:Ei,useRef:Ei,useState:Ei,useDebugValue:Ei,useDeferredValue:Ei,useTransition:Ei,useMutableSource:Ei,useSyncExternalStore:Ei,useId:Ei,unstable_isNewReconciler:!1},ul={readContext:So,useCallback:function(t,e){return Si().memoizedState=[t,void 0===e?null:e],t},useContext:So,useEffect:Qi,useImperativeHandle:function(t,e,n){return n=null!=n?n.concat([t]):null,Li(4194308,4,qi.bind(null,e,t),n)},useLayoutEffect:function(t,e){return Li(4194308,4,t,e)},useInsertionEffect:function(t,e){return Li(4,2,t,e)},useMemo:function(t,e){var n=Si();return e=void 0===e?null:e,t=t(),n.memoizedState=[t,e],t},useReducer:function(t,e,n){var r=Si();return e=void 0!==n?n(e):e,r.memoizedState=r.baseState=e,t={pending:null,interleaved:null,lanes:0,dispatch:null,lastRenderedReducer:t,lastRenderedState:e},r.queue=t,t=t.dispatch=nl.bind(null,gi,t),[r.memoizedState,t]},useRef:function(t){return t={current:t},Si().memoizedState=t},useState:zi,useDebugValue:Ki,useDeferredValue:function(t){return Si().memoizedState=t},useTransition:function(){var t=zi(!1),e=t[0];return t=tl.bind(null,t[1]),Si().memoizedState=t,[e,t]},useMutableSource:function(){},useSyncExternalStore:function(t,e,n){var r=gi,a=Si();if(oo){if(void 0===n)throw Error(i(407));n=n()}else{if(n=e(),null===Ju)throw Error(i(349));0!=(30&di)||Ni(r,e,n)}a.memoizedState=n;var o={value:n,getSnapshot:e};return a.queue=o,Qi(Ti.bind(null,r,o,t),[t]),r.flags|=2048,Ri(9,ji.bind(null,r,o,n,e),void 0,null),n},useId:function(){var t=Si(),e=Ju.identifierPrefix;if(oo){var n=Xa;e=":"+e+"R"+(n=(Ya&~(1<<32-le(Ya)-1)).toString(32)+n),0<(n=vi++)&&(e+="H"+n.toString(32)),e+=":"}else e=":"+e+"r"+(n=xi++).toString(32)+":";return t.memoizedState=e},unstable_isNewReconciler:!1},cl={readContext:So,useCallback:Yi,useContext:So,useEffect:Gi,useImperativeHandle:Hi,useInsertionEffect:Wi,useLayoutEffect:Vi,useMemo:Xi,useReducer:Ji,useRef:Fi,useState:function(){return Ji(Oi)},useDebugValue:Ki,useDeferredValue:function(t){return Zi(ki(),hi.memoizedState,t)},useTransition:function(){return[Ji(Oi)[0],ki().memoizedState]},useMutableSource:Pi,useSyncExternalStore:Mi,useId:el,unstable_isNewReconciler:!1},pl={readContext:So,useCallback:Yi,useContext:So,useEffect:Gi,useImperativeHandle:Hi,useInsertionEffect:Wi,useLayoutEffect:Vi,useMemo:Xi,useReducer:_i,useRef:Fi,useState:function(){return _i(Oi)},useDebugValue:Ki,useDeferredValue:function(t){var e=ki();return null===hi?e.memoizedState=t:Zi(e,hi.memoizedState,t)},useTransition:function(){return[_i(Oi)[0],ki().memoizedState]},useMutableSource:Pi,useSyncExternalStore:Mi,useId:el,unstable_isNewReconciler:!1};function sl(t,e){try{var n="",r=e;do{n+=L(r),r=r.return}while(r);var a=n}catch(t){a="\nError generating stack: "+t.message+"\n"+t.stack}return{value:t,source:e,stack:a,digest:null}}function Al(t,e,n){return{value:t,source:null,stack:null!=n?n:null,digest:null!=e?e:null}}function fl(t,e){try{r.error(e.value)}catch(t){setTimeout((function(){throw t}))}}var ml="function"==typeof WeakMap?WeakMap:Map;function dl(t,e,n){(n=jo(-1,n)).tag=3,n.payload={element:null};var r=e.value;return n.callback=function(){Gu||(Gu=!0,Wu=r),fl(0,e)},n}function gl(t,e,n){(n=jo(-1,n)).tag=3;var r=t.type.getDerivedStateFromError;if("function"==typeof r){var a=e.value;n.payload=function(){return r(a)},n.callback=function(){fl(0,e)}}var o=t.stateNode;return null!==o&&"function"==typeof o.componentDidCatch&&(n.callback=function(){fl(0,e),"function"!=typeof r&&(null===Vu?Vu=new Set([this]):Vu.add(this));var t=e.stack;this.componentDidCatch(e.value,{componentStack:null!==t?t:""})}),n}function hl(t,e,n){var r=t.pingCache;if(null===r){r=t.pingCache=new ml;var a=new Set;r.set(e,a)}else void 0===(a=r.get(e))&&(a=new Set,r.set(e,a));a.has(n)||(a.add(n),t=Ic.bind(null,t,e,n),e.then(t,t))}function Cl(t){do{var e;if((e=13===t.tag)&&(e=null===(e=t.memoizedState)||null!==e.dehydrated),e)return t;t=t.return}while(null!==t);return null}function yl(t,e,n,r,a){return 0==(1&t.mode)?(t===e?t.flags|=65536:(t.flags|=128,n.flags|=131072,n.flags&=-52805,1===n.tag&&(null===n.alternate?n.tag=17:((e=jo(-1,1)).tag=2,To(n,e,1))),n.lanes|=1),t):(t.flags|=65536,t.lanes=a,t)}var bl=v.ReactCurrentOwner,vl=!1;function xl(t,e,n,r){e.child=null===t?Zo(e,null,n,r):Xo(e,t.child,n,r)}function El(t,e,n,r,a){n=n.render;var o=e.ref;return Io(e,a),r=Bi(t,e,n,r,o,a),n=Ii(),null===t||vl?(oo&&n&&eo(e),e.flags|=1,xl(t,e,r,a),e.child):(e.updateQueue=t.updateQueue,e.flags&=-2053,t.lanes&=~a,Gl(t,e,a))}function wl(t,e,n,r,a){if(null===t){var o=n.type;return"function"!=typeof o||Mc(o)||void 0!==o.defaultProps||null!==n.compare||void 0!==n.defaultProps?((t=jc(n.type,null,r,e,e.mode,a)).ref=e.ref,t.return=e,e.child=t):(e.tag=15,e.type=o,Bl(t,e,o,r,a))}if(o=t.child,0==(t.lanes&a)){var i=o.memoizedProps;if((n=null!==(n=n.compare)?n:cr)(i,r)&&t.ref===e.ref)return Gl(t,e,a)}return e.flags|=1,(t=Nc(o,r)).ref=e.ref,t.return=e,e.child=t}function Bl(t,e,n,r,a){if(null!==t){var o=t.memoizedProps;if(cr(o,r)&&t.ref===e.ref){if(vl=!1,e.pendingProps=r=o,0==(t.lanes&a))return e.lanes=t.lanes,Gl(t,e,a);0!=(131072&t.flags)&&(vl=!0)}}return kl(t,e,n,r,a)}function Il(t,e,n){var r=e.pendingProps,a=r.children,o=null!==t?t.memoizedState:null;if("hidden"===r.mode)if(0==(1&e.mode))e.memoizedState={baseLanes:0,cachePool:null,transitions:null},Sa(Nu,Mu),Mu|=n;else{if(0==(1073741824&n))return t=null!==o?o.baseLanes|n:n,e.lanes=e.childLanes=1073741824,e.memoizedState={baseLanes:t,cachePool:null,transitions:null},e.updateQueue=null,Sa(Nu,Mu),Mu|=t,null;e.memoizedState={baseLanes:0,cachePool:null,transitions:null},r=null!==o?o.baseLanes:n,Sa(Nu,Mu),Mu|=r}else null!==o?(r=o.baseLanes|n,e.memoizedState=null):r=n,Sa(Nu,Mu),Mu|=r;return xl(t,e,a,n),e.child}function Sl(t,e){var n=e.ref;(null===t&&null!==n||null!==t&&t.ref!==n)&&(e.flags|=512,e.flags|=2097152)}function kl(t,e,n,r,a){var o=Ma(n)?_a:Oa.current;return o=Pa(e,o),Io(e,a),n=Bi(t,e,n,r,o,a),r=Ii(),null===t||vl?(oo&&r&&eo(e),e.flags|=1,xl(t,e,n,a),e.child):(e.updateQueue=t.updateQueue,e.flags&=-2053,t.lanes&=~a,Gl(t,e,a))}function Ol(t,e,n,r,a){if(Ma(n)){var o=!0;$a(e)}else o=!1;if(Io(e,a),null===e.stateNode)Ql(t,e),Go(e,n,r),Vo(e,n,r,a),r=!0;else if(null===t){var i=e.stateNode,l=e.memoizedProps;i.props=l;var u=i.context,c=n.contextType;c="object"==typeof c&&null!==c?So(c):Pa(e,c=Ma(n)?_a:Oa.current);var p=n.getDerivedStateFromProps,s="function"==typeof p||"function"==typeof i.getSnapshotBeforeUpdate;s||"function"!=typeof i.UNSAFE_componentWillReceiveProps&&"function"!=typeof i.componentWillReceiveProps||(l!==r||u!==c)&&Wo(e,i,r,c),Po=!1;var A=e.memoizedState;i.state=A,zo(e,r,i,a),u=e.memoizedState,l!==r||A!==u||Ja.current||Po?("function"==typeof p&&(Lo(e,n,p,r),u=e.memoizedState),(l=Po||Qo(e,n,l,r,A,u,c))?(s||"function"!=typeof i.UNSAFE_componentWillMount&&"function"!=typeof i.componentWillMount||("function"==typeof i.componentWillMount&&i.componentWillMount(),"function"==typeof i.UNSAFE_componentWillMount&&i.UNSAFE_componentWillMount()),"function"==typeof i.componentDidMount&&(e.flags|=4194308)):("function"==typeof i.componentDidMount&&(e.flags|=4194308),e.memoizedProps=r,e.memoizedState=u),i.props=r,i.state=u,i.context=c,r=l):("function"==typeof i.componentDidMount&&(e.flags|=4194308),r=!1)}else{i=e.stateNode,No(t,e),l=e.memoizedProps,c=e.type===e.elementType?l:Co(e.type,l),i.props=c,s=e.pendingProps,A=i.context,u="object"==typeof(u=n.contextType)&&null!==u?So(u):Pa(e,u=Ma(n)?_a:Oa.current);var f=n.getDerivedStateFromProps;(p="function"==typeof f||"function"==typeof i.getSnapshotBeforeUpdate)||"function"!=typeof i.UNSAFE_componentWillReceiveProps&&"function"!=typeof i.componentWillReceiveProps||(l!==s||A!==u)&&Wo(e,i,r,u),Po=!1,A=e.memoizedState,i.state=A,zo(e,r,i,a);var m=e.memoizedState;l!==s||A!==m||Ja.current||Po?("function"==typeof f&&(Lo(e,n,f,r),m=e.memoizedState),(c=Po||Qo(e,n,c,r,A,m,u)||!1)?(p||"function"!=typeof i.UNSAFE_componentWillUpdate&&"function"!=typeof i.componentWillUpdate||("function"==typeof i.componentWillUpdate&&i.componentWillUpdate(r,m,u),"function"==typeof i.UNSAFE_componentWillUpdate&&i.UNSAFE_componentWillUpdate(r,m,u)),"function"==typeof i.componentDidUpdate&&(e.flags|=4),"function"==typeof i.getSnapshotBeforeUpdate&&(e.flags|=1024)):("function"!=typeof i.componentDidUpdate||l===t.memoizedProps&&A===t.memoizedState||(e.flags|=4),"function"!=typeof i.getSnapshotBeforeUpdate||l===t.memoizedProps&&A===t.memoizedState||(e.flags|=1024),e.memoizedProps=r,e.memoizedState=m),i.props=r,i.state=m,i.context=u,r=c):("function"!=typeof i.componentDidUpdate||l===t.memoizedProps&&A===t.memoizedState||(e.flags|=4),"function"!=typeof i.getSnapshotBeforeUpdate||l===t.memoizedProps&&A===t.memoizedState||(e.flags|=1024),r=!1)}return Jl(t,e,n,r,o,a)}function Jl(t,e,n,r,a,o){Sl(t,e);var i=0!=(128&e.flags);if(!r&&!i)return a&&Ua(e,n,!1),Gl(t,e,o);r=e.stateNode,bl.current=e;var l=i&&"function"!=typeof n.getDerivedStateFromError?null:r.render();return e.flags|=1,null!==t&&i?(e.child=Xo(e,t.child,null,o),e.child=Xo(e,null,l,o)):xl(t,e,l,o),e.memoizedState=r.state,a&&Ua(e,n,!0),e.child}function _l(t){var e=t.stateNode;e.pendingContext?ja(0,e.pendingContext,e.pendingContext!==e.context):e.context&&ja(0,e.context,!1),oi(t,e.containerInfo)}function Pl(t,e,n,r,a){return mo(),go(a),e.flags|=256,xl(t,e,n,r),e.child}var Ml,Nl,jl,Tl={dehydrated:null,treeContext:null,retryLane:0};function $l(t){return{baseLanes:t,cachePool:null,transitions:null}}function Ul(t,e,n){var r,a=e.pendingProps,o=ci.current,l=!1,u=0!=(128&e.flags);if((r=u)||(r=(null===t||null!==t.memoizedState)&&0!=(2&o)),r?(l=!0,e.flags&=-129):null!==t&&null===t.memoizedState||(o|=1),Sa(ci,1&o),null===t)return po(e),null!==(t=e.memoizedState)&&null!==(t=t.dehydrated)?(0==(1&e.mode)?e.lanes=1:"$!"===t.data?e.lanes=8:e.lanes=1073741824,null):(u=a.children,t=a.fallback,l?(a=e.mode,l=e.child,u={mode:"hidden",children:u},0==(1&a)&&null!==l?(l.childLanes=0,l.pendingProps=u):l=$c(u,a,0,null),t=Tc(t,a,n,null),l.return=e,t.return=e,l.sibling=t,e.child=l,e.child.memoizedState=$l(n),e.memoizedState=Tl,t):zl(e,u));if(null!==(o=t.memoizedState)&&null!==(r=o.dehydrated))return function(t,e,n,r,a,o,l){if(n)return 256&e.flags?(e.flags&=-257,Rl(t,e,l,r=Al(Error(i(422))))):null!==e.memoizedState?(e.child=t.child,e.flags|=128,null):(o=r.fallback,a=e.mode,r=$c({mode:"visible",children:r.children},a,0,null),(o=Tc(o,a,l,null)).flags|=2,r.return=e,o.return=e,r.sibling=o,e.child=r,0!=(1&e.mode)&&Xo(e,t.child,null,l),e.child.memoizedState=$l(l),e.memoizedState=Tl,o);if(0==(1&e.mode))return Rl(t,e,l,null);if("$!"===a.data){if(r=a.nextSibling&&a.nextSibling.dataset)var u=r.dgst;return r=u,Rl(t,e,l,r=Al(o=Error(i(419)),r,void 0))}if(u=0!=(l&t.childLanes),vl||u){if(null!==(r=Ju)){switch(l&-l){case 4:a=2;break;case 16:a=8;break;case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:case 4194304:case 8388608:case 16777216:case 33554432:case 67108864:a=32;break;case 536870912:a=268435456;break;default:a=0}0!==(a=0!=(a&(r.suspendedLanes|l))?0:a)&&a!==o.retryLane&&(o.retryLane=a,_o(t,a),rc(r,t,a,-1))}return gc(),Rl(t,e,l,r=Al(Error(i(421))))}return"$?"===a.data?(e.flags|=128,e.child=t.child,e=kc.bind(null,t),a._reactRetry=e,null):(t=o.treeContext,ao=pa(a.nextSibling),ro=e,oo=!0,io=null,null!==t&&(qa[Ha++]=Ya,qa[Ha++]=Xa,qa[Ha++]=Ka,Ya=t.id,Xa=t.overflow,Ka=e),(e=zl(e,r.children)).flags|=4096,e)}(t,e,u,a,r,o,n);if(l){l=a.fallback,u=e.mode,r=(o=t.child).sibling;var c={mode:"hidden",children:a.children};return 0==(1&u)&&e.child!==o?((a=e.child).childLanes=0,a.pendingProps=c,e.deletions=null):(a=Nc(o,c)).subtreeFlags=14680064&o.subtreeFlags,null!==r?l=Nc(r,l):(l=Tc(l,u,n,null)).flags|=2,l.return=e,a.return=e,a.sibling=l,e.child=a,a=l,l=e.child,u=null===(u=t.child.memoizedState)?$l(n):{baseLanes:u.baseLanes|n,cachePool:null,transitions:u.transitions},l.memoizedState=u,l.childLanes=t.childLanes&~n,e.memoizedState=Tl,a}return t=(l=t.child).sibling,a=Nc(l,{mode:"visible",children:a.children}),0==(1&e.mode)&&(a.lanes=n),a.return=e,a.sibling=null,null!==t&&(null===(n=e.deletions)?(e.deletions=[t],e.flags|=16):n.push(t)),e.child=a,e.memoizedState=null,a}function zl(t,e){return(e=$c({mode:"visible",children:e},t.mode,0,null)).return=t,t.child=e}function Rl(t,e,n,r){return null!==r&&go(r),Xo(e,t.child,null,n),(t=zl(e,e.pendingProps.children)).flags|=2,e.memoizedState=null,t}function Fl(t,e,n){t.lanes|=e;var r=t.alternate;null!==r&&(r.lanes|=e),Bo(t.return,e,n)}function Ll(t,e,n,r,a){var o=t.memoizedState;null===o?t.memoizedState={isBackwards:e,rendering:null,renderingStartTime:0,last:r,tail:n,tailMode:a}:(o.isBackwards=e,o.rendering=null,o.renderingStartTime=0,o.last=r,o.tail=n,o.tailMode=a)}function Dl(t,e,n){var r=e.pendingProps,a=r.revealOrder,o=r.tail;if(xl(t,e,r.children,n),0!=(2&(r=ci.current)))r=1&r|2,e.flags|=128;else{if(null!==t&&0!=(128&t.flags))t:for(t=e.child;null!==t;){if(13===t.tag)null!==t.memoizedState&&Fl(t,n,e);else if(19===t.tag)Fl(t,n,e);else if(null!==t.child){t.child.return=t,t=t.child;continue}if(t===e)break t;for(;null===t.sibling;){if(null===t.return||t.return===e)break t;t=t.return}t.sibling.return=t.return,t=t.sibling}r&=1}if(Sa(ci,r),0==(1&e.mode))e.memoizedState=null;else switch(a){case"forwards":for(n=e.child,a=null;null!==n;)null!==(t=n.alternate)&&null===pi(t)&&(a=n),n=n.sibling;null===(n=a)?(a=e.child,e.child=null):(a=n.sibling,n.sibling=null),Ll(e,!1,a,n,o);break;case"backwards":for(n=null,a=e.child,e.child=null;null!==a;){if(null!==(t=a.alternate)&&null===pi(t)){e.child=a;break}t=a.sibling,a.sibling=n,n=a,a=t}Ll(e,!0,n,null,o);break;case"together":Ll(e,!1,null,null,void 0);break;default:e.memoizedState=null}return e.child}function Ql(t,e){0==(1&e.mode)&&null!==t&&(t.alternate=null,e.alternate=null,e.flags|=2)}function Gl(t,e,n){if(null!==t&&(e.dependencies=t.dependencies),$u|=e.lanes,0==(n&e.childLanes))return null;if(null!==t&&e.child!==t.child)throw Error(i(153));if(null!==e.child){for(n=Nc(t=e.child,t.pendingProps),e.child=n,n.return=e;null!==t.sibling;)t=t.sibling,(n=n.sibling=Nc(t,t.pendingProps)).return=e;n.sibling=null}return e.child}function Wl(t,e){if(!oo)switch(t.tailMode){case"hidden":e=t.tail;for(var n=null;null!==e;)null!==e.alternate&&(n=e),e=e.sibling;null===n?t.tail=null:n.sibling=null;break;case"collapsed":n=t.tail;for(var r=null;null!==n;)null!==n.alternate&&(r=n),n=n.sibling;null===r?e||null===t.tail?t.tail=null:t.tail.sibling=null:r.sibling=null}}function Vl(t){var e=null!==t.alternate&&t.alternate.child===t.child,n=0,r=0;if(e)for(var a=t.child;null!==a;)n|=a.lanes|a.childLanes,r|=14680064&a.subtreeFlags,r|=14680064&a.flags,a.return=t,a=a.sibling;else for(a=t.child;null!==a;)n|=a.lanes|a.childLanes,r|=a.subtreeFlags,r|=a.flags,a.return=t,a=a.sibling;return t.subtreeFlags|=r,t.childLanes=n,e}function ql(t,e,n){var r=e.pendingProps;switch(no(e),e.tag){case 2:case 16:case 15:case 0:case 11:case 7:case 8:case 12:case 9:case 14:return Vl(e),null;case 1:case 17:return Ma(e.type)&&Na(),Vl(e),null;case 3:return r=e.stateNode,ii(),Ia(Ja),Ia(Oa),Ai(),r.pendingContext&&(r.context=r.pendingContext,r.pendingContext=null),null!==t&&null!==t.child||(Ao(e)?e.flags|=4:null===t||t.memoizedState.isDehydrated&&0==(256&e.flags)||(e.flags|=1024,null!==io&&(lc(io),io=null))),Vl(e),null;case 5:ui(e);var a=ai(ri.current);if(n=e.type,null!==t&&null!=e.stateNode)Nl(t,e,n,r),t.ref!==e.ref&&(e.flags|=512,e.flags|=2097152);else{if(!r){if(null===e.stateNode)throw Error(i(166));return Vl(e),null}if(t=ai(ei.current),Ao(e)){r=e.stateNode,n=e.type;var o=e.memoizedProps;switch(r[fa]=e,r[ma]=o,t=0!=(1&e.mode),n){case"dialog":Rr("cancel",r),Rr("close",r);break;case"iframe":case"object":case"embed":Rr("load",r);break;case"video":case"audio":for(a=0;a<Tr.length;a++)Rr(Tr[a],r);break;case"source":Rr("error",r);break;case"img":case"image":case"link":Rr("error",r),Rr("load",r);break;case"details":Rr("toggle",r);break;case"input":Y(r,o),Rr("invalid",r);break;case"select":r._wrapperState={wasMultiple:!!o.multiple},Rr("invalid",r);break;case"textarea":ot(r,o),Rr("invalid",r)}for(var l in yt(n,o),a=null,o)if(o.hasOwnProperty(l)){var c=o[l];"children"===l?"string"==typeof c?r.textContent!==c&&(!0!==o.suppressHydrationWarning&&Zr(r.textContent,c,t),a=["children",c]):"number"==typeof c&&r.textContent!==""+c&&(!0!==o.suppressHydrationWarning&&Zr(r.textContent,c,t),a=["children",""+c]):u.hasOwnProperty(l)&&null!=c&&"onScroll"===l&&Rr("scroll",r)}switch(n){case"input":V(r),tt(r,o,!0);break;case"textarea":V(r),lt(r);break;case"select":case"option":break;default:"function"==typeof o.onClick&&(r.onclick=ta)}r=a,e.updateQueue=r,null!==r&&(e.flags|=4)}else{l=9===a.nodeType?a:a.ownerDocument,"http://www.w3.org/1999/xhtml"===t&&(t=ut(n)),"http://www.w3.org/1999/xhtml"===t?"script"===n?((t=l.createElement("div")).innerHTML="<script><\/script>",t=t.removeChild(t.firstChild)):"string"==typeof r.is?t=l.createElement(n,{is:r.is}):(t=l.createElement(n),"select"===n&&(l=t,r.multiple?l.multiple=!0:r.size&&(l.size=r.size))):t=l.createElementNS(t,n),t[fa]=e,t[ma]=r,Ml(t,e),e.stateNode=t;t:{switch(l=bt(n,r),n){case"dialog":Rr("cancel",t),Rr("close",t),a=r;break;case"iframe":case"object":case"embed":Rr("load",t),a=r;break;case"video":case"audio":for(a=0;a<Tr.length;a++)Rr(Tr[a],t);a=r;break;case"source":Rr("error",t),a=r;break;case"img":case"image":case"link":Rr("error",t),Rr("load",t),a=r;break;case"details":Rr("toggle",t),a=r;break;case"input":Y(t,r),a=K(t,r),Rr("invalid",t);break;case"option":default:a=r;break;case"select":t._wrapperState={wasMultiple:!!r.multiple},a=U({},r,{value:void 0}),Rr("invalid",t);break;case"textarea":ot(t,r),a=at(t,r),Rr("invalid",t)}for(o in yt(n,a),c=a)if(c.hasOwnProperty(o)){var p=c[o];"style"===o?ht(t,p):"dangerouslySetInnerHTML"===o?null!=(p=p?p.__html:void 0)&&At(t,p):"children"===o?"string"==typeof p?("textarea"!==n||""!==p)&&ft(t,p):"number"==typeof p&&ft(t,""+p):"suppressContentEditableWarning"!==o&&"suppressHydrationWarning"!==o&&"autoFocus"!==o&&(u.hasOwnProperty(o)?null!=p&&"onScroll"===o&&Rr("scroll",t):null!=p&&b(t,o,p,l))}switch(n){case"input":V(t),tt(t,r,!1);break;case"textarea":V(t),lt(t);break;case"option":null!=r.value&&t.setAttribute("value",""+G(r.value));break;case"select":t.multiple=!!r.multiple,null!=(o=r.value)?rt(t,!!r.multiple,o,!1):null!=r.defaultValue&&rt(t,!!r.multiple,r.defaultValue,!0);break;default:"function"==typeof a.onClick&&(t.onclick=ta)}switch(n){case"button":case"input":case"select":case"textarea":r=!!r.autoFocus;break t;case"img":r=!0;break t;default:r=!1}}r&&(e.flags|=4)}null!==e.ref&&(e.flags|=512,e.flags|=2097152)}return Vl(e),null;case 6:if(t&&null!=e.stateNode)jl(0,e,t.memoizedProps,r);else{if("string"!=typeof r&&null===e.stateNode)throw Error(i(166));if(n=ai(ri.current),ai(ei.current),Ao(e)){if(r=e.stateNode,n=e.memoizedProps,r[fa]=e,(o=r.nodeValue!==n)&&null!==(t=ro))switch(t.tag){case 3:Zr(r.nodeValue,n,0!=(1&t.mode));break;case 5:!0!==t.memoizedProps.suppressHydrationWarning&&Zr(r.nodeValue,n,0!=(1&t.mode))}o&&(e.flags|=4)}else(r=(9===n.nodeType?n:n.ownerDocument).createTextNode(r))[fa]=e,e.stateNode=r}return Vl(e),null;case 13:if(Ia(ci),r=e.memoizedState,null===t||null!==t.memoizedState&&null!==t.memoizedState.dehydrated){if(oo&&null!==ao&&0!=(1&e.mode)&&0==(128&e.flags))fo(),mo(),e.flags|=98560,o=!1;else if(o=Ao(e),null!==r&&null!==r.dehydrated){if(null===t){if(!o)throw Error(i(318));if(!(o=null!==(o=e.memoizedState)?o.dehydrated:null))throw Error(i(317));o[fa]=e}else mo(),0==(128&e.flags)&&(e.memoizedState=null),e.flags|=4;Vl(e),o=!1}else null!==io&&(lc(io),io=null),o=!0;if(!o)return 65536&e.flags?e:null}return 0!=(128&e.flags)?(e.lanes=n,e):((r=null!==r)!=(null!==t&&null!==t.memoizedState)&&r&&(e.child.flags|=8192,0!=(1&e.mode)&&(null===t||0!=(1&ci.current)?0===ju&&(ju=3):gc())),null!==e.updateQueue&&(e.flags|=4),Vl(e),null);case 4:return ii(),null===t&&Dr(e.stateNode.containerInfo),Vl(e),null;case 10:return wo(e.type._context),Vl(e),null;case 19:if(Ia(ci),null===(o=e.memoizedState))return Vl(e),null;if(r=0!=(128&e.flags),null===(l=o.rendering))if(r)Wl(o,!1);else{if(0!==ju||null!==t&&0!=(128&t.flags))for(t=e.child;null!==t;){if(null!==(l=pi(t))){for(e.flags|=128,Wl(o,!1),null!==(r=l.updateQueue)&&(e.updateQueue=r,e.flags|=4),e.subtreeFlags=0,r=n,n=e.child;null!==n;)t=r,(o=n).flags&=14680066,null===(l=o.alternate)?(o.childLanes=0,o.lanes=t,o.child=null,o.subtreeFlags=0,o.memoizedProps=null,o.memoizedState=null,o.updateQueue=null,o.dependencies=null,o.stateNode=null):(o.childLanes=l.childLanes,o.lanes=l.lanes,o.child=l.child,o.subtreeFlags=0,o.deletions=null,o.memoizedProps=l.memoizedProps,o.memoizedState=l.memoizedState,o.updateQueue=l.updateQueue,o.type=l.type,t=l.dependencies,o.dependencies=null===t?null:{lanes:t.lanes,firstContext:t.firstContext}),n=n.sibling;return Sa(ci,1&ci.current|2),e.child}t=t.sibling}null!==o.tail&&Xt()>Du&&(e.flags|=128,r=!0,Wl(o,!1),e.lanes=4194304)}else{if(!r)if(null!==(t=pi(l))){if(e.flags|=128,r=!0,null!==(n=t.updateQueue)&&(e.updateQueue=n,e.flags|=4),Wl(o,!0),null===o.tail&&"hidden"===o.tailMode&&!l.alternate&&!oo)return Vl(e),null}else 2*Xt()-o.renderingStartTime>Du&&1073741824!==n&&(e.flags|=128,r=!0,Wl(o,!1),e.lanes=4194304);o.isBackwards?(l.sibling=e.child,e.child=l):(null!==(n=o.last)?n.sibling=l:e.child=l,o.last=l)}return null!==o.tail?(e=o.tail,o.rendering=e,o.tail=e.sibling,o.renderingStartTime=Xt(),e.sibling=null,n=ci.current,Sa(ci,r?1&n|2:1&n),e):(Vl(e),null);case 22:case 23:return Ac(),r=null!==e.memoizedState,null!==t&&null!==t.memoizedState!==r&&(e.flags|=8192),r&&0!=(1&e.mode)?0!=(1073741824&Mu)&&(Vl(e),6&e.subtreeFlags&&(e.flags|=8192)):Vl(e),null;case 24:case 25:return null}throw Error(i(156,e.tag))}function Hl(t,e){switch(no(e),e.tag){case 1:return Ma(e.type)&&Na(),65536&(t=e.flags)?(e.flags=-65537&t|128,e):null;case 3:return ii(),Ia(Ja),Ia(Oa),Ai(),0!=(65536&(t=e.flags))&&0==(128&t)?(e.flags=-65537&t|128,e):null;case 5:return ui(e),null;case 13:if(Ia(ci),null!==(t=e.memoizedState)&&null!==t.dehydrated){if(null===e.alternate)throw Error(i(340));mo()}return 65536&(t=e.flags)?(e.flags=-65537&t|128,e):null;case 19:return Ia(ci),null;case 4:return ii(),null;case 10:return wo(e.type._context),null;case 22:case 23:return Ac(),null;default:return null}}Ml=function(t,e){for(var n=e.child;null!==n;){if(5===n.tag||6===n.tag)t.appendChild(n.stateNode);else if(4!==n.tag&&null!==n.child){n.child.return=n,n=n.child;continue}if(n===e)break;for(;null===n.sibling;){if(null===n.return||n.return===e)return;n=n.return}n.sibling.return=n.return,n=n.sibling}},Nl=function(t,e,n,r){var a=t.memoizedProps;if(a!==r){t=e.stateNode,ai(ei.current);var o,i=null;switch(n){case"input":a=K(t,a),r=K(t,r),i=[];break;case"select":a=U({},a,{value:void 0}),r=U({},r,{value:void 0}),i=[];break;case"textarea":a=at(t,a),r=at(t,r),i=[];break;default:"function"!=typeof a.onClick&&"function"==typeof r.onClick&&(t.onclick=ta)}for(p in yt(n,r),n=null,a)if(!r.hasOwnProperty(p)&&a.hasOwnProperty(p)&&null!=a[p])if("style"===p){var l=a[p];for(o in l)l.hasOwnProperty(o)&&(n||(n={}),n[o]="")}else"dangerouslySetInnerHTML"!==p&&"children"!==p&&"suppressContentEditableWarning"!==p&&"suppressHydrationWarning"!==p&&"autoFocus"!==p&&(u.hasOwnProperty(p)?i||(i=[]):(i=i||[]).push(p,null));for(p in r){var c=r[p];if(l=null!=a?a[p]:void 0,r.hasOwnProperty(p)&&c!==l&&(null!=c||null!=l))if("style"===p)if(l){for(o in l)!l.hasOwnProperty(o)||c&&c.hasOwnProperty(o)||(n||(n={}),n[o]="");for(o in c)c.hasOwnProperty(o)&&l[o]!==c[o]&&(n||(n={}),n[o]=c[o])}else n||(i||(i=[]),i.push(p,n)),n=c;else"dangerouslySetInnerHTML"===p?(c=c?c.__html:void 0,l=l?l.__html:void 0,null!=c&&l!==c&&(i=i||[]).push(p,c)):"children"===p?"string"!=typeof c&&"number"!=typeof c||(i=i||[]).push(p,""+c):"suppressContentEditableWarning"!==p&&"suppressHydrationWarning"!==p&&(u.hasOwnProperty(p)?(null!=c&&"onScroll"===p&&Rr("scroll",t),i||l===c||(i=[])):(i=i||[]).push(p,c))}n&&(i=i||[]).push("style",n);var p=i;(e.updateQueue=p)&&(e.flags|=4)}},jl=function(t,e,n,r){n!==r&&(e.flags|=4)};var Kl=!1,Yl=!1,Xl="function"==typeof WeakSet?WeakSet:Set,Zl=null;function tu(t,e){var n=t.ref;if(null!==n)if("function"==typeof n)try{n(null)}catch(n){Bc(t,e,n)}else n.current=null}function eu(t,e,n){try{n()}catch(n){Bc(t,e,n)}}var nu=!1;function ru(t,e,n){var r=e.updateQueue;if(null!==(r=null!==r?r.lastEffect:null)){var a=r=r.next;do{if((a.tag&t)===t){var o=a.destroy;a.destroy=void 0,void 0!==o&&eu(e,n,o)}a=a.next}while(a!==r)}}function au(t,e){if(null!==(e=null!==(e=e.updateQueue)?e.lastEffect:null)){var n=e=e.next;do{if((n.tag&t)===t){var r=n.create;n.destroy=r()}n=n.next}while(n!==e)}}function ou(t){var e=t.ref;if(null!==e){var n=t.stateNode;t.tag,t=n,"function"==typeof e?e(t):e.current=t}}function iu(t){var e=t.alternate;null!==e&&(t.alternate=null,iu(e)),t.child=null,t.deletions=null,t.sibling=null,5===t.tag&&null!==(e=t.stateNode)&&(delete e[fa],delete e[ma],delete e[ga],delete e[ha],delete e[Ca]),t.stateNode=null,t.return=null,t.dependencies=null,t.memoizedProps=null,t.memoizedState=null,t.pendingProps=null,t.stateNode=null,t.updateQueue=null}function lu(t){return 5===t.tag||3===t.tag||4===t.tag}function uu(t){t:for(;;){for(;null===t.sibling;){if(null===t.return||lu(t.return))return null;t=t.return}for(t.sibling.return=t.return,t=t.sibling;5!==t.tag&&6!==t.tag&&18!==t.tag;){if(2&t.flags)continue t;if(null===t.child||4===t.tag)continue t;t.child.return=t,t=t.child}if(!(2&t.flags))return t.stateNode}}function cu(t,e,n){var r=t.tag;if(5===r||6===r)t=t.stateNode,e?8===n.nodeType?n.parentNode.insertBefore(t,e):n.insertBefore(t,e):(8===n.nodeType?(e=n.parentNode).insertBefore(t,n):(e=n).appendChild(t),null!=(n=n._reactRootContainer)||null!==e.onclick||(e.onclick=ta));else if(4!==r&&null!==(t=t.child))for(cu(t,e,n),t=t.sibling;null!==t;)cu(t,e,n),t=t.sibling}function pu(t,e,n){var r=t.tag;if(5===r||6===r)t=t.stateNode,e?n.insertBefore(t,e):n.appendChild(t);else if(4!==r&&null!==(t=t.child))for(pu(t,e,n),t=t.sibling;null!==t;)pu(t,e,n),t=t.sibling}var su=null,Au=!1;function fu(t,e,n){for(n=n.child;null!==n;)mu(t,e,n),n=n.sibling}function mu(t,e,n){if(ie&&"function"==typeof ie.onCommitFiberUnmount)try{ie.onCommitFiberUnmount(oe,n)}catch(t){}switch(n.tag){case 5:Yl||tu(n,e);case 6:var r=su,a=Au;su=null,fu(t,e,n),Au=a,null!==(su=r)&&(Au?(t=su,n=n.stateNode,8===t.nodeType?t.parentNode.removeChild(n):t.removeChild(n)):su.removeChild(n.stateNode));break;case 18:null!==su&&(Au?(t=su,n=n.stateNode,8===t.nodeType?ca(t.parentNode,n):1===t.nodeType&&ca(t,n),De(t)):ca(su,n.stateNode));break;case 4:r=su,a=Au,su=n.stateNode.containerInfo,Au=!0,fu(t,e,n),su=r,Au=a;break;case 0:case 11:case 14:case 15:if(!Yl&&null!==(r=n.updateQueue)&&null!==(r=r.lastEffect)){a=r=r.next;do{var o=a,i=o.destroy;o=o.tag,void 0!==i&&(0!=(2&o)||0!=(4&o))&&eu(n,e,i),a=a.next}while(a!==r)}fu(t,e,n);break;case 1:if(!Yl&&(tu(n,e),"function"==typeof(r=n.stateNode).componentWillUnmount))try{r.props=n.memoizedProps,r.state=n.memoizedState,r.componentWillUnmount()}catch(t){Bc(n,e,t)}fu(t,e,n);break;case 21:fu(t,e,n);break;case 22:1&n.mode?(Yl=(r=Yl)||null!==n.memoizedState,fu(t,e,n),Yl=r):fu(t,e,n);break;default:fu(t,e,n)}}function du(t){var e=t.updateQueue;if(null!==e){t.updateQueue=null;var n=t.stateNode;null===n&&(n=t.stateNode=new Xl),e.forEach((function(e){var r=Oc.bind(null,t,e);n.has(e)||(n.add(e),e.then(r,r))}))}}function gu(t,e){var n=e.deletions;if(null!==n)for(var r=0;r<n.length;r++){var a=n[r];try{var o=t,l=e,u=l;t:for(;null!==u;){switch(u.tag){case 5:su=u.stateNode,Au=!1;break t;case 3:case 4:su=u.stateNode.containerInfo,Au=!0;break t}u=u.return}if(null===su)throw Error(i(160));mu(o,l,a),su=null,Au=!1;var c=a.alternate;null!==c&&(c.return=null),a.return=null}catch(t){Bc(a,e,t)}}if(12854&e.subtreeFlags)for(e=e.child;null!==e;)hu(e,t),e=e.sibling}function hu(t,e){var n=t.alternate,r=t.flags;switch(t.tag){case 0:case 11:case 14:case 15:if(gu(e,t),Cu(t),4&r){try{ru(3,t,t.return),au(3,t)}catch(e){Bc(t,t.return,e)}try{ru(5,t,t.return)}catch(e){Bc(t,t.return,e)}}break;case 1:gu(e,t),Cu(t),512&r&&null!==n&&tu(n,n.return);break;case 5:if(gu(e,t),Cu(t),512&r&&null!==n&&tu(n,n.return),32&t.flags){var a=t.stateNode;try{ft(a,"")}catch(e){Bc(t,t.return,e)}}if(4&r&&null!=(a=t.stateNode)){var o=t.memoizedProps,l=null!==n?n.memoizedProps:o,u=t.type,c=t.updateQueue;if(t.updateQueue=null,null!==c)try{"input"===u&&"radio"===o.type&&null!=o.name&&X(a,o),bt(u,l);var p=bt(u,o);for(l=0;l<c.length;l+=2){var s=c[l],A=c[l+1];"style"===s?ht(a,A):"dangerouslySetInnerHTML"===s?At(a,A):"children"===s?ft(a,A):b(a,s,A,p)}switch(u){case"input":Z(a,o);break;case"textarea":it(a,o);break;case"select":var f=a._wrapperState.wasMultiple;a._wrapperState.wasMultiple=!!o.multiple;var m=o.value;null!=m?rt(a,!!o.multiple,m,!1):f!==!!o.multiple&&(null!=o.defaultValue?rt(a,!!o.multiple,o.defaultValue,!0):rt(a,!!o.multiple,o.multiple?[]:"",!1))}a[ma]=o}catch(e){Bc(t,t.return,e)}}break;case 6:if(gu(e,t),Cu(t),4&r){if(null===t.stateNode)throw Error(i(162));a=t.stateNode,o=t.memoizedProps;try{a.nodeValue=o}catch(e){Bc(t,t.return,e)}}break;case 3:if(gu(e,t),Cu(t),4&r&&null!==n&&n.memoizedState.isDehydrated)try{De(e.containerInfo)}catch(e){Bc(t,t.return,e)}break;case 4:default:gu(e,t),Cu(t);break;case 13:gu(e,t),Cu(t),8192&(a=t.child).flags&&(o=null!==a.memoizedState,a.stateNode.isHidden=o,!o||null!==a.alternate&&null!==a.alternate.memoizedState||(Lu=Xt())),4&r&&du(t);break;case 22:if(s=null!==n&&null!==n.memoizedState,1&t.mode?(Yl=(p=Yl)||s,gu(e,t),Yl=p):gu(e,t),Cu(t),8192&r){if(p=null!==t.memoizedState,(t.stateNode.isHidden=p)&&!s&&0!=(1&t.mode))for(Zl=t,s=t.child;null!==s;){for(A=Zl=s;null!==Zl;){switch(m=(f=Zl).child,f.tag){case 0:case 11:case 14:case 15:ru(4,f,f.return);break;case 1:tu(f,f.return);var d=f.stateNode;if("function"==typeof d.componentWillUnmount){r=f,n=f.return;try{e=r,d.props=e.memoizedProps,d.state=e.memoizedState,d.componentWillUnmount()}catch(t){Bc(r,n,t)}}break;case 5:tu(f,f.return);break;case 22:if(null!==f.memoizedState){xu(A);continue}}null!==m?(m.return=f,Zl=m):xu(A)}s=s.sibling}t:for(s=null,A=t;;){if(5===A.tag){if(null===s){s=A;try{a=A.stateNode,p?"function"==typeof(o=a.style).setProperty?o.setProperty("display","none","important"):o.display="none":(u=A.stateNode,l=null!=(c=A.memoizedProps.style)&&c.hasOwnProperty("display")?c.display:null,u.style.display=gt("display",l))}catch(e){Bc(t,t.return,e)}}}else if(6===A.tag){if(null===s)try{A.stateNode.nodeValue=p?"":A.memoizedProps}catch(e){Bc(t,t.return,e)}}else if((22!==A.tag&&23!==A.tag||null===A.memoizedState||A===t)&&null!==A.child){A.child.return=A,A=A.child;continue}if(A===t)break t;for(;null===A.sibling;){if(null===A.return||A.return===t)break t;s===A&&(s=null),A=A.return}s===A&&(s=null),A.sibling.return=A.return,A=A.sibling}}break;case 19:gu(e,t),Cu(t),4&r&&du(t);case 21:}}function Cu(t){var e=t.flags;if(2&e){try{t:{for(var n=t.return;null!==n;){if(lu(n)){var r=n;break t}n=n.return}throw Error(i(160))}switch(r.tag){case 5:var a=r.stateNode;32&r.flags&&(ft(a,""),r.flags&=-33),pu(t,uu(t),a);break;case 3:case 4:var o=r.stateNode.containerInfo;cu(t,uu(t),o);break;default:throw Error(i(161))}}catch(e){Bc(t,t.return,e)}t.flags&=-3}4096&e&&(t.flags&=-4097)}function yu(t,e,n){Zl=t,bu(t,e,n)}function bu(t,e,n){for(var r=0!=(1&t.mode);null!==Zl;){var a=Zl,o=a.child;if(22===a.tag&&r){var i=null!==a.memoizedState||Kl;if(!i){var l=a.alternate,u=null!==l&&null!==l.memoizedState||Yl;l=Kl;var c=Yl;if(Kl=i,(Yl=u)&&!c)for(Zl=a;null!==Zl;)u=(i=Zl).child,22===i.tag&&null!==i.memoizedState?Eu(a):null!==u?(u.return=i,Zl=u):Eu(a);for(;null!==o;)Zl=o,bu(o,e,n),o=o.sibling;Zl=a,Kl=l,Yl=c}vu(t)}else 0!=(8772&a.subtreeFlags)&&null!==o?(o.return=a,Zl=o):vu(t)}}function vu(t){for(;null!==Zl;){var e=Zl;if(0!=(8772&e.flags)){var n=e.alternate;try{if(0!=(8772&e.flags))switch(e.tag){case 0:case 11:case 15:Yl||au(5,e);break;case 1:var r=e.stateNode;if(4&e.flags&&!Yl)if(null===n)r.componentDidMount();else{var a=e.elementType===e.type?n.memoizedProps:Co(e.type,n.memoizedProps);r.componentDidUpdate(a,n.memoizedState,r.__reactInternalSnapshotBeforeUpdate)}var o=e.updateQueue;null!==o&&Ro(e,o,r);break;case 3:var l=e.updateQueue;if(null!==l){if(n=null,null!==e.child)switch(e.child.tag){case 5:case 1:n=e.child.stateNode}Ro(e,l,n)}break;case 5:var u=e.stateNode;if(null===n&&4&e.flags){n=u;var c=e.memoizedProps;switch(e.type){case"button":case"input":case"select":case"textarea":c.autoFocus&&n.focus();break;case"img":c.src&&(n.src=c.src)}}break;case 6:case 4:case 12:case 19:case 17:case 21:case 22:case 23:case 25:break;case 13:if(null===e.memoizedState){var p=e.alternate;if(null!==p){var s=p.memoizedState;if(null!==s){var A=s.dehydrated;null!==A&&De(A)}}}break;default:throw Error(i(163))}Yl||512&e.flags&&ou(e)}catch(t){Bc(e,e.return,t)}}if(e===t){Zl=null;break}if(null!==(n=e.sibling)){n.return=e.return,Zl=n;break}Zl=e.return}}function xu(t){for(;null!==Zl;){var e=Zl;if(e===t){Zl=null;break}var n=e.sibling;if(null!==n){n.return=e.return,Zl=n;break}Zl=e.return}}function Eu(t){for(;null!==Zl;){var e=Zl;try{switch(e.tag){case 0:case 11:case 15:var n=e.return;try{au(4,e)}catch(t){Bc(e,n,t)}break;case 1:var r=e.stateNode;if("function"==typeof r.componentDidMount){var a=e.return;try{r.componentDidMount()}catch(t){Bc(e,a,t)}}var o=e.return;try{ou(e)}catch(t){Bc(e,o,t)}break;case 5:var i=e.return;try{ou(e)}catch(t){Bc(e,i,t)}}}catch(t){Bc(e,e.return,t)}if(e===t){Zl=null;break}var l=e.sibling;if(null!==l){l.return=e.return,Zl=l;break}Zl=e.return}}var wu,Bu=Math.ceil,Iu=v.ReactCurrentDispatcher,Su=v.ReactCurrentOwner,ku=v.ReactCurrentBatchConfig,Ou=0,Ju=null,_u=null,Pu=0,Mu=0,Nu=Ba(0),ju=0,Tu=null,$u=0,Uu=0,zu=0,Ru=null,Fu=null,Lu=0,Du=1/0,Qu=null,Gu=!1,Wu=null,Vu=null,qu=!1,Hu=null,Ku=0,Yu=0,Xu=null,Zu=-1,tc=0;function ec(){return 0!=(6&Ou)?Xt():-1!==Zu?Zu:Zu=Xt()}function nc(t){return 0==(1&t.mode)?1:0!=(2&Ou)&&0!==Pu?Pu&-Pu:null!==ho.transition?(0===tc&&(tc=ge()),tc):0!==(t=be)?t:t=void 0===(t=window.event)?16:Ye(t.type)}function rc(t,e,n,r){if(50<Yu)throw Yu=0,Xu=null,Error(i(185));Ce(t,n,r),0!=(2&Ou)&&t===Ju||(t===Ju&&(0==(2&Ou)&&(Uu|=n),4===ju&&uc(t,Pu)),ac(t,r),1===n&&0===Ou&&0==(1&e.mode)&&(Du=Xt()+500,Ra&&Da()))}function ac(t,e){var n=t.callbackNode;!function(t,e){for(var n=t.suspendedLanes,r=t.pingedLanes,a=t.expirationTimes,o=t.pendingLanes;0<o;){var i=31-le(o),l=1<<i,u=a[i];-1===u?0!=(l&n)&&0==(l&r)||(a[i]=me(l,e)):u<=e&&(t.expiredLanes|=l),o&=~l}}(t,e);var r=fe(t,t===Ju?Pu:0);if(0===r)null!==n&&Ht(n),t.callbackNode=null,t.callbackPriority=0;else if(e=r&-r,t.callbackPriority!==e){if(null!=n&&Ht(n),1===e)0===t.tag?function(t){Ra=!0,La(t)}(cc.bind(null,t)):La(cc.bind(null,t)),la((function(){0==(6&Ou)&&Da()})),n=null;else{switch(ve(r)){case 1:n=te;break;case 4:n=ee;break;case 16:default:n=ne;break;case 536870912:n=ae}n=Jc(n,oc.bind(null,t))}t.callbackPriority=e,t.callbackNode=n}}function oc(t,e){if(Zu=-1,tc=0,0!=(6&Ou))throw Error(i(327));var n=t.callbackNode;if(Ec()&&t.callbackNode!==n)return null;var r=fe(t,t===Ju?Pu:0);if(0===r)return null;if(0!=(30&r)||0!=(r&t.expiredLanes)||e)e=hc(t,r);else{e=r;var a=Ou;Ou|=2;var o=dc();for(Ju===t&&Pu===e||(Qu=null,Du=Xt()+500,fc(t,e));;)try{yc();break}catch(e){mc(t,e)}Eo(),Iu.current=o,Ou=a,null!==_u?e=0:(Ju=null,Pu=0,e=ju)}if(0!==e){if(2===e&&0!==(a=de(t))&&(r=a,e=ic(t,a)),1===e)throw n=Tu,fc(t,0),uc(t,r),ac(t,Xt()),n;if(6===e)uc(t,r);else{if(a=t.current.alternate,0==(30&r)&&!function(t){for(var e=t;;){if(16384&e.flags){var n=e.updateQueue;if(null!==n&&null!==(n=n.stores))for(var r=0;r<n.length;r++){var a=n[r],o=a.getSnapshot;a=a.value;try{if(!ur(o(),a))return!1}catch(t){return!1}}}if(n=e.child,16384&e.subtreeFlags&&null!==n)n.return=e,e=n;else{if(e===t)break;for(;null===e.sibling;){if(null===e.return||e.return===t)return!0;e=e.return}e.sibling.return=e.return,e=e.sibling}}return!0}(a)&&(2===(e=hc(t,r))&&0!==(o=de(t))&&(r=o,e=ic(t,o)),1===e))throw n=Tu,fc(t,0),uc(t,r),ac(t,Xt()),n;switch(t.finishedWork=a,t.finishedLanes=r,e){case 0:case 1:throw Error(i(345));case 2:case 5:xc(t,Fu,Qu);break;case 3:if(uc(t,r),(130023424&r)===r&&10<(e=Lu+500-Xt())){if(0!==fe(t,0))break;if(((a=t.suspendedLanes)&r)!==r){ec(),t.pingedLanes|=t.suspendedLanes&a;break}t.timeoutHandle=aa(xc.bind(null,t,Fu,Qu),e);break}xc(t,Fu,Qu);break;case 4:if(uc(t,r),(4194240&r)===r)break;for(e=t.eventTimes,a=-1;0<r;){var l=31-le(r);o=1<<l,(l=e[l])>a&&(a=l),r&=~o}if(r=a,10<(r=(120>(r=Xt()-r)?120:480>r?480:1080>r?1080:1920>r?1920:3e3>r?3e3:4320>r?4320:1960*Bu(r/1960))-r)){t.timeoutHandle=aa(xc.bind(null,t,Fu,Qu),r);break}xc(t,Fu,Qu);break;default:throw Error(i(329))}}}return ac(t,Xt()),t.callbackNode===n?oc.bind(null,t):null}function ic(t,e){var n=Ru;return t.current.memoizedState.isDehydrated&&(fc(t,e).flags|=256),2!==(t=hc(t,e))&&(e=Fu,Fu=n,null!==e&&lc(e)),t}function lc(t){null===Fu?Fu=t:Fu.push.apply(Fu,t)}function uc(t,e){for(e&=~zu,e&=~Uu,t.suspendedLanes|=e,t.pingedLanes&=~e,t=t.expirationTimes;0<e;){var n=31-le(e),r=1<<n;t[n]=-1,e&=~r}}function cc(t){if(0!=(6&Ou))throw Error(i(327));Ec();var e=fe(t,0);if(0==(1&e))return ac(t,Xt()),null;var n=hc(t,e);if(0!==t.tag&&2===n){var r=de(t);0!==r&&(e=r,n=ic(t,r))}if(1===n)throw n=Tu,fc(t,0),uc(t,e),ac(t,Xt()),n;if(6===n)throw Error(i(345));return t.finishedWork=t.current.alternate,t.finishedLanes=e,xc(t,Fu,Qu),ac(t,Xt()),null}function pc(t,e){var n=Ou;Ou|=1;try{return t(e)}finally{0===(Ou=n)&&(Du=Xt()+500,Ra&&Da())}}function sc(t){null!==Hu&&0===Hu.tag&&0==(6&Ou)&&Ec();var e=Ou;Ou|=1;var n=ku.transition,r=be;try{if(ku.transition=null,be=1,t)return t()}finally{be=r,ku.transition=n,0==(6&(Ou=e))&&Da()}}function Ac(){Mu=Nu.current,Ia(Nu)}function fc(t,e){t.finishedWork=null,t.finishedLanes=0;var n=t.timeoutHandle;if(-1!==n&&(t.timeoutHandle=-1,oa(n)),null!==_u)for(n=_u.return;null!==n;){var r=n;switch(no(r),r.tag){case 1:null!=(r=r.type.childContextTypes)&&Na();break;case 3:ii(),Ia(Ja),Ia(Oa),Ai();break;case 5:ui(r);break;case 4:ii();break;case 13:case 19:Ia(ci);break;case 10:wo(r.type._context);break;case 22:case 23:Ac()}n=n.return}if(Ju=t,_u=t=Nc(t.current,null),Pu=Mu=e,ju=0,Tu=null,zu=Uu=$u=0,Fu=Ru=null,null!==ko){for(e=0;e<ko.length;e++)if(null!==(r=(n=ko[e]).interleaved)){n.interleaved=null;var a=r.next,o=n.pending;if(null!==o){var i=o.next;o.next=a,r.next=i}n.pending=r}ko=null}return t}function mc(t,e){for(;;){var n=_u;try{if(Eo(),fi.current=ll,yi){for(var r=gi.memoizedState;null!==r;){var a=r.queue;null!==a&&(a.pending=null),r=r.next}yi=!1}if(di=0,Ci=hi=gi=null,bi=!1,vi=0,Su.current=null,null===n||null===n.return){ju=1,Tu=e,_u=null;break}t:{var o=t,l=n.return,u=n,c=e;if(e=Pu,u.flags|=32768,null!==c&&"object"==typeof c&&"function"==typeof c.then){var p=c,s=u,A=s.tag;if(0==(1&s.mode)&&(0===A||11===A||15===A)){var f=s.alternate;f?(s.updateQueue=f.updateQueue,s.memoizedState=f.memoizedState,s.lanes=f.lanes):(s.updateQueue=null,s.memoizedState=null)}var m=Cl(l);if(null!==m){m.flags&=-257,yl(m,l,u,0,e),1&m.mode&&hl(o,p,e),c=p;var d=(e=m).updateQueue;if(null===d){var g=new Set;g.add(c),e.updateQueue=g}else d.add(c);break t}if(0==(1&e)){hl(o,p,e),gc();break t}c=Error(i(426))}else if(oo&&1&u.mode){var h=Cl(l);if(null!==h){0==(65536&h.flags)&&(h.flags|=256),yl(h,l,u,0,e),go(sl(c,u));break t}}o=c=sl(c,u),4!==ju&&(ju=2),null===Ru?Ru=[o]:Ru.push(o),o=l;do{switch(o.tag){case 3:o.flags|=65536,e&=-e,o.lanes|=e,Uo(o,dl(0,c,e));break t;case 1:u=c;var C=o.type,y=o.stateNode;if(0==(128&o.flags)&&("function"==typeof C.getDerivedStateFromError||null!==y&&"function"==typeof y.componentDidCatch&&(null===Vu||!Vu.has(y)))){o.flags|=65536,e&=-e,o.lanes|=e,Uo(o,gl(o,u,e));break t}}o=o.return}while(null!==o)}vc(n)}catch(t){e=t,_u===n&&null!==n&&(_u=n=n.return);continue}break}}function dc(){var t=Iu.current;return Iu.current=ll,null===t?ll:t}function gc(){0!==ju&&3!==ju&&2!==ju||(ju=4),null===Ju||0==(268435455&$u)&&0==(268435455&Uu)||uc(Ju,Pu)}function hc(t,e){var n=Ou;Ou|=2;var r=dc();for(Ju===t&&Pu===e||(Qu=null,fc(t,e));;)try{Cc();break}catch(e){mc(t,e)}if(Eo(),Ou=n,Iu.current=r,null!==_u)throw Error(i(261));return Ju=null,Pu=0,ju}function Cc(){for(;null!==_u;)bc(_u)}function yc(){for(;null!==_u&&!Kt();)bc(_u)}function bc(t){var e=wu(t.alternate,t,Mu);t.memoizedProps=t.pendingProps,null===e?vc(t):_u=e,Su.current=null}function vc(t){var e=t;do{var n=e.alternate;if(t=e.return,0==(32768&e.flags)){if(null!==(n=ql(n,e,Mu)))return void(_u=n)}else{if(null!==(n=Hl(n,e)))return n.flags&=32767,void(_u=n);if(null===t)return ju=6,void(_u=null);t.flags|=32768,t.subtreeFlags=0,t.deletions=null}if(null!==(e=e.sibling))return void(_u=e);_u=e=t}while(null!==e);0===ju&&(ju=5)}function xc(t,e,n){var r=be,a=ku.transition;try{ku.transition=null,be=1,function(t,e,n,r){do{Ec()}while(null!==Hu);if(0!=(6&Ou))throw Error(i(327));n=t.finishedWork;var a=t.finishedLanes;if(null===n)return null;if(t.finishedWork=null,t.finishedLanes=0,n===t.current)throw Error(i(177));t.callbackNode=null,t.callbackPriority=0;var o=n.lanes|n.childLanes;if(function(t,e){var n=t.pendingLanes&~e;t.pendingLanes=e,t.suspendedLanes=0,t.pingedLanes=0,t.expiredLanes&=e,t.mutableReadLanes&=e,t.entangledLanes&=e,e=t.entanglements;var r=t.eventTimes;for(t=t.expirationTimes;0<n;){var a=31-le(n),o=1<<a;e[a]=0,r[a]=-1,t[a]=-1,n&=~o}}(t,o),t===Ju&&(_u=Ju=null,Pu=0),0==(2064&n.subtreeFlags)&&0==(2064&n.flags)||qu||(qu=!0,Jc(ne,(function(){return Ec(),null}))),o=0!=(15990&n.flags),0!=(15990&n.subtreeFlags)||o){o=ku.transition,ku.transition=null;var l=be;be=1;var u=Ou;Ou|=4,Su.current=null,function(t,e){if(ea=Ge,mr(t=fr())){if("selectionStart"in t)var n={start:t.selectionStart,end:t.selectionEnd};else t:{var r=(n=(n=t.ownerDocument)&&n.defaultView||window).getSelection&&n.getSelection();if(r&&0!==r.rangeCount){n=r.anchorNode;var a=r.anchorOffset,o=r.focusNode;r=r.focusOffset;try{n.nodeType,o.nodeType}catch(t){n=null;break t}var l=0,u=-1,c=-1,p=0,s=0,A=t,f=null;e:for(;;){for(var m;A!==n||0!==a&&3!==A.nodeType||(u=l+a),A!==o||0!==r&&3!==A.nodeType||(c=l+r),3===A.nodeType&&(l+=A.nodeValue.length),null!==(m=A.firstChild);)f=A,A=m;for(;;){if(A===t)break e;if(f===n&&++p===a&&(u=l),f===o&&++s===r&&(c=l),null!==(m=A.nextSibling))break;f=(A=f).parentNode}A=m}n=-1===u||-1===c?null:{start:u,end:c}}else n=null}n=n||{start:0,end:0}}else n=null;for(na={focusedElem:t,selectionRange:n},Ge=!1,Zl=e;null!==Zl;)if(t=(e=Zl).child,0!=(1028&e.subtreeFlags)&&null!==t)t.return=e,Zl=t;else for(;null!==Zl;){e=Zl;try{var d=e.alternate;if(0!=(1024&e.flags))switch(e.tag){case 0:case 11:case 15:case 5:case 6:case 4:case 17:break;case 1:if(null!==d){var g=d.memoizedProps,h=d.memoizedState,C=e.stateNode,y=C.getSnapshotBeforeUpdate(e.elementType===e.type?g:Co(e.type,g),h);C.__reactInternalSnapshotBeforeUpdate=y}break;case 3:var b=e.stateNode.containerInfo;1===b.nodeType?b.textContent="":9===b.nodeType&&b.documentElement&&b.removeChild(b.documentElement);break;default:throw Error(i(163))}}catch(t){Bc(e,e.return,t)}if(null!==(t=e.sibling)){t.return=e.return,Zl=t;break}Zl=e.return}d=nu,nu=!1}(t,n),hu(n,t),dr(na),Ge=!!ea,na=ea=null,t.current=n,yu(n,t,a),Yt(),Ou=u,be=l,ku.transition=o}else t.current=n;if(qu&&(qu=!1,Hu=t,Ku=a),0===(o=t.pendingLanes)&&(Vu=null),function(t){if(ie&&"function"==typeof ie.onCommitFiberRoot)try{ie.onCommitFiberRoot(oe,t,void 0,128==(128&t.current.flags))}catch(t){}}(n.stateNode),ac(t,Xt()),null!==e)for(r=t.onRecoverableError,n=0;n<e.length;n++)r((a=e[n]).value,{componentStack:a.stack,digest:a.digest});if(Gu)throw Gu=!1,t=Wu,Wu=null,t;0!=(1&Ku)&&0!==t.tag&&Ec(),0!=(1&(o=t.pendingLanes))?t===Xu?Yu++:(Yu=0,Xu=t):Yu=0,Da()}(t,e,n,r)}finally{ku.transition=a,be=r}return null}function Ec(){if(null!==Hu){var t=ve(Ku),e=ku.transition,n=be;try{if(ku.transition=null,be=16>t?16:t,null===Hu)var r=!1;else{if(t=Hu,Hu=null,Ku=0,0!=(6&Ou))throw Error(i(331));var a=Ou;for(Ou|=4,Zl=t.current;null!==Zl;){var o=Zl,l=o.child;if(0!=(16&Zl.flags)){var u=o.deletions;if(null!==u){for(var c=0;c<u.length;c++){var p=u[c];for(Zl=p;null!==Zl;){var s=Zl;switch(s.tag){case 0:case 11:case 15:ru(8,s,o)}var A=s.child;if(null!==A)A.return=s,Zl=A;else for(;null!==Zl;){var f=(s=Zl).sibling,m=s.return;if(iu(s),s===p){Zl=null;break}if(null!==f){f.return=m,Zl=f;break}Zl=m}}}var d=o.alternate;if(null!==d){var g=d.child;if(null!==g){d.child=null;do{var h=g.sibling;g.sibling=null,g=h}while(null!==g)}}Zl=o}}if(0!=(2064&o.subtreeFlags)&&null!==l)l.return=o,Zl=l;else t:for(;null!==Zl;){if(0!=(2048&(o=Zl).flags))switch(o.tag){case 0:case 11:case 15:ru(9,o,o.return)}var C=o.sibling;if(null!==C){C.return=o.return,Zl=C;break t}Zl=o.return}}var y=t.current;for(Zl=y;null!==Zl;){var b=(l=Zl).child;if(0!=(2064&l.subtreeFlags)&&null!==b)b.return=l,Zl=b;else t:for(l=y;null!==Zl;){if(0!=(2048&(u=Zl).flags))try{switch(u.tag){case 0:case 11:case 15:au(9,u)}}catch(t){Bc(u,u.return,t)}if(u===l){Zl=null;break t}var v=u.sibling;if(null!==v){v.return=u.return,Zl=v;break t}Zl=u.return}}if(Ou=a,Da(),ie&&"function"==typeof ie.onPostCommitFiberRoot)try{ie.onPostCommitFiberRoot(oe,t)}catch(t){}r=!0}return r}finally{be=n,ku.transition=e}}return!1}function wc(t,e,n){t=To(t,e=dl(0,e=sl(n,e),1),1),e=ec(),null!==t&&(Ce(t,1,e),ac(t,e))}function Bc(t,e,n){if(3===t.tag)wc(t,t,n);else for(;null!==e;){if(3===e.tag){wc(e,t,n);break}if(1===e.tag){var r=e.stateNode;if("function"==typeof e.type.getDerivedStateFromError||"function"==typeof r.componentDidCatch&&(null===Vu||!Vu.has(r))){e=To(e,t=gl(e,t=sl(n,t),1),1),t=ec(),null!==e&&(Ce(e,1,t),ac(e,t));break}}e=e.return}}function Ic(t,e,n){var r=t.pingCache;null!==r&&r.delete(e),e=ec(),t.pingedLanes|=t.suspendedLanes&n,Ju===t&&(Pu&n)===n&&(4===ju||3===ju&&(130023424&Pu)===Pu&&500>Xt()-Lu?fc(t,0):zu|=n),ac(t,e)}function Sc(t,e){0===e&&(0==(1&t.mode)?e=1:(e=se,0==(130023424&(se<<=1))&&(se=4194304)));var n=ec();null!==(t=_o(t,e))&&(Ce(t,e,n),ac(t,n))}function kc(t){var e=t.memoizedState,n=0;null!==e&&(n=e.retryLane),Sc(t,n)}function Oc(t,e){var n=0;switch(t.tag){case 13:var r=t.stateNode,a=t.memoizedState;null!==a&&(n=a.retryLane);break;case 19:r=t.stateNode;break;default:throw Error(i(314))}null!==r&&r.delete(e),Sc(t,n)}function Jc(t,e){return qt(t,e)}function _c(t,e,n,r){this.tag=t,this.key=n,this.sibling=this.child=this.return=this.stateNode=this.type=this.elementType=null,this.index=0,this.ref=null,this.pendingProps=e,this.dependencies=this.memoizedState=this.updateQueue=this.memoizedProps=null,this.mode=r,this.subtreeFlags=this.flags=0,this.deletions=null,this.childLanes=this.lanes=0,this.alternate=null}function Pc(t,e,n,r){return new _c(t,e,n,r)}function Mc(t){return!(!(t=t.prototype)||!t.isReactComponent)}function Nc(t,e){var n=t.alternate;return null===n?((n=Pc(t.tag,e,t.key,t.mode)).elementType=t.elementType,n.type=t.type,n.stateNode=t.stateNode,n.alternate=t,t.alternate=n):(n.pendingProps=e,n.type=t.type,n.flags=0,n.subtreeFlags=0,n.deletions=null),n.flags=14680064&t.flags,n.childLanes=t.childLanes,n.lanes=t.lanes,n.child=t.child,n.memoizedProps=t.memoizedProps,n.memoizedState=t.memoizedState,n.updateQueue=t.updateQueue,e=t.dependencies,n.dependencies=null===e?null:{lanes:e.lanes,firstContext:e.firstContext},n.sibling=t.sibling,n.index=t.index,n.ref=t.ref,n}function jc(t,e,n,r,a,o){var l=2;if(r=t,"function"==typeof t)Mc(t)&&(l=1);else if("string"==typeof t)l=5;else t:switch(t){case w:return Tc(n.children,a,o,e);case B:l=8,a|=8;break;case I:return(t=Pc(12,n,e,2|a)).elementType=I,t.lanes=o,t;case J:return(t=Pc(13,n,e,a)).elementType=J,t.lanes=o,t;case _:return(t=Pc(19,n,e,a)).elementType=_,t.lanes=o,t;case N:return $c(n,a,o,e);default:if("object"==typeof t&&null!==t)switch(t.$$typeof){case S:l=10;break t;case k:l=9;break t;case O:l=11;break t;case P:l=14;break t;case M:l=16,r=null;break t}throw Error(i(130,null==t?t:typeof t,""))}return(e=Pc(l,n,e,a)).elementType=t,e.type=r,e.lanes=o,e}function Tc(t,e,n,r){return(t=Pc(7,t,r,e)).lanes=n,t}function $c(t,e,n,r){return(t=Pc(22,t,r,e)).elementType=N,t.lanes=n,t.stateNode={isHidden:!1},t}function Uc(t,e,n){return(t=Pc(6,t,null,e)).lanes=n,t}function zc(t,e,n){return(e=Pc(4,null!==t.children?t.children:[],t.key,e)).lanes=n,e.stateNode={containerInfo:t.containerInfo,pendingChildren:null,implementation:t.implementation},e}function Rc(t,e,n,r,a){this.tag=e,this.containerInfo=t,this.finishedWork=this.pingCache=this.current=this.pendingChildren=null,this.timeoutHandle=-1,this.callbackNode=this.pendingContext=this.context=null,this.callbackPriority=0,this.eventTimes=he(0),this.expirationTimes=he(-1),this.entangledLanes=this.finishedLanes=this.mutableReadLanes=this.expiredLanes=this.pingedLanes=this.suspendedLanes=this.pendingLanes=0,this.entanglements=he(0),this.identifierPrefix=r,this.onRecoverableError=a,this.mutableSourceEagerHydrationData=null}function Fc(t,e,n,r,a,o,i,l,u){return t=new Rc(t,e,n,l,u),1===e?(e=1,!0===o&&(e|=8)):e=0,o=Pc(3,null,null,e),t.current=o,o.stateNode=t,o.memoizedState={element:r,isDehydrated:n,cache:null,transitions:null,pendingSuspenseBoundaries:null},Mo(o),t}function Lc(t,e,n){var r=3<arguments.length&&void 0!==arguments[3]?arguments[3]:null;return{$$typeof:E,key:null==r?null:""+r,children:t,containerInfo:e,implementation:n}}function Dc(t){if(!t)return ka;t:{if(Dt(t=t._reactInternals)!==t||1!==t.tag)throw Error(i(170));var e=t;do{switch(e.tag){case 3:e=e.stateNode.context;break t;case 1:if(Ma(e.type)){e=e.stateNode.__reactInternalMemoizedMergedChildContext;break t}}e=e.return}while(null!==e);throw Error(i(171))}if(1===t.tag){var n=t.type;if(Ma(n))return Ta(t,n,e)}return e}function Qc(t,e,n,r,a,o,i,l,u){return(t=Fc(n,r,!0,t,0,o,0,l,u)).context=Dc(null),n=t.current,(o=jo(r=ec(),a=nc(n))).callback=null!=e?e:null,To(n,o,a),t.current.lanes=a,Ce(t,a,r),ac(t,r),t}function Gc(t,e,n,r){var a=e.current,o=ec(),i=nc(a);return n=Dc(n),null===e.context?e.context=n:e.pendingContext=n,(e=jo(o,i)).payload={element:t},null!==(r=void 0===r?null:r)&&(e.callback=r),null!==(t=To(a,e,i))&&(rc(t,a,i,o),$o(t,a,i)),i}function Wc(t){return(t=t.current).child?(t.child.tag,t.child.stateNode):null}function Vc(t,e){if(null!==(t=t.memoizedState)&&null!==t.dehydrated){var n=t.retryLane;t.retryLane=0!==n&&n<e?n:e}}function qc(t,e){Vc(t,e),(t=t.alternate)&&Vc(t,e)}wu=function(t,e,n){if(null!==t)if(t.memoizedProps!==e.pendingProps||Ja.current)vl=!0;else{if(0==(t.lanes&n)&&0==(128&e.flags))return vl=!1,function(t,e,n){switch(e.tag){case 3:_l(e),mo();break;case 5:li(e);break;case 1:Ma(e.type)&&$a(e);break;case 4:oi(e,e.stateNode.containerInfo);break;case 10:var r=e.type._context,a=e.memoizedProps.value;Sa(yo,r._currentValue),r._currentValue=a;break;case 13:if(null!==(r=e.memoizedState))return null!==r.dehydrated?(Sa(ci,1&ci.current),e.flags|=128,null):0!=(n&e.child.childLanes)?Ul(t,e,n):(Sa(ci,1&ci.current),null!==(t=Gl(t,e,n))?t.sibling:null);Sa(ci,1&ci.current);break;case 19:if(r=0!=(n&e.childLanes),0!=(128&t.flags)){if(r)return Dl(t,e,n);e.flags|=128}if(null!==(a=e.memoizedState)&&(a.rendering=null,a.tail=null,a.lastEffect=null),Sa(ci,ci.current),r)break;return null;case 22:case 23:return e.lanes=0,Il(t,e,n)}return Gl(t,e,n)}(t,e,n);vl=0!=(131072&t.flags)}else vl=!1,oo&&0!=(1048576&e.flags)&&to(e,Va,e.index);switch(e.lanes=0,e.tag){case 2:var r=e.type;Ql(t,e),t=e.pendingProps;var a=Pa(e,Oa.current);Io(e,n),a=Bi(null,e,r,t,a,n);var o=Ii();return e.flags|=1,"object"==typeof a&&null!==a&&"function"==typeof a.render&&void 0===a.$$typeof?(e.tag=1,e.memoizedState=null,e.updateQueue=null,Ma(r)?(o=!0,$a(e)):o=!1,e.memoizedState=null!==a.state&&void 0!==a.state?a.state:null,Mo(e),a.updater=Do,e.stateNode=a,a._reactInternals=e,Vo(e,r,t,n),e=Jl(null,e,r,!0,o,n)):(e.tag=0,oo&&o&&eo(e),xl(null,e,a,n),e=e.child),e;case 16:r=e.elementType;t:{switch(Ql(t,e),t=e.pendingProps,r=(a=r._init)(r._payload),e.type=r,a=e.tag=function(t){if("function"==typeof t)return Mc(t)?1:0;if(null!=t){if((t=t.$$typeof)===O)return 11;if(t===P)return 14}return 2}(r),t=Co(r,t),a){case 0:e=kl(null,e,r,t,n);break t;case 1:e=Ol(null,e,r,t,n);break t;case 11:e=El(null,e,r,t,n);break t;case 14:e=wl(null,e,r,Co(r.type,t),n);break t}throw Error(i(306,r,""))}return e;case 0:return r=e.type,a=e.pendingProps,kl(t,e,r,a=e.elementType===r?a:Co(r,a),n);case 1:return r=e.type,a=e.pendingProps,Ol(t,e,r,a=e.elementType===r?a:Co(r,a),n);case 3:t:{if(_l(e),null===t)throw Error(i(387));r=e.pendingProps,a=(o=e.memoizedState).element,No(t,e),zo(e,r,null,n);var l=e.memoizedState;if(r=l.element,o.isDehydrated){if(o={element:r,isDehydrated:!1,cache:l.cache,pendingSuspenseBoundaries:l.pendingSuspenseBoundaries,transitions:l.transitions},e.updateQueue.baseState=o,e.memoizedState=o,256&e.flags){e=Pl(t,e,r,n,a=sl(Error(i(423)),e));break t}if(r!==a){e=Pl(t,e,r,n,a=sl(Error(i(424)),e));break t}for(ao=pa(e.stateNode.containerInfo.firstChild),ro=e,oo=!0,io=null,n=Zo(e,null,r,n),e.child=n;n;)n.flags=-3&n.flags|4096,n=n.sibling}else{if(mo(),r===a){e=Gl(t,e,n);break t}xl(t,e,r,n)}e=e.child}return e;case 5:return li(e),null===t&&po(e),r=e.type,a=e.pendingProps,o=null!==t?t.memoizedProps:null,l=a.children,ra(r,a)?l=null:null!==o&&ra(r,o)&&(e.flags|=32),Sl(t,e),xl(t,e,l,n),e.child;case 6:return null===t&&po(e),null;case 13:return Ul(t,e,n);case 4:return oi(e,e.stateNode.containerInfo),r=e.pendingProps,null===t?e.child=Xo(e,null,r,n):xl(t,e,r,n),e.child;case 11:return r=e.type,a=e.pendingProps,El(t,e,r,a=e.elementType===r?a:Co(r,a),n);case 7:return xl(t,e,e.pendingProps,n),e.child;case 8:case 12:return xl(t,e,e.pendingProps.children,n),e.child;case 10:t:{if(r=e.type._context,a=e.pendingProps,o=e.memoizedProps,l=a.value,Sa(yo,r._currentValue),r._currentValue=l,null!==o)if(ur(o.value,l)){if(o.children===a.children&&!Ja.current){e=Gl(t,e,n);break t}}else for(null!==(o=e.child)&&(o.return=e);null!==o;){var u=o.dependencies;if(null!==u){l=o.child;for(var c=u.firstContext;null!==c;){if(c.context===r){if(1===o.tag){(c=jo(-1,n&-n)).tag=2;var p=o.updateQueue;if(null!==p){var s=(p=p.shared).pending;null===s?c.next=c:(c.next=s.next,s.next=c),p.pending=c}}o.lanes|=n,null!==(c=o.alternate)&&(c.lanes|=n),Bo(o.return,n,e),u.lanes|=n;break}c=c.next}}else if(10===o.tag)l=o.type===e.type?null:o.child;else if(18===o.tag){if(null===(l=o.return))throw Error(i(341));l.lanes|=n,null!==(u=l.alternate)&&(u.lanes|=n),Bo(l,n,e),l=o.sibling}else l=o.child;if(null!==l)l.return=o;else for(l=o;null!==l;){if(l===e){l=null;break}if(null!==(o=l.sibling)){o.return=l.return,l=o;break}l=l.return}o=l}xl(t,e,a.children,n),e=e.child}return e;case 9:return a=e.type,r=e.pendingProps.children,Io(e,n),r=r(a=So(a)),e.flags|=1,xl(t,e,r,n),e.child;case 14:return a=Co(r=e.type,e.pendingProps),wl(t,e,r,a=Co(r.type,a),n);case 15:return Bl(t,e,e.type,e.pendingProps,n);case 17:return r=e.type,a=e.pendingProps,a=e.elementType===r?a:Co(r,a),Ql(t,e),e.tag=1,Ma(r)?(t=!0,$a(e)):t=!1,Io(e,n),Go(e,r,a),Vo(e,r,a,n),Jl(null,e,r,!0,t,n);case 19:return Dl(t,e,n);case 22:return Il(t,e,n)}throw Error(i(156,e.tag))};var Hc="function"==typeof reportError?reportError:function(t){r.error(t)};function Kc(t){this._internalRoot=t}function Yc(t){this._internalRoot=t}function Xc(t){return!(!t||1!==t.nodeType&&9!==t.nodeType&&11!==t.nodeType)}function Zc(t){return!(!t||1!==t.nodeType&&9!==t.nodeType&&11!==t.nodeType&&(8!==t.nodeType||" react-mount-point-unstable "!==t.nodeValue))}function tp(){}function ep(t,e,n,r,a){var o=n._reactRootContainer;if(o){var i=o;if("function"==typeof a){var l=a;a=function(){var t=Wc(i);l.call(t)}}Gc(e,i,t,a)}else i=function(t,e,n,r,a){if(a){if("function"==typeof r){var o=r;r=function(){var t=Wc(i);o.call(t)}}var i=Qc(e,r,t,0,null,!1,0,"",tp);return t._reactRootContainer=i,t[da]=i.current,Dr(8===t.nodeType?t.parentNode:t),sc(),i}for(;a=t.lastChild;)t.removeChild(a);if("function"==typeof r){var l=r;r=function(){var t=Wc(u);l.call(t)}}var u=Fc(t,0,!1,null,0,!1,0,"",tp);return t._reactRootContainer=u,t[da]=u.current,Dr(8===t.nodeType?t.parentNode:t),sc((function(){Gc(e,u,n,r)})),u}(n,e,t,a,r);return Wc(i)}Yc.prototype.render=Kc.prototype.render=function(t){var e=this._internalRoot;if(null===e)throw Error(i(409));Gc(t,e,null,null)},Yc.prototype.unmount=Kc.prototype.unmount=function(){var t=this._internalRoot;if(null!==t){this._internalRoot=null;var e=t.containerInfo;sc((function(){Gc(null,t,null,null)})),e[da]=null}},Yc.prototype.unstable_scheduleHydration=function(t){if(t){var e=Be();t={blockedOn:null,target:t,priority:e};for(var n=0;n<Ne.length&&0!==e&&e<Ne[n].priority;n++);Ne.splice(n,0,t),0===n&&Ue(t)}},xe=function(t){switch(t.tag){case 3:var e=t.stateNode;if(e.current.memoizedState.isDehydrated){var n=Ae(e.pendingLanes);0!==n&&(ye(e,1|n),ac(e,Xt()),0==(6&Ou)&&(Du=Xt()+500,Da()))}break;case 13:sc((function(){var e=_o(t,1);if(null!==e){var n=ec();rc(e,t,1,n)}})),qc(t,1)}},Ee=function(t){if(13===t.tag){var e=_o(t,134217728);null!==e&&rc(e,t,134217728,ec()),qc(t,134217728)}},we=function(t){if(13===t.tag){var e=nc(t),n=_o(t,e);null!==n&&rc(n,t,e,ec()),qc(t,e)}},Be=function(){return be},Ie=function(t,e){var n=be;try{return be=t,e()}finally{be=n}},Et=function(t,e,n){switch(e){case"input":if(Z(t,n),e=n.name,"radio"===n.type&&null!=e){for(n=t;n.parentNode;)n=n.parentNode;for(n=n.querySelectorAll("input[name="+JSON.stringify(""+e)+'][type="radio"]'),e=0;e<n.length;e++){var r=n[e];if(r!==t&&r.form===t.form){var a=xa(r);if(!a)throw Error(i(90));q(r),Z(r,a)}}}break;case"textarea":it(t,n);break;case"select":null!=(e=n.value)&&rt(t,!!n.multiple,e,!1)}},Ot=pc,Jt=sc;var np={usingClientEntryPoint:!1,Events:[ba,va,xa,St,kt,pc]},rp={findFiberByHostInstance:ya,bundleType:0,version:"18.2.0",rendererPackageName:"react-dom"},ap={bundleType:rp.bundleType,version:rp.version,rendererPackageName:rp.rendererPackageName,rendererConfig:rp.rendererConfig,overrideHookState:null,overrideHookStateDeletePath:null,overrideHookStateRenamePath:null,overrideProps:null,overridePropsDeletePath:null,overridePropsRenamePath:null,setErrorHandler:null,setSuspenseHandler:null,scheduleUpdate:null,currentDispatcherRef:v.ReactCurrentDispatcher,findHostInstanceByFiber:function(t){return null===(t=Wt(t))?null:t.stateNode},findFiberByHostInstance:rp.findFiberByHostInstance||function(){return null},findHostInstancesForRefresh:null,scheduleRefresh:null,scheduleRoot:null,setRefreshHandler:null,getCurrentFiber:null,reconcilerVersion:"18.2.0-next-9e3b772b8-20220608"};if("undefined"!=typeof __REACT_DEVTOOLS_GLOBAL_HOOK__){var op=__REACT_DEVTOOLS_GLOBAL_HOOK__;if(!op.isDisabled&&op.supportsFiber)try{oe=op.inject(ap),ie=op}catch(st){}}e.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=np,e.createPortal=function(t,e){var n=2<arguments.length&&void 0!==arguments[2]?arguments[2]:null;if(!Xc(e))throw Error(i(200));return Lc(t,e,null,n)},e.createRoot=function(t,e){if(!Xc(t))throw Error(i(299));var n=!1,r="",a=Hc;return null!=e&&(!0===e.unstable_strictMode&&(n=!0),void 0!==e.identifierPrefix&&(r=e.identifierPrefix),void 0!==e.onRecoverableError&&(a=e.onRecoverableError)),e=Fc(t,1,!1,null,0,n,0,r,a),t[da]=e.current,Dr(8===t.nodeType?t.parentNode:t),new Kc(e)},e.findDOMNode=function(t){if(null==t)return null;if(1===t.nodeType)return t;var e=t._reactInternals;if(void 0===e){if("function"==typeof t.render)throw Error(i(188));throw t=Object.keys(t).join(","),Error(i(268,t))}return null===(t=Wt(e))?null:t.stateNode},e.flushSync=function(t){return sc(t)},e.hydrate=function(t,e,n){if(!Zc(e))throw Error(i(200));return ep(null,t,e,!0,n)},e.hydrateRoot=function(t,e,n){if(!Xc(t))throw Error(i(405));var r=null!=n&&n.hydratedSources||null,a=!1,o="",l=Hc;if(null!=n&&(!0===n.unstable_strictMode&&(a=!0),void 0!==n.identifierPrefix&&(o=n.identifierPrefix),void 0!==n.onRecoverableError&&(l=n.onRecoverableError)),e=Qc(e,null,t,1,null!=n?n:null,a,0,o,l),t[da]=e.current,Dr(t),r)for(t=0;t<r.length;t++)a=(a=(n=r[t])._getVersion)(n._source),null==e.mutableSourceEagerHydrationData?e.mutableSourceEagerHydrationData=[n,a]:e.mutableSourceEagerHydrationData.push(n,a);return new Yc(e)},e.render=function(t,e,n){if(!Zc(e))throw Error(i(200));return ep(null,t,e,!1,n)},e.unmountComponentAtNode=function(t){if(!Zc(t))throw Error(i(40));return!!t._reactRootContainer&&(sc((function(){ep(null,null,t,!1,(function(){t._reactRootContainer=null,t[da]=null}))})),!0)},e.unstable_batchedUpdates=pc,e.unstable_renderSubtreeIntoContainer=function(t,e,n,r){if(!Zc(n))throw Error(i(200));if(null==t||void 0===t._reactInternals)throw Error(i(38));return ep(t,e,n,!1,r)},e.version="18.2.0-next-9e3b772b8-20220608"},3935:(t,e,n)=>{"use strict";var r=n(5108);!function t(){if("undefined"!=typeof __REACT_DEVTOOLS_GLOBAL_HOOK__&&"function"==typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE)try{__REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE(t)}catch(t){r.error(t)}}(),t.exports=n(4448)},2408:(t,e)=>{"use strict";var n=Symbol.for("react.element"),r=Symbol.for("react.portal"),a=Symbol.for("react.fragment"),o=Symbol.for("react.strict_mode"),i=Symbol.for("react.profiler"),l=Symbol.for("react.provider"),u=Symbol.for("react.context"),c=Symbol.for("react.forward_ref"),p=Symbol.for("react.suspense"),s=Symbol.for("react.memo"),A=Symbol.for("react.lazy"),f=Symbol.iterator,m={isMounted:function(){return!1},enqueueForceUpdate:function(){},enqueueReplaceState:function(){},enqueueSetState:function(){}},d=Object.assign,g={};function h(t,e,n){this.props=t,this.context=e,this.refs=g,this.updater=n||m}function C(){}function y(t,e,n){this.props=t,this.context=e,this.refs=g,this.updater=n||m}h.prototype.isReactComponent={},h.prototype.setState=function(t,e){if("object"!=typeof t&&"function"!=typeof t&&null!=t)throw Error("setState(...): takes an object of state variables to update or a function which returns an object of state variables.");this.updater.enqueueSetState(this,t,e,"setState")},h.prototype.forceUpdate=function(t){this.updater.enqueueForceUpdate(this,t,"forceUpdate")},C.prototype=h.prototype;var b=y.prototype=new C;b.constructor=y,d(b,h.prototype),b.isPureReactComponent=!0;var v=Array.isArray,x=Object.prototype.hasOwnProperty,E={current:null},w={key:!0,ref:!0,__self:!0,__source:!0};function B(t,e,r){var a,o={},i=null,l=null;if(null!=e)for(a in void 0!==e.ref&&(l=e.ref),void 0!==e.key&&(i=""+e.key),e)x.call(e,a)&&!w.hasOwnProperty(a)&&(o[a]=e[a]);var u=arguments.length-2;if(1===u)o.children=r;else if(1<u){for(var c=Array(u),p=0;p<u;p++)c[p]=arguments[p+2];o.children=c}if(t&&t.defaultProps)for(a in u=t.defaultProps)void 0===o[a]&&(o[a]=u[a]);return{$$typeof:n,type:t,key:i,ref:l,props:o,_owner:E.current}}function I(t){return"object"==typeof t&&null!==t&&t.$$typeof===n}var S=/\/+/g;function k(t,e){return"object"==typeof t&&null!==t&&null!=t.key?function(t){var e={"=":"=0",":":"=2"};return"$"+t.replace(/[=:]/g,(function(t){return e[t]}))}(""+t.key):e.toString(36)}function O(t,e,a,o,i){var l=typeof t;"undefined"!==l&&"boolean"!==l||(t=null);var u=!1;if(null===t)u=!0;else switch(l){case"string":case"number":u=!0;break;case"object":switch(t.$$typeof){case n:case r:u=!0}}if(u)return i=i(u=t),t=""===o?"."+k(u,0):o,v(i)?(a="",null!=t&&(a=t.replace(S,"$&/")+"/"),O(i,e,a,"",(function(t){return t}))):null!=i&&(I(i)&&(i=function(t,e){return{$$typeof:n,type:t.type,key:e,ref:t.ref,props:t.props,_owner:t._owner}}(i,a+(!i.key||u&&u.key===i.key?"":(""+i.key).replace(S,"$&/")+"/")+t)),e.push(i)),1;if(u=0,o=""===o?".":o+":",v(t))for(var c=0;c<t.length;c++){var p=o+k(l=t[c],c);u+=O(l,e,a,p,i)}else if(p=function(t){return null===t||"object"!=typeof t?null:"function"==typeof(t=f&&t[f]||t["@@iterator"])?t:null}(t),"function"==typeof p)for(t=p.call(t),c=0;!(l=t.next()).done;)u+=O(l=l.value,e,a,p=o+k(l,c++),i);else if("object"===l)throw e=String(t),Error("Objects are not valid as a React child (found: "+("[object Object]"===e?"object with keys {"+Object.keys(t).join(", ")+"}":e)+"). If you meant to render a collection of children, use an array instead.");return u}function J(t,e,n){if(null==t)return t;var r=[],a=0;return O(t,r,"","",(function(t){return e.call(n,t,a++)})),r}function _(t){if(-1===t._status){var e=t._result;(e=e()).then((function(e){0!==t._status&&-1!==t._status||(t._status=1,t._result=e)}),(function(e){0!==t._status&&-1!==t._status||(t._status=2,t._result=e)})),-1===t._status&&(t._status=0,t._result=e)}if(1===t._status)return t._result.default;throw t._result}var P={current:null},M={transition:null},N={ReactCurrentDispatcher:P,ReactCurrentBatchConfig:M,ReactCurrentOwner:E};e.Children={map:J,forEach:function(t,e,n){J(t,(function(){e.apply(this,arguments)}),n)},count:function(t){var e=0;return J(t,(function(){e++})),e},toArray:function(t){return J(t,(function(t){return t}))||[]},only:function(t){if(!I(t))throw Error("React.Children.only expected to receive a single React element child.");return t}},e.Component=h,e.Fragment=a,e.Profiler=i,e.PureComponent=y,e.StrictMode=o,e.Suspense=p,e.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=N,e.cloneElement=function(t,e,r){if(null==t)throw Error("React.cloneElement(...): The argument must be a React element, but you passed "+t+".");var a=d({},t.props),o=t.key,i=t.ref,l=t._owner;if(null!=e){if(void 0!==e.ref&&(i=e.ref,l=E.current),void 0!==e.key&&(o=""+e.key),t.type&&t.type.defaultProps)var u=t.type.defaultProps;for(c in e)x.call(e,c)&&!w.hasOwnProperty(c)&&(a[c]=void 0===e[c]&&void 0!==u?u[c]:e[c])}var c=arguments.length-2;if(1===c)a.children=r;else if(1<c){u=Array(c);for(var p=0;p<c;p++)u[p]=arguments[p+2];a.children=u}return{$$typeof:n,type:t.type,key:o,ref:i,props:a,_owner:l}},e.createContext=function(t){return(t={$$typeof:u,_currentValue:t,_currentValue2:t,_threadCount:0,Provider:null,Consumer:null,_defaultValue:null,_globalName:null}).Provider={$$typeof:l,_context:t},t.Consumer=t},e.createElement=B,e.createFactory=function(t){var e=B.bind(null,t);return e.type=t,e},e.createRef=function(){return{current:null}},e.forwardRef=function(t){return{$$typeof:c,render:t}},e.isValidElement=I,e.lazy=function(t){return{$$typeof:A,_payload:{_status:-1,_result:t},_init:_}},e.memo=function(t,e){return{$$typeof:s,type:t,compare:void 0===e?null:e}},e.startTransition=function(t){var e=M.transition;M.transition={};try{t()}finally{M.transition=e}},e.unstable_act=function(){throw Error("act(...) is not supported in production builds of React.")},e.useCallback=function(t,e){return P.current.useCallback(t,e)},e.useContext=function(t){return P.current.useContext(t)},e.useDebugValue=function(){},e.useDeferredValue=function(t){return P.current.useDeferredValue(t)},e.useEffect=function(t,e){return P.current.useEffect(t,e)},e.useId=function(){return P.current.useId()},e.useImperativeHandle=function(t,e,n){return P.current.useImperativeHandle(t,e,n)},e.useInsertionEffect=function(t,e){return P.current.useInsertionEffect(t,e)},e.useLayoutEffect=function(t,e){return P.current.useLayoutEffect(t,e)},e.useMemo=function(t,e){return P.current.useMemo(t,e)},e.useReducer=function(t,e,n){return P.current.useReducer(t,e,n)},e.useRef=function(t){return P.current.useRef(t)},e.useState=function(t){return P.current.useState(t)},e.useSyncExternalStore=function(t,e,n){return P.current.useSyncExternalStore(t,e,n)},e.useTransition=function(){return P.current.useTransition()},e.version="18.2.0"},7294:(t,e,n)=>{"use strict";t.exports=n(2408)},53:(t,e,n)=>{"use strict";var r=n(5108);function a(t,e){var n=t.length;t.push(e);t:for(;0<n;){var r=n-1>>>1,a=t[r];if(!(0<l(a,e)))break t;t[r]=e,t[n]=a,n=r}}function o(t){return 0===t.length?null:t[0]}function i(t){if(0===t.length)return null;var e=t[0],n=t.pop();if(n!==e){t[0]=n;t:for(var r=0,a=t.length,o=a>>>1;r<o;){var i=2*(r+1)-1,u=t[i],c=i+1,p=t[c];if(0>l(u,n))c<a&&0>l(p,u)?(t[r]=p,t[c]=n,r=c):(t[r]=u,t[i]=n,r=i);else{if(!(c<a&&0>l(p,n)))break t;t[r]=p,t[c]=n,r=c}}}return e}function l(t,e){var n=t.sortIndex-e.sortIndex;return 0!==n?n:t.id-e.id}if("object"==typeof performance&&"function"==typeof performance.now){var u=performance;e.unstable_now=function(){return u.now()}}else{var c=Date,p=c.now();e.unstable_now=function(){return c.now()-p}}var s=[],A=[],f=1,m=null,d=3,g=!1,h=!1,C=!1,y="function"==typeof setTimeout?setTimeout:null,b="function"==typeof clearTimeout?clearTimeout:null,v="undefined"!=typeof setImmediate?setImmediate:null;function x(t){for(var e=o(A);null!==e;){if(null===e.callback)i(A);else{if(!(e.startTime<=t))break;i(A),e.sortIndex=e.expirationTime,a(s,e)}e=o(A)}}function E(t){if(C=!1,x(t),!h)if(null!==o(s))h=!0,j(w);else{var e=o(A);null!==e&&T(E,e.startTime-t)}}function w(t,n){h=!1,C&&(C=!1,b(k),k=-1),g=!0;var r=d;try{for(x(n),m=o(s);null!==m&&(!(m.expirationTime>n)||t&&!_());){var a=m.callback;if("function"==typeof a){m.callback=null,d=m.priorityLevel;var l=a(m.expirationTime<=n);n=e.unstable_now(),"function"==typeof l?m.callback=l:m===o(s)&&i(s),x(n)}else i(s);m=o(s)}if(null!==m)var u=!0;else{var c=o(A);null!==c&&T(E,c.startTime-n),u=!1}return u}finally{m=null,d=r,g=!1}}"undefined"!=typeof navigator&&void 0!==navigator.scheduling&&void 0!==navigator.scheduling.isInputPending&&navigator.scheduling.isInputPending.bind(navigator.scheduling);var B,I=!1,S=null,k=-1,O=5,J=-1;function _(){return!(e.unstable_now()-J<O)}function P(){if(null!==S){var t=e.unstable_now();J=t;var n=!0;try{n=S(!0,t)}finally{n?B():(I=!1,S=null)}}else I=!1}if("function"==typeof v)B=function(){v(P)};else if("undefined"!=typeof MessageChannel){var M=new MessageChannel,N=M.port2;M.port1.onmessage=P,B=function(){N.postMessage(null)}}else B=function(){y(P,0)};function j(t){S=t,I||(I=!0,B())}function T(t,n){k=y((function(){t(e.unstable_now())}),n)}e.unstable_IdlePriority=5,e.unstable_ImmediatePriority=1,e.unstable_LowPriority=4,e.unstable_NormalPriority=3,e.unstable_Profiling=null,e.unstable_UserBlockingPriority=2,e.unstable_cancelCallback=function(t){t.callback=null},e.unstable_continueExecution=function(){h||g||(h=!0,j(w))},e.unstable_forceFrameRate=function(t){0>t||125<t?r.error("forceFrameRate takes a positive int between 0 and 125, forcing frame rates higher than 125 fps is not supported"):O=0<t?Math.floor(1e3/t):5},e.unstable_getCurrentPriorityLevel=function(){return d},e.unstable_getFirstCallbackNode=function(){return o(s)},e.unstable_next=function(t){switch(d){case 1:case 2:case 3:var e=3;break;default:e=d}var n=d;d=e;try{return t()}finally{d=n}},e.unstable_pauseExecution=function(){},e.unstable_requestPaint=function(){},e.unstable_runWithPriority=function(t,e){switch(t){case 1:case 2:case 3:case 4:case 5:break;default:t=3}var n=d;d=t;try{return e()}finally{d=n}},e.unstable_scheduleCallback=function(t,n,r){var i=e.unstable_now();switch(r="object"==typeof r&&null!==r&&"number"==typeof(r=r.delay)&&0<r?i+r:i,t){case 1:var l=-1;break;case 2:l=250;break;case 5:l=1073741823;break;case 4:l=1e4;break;default:l=5e3}return t={id:f++,callback:n,priorityLevel:t,startTime:r,expirationTime:l=r+l,sortIndex:-1},r>i?(t.sortIndex=r,a(A,t),null===o(s)&&t===o(A)&&(C?(b(k),k=-1):C=!0,T(E,r-i))):(t.sortIndex=l,a(s,t),h||g||(h=!0,j(w))),t},e.unstable_shouldYield=_,e.unstable_wrapCallback=function(t){var e=d;return function(){var n=d;d=e;try{return t.apply(this,arguments)}finally{d=n}}}},3840:(t,e,n)=>{"use strict";t.exports=n(53)},3379:t=>{"use strict";var e=[];function n(t){for(var n=-1,r=0;r<e.length;r++)if(e[r].identifier===t){n=r;break}return n}function r(t,r){for(var o={},i=[],l=0;l<t.length;l++){var u=t[l],c=r.base?u[0]+r.base:u[0],p=o[c]||0,s="".concat(c," ").concat(p);o[c]=p+1;var A=n(s),f={css:u[1],media:u[2],sourceMap:u[3],supports:u[4],layer:u[5]};if(-1!==A)e[A].references++,e[A].updater(f);else{var m=a(f,r);r.byIndex=l,e.splice(l,0,{identifier:s,updater:m,references:1})}i.push(s)}return i}function a(t,e){var n=e.domAPI(e);return n.update(t),function(e){if(e){if(e.css===t.css&&e.media===t.media&&e.sourceMap===t.sourceMap&&e.supports===t.supports&&e.layer===t.layer)return;n.update(t=e)}else n.remove()}}t.exports=function(t,a){var o=r(t=t||[],a=a||{});return function(t){t=t||[];for(var i=0;i<o.length;i++){var l=n(o[i]);e[l].references--}for(var u=r(t,a),c=0;c<o.length;c++){var p=n(o[c]);0===e[p].references&&(e[p].updater(),e.splice(p,1))}o=u}}},569:t=>{"use strict";var e={};t.exports=function(t,n){var r=function(t){if(void 0===e[t]){var n=document.querySelector(t);if(window.HTMLIFrameElement&&n instanceof window.HTMLIFrameElement)try{n=n.contentDocument.head}catch(t){n=null}e[t]=n}return e[t]}(t);if(!r)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");r.appendChild(n)}},9216:t=>{"use strict";t.exports=function(t){var e=document.createElement("style");return t.setAttributes(e,t.attributes),t.insert(e,t.options),e}},3565:(t,e,n)=>{"use strict";t.exports=function(t){var e=n.nc;e&&t.setAttribute("nonce",e)}},7795:t=>{"use strict";t.exports=function(t){var e=t.insertStyleElement(t);return{update:function(n){!function(t,e,n){var r="";n.supports&&(r+="@supports (".concat(n.supports,") {")),n.media&&(r+="@media ".concat(n.media," {"));var a=void 0!==n.layer;a&&(r+="@layer".concat(n.layer.length>0?" ".concat(n.layer):""," {")),r+=n.css,a&&(r+="}"),n.media&&(r+="}"),n.supports&&(r+="}");var o=n.sourceMap;o&&"undefined"!=typeof btoa&&(r+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(o))))," */")),e.styleTagTransform(r,t,e.options)}(e,t,n)},remove:function(){!function(t){if(null===t.parentNode)return!1;t.parentNode.removeChild(t)}(e)}}}},4589:t=>{"use strict";t.exports=function(t,e){if(e.styleSheet)e.styleSheet.cssText=t;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(t))}}},384:t=>{t.exports=function(t){return t&&"object"==typeof t&&"function"==typeof t.copy&&"function"==typeof t.fill&&"function"==typeof t.readUInt8}},5955:(t,e,n)=>{"use strict";var r=n(2584),a=n(8662),o=n(6430),i=n(5692);function l(t){return t.call.bind(t)}var u="undefined"!=typeof BigInt,c="undefined"!=typeof Symbol,p=l(Object.prototype.toString),s=l(Number.prototype.valueOf),A=l(String.prototype.valueOf),f=l(Boolean.prototype.valueOf);if(u)var m=l(BigInt.prototype.valueOf);if(c)var d=l(Symbol.prototype.valueOf);function g(t,e){if("object"!=typeof t)return!1;try{return e(t),!0}catch(t){return!1}}function h(t){return"[object Map]"===p(t)}function C(t){return"[object Set]"===p(t)}function y(t){return"[object WeakMap]"===p(t)}function b(t){return"[object WeakSet]"===p(t)}function v(t){return"[object ArrayBuffer]"===p(t)}function x(t){return"undefined"!=typeof ArrayBuffer&&(v.working?v(t):t instanceof ArrayBuffer)}function E(t){return"[object DataView]"===p(t)}function w(t){return"undefined"!=typeof DataView&&(E.working?E(t):t instanceof DataView)}e.isArgumentsObject=r,e.isGeneratorFunction=a,e.isTypedArray=i,e.isPromise=function(t){return"undefined"!=typeof Promise&&t instanceof Promise||null!==t&&"object"==typeof t&&"function"==typeof t.then&&"function"==typeof t.catch},e.isArrayBufferView=function(t){return"undefined"!=typeof ArrayBuffer&&ArrayBuffer.isView?ArrayBuffer.isView(t):i(t)||w(t)},e.isUint8Array=function(t){return"Uint8Array"===o(t)},e.isUint8ClampedArray=function(t){return"Uint8ClampedArray"===o(t)},e.isUint16Array=function(t){return"Uint16Array"===o(t)},e.isUint32Array=function(t){return"Uint32Array"===o(t)},e.isInt8Array=function(t){return"Int8Array"===o(t)},e.isInt16Array=function(t){return"Int16Array"===o(t)},e.isInt32Array=function(t){return"Int32Array"===o(t)},e.isFloat32Array=function(t){return"Float32Array"===o(t)},e.isFloat64Array=function(t){return"Float64Array"===o(t)},e.isBigInt64Array=function(t){return"BigInt64Array"===o(t)},e.isBigUint64Array=function(t){return"BigUint64Array"===o(t)},h.working="undefined"!=typeof Map&&h(new Map),e.isMap=function(t){return"undefined"!=typeof Map&&(h.working?h(t):t instanceof Map)},C.working="undefined"!=typeof Set&&C(new Set),e.isSet=function(t){return"undefined"!=typeof Set&&(C.working?C(t):t instanceof Set)},y.working="undefined"!=typeof WeakMap&&y(new WeakMap),e.isWeakMap=function(t){return"undefined"!=typeof WeakMap&&(y.working?y(t):t instanceof WeakMap)},b.working="undefined"!=typeof WeakSet&&b(new WeakSet),e.isWeakSet=function(t){return b(t)},v.working="undefined"!=typeof ArrayBuffer&&v(new ArrayBuffer),e.isArrayBuffer=x,E.working="undefined"!=typeof ArrayBuffer&&"undefined"!=typeof DataView&&E(new DataView(new ArrayBuffer(1),0,1)),e.isDataView=w;var B="undefined"!=typeof SharedArrayBuffer?SharedArrayBuffer:void 0;function I(t){return"[object SharedArrayBuffer]"===p(t)}function S(t){return void 0!==B&&(void 0===I.working&&(I.working=I(new B)),I.working?I(t):t instanceof B)}function k(t){return g(t,s)}function O(t){return g(t,A)}function J(t){return g(t,f)}function _(t){return u&&g(t,m)}function P(t){return c&&g(t,d)}e.isSharedArrayBuffer=S,e.isAsyncFunction=function(t){return"[object AsyncFunction]"===p(t)},e.isMapIterator=function(t){return"[object Map Iterator]"===p(t)},e.isSetIterator=function(t){return"[object Set Iterator]"===p(t)},e.isGeneratorObject=function(t){return"[object Generator]"===p(t)},e.isWebAssemblyCompiledModule=function(t){return"[object WebAssembly.Module]"===p(t)},e.isNumberObject=k,e.isStringObject=O,e.isBooleanObject=J,e.isBigIntObject=_,e.isSymbolObject=P,e.isBoxedPrimitive=function(t){return k(t)||O(t)||J(t)||_(t)||P(t)},e.isAnyArrayBuffer=function(t){return"undefined"!=typeof Uint8Array&&(x(t)||S(t))},["isProxy","isExternal","isModuleNamespaceObject"].forEach((function(t){Object.defineProperty(e,t,{enumerable:!1,value:function(){throw new Error(t+" is not supported in userland")}})}))},9539:(t,e,n)=>{var r=n(4155),a=n(5108),o=Object.getOwnPropertyDescriptors||function(t){for(var e=Object.keys(t),n={},r=0;r<e.length;r++)n[e[r]]=Object.getOwnPropertyDescriptor(t,e[r]);return n},i=/%[sdj%]/g;e.format=function(t){if(!b(t)){for(var e=[],n=0;n<arguments.length;n++)e.push(p(arguments[n]));return e.join(" ")}n=1;for(var r=arguments,a=r.length,o=String(t).replace(i,(function(t){if("%%"===t)return"%";if(n>=a)return t;switch(t){case"%s":return String(r[n++]);case"%d":return Number(r[n++]);case"%j":try{return JSON.stringify(r[n++])}catch(t){return"[Circular]"}default:return t}})),l=r[n];n<a;l=r[++n])C(l)||!E(l)?o+=" "+l:o+=" "+p(l);return o},e.deprecate=function(t,n){if(void 0!==r&&!0===r.noDeprecation)return t;if(void 0===r)return function(){return e.deprecate(t,n).apply(this,arguments)};var o=!1;return function(){if(!o){if(r.throwDeprecation)throw new Error(n);r.traceDeprecation?a.trace(n):a.error(n),o=!0}return t.apply(this,arguments)}};var l={},u=/^$/;if(r.env.NODE_DEBUG){var c=r.env.NODE_DEBUG;c=c.replace(/[|\\{}()[\]^$+?.]/g,"\\$&").replace(/\*/g,".*").replace(/,/g,"$|^").toUpperCase(),u=new RegExp("^"+c+"$","i")}function p(t,n){var r={seen:[],stylize:A};return arguments.length>=3&&(r.depth=arguments[2]),arguments.length>=4&&(r.colors=arguments[3]),h(n)?r.showHidden=n:n&&e._extend(r,n),v(r.showHidden)&&(r.showHidden=!1),v(r.depth)&&(r.depth=2),v(r.colors)&&(r.colors=!1),v(r.customInspect)&&(r.customInspect=!0),r.colors&&(r.stylize=s),f(r,t,r.depth)}function s(t,e){var n=p.styles[e];return n?"["+p.colors[n][0]+"m"+t+"["+p.colors[n][1]+"m":t}function A(t,e){return t}function f(t,n,r){if(t.customInspect&&n&&I(n.inspect)&&n.inspect!==e.inspect&&(!n.constructor||n.constructor.prototype!==n)){var a=n.inspect(r,t);return b(a)||(a=f(t,a,r)),a}var o=function(t,e){if(v(e))return t.stylize("undefined","undefined");if(b(e)){var n="'"+JSON.stringify(e).replace(/^"|"$/g,"").replace(/'/g,"\\'").replace(/\\"/g,'"')+"'";return t.stylize(n,"string")}return y(e)?t.stylize(""+e,"number"):h(e)?t.stylize(""+e,"boolean"):C(e)?t.stylize("null","null"):void 0}(t,n);if(o)return o;var i=Object.keys(n),l=function(t){var e={};return t.forEach((function(t,n){e[t]=!0})),e}(i);if(t.showHidden&&(i=Object.getOwnPropertyNames(n)),B(n)&&(i.indexOf("message")>=0||i.indexOf("description")>=0))return m(n);if(0===i.length){if(I(n)){var u=n.name?": "+n.name:"";return t.stylize("[Function"+u+"]","special")}if(x(n))return t.stylize(RegExp.prototype.toString.call(n),"regexp");if(w(n))return t.stylize(Date.prototype.toString.call(n),"date");if(B(n))return m(n)}var c,p="",s=!1,A=["{","}"];return g(n)&&(s=!0,A=["[","]"]),I(n)&&(p=" [Function"+(n.name?": "+n.name:"")+"]"),x(n)&&(p=" "+RegExp.prototype.toString.call(n)),w(n)&&(p=" "+Date.prototype.toUTCString.call(n)),B(n)&&(p=" "+m(n)),0!==i.length||s&&0!=n.length?r<0?x(n)?t.stylize(RegExp.prototype.toString.call(n),"regexp"):t.stylize("[Object]","special"):(t.seen.push(n),c=s?function(t,e,n,r,a){for(var o=[],i=0,l=e.length;i<l;++i)_(e,String(i))?o.push(d(t,e,n,r,String(i),!0)):o.push("");return a.forEach((function(a){a.match(/^\d+$/)||o.push(d(t,e,n,r,a,!0))})),o}(t,n,r,l,i):i.map((function(e){return d(t,n,r,l,e,s)})),t.seen.pop(),function(t,e,n){return t.reduce((function(t,e){return e.indexOf("\n"),t+e.replace(/\u001b\[\d\d?m/g,"").length+1}),0)>60?n[0]+(""===e?"":e+"\n ")+" "+t.join(",\n  ")+" "+n[1]:n[0]+e+" "+t.join(", ")+" "+n[1]}(c,p,A)):A[0]+p+A[1]}function m(t){return"["+Error.prototype.toString.call(t)+"]"}function d(t,e,n,r,a,o){var i,l,u;if((u=Object.getOwnPropertyDescriptor(e,a)||{value:e[a]}).get?l=u.set?t.stylize("[Getter/Setter]","special"):t.stylize("[Getter]","special"):u.set&&(l=t.stylize("[Setter]","special")),_(r,a)||(i="["+a+"]"),l||(t.seen.indexOf(u.value)<0?(l=C(n)?f(t,u.value,null):f(t,u.value,n-1)).indexOf("\n")>-1&&(l=o?l.split("\n").map((function(t){return"  "+t})).join("\n").substr(2):"\n"+l.split("\n").map((function(t){return"   "+t})).join("\n")):l=t.stylize("[Circular]","special")),v(i)){if(o&&a.match(/^\d+$/))return l;(i=JSON.stringify(""+a)).match(/^"([a-zA-Z_][a-zA-Z_0-9]*)"$/)?(i=i.substr(1,i.length-2),i=t.stylize(i,"name")):(i=i.replace(/'/g,"\\'").replace(/\\"/g,'"').replace(/(^"|"$)/g,"'"),i=t.stylize(i,"string"))}return i+": "+l}function g(t){return Array.isArray(t)}function h(t){return"boolean"==typeof t}function C(t){return null===t}function y(t){return"number"==typeof t}function b(t){return"string"==typeof t}function v(t){return void 0===t}function x(t){return E(t)&&"[object RegExp]"===S(t)}function E(t){return"object"==typeof t&&null!==t}function w(t){return E(t)&&"[object Date]"===S(t)}function B(t){return E(t)&&("[object Error]"===S(t)||t instanceof Error)}function I(t){return"function"==typeof t}function S(t){return Object.prototype.toString.call(t)}function k(t){return t<10?"0"+t.toString(10):t.toString(10)}e.debuglog=function(t){if(t=t.toUpperCase(),!l[t])if(u.test(t)){var n=r.pid;l[t]=function(){var r=e.format.apply(e,arguments);a.error("%s %d: %s",t,n,r)}}else l[t]=function(){};return l[t]},e.inspect=p,p.colors={bold:[1,22],italic:[3,23],underline:[4,24],inverse:[7,27],white:[37,39],grey:[90,39],black:[30,39],blue:[34,39],cyan:[36,39],green:[32,39],magenta:[35,39],red:[31,39],yellow:[33,39]},p.styles={special:"cyan",number:"yellow",boolean:"yellow",undefined:"grey",null:"bold",string:"green",date:"magenta",regexp:"red"},e.types=n(5955),e.isArray=g,e.isBoolean=h,e.isNull=C,e.isNullOrUndefined=function(t){return null==t},e.isNumber=y,e.isString=b,e.isSymbol=function(t){return"symbol"==typeof t},e.isUndefined=v,e.isRegExp=x,e.types.isRegExp=x,e.isObject=E,e.isDate=w,e.types.isDate=w,e.isError=B,e.types.isNativeError=B,e.isFunction=I,e.isPrimitive=function(t){return null===t||"boolean"==typeof t||"number"==typeof t||"string"==typeof t||"symbol"==typeof t||void 0===t},e.isBuffer=n(384);var O=["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"];function J(){var t=new Date,e=[k(t.getHours()),k(t.getMinutes()),k(t.getSeconds())].join(":");return[t.getDate(),O[t.getMonth()],e].join(" ")}function _(t,e){return Object.prototype.hasOwnProperty.call(t,e)}e.log=function(){a.log("%s - %s",J(),e.format.apply(e,arguments))},e.inherits=n(5717),e._extend=function(t,e){if(!e||!E(e))return t;for(var n=Object.keys(e),r=n.length;r--;)t[n[r]]=e[n[r]];return t};var P="undefined"!=typeof Symbol?Symbol("util.promisify.custom"):void 0;function M(t,e){if(!t){var n=new Error("Promise was rejected with a falsy value");n.reason=t,t=n}return e(t)}e.promisify=function(t){if("function"!=typeof t)throw new TypeError('The "original" argument must be of type Function');if(P&&t[P]){var e;if("function"!=typeof(e=t[P]))throw new TypeError('The "util.promisify.custom" argument must be of type Function');return Object.defineProperty(e,P,{value:e,enumerable:!1,writable:!1,configurable:!0}),e}function e(){for(var e,n,r=new Promise((function(t,r){e=t,n=r})),a=[],o=0;o<arguments.length;o++)a.push(arguments[o]);a.push((function(t,r){t?n(t):e(r)}));try{t.apply(this,a)}catch(t){n(t)}return r}return Object.setPrototypeOf(e,Object.getPrototypeOf(t)),P&&Object.defineProperty(e,P,{value:e,enumerable:!1,writable:!1,configurable:!0}),Object.defineProperties(e,o(t))},e.promisify.custom=P,e.callbackify=function(t){if("function"!=typeof t)throw new TypeError('The "original" argument must be of type Function');function e(){for(var e=[],n=0;n<arguments.length;n++)e.push(arguments[n]);var a=e.pop();if("function"!=typeof a)throw new TypeError("The last argument must be of type Function");var o=this,i=function(){return a.apply(o,arguments)};t.apply(this,e).then((function(t){r.nextTick(i.bind(null,null,t))}),(function(t){r.nextTick(M.bind(null,t,i))}))}return Object.setPrototypeOf(e,Object.getPrototypeOf(t)),Object.defineProperties(e,o(t)),e}},6430:(t,e,n)=>{"use strict";var r=n(4029),a=n(3083),o=n(1924),i=o("Object.prototype.toString"),l=n(6410)(),u="undefined"==typeof globalThis?n.g:globalThis,c=a(),p=o("String.prototype.slice"),s={},A=n(882),f=Object.getPrototypeOf;l&&A&&f&&r(c,(function(t){if("function"==typeof u[t]){var e=new u[t];if(Symbol.toStringTag in e){var n=f(e),r=A(n,Symbol.toStringTag);if(!r){var a=f(n);r=A(a,Symbol.toStringTag)}s[t]=r.get}}}));var m=n(5692);t.exports=function(t){return!!m(t)&&(l&&Symbol.toStringTag in t?function(t){var e=!1;return r(s,(function(n,r){if(!e)try{var a=n.call(t);a===r&&(e=a)}catch(t){}})),e}(t):p(i(t),8,-1))}},3083:(t,e,n)=>{"use strict";var r=["BigInt64Array","BigUint64Array","Float32Array","Float64Array","Int16Array","Int32Array","Int8Array","Uint16Array","Uint32Array","Uint8Array","Uint8ClampedArray"],a="undefined"==typeof globalThis?n.g:globalThis;t.exports=function(){for(var t=[],e=0;e<r.length;e++)"function"==typeof a[r[e]]&&(t[t.length]=r[e]);return t}},882:(t,e,n)=>{"use strict";var r=n(210)("%Object.getOwnPropertyDescriptor%",!0);if(r)try{r([],"length")}catch(t){r=null}t.exports=r}},e={};function n(r){var a=e[r];if(void 0!==a)return a.exports;var o=e[r]={id:r,exports:{}};return t[r](o,o.exports,n),o.exports}n.n=t=>{var e=t&&t.__esModule?()=>t.default:()=>t;return n.d(e,{a:e}),e},n.d=(t,e)=>{for(var r in e)n.o(e,r)&&!n.o(t,r)&&Object.defineProperty(t,r,{enumerable:!0,get:e[r]})},n.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(t){if("object"==typeof window)return window}}(),n.o=(t,e)=>Object.prototype.hasOwnProperty.call(t,e),n.nc=void 0,(()=>{"use strict";var t=n(7294),e=n(3935);const r=function(){return t.createElement("div",{className:"eog-header"},t.createElement("h1",{className:"eog-header__title"},"Experiment Output Generator"))};function a(){return a=Object.assign?Object.assign.bind():function(t){for(var e=1;e<arguments.length;e++){var n=arguments[e];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(t[r]=n[r])}return t},a.apply(this,arguments)}var o;n(5108),function(t){t.Pop="POP",t.Push="PUSH",t.Replace="REPLACE"}(o||(o={}));var i="beforeunload";function l(t){t.preventDefault(),t.returnValue=""}function u(){var t=[];return{get length(){return t.length},push:function(e){return t.push(e),function(){t=t.filter((function(t){return t!==e}))}},call:function(e){t.forEach((function(t){return t&&t(e)}))}}}function c(t){var e=t.pathname,n=void 0===e?"/":e,r=t.search,a=void 0===r?"":r,o=t.hash,i=void 0===o?"":o;return a&&"?"!==a&&(n+="?"===a.charAt(0)?a:"?"+a),i&&"#"!==i&&(n+="#"===i.charAt(0)?i:"#"+i),n}function p(t){var e={};if(t){var n=t.indexOf("#");n>=0&&(e.hash=t.substr(n),t=t.substr(0,n));var r=t.indexOf("?");r>=0&&(e.search=t.substr(r),t=t.substr(0,r)),t&&(e.pathname=t)}return e}n(5108);const s=(0,t.createContext)(null),A=(0,t.createContext)(null),f=(0,t.createContext)({outlet:null,matches:[]});function m(t,e){if(!t)throw new Error(e)}function d(t,e,n){void 0===n&&(n="/");let r=E(("string"==typeof e?p(e):e).pathname||"/",n);if(null==r)return null;let a=g(t);!function(t){t.sort(((t,e)=>t.score!==e.score?e.score-t.score:function(t,e){return t.length===e.length&&t.slice(0,-1).every(((t,n)=>t===e[n]))?t[t.length-1]-e[e.length-1]:0}(t.routesMeta.map((t=>t.childrenIndex)),e.routesMeta.map((t=>t.childrenIndex)))))}(a);let o=null;for(let t=0;null==o&&t<a.length;++t)o=b(a[t],r);return o}function g(t,e,n,r){return void 0===e&&(e=[]),void 0===n&&(n=[]),void 0===r&&(r=""),t.forEach(((t,a)=>{let o={relativePath:t.path||"",caseSensitive:!0===t.caseSensitive,childrenIndex:a,route:t};o.relativePath.startsWith("/")&&(o.relativePath.startsWith(r)||m(!1),o.relativePath=o.relativePath.slice(r.length));let i=w([r,o.relativePath]),l=n.concat(o);t.children&&t.children.length>0&&(!0===t.index&&m(!1),g(t.children,e,l,i)),(null!=t.path||t.index)&&e.push({path:i,score:y(i,t.index),routesMeta:l})})),e}const h=/^:\w+$/,C=t=>"*"===t;function y(t,e){let n=t.split("/"),r=n.length;return n.some(C)&&(r+=-2),e&&(r+=2),n.filter((t=>!C(t))).reduce(((t,e)=>t+(h.test(e)?3:""===e?1:10)),r)}function b(t,e){let{routesMeta:n}=t,r={},a="/",o=[];for(let t=0;t<n.length;++t){let i=n[t],l=t===n.length-1,u="/"===a?e:e.slice(a.length)||"/",c=v({path:i.relativePath,caseSensitive:i.caseSensitive,end:l},u);if(!c)return null;Object.assign(r,c.params);let p=i.route;o.push({params:r,pathname:w([a,c.pathname]),pathnameBase:B(w([a,c.pathnameBase])),route:p}),"/"!==c.pathnameBase&&(a=w([a,c.pathnameBase]))}return o}function v(t,e){"string"==typeof t&&(t={path:t,caseSensitive:!1,end:!0});let[n,r]=function(t,e,n){void 0===e&&(e=!1),void 0===n&&(n=!0);let r=[],a="^"+t.replace(/\/*\*?$/,"").replace(/^\/*/,"/").replace(/[\\.*+^$?{}|()[\]]/g,"\\$&").replace(/:(\w+)/g,((t,e)=>(r.push(e),"([^\\/]+)")));return t.endsWith("*")?(r.push("*"),a+="*"===t||"/*"===t?"(.*)$":"(?:\\/(.+)|\\/*)$"):a+=n?"\\/*$":"(?:(?=[.~-]|%[0-9A-F]{2})|\\b|\\/|$)",[new RegExp(a,e?void 0:"i"),r]}(t.path,t.caseSensitive,t.end),a=e.match(n);if(!a)return null;let o=a[0],i=o.replace(/(.)\/+$/,"$1"),l=a.slice(1);return{params:r.reduce(((t,e,n)=>{if("*"===e){let t=l[n]||"";i=o.slice(0,o.length-t.length).replace(/(.)\/+$/,"$1")}return t[e]=function(t,e){try{return decodeURIComponent(t)}catch(e){return t}}(l[n]||""),t}),{}),pathname:o,pathnameBase:i,pattern:t}}function x(t,e,n){let r,a="string"==typeof t?p(t):t,o=""===t||""===a.pathname?"/":a.pathname;if(null==o)r=n;else{let t=e.length-1;if(o.startsWith("..")){let e=o.split("/");for(;".."===e[0];)e.shift(),t-=1;a.pathname=e.join("/")}r=t>=0?e[t]:"/"}let i=function(t,e){void 0===e&&(e="/");let{pathname:n,search:r="",hash:a=""}="string"==typeof t?p(t):t,o=n?n.startsWith("/")?n:function(t,e){let n=e.replace(/\/+$/,"").split("/");return t.split("/").forEach((t=>{".."===t?n.length>1&&n.pop():"."!==t&&n.push(t)})),n.length>1?n.join("/"):"/"}(n,e):e;return{pathname:o,search:I(r),hash:S(a)}}(a,r);return o&&"/"!==o&&o.endsWith("/")&&!i.pathname.endsWith("/")&&(i.pathname+="/"),i}function E(t,e){if("/"===e)return t;if(!t.toLowerCase().startsWith(e.toLowerCase()))return null;let n=t.charAt(e.length);return n&&"/"!==n?null:t.slice(e.length)||"/"}const w=t=>t.join("/").replace(/\/\/+/g,"/"),B=t=>t.replace(/\/+$/,"").replace(/^\/*/,"/"),I=t=>t&&"?"!==t?t.startsWith("?")?t:"?"+t:"",S=t=>t&&"#"!==t?t.startsWith("#")?t:"#"+t:"";function k(){return null!=(0,t.useContext)(A)}function O(){return k()||m(!1),(0,t.useContext)(A).location}function J(){k()||m(!1);let{basename:e,navigator:n}=(0,t.useContext)(s),{matches:r}=(0,t.useContext)(f),{pathname:a}=O(),o=JSON.stringify(r.map((t=>t.pathnameBase))),i=(0,t.useRef)(!1);return(0,t.useEffect)((()=>{i.current=!0})),(0,t.useCallback)((function(t,r){if(void 0===r&&(r={}),!i.current)return;if("number"==typeof t)return void n.go(t);let l=x(t,JSON.parse(o),a);"/"!==e&&(l.pathname=w([e,l.pathname])),(r.replace?n.replace:n.push)(l,r.state)}),[e,n,o,a])}function _(e){let{matches:n}=(0,t.useContext)(f),{pathname:r}=O(),a=JSON.stringify(n.map((t=>t.pathnameBase)));return(0,t.useMemo)((()=>x(e,JSON.parse(a),r)),[e,a,r])}function P(t){m(!1)}function M(e){let{basename:n="/",children:r=null,location:a,navigationType:i=o.Pop,navigator:l,static:u=!1}=e;k()&&m(!1);let c=B(n),f=(0,t.useMemo)((()=>({basename:c,navigator:l,static:u})),[c,l,u]);"string"==typeof a&&(a=p(a));let{pathname:d="/",search:g="",hash:h="",state:C=null,key:y="default"}=a,b=(0,t.useMemo)((()=>{let t=E(d,c);return null==t?null:{pathname:t,search:g,hash:h,state:C,key:y}}),[c,d,g,h,C,y]);return null==b?null:(0,t.createElement)(s.Provider,{value:f},(0,t.createElement)(A.Provider,{children:r,value:{location:b,navigationType:i}}))}function N(e){let{children:n,location:r}=e;return function(e,n){k()||m(!1);let{matches:r}=(0,t.useContext)(f),a=r[r.length-1],o=a?a.params:{},i=(a&&a.pathname,a?a.pathnameBase:"/");a&&a.route;let l,u=O();if(n){var c;let t="string"==typeof n?p(n):n;"/"===i||(null==(c=t.pathname)?void 0:c.startsWith(i))||m(!1),l=t}else l=u;let s=l.pathname||"/",A=d(e,{pathname:"/"===i?s:s.slice(i.length)||"/"});return function(e,n){return void 0===n&&(n=[]),null==e?null:e.reduceRight(((r,a,o)=>(0,t.createElement)(f.Provider,{children:void 0!==a.route.element?a.route.element:r,value:{outlet:r,matches:n.concat(e.slice(0,o+1))}})),null)}(A&&A.map((t=>Object.assign({},t,{params:Object.assign({},o,t.params),pathname:w([i,t.pathname]),pathnameBase:"/"===t.pathnameBase?i:w([i,t.pathnameBase])}))),r)}(j(n),r)}function j(e){let n=[];return t.Children.forEach(e,(e=>{if(!(0,t.isValidElement)(e))return;if(e.type===t.Fragment)return void n.push.apply(n,j(e.props.children));e.type!==P&&m(!1);let r={caseSensitive:e.props.caseSensitive,element:e.props.element,index:e.props.index,path:e.props.path};e.props.children&&(r.children=j(e.props.children)),n.push(r)})),n}function T(){return T=Object.assign||function(t){for(var e=1;e<arguments.length;e++){var n=arguments[e];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(t[r]=n[r])}return t},T.apply(this,arguments)}function $(t,e){if(null==t)return{};var n,r,a={},o=Object.keys(t);for(r=0;r<o.length;r++)n=o[r],e.indexOf(n)>=0||(a[n]=t[n]);return a}n(5108);const U=["onClick","reloadDocument","replace","state","target","to"],z=["aria-current","caseSensitive","className","end","style","to","children"];function R(e){let{basename:n,children:r,window:s}=e,A=(0,t.useRef)();null==A.current&&(A.current=function(t){void 0===t&&(t={});var e=t.window,n=void 0===e?document.defaultView:e,r=n.history;function s(){var t=n.location,e=t.pathname,a=t.search,o=t.hash,i=r.state||{};return[i.idx,{pathname:e,search:a,hash:o,state:i.usr||null,key:i.key||"default"}]}var A=null;n.addEventListener("popstate",(function(){if(A)C.call(A),A=null;else{var t=o.Pop,e=s(),n=e[0],r=e[1];if(C.length){if(null!=n){var a=d-n;a&&(A={action:t,location:r,retry:function(){w(-1*a)}},w(a))}}else E(t)}}));var f=o.Pop,m=s(),d=m[0],g=m[1],h=u(),C=u();function y(t){return"string"==typeof t?t:c(t)}function b(t,e){return void 0===e&&(e=null),a({pathname:g.pathname,hash:"",search:""},"string"==typeof t?p(t):t,{state:e,key:Math.random().toString(36).substr(2,8)})}function v(t,e){return[{usr:t.state,key:t.key,idx:e},y(t)]}function x(t,e,n){return!C.length||(C.call({action:t,location:e,retry:n}),!1)}function E(t){f=t;var e=s();d=e[0],g=e[1],h.call({action:f,location:g})}function w(t){r.go(t)}null==d&&(d=0,r.replaceState(a({},r.state,{idx:d}),""));var B={get action(){return f},get location(){return g},createHref:y,push:function t(e,a){var i=o.Push,l=b(e,a);if(x(i,l,(function(){t(e,a)}))){var u=v(l,d+1),c=u[0],p=u[1];try{r.pushState(c,"",p)}catch(t){n.location.assign(p)}E(i)}},replace:function t(e,n){var a=o.Replace,i=b(e,n);if(x(a,i,(function(){t(e,n)}))){var l=v(i,d),u=l[0],c=l[1];r.replaceState(u,"",c),E(a)}},go:w,back:function(){w(-1)},forward:function(){w(1)},listen:function(t){return h.push(t)},block:function(t){var e=C.push(t);return 1===C.length&&n.addEventListener(i,l),function(){e(),C.length||n.removeEventListener(i,l)}}};return B}({window:s}));let f=A.current,[m,d]=(0,t.useState)({action:f.action,location:f.location});return(0,t.useLayoutEffect)((()=>f.listen(d)),[f]),(0,t.createElement)(M,{basename:n,children:r,location:m.location,navigationType:m.action,navigator:f})}const F=(0,t.forwardRef)((function(e,n){let{onClick:r,reloadDocument:a,replace:o=!1,state:i,target:l,to:u}=e,A=$(e,U),f=function(e){k()||m(!1);let{basename:n,navigator:r}=(0,t.useContext)(s),{hash:a,pathname:o,search:i}=_(e),l=o;if("/"!==n){let t=function(t){return""===t||""===t.pathname?"/":"string"==typeof t?p(t).pathname:t.pathname}(e),r=null!=t&&t.endsWith("/");l="/"===o?n+(r?"/":""):w([n,o])}return r.createHref({pathname:l,search:i,hash:a})}(u),d=function(e,n){let{target:r,replace:a,state:o}=void 0===n?{}:n,i=J(),l=O(),u=_(e);return(0,t.useCallback)((t=>{if(!(0!==t.button||r&&"_self"!==r||function(t){return!!(t.metaKey||t.altKey||t.ctrlKey||t.shiftKey)}(t))){t.preventDefault();let n=!!a||c(l)===c(u);i(e,{replace:n,state:o})}}),[l,i,u,a,o,r,e])}(u,{replace:o,state:i,target:l});return(0,t.createElement)("a",T({},A,{href:f,onClick:function(t){r&&r(t),t.defaultPrevented||a||d(t)},ref:n,target:l}))})),L=(0,t.forwardRef)((function(e,n){let{"aria-current":r="page",caseSensitive:a=!1,className:o="",end:i=!1,style:l,to:u,children:c}=e,p=$(e,z),s=O(),A=_(u),f=s.pathname,m=A.pathname;a||(f=f.toLowerCase(),m=m.toLowerCase());let d,g=f===m||!i&&f.startsWith(m)&&"/"===f.charAt(m.length),h=g?r:void 0;d="function"==typeof o?o({isActive:g}):[o,g?"active":null].filter(Boolean).join(" ");let C="function"==typeof l?l({isActive:g}):l;return(0,t.createElement)(F,T({},p,{"aria-current":h,className:d,ref:n,style:C,to:u}),"function"==typeof c?c({isActive:g}):c)})),D=function(e){return t.createElement("svg",{className:e.className,width:"20",height:"20",viewBox:"0 0 20 20",fill:"none",xmlns:"http://www.w3.org/2000/svg"},t.createElement("path",{d:"M7.64582 4.14708C7.84073 3.95147 8.15731 3.9509 8.35292 4.14582L13.8374 9.6108C14.0531 9.82574 14.0531 10.1751 13.8374 10.39L8.35292 15.855C8.15731 16.0499 7.84073 16.0493 7.64582 15.8537C7.4509 15.6581 7.45147 15.3415 7.64708 15.1466L12.8117 10.0004L7.64708 4.85418C7.45147 4.65927 7.4509 4.34269 7.64582 4.14708Z",fill:"#212121"}))},Q=function(){var e=O();return t.createElement("div",{className:"eog-breadcrumbs"},t.createElement(L,{to:"/",className:"eog-breadcrumbs__item"},"Report Templates"),e.pathname.startsWith("/standard-report")&&t.createElement(t.Fragment,null,t.createElement(D,{className:"mx-1"}),t.createElement(L,{to:"/standard-report",className:"eog-breadcrumbs__item"},"Standard Report")),"/standard-report-view"===e.pathname&&t.createElement(t.Fragment,null,t.createElement(D,{className:"mx-1"}),t.createElement(L,{to:"/standard-report-view",className:"eog-breadcrumbs__item"},"View Report")))},G=function(e){return t.createElement("div",{className:"h-100"},t.createElement(r,null),t.createElement(Q,null),t.createElement("main",{className:"eog-main"},e.children))},W=function(e){var n=J();return t.createElement(t.Fragment,null,t.createElement("div",{className:"eog-card",onClick:function(){n("/standard-report")}},t.createElement("img",{src:"/images/standard-report.png",className:"eog-card__img"}),t.createElement("label",{className:"eog-card__caption"},"Standard Report")))};function V(t){return V="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},V(t)}function q(){q=function(){return t};var t={},e=Object.prototype,n=e.hasOwnProperty,r="function"==typeof Symbol?Symbol:{},a=r.iterator||"@@iterator",o=r.asyncIterator||"@@asyncIterator",i=r.toStringTag||"@@toStringTag";function l(t,e,n){return Object.defineProperty(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}),t[e]}try{l({},"")}catch(t){l=function(t,e,n){return t[e]=n}}function u(t,e,n,r){var a=e&&e.prototype instanceof s?e:s,o=Object.create(a.prototype),i=new E(r||[]);return o._invoke=function(t,e,n){var r="suspendedStart";return function(a,o){if("executing"===r)throw new Error("Generator is already running");if("completed"===r){if("throw"===a)throw o;return{value:void 0,done:!0}}for(n.method=a,n.arg=o;;){var i=n.delegate;if(i){var l=b(i,n);if(l){if(l===p)continue;return l}}if("next"===n.method)n.sent=n._sent=n.arg;else if("throw"===n.method){if("suspendedStart"===r)throw r="completed",n.arg;n.dispatchException(n.arg)}else"return"===n.method&&n.abrupt("return",n.arg);r="executing";var u=c(t,e,n);if("normal"===u.type){if(r=n.done?"completed":"suspendedYield",u.arg===p)continue;return{value:u.arg,done:n.done}}"throw"===u.type&&(r="completed",n.method="throw",n.arg=u.arg)}}}(t,n,i),o}function c(t,e,n){try{return{type:"normal",arg:t.call(e,n)}}catch(t){return{type:"throw",arg:t}}}t.wrap=u;var p={};function s(){}function A(){}function f(){}var m={};l(m,a,(function(){return this}));var d=Object.getPrototypeOf,g=d&&d(d(w([])));g&&g!==e&&n.call(g,a)&&(m=g);var h=f.prototype=s.prototype=Object.create(m);function C(t){["next","throw","return"].forEach((function(e){l(t,e,(function(t){return this._invoke(e,t)}))}))}function y(t,e){function r(a,o,i,l){var u=c(t[a],t,o);if("throw"!==u.type){var p=u.arg,s=p.value;return s&&"object"==V(s)&&n.call(s,"__await")?e.resolve(s.__await).then((function(t){r("next",t,i,l)}),(function(t){r("throw",t,i,l)})):e.resolve(s).then((function(t){p.value=t,i(p)}),(function(t){return r("throw",t,i,l)}))}l(u.arg)}var a;this._invoke=function(t,n){function o(){return new e((function(e,a){r(t,n,e,a)}))}return a=a?a.then(o,o):o()}}function b(t,e){var n=t.iterator[e.method];if(void 0===n){if(e.delegate=null,"throw"===e.method){if(t.iterator.return&&(e.method="return",e.arg=void 0,b(t,e),"throw"===e.method))return p;e.method="throw",e.arg=new TypeError("The iterator does not provide a 'throw' method")}return p}var r=c(n,t.iterator,e.arg);if("throw"===r.type)return e.method="throw",e.arg=r.arg,e.delegate=null,p;var a=r.arg;return a?a.done?(e[t.resultName]=a.value,e.next=t.nextLoc,"return"!==e.method&&(e.method="next",e.arg=void 0),e.delegate=null,p):a:(e.method="throw",e.arg=new TypeError("iterator result is not an object"),e.delegate=null,p)}function v(t){var e={tryLoc:t[0]};1 in t&&(e.catchLoc=t[1]),2 in t&&(e.finallyLoc=t[2],e.afterLoc=t[3]),this.tryEntries.push(e)}function x(t){var e=t.completion||{};e.type="normal",delete e.arg,t.completion=e}function E(t){this.tryEntries=[{tryLoc:"root"}],t.forEach(v,this),this.reset(!0)}function w(t){if(t){var e=t[a];if(e)return e.call(t);if("function"==typeof t.next)return t;if(!isNaN(t.length)){var r=-1,o=function e(){for(;++r<t.length;)if(n.call(t,r))return e.value=t[r],e.done=!1,e;return e.value=void 0,e.done=!0,e};return o.next=o}}return{next:B}}function B(){return{value:void 0,done:!0}}return A.prototype=f,l(h,"constructor",f),l(f,"constructor",A),A.displayName=l(f,i,"GeneratorFunction"),t.isGeneratorFunction=function(t){var e="function"==typeof t&&t.constructor;return!!e&&(e===A||"GeneratorFunction"===(e.displayName||e.name))},t.mark=function(t){return Object.setPrototypeOf?Object.setPrototypeOf(t,f):(t.__proto__=f,l(t,i,"GeneratorFunction")),t.prototype=Object.create(h),t},t.awrap=function(t){return{__await:t}},C(y.prototype),l(y.prototype,o,(function(){return this})),t.AsyncIterator=y,t.async=function(e,n,r,a,o){void 0===o&&(o=Promise);var i=new y(u(e,n,r,a),o);return t.isGeneratorFunction(n)?i:i.next().then((function(t){return t.done?t.value:i.next()}))},C(h),l(h,i,"Generator"),l(h,a,(function(){return this})),l(h,"toString",(function(){return"[object Generator]"})),t.keys=function(t){var e=[];for(var n in t)e.push(n);return e.reverse(),function n(){for(;e.length;){var r=e.pop();if(r in t)return n.value=r,n.done=!1,n}return n.done=!0,n}},t.values=w,E.prototype={constructor:E,reset:function(t){if(this.prev=0,this.next=0,this.sent=this._sent=void 0,this.done=!1,this.delegate=null,this.method="next",this.arg=void 0,this.tryEntries.forEach(x),!t)for(var e in this)"t"===e.charAt(0)&&n.call(this,e)&&!isNaN(+e.slice(1))&&(this[e]=void 0)},stop:function(){this.done=!0;var t=this.tryEntries[0].completion;if("throw"===t.type)throw t.arg;return this.rval},dispatchException:function(t){if(this.done)throw t;var e=this;function r(n,r){return i.type="throw",i.arg=t,e.next=n,r&&(e.method="next",e.arg=void 0),!!r}for(var a=this.tryEntries.length-1;a>=0;--a){var o=this.tryEntries[a],i=o.completion;if("root"===o.tryLoc)return r("end");if(o.tryLoc<=this.prev){var l=n.call(o,"catchLoc"),u=n.call(o,"finallyLoc");if(l&&u){if(this.prev<o.catchLoc)return r(o.catchLoc,!0);if(this.prev<o.finallyLoc)return r(o.finallyLoc)}else if(l){if(this.prev<o.catchLoc)return r(o.catchLoc,!0)}else{if(!u)throw new Error("try statement without catch or finally");if(this.prev<o.finallyLoc)return r(o.finallyLoc)}}}},abrupt:function(t,e){for(var r=this.tryEntries.length-1;r>=0;--r){var a=this.tryEntries[r];if(a.tryLoc<=this.prev&&n.call(a,"finallyLoc")&&this.prev<a.finallyLoc){var o=a;break}}o&&("break"===t||"continue"===t)&&o.tryLoc<=e&&e<=o.finallyLoc&&(o=null);var i=o?o.completion:{};return i.type=t,i.arg=e,o?(this.method="next",this.next=o.finallyLoc,p):this.complete(i)},complete:function(t,e){if("throw"===t.type)throw t.arg;return"break"===t.type||"continue"===t.type?this.next=t.arg:"return"===t.type?(this.rval=this.arg=t.arg,this.method="return",this.next="end"):"normal"===t.type&&e&&(this.next=e),p},finish:function(t){for(var e=this.tryEntries.length-1;e>=0;--e){var n=this.tryEntries[e];if(n.finallyLoc===t)return this.complete(n.completion,n.afterLoc),x(n),p}},catch:function(t){for(var e=this.tryEntries.length-1;e>=0;--e){var n=this.tryEntries[e];if(n.tryLoc===t){var r=n.completion;if("throw"===r.type){var a=r.arg;x(n)}return a}}throw new Error("illegal catch attempt")},delegateYield:function(t,e,n){return this.delegate={iterator:w(t),resultName:e,nextLoc:n},"next"===this.method&&(this.arg=void 0),p}},t}function H(t,e,n,r,a,o,i){try{var l=t[o](i),u=l.value}catch(t){return void n(t)}l.done?e(u):Promise.resolve(u).then(r,a)}function K(t){return function(){var e=this,n=arguments;return new Promise((function(r,a){var o=t.apply(e,n);function i(t){H(o,r,a,i,l,"next",t)}function l(t){H(o,r,a,i,l,"throw",t)}i(void 0)}))}}var Y=function(t){return"".concat(window.location.origin,"/").concat(t)},X=function(){var t=K(q().mark((function t(e){var n,r;return q().wrap((function(t){for(;;)switch(t.prev=t.next){case 0:return t.next=2,fetch(e);case 2:return n=t.sent,t.next=5,n.json();case 5:return r=t.sent,t.abrupt("return",r);case 7:case"end":return t.stop()}}),t)})));return function(e){return t.apply(this,arguments)}}(),Z=function(){var t=K(q().mark((function t(){var e;return q().wrap((function(t){for(;;)switch(t.prev=t.next){case 0:return e=Y("ergconfig.json"),t.next=3,X(e);case 3:return t.abrupt("return",t.sent);case 4:case"end":return t.stop()}}),t)})));return function(){return t.apply(this,arguments)}}(),tt=function(){var t=K(q().mark((function t(e){var n;return q().wrap((function(t){for(;;)switch(t.prev=t.next){case 0:return n=Y("experimental_logs/".concat(e)),t.next=3,X(n);case 3:return t.abrupt("return",t.sent);case 4:case"end":return t.stop()}}),t)})));return function(e){return t.apply(this,arguments)}}(),et=function(){this.experiment_logs_directory="",this.output_directory="",this.visualizations_directory=""},nt=function(){this.view="",this.model_keys=[],this.files_list=[]};const rt=function(e){var n=(0,t.useState)(new nt),r=n[0],a=n[1],o=(0,t.useState)(new et),i=o[0],l=o[1],u=J();return(0,t.useEffect)((function(){Z().then((function(t){a(t),l(t.erg)}))}),[]),t.createElement(t.Fragment,null,t.createElement("h3",{className:"title-3 mb-2"},"Report Layout"),t.createElement("p",null,r.view),t.createElement("h3",{className:"title-3 mb-2"},"Model Details"),r.model_keys.map((function(e){return t.createElement("p",{className:"ma-0"},e)})),t.createElement("h3",{className:"title-3 my-2"},"Model Details Directories"),t.createElement("div",null,t.createElement("dt",{className:"eog-list-data__label"},"Experimental Logs Directory"),t.createElement("dd",{className:"eog-list-data__value"},i.experiment_logs_directory)),t.createElement("div",null,t.createElement("dt",{className:"eog-list-data__label"},"Output Directory"),t.createElement("dd",{className:"eog-list-data__value"},i.output_directory)),t.createElement("div",null,t.createElement("dt",{className:"eog-list-data__label"},"Visualizations Directory"),t.createElement("dd",{className:"eog-list-data__value"},i.visualizations_directory)),t.createElement("span",{className:"float-l d-iblock mt-4"},t.createElement("button",{className:"eog-btn eog-btn-primary",onClick:function(){u("/standard-report-view")}},"View Report Template")))};const at=function(){var e=(0,t.useState)(new nt),n=e[0],r=e[1],a=(0,t.useState)([]),o=a[0],i=a[1];return(0,t.useEffect)((function(){Z().then((function(t){r(t),t.files_list.forEach((function(t){tt(t.details_file).then((function(e){o.push({detailsJson:e,image_file:t.image_file}),i(o.map((function(t){return e=t,JSON.parse(JSON.stringify(e));var e})))}))}))}))}),[]),t.createElement(t.Fragment,null,t.createElement("h4",{className:"title-4"},"Experimental Outputs"),t.createElement("div",{className:"eog-grid"},o.map((function(e,r){var a=e.detailsJson;return t.createElement("div",{key:"gridrow-".concat(r),className:"eog-card-img"},t.createElement("img",{key:"gridrowimg-".concat(r),className:"eog-card-img__img",src:"/visualizations/".concat(e.image_file)}),n.model_keys.map((function(e){var n=JSON.parse(a.model_params);return"final_accuracy"===e||"average_loss"===e||"model_filename"===e?t.createElement("label",{key:"gridrowlabel-".concat(e),className:"eog-card-img__caption"},e,": ",a[e]):t.createElement("label",{key:"gridrowlabel-".concat(e),className:"eog-card-img__caption"},e,": ",n[e])})))}))))},ot=function(){return t.createElement(t.Fragment,null,t.createElement(R,null,t.createElement(G,null,t.createElement(N,null,t.createElement(P,{path:"/",element:t.createElement(W,null)}),t.createElement(P,{path:"/standard-report",element:t.createElement(rt,null)}),t.createElement(P,{path:"/standard-report-view",element:t.createElement(at,null)})))))};e.render(t.createElement(ot,null),document.getElementById("root"))})(),(()=>{"use strict";var t=n(3379),e=n.n(t),r=n(7795),a=n.n(r),o=n(569),i=n.n(o),l=n(3565),u=n.n(l),c=n(9216),p=n.n(c),s=n(4589),A=n.n(s),f=n(9167),m={};m.styleTagTransform=A(),m.setAttributes=u(),m.insert=i().bind(null,"head"),m.domAPI=a(),m.insertStyleElement=p(),e()(f.Z,m),f.Z&&f.Z.locals&&f.Z.locals})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,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QUFpQiIsInNvdXJjZXMiOlsid2VicGFjazovL2V4cGVyaW1lbnQtcmVwb3J0LWdlbmVyYXRvci8uL25vZGVfbW9kdWxlcy9hc3NlcnQvYnVpbGQvYXNzZXJ0LmpzIiwid2VicGFjazovL2V4cGVyaW1lbnQtcmVwb3J0LWdlbmVyYXRvci8uL25vZGVfbW9kdWxlcy9hc3NlcnQvYnVpbGQvaW50ZXJuYWwvYXNzZXJ0L2Fzc2VydGlvbl9lcnJvci5qcyIsIndlYnBhY2s6Ly9leHBlcmltZW50LXJlcG9ydC1nZW5lcmF0b3IvLi9ub2RlX21vZHVsZXMvYXNzZXJ0L2J1aWxkL2ludGVybmFsL2Vycm9ycy5qcyIsIndlYnBhY2s6Ly9leHBlcmltZW50LXJlcG9ydC1nZW5lcmF0b3IvLi9ub2RlX21vZHVsZXMvYXNzZXJ0L2J1aWxkL2ludGVybmFsL3V0aWwvY29tcGFyaXNvbnMuanMiLCJ3ZWJwYWNrOi8vZXhwZXJpbWVudC1yZXBvcnQtZ2VuZXJhdG9yLy4vbm9kZV9tb2R1bGVzL2NhbGwtYmluZC9jYWxsQm91bmQuanMiLCJ3ZWJwYWNrOi8vZXhwZXJpbWVudC1yZXBvcnQtZ2VuZXJhdG9yLy4vbm9kZV9tb2R1bGVzL2NhbGwtYmluZC9pbmRleC5qcyIsIndlYnBhY2s6Ly9leHBlcmltZW50LXJlcG9ydC1nZW5lcmF0b3IvLi9ub2RlX21vZHVsZXMvY29uc29sZS1icm93c2VyaWZ5L2luZGV4LmpzIiwid2VicGFjazovL2V4cGVyaW1lbnQtcmVwb3J0LWdlbmVyYXRvci8uL3NyYy9zY3NzL2N1c3RvbS5zY3NzIiwid2VicGFjazovL2V4cGVyaW1lbnQtcmVwb3J0LWdlbmVyYXRvci8uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9hcGkuanMiLCJ3ZWJwYWNrOi8vZXhwZXJpbWVudC1yZXBvcnQtZ2VuZXJhdG9yLy4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL3NvdXJjZU1hcHMuanMiLCJ3ZWJwYWNrOi8vZXhwZXJpbWVudC1yZXBvcnQtZ2VuZXJhdG9yLy4vbm9kZV9tb2R1bGVzL2RlZmluZS1wcm9wZXJ0aWVzL2luZGV4LmpzIiwid2VicGFjazovL2V4cGVyaW1lbnQtcmVwb3J0LWdlbmVyYXRvci8uL25vZGVfbW9kdWxlcy9lczYtb2JqZWN0LWFzc2lnbi9pbmRleC5qcyIsIndlYnBhY2s6Ly9leHBlcmltZW50LXJlcG9ydC1nZW5lcmF0b3IvLi9ub2RlX21vZHVsZXMvZm9yLWVhY2gvaW5kZXguanMiLCJ3ZWJwYWNrOi8vZXhwZXJpbWVudC1yZXBvcnQtZ2VuZXJhdG9yLy4vbm9kZV9tb2R1bGVzL2Z1bmN0aW9uLWJpbmQvaW1wbGVtZW50YXRpb24uanMiLCJ3ZWJwYWNrOi8vZXhwZXJpbWVudC1yZXBvcnQtZ2VuZXJhdG9yLy4vbm9kZV9tb2R1bGVzL2Z1bmN0aW9uLWJpbmQvaW5kZXguanMiLCJ3ZWJwYWNrOi8vZXhwZXJpbWVudC1yZXBvcnQtZ2VuZXJhdG9yLy4vbm9kZV9tb2R1bGVzL2dldC1pbnRyaW5zaWMvaW5kZXguanMiLCJ3ZWJwYWNrOi8vZXhwZXJpbWVudC1yZXBvcnQtZ2VuZXJhdG9yLy4vbm9kZV9tb2R1bGVzL2hhcy1wcm9wZXJ0eS1kZXNjcmlwdG9ycy9pbmRleC5qcyIsIndlYnBhY2s6Ly9leHBlcmltZW50LXJlcG9ydC1nZW5lcmF0b3IvLi9ub2RlX21vZHVsZXMvaGFzLXN5bWJvbHMvaW5kZXguanMiLCJ3ZWJwYWNrOi8vZXhwZXJpbWVudC1yZXBvcnQtZ2VuZXJhdG9yLy4vbm9kZV9tb2R1bGVzL2hhcy1zeW1ib2xzL3NoYW1zLmpzIiwid2VicGFjazovL2V4cGVyaW1lbnQtcmVwb3J0LWdlbmVyYXRvci8uL25vZGVfbW9kdWxlcy9oYXMtdG9zdHJpbmd0YWcvc2hhbXMuanMiLCJ3ZWJwYWNrOi8vZXhwZXJpbWVudC1yZXBvcnQtZ2VuZXJhdG9yLy4vbm9kZV9tb2R1bGVzL2hhcy9zcmMvaW5kZXguanMiLCJ3ZWJwYWNrOi8vZXhwZXJpbWVudC1yZXBvcnQtZ2VuZXJhdG9yLy4vbm9kZV9tb2R1bGVzL2luaGVyaXRzL2luaGVyaXRzX2Jyb3dzZXIuanMiLCJ3ZWJwYWNrOi8vZXhwZXJpbWVudC1yZXBvcnQtZ2VuZXJhdG9yLy4vbm9kZV9tb2R1bGVzL2lzLWFyZ3VtZW50cy9pbmRleC5qcyIsIndlYnBhY2s6Ly9leHBlcmltZW50LXJlcG9ydC1nZW5lcmF0b3IvLi9ub2RlX21vZHVsZXMvaXMtY2FsbGFibGUvaW5kZXguanMiLCJ3ZWJwYWNrOi8vZXhwZXJpbWVudC1yZXBvcnQtZ2VuZXJhdG9yLy4vbm9kZV9tb2R1bGVzL2lzLWdlbmVyYXRvci1mdW5jdGlvbi9pbmRleC5qcyIsIndlYnBhY2s6Ly9leHBlcmltZW50LXJlcG9ydC1nZW5lcmF0b3IvLi9ub2RlX21vZHVsZXMvaXMtbmFuL2ltcGxlbWVudGF0aW9uLmpzIiwid2VicGFjazovL2V4cGVyaW1lbnQtcmVwb3J0LWdlbmVyYXRvci8uL25vZGVfbW9kdWxlcy9pcy1uYW4vaW5kZXguanMiLCJ3ZWJwYWNrOi8vZXhwZXJpbWVudC1yZXBvcnQtZ2VuZXJhdG9yLy4vbm9kZV9tb2R1bGVzL2lzLW5hbi9wb2x5ZmlsbC5qcyIsIndlYnBhY2s6Ly9leHBlcmltZW50LXJlcG9ydC1nZW5lcmF0b3IvLi9ub2RlX21vZHVsZXMvaXMtbmFuL3NoaW0uanMiLCJ3ZWJwYWNrOi8vZXhwZXJpbWVudC1yZXBvcnQtZ2VuZXJhdG9yLy4vbm9kZV9tb2R1bGVzL2lzLXR5cGVkLWFycmF5L2luZGV4LmpzIiwid2VicGFjazovL2V4cGVyaW1lbnQtcmVwb3J0LWdlbmVyYXRvci8uL25vZGVfbW9kdWxlcy9vYmplY3QtaXMvaW1wbGVtZW50YXRpb24uanMiLCJ3ZWJwYWNrOi8vZXhwZXJpbWVudC1yZXBvcnQtZ2VuZXJhdG9yLy4vbm9kZV9tb2R1bGVzL29iamVjdC1pcy9pbmRleC5qcyIsIndlYnBhY2s6Ly9leHBlcmltZW50LXJlcG9ydC1nZW5lcmF0b3IvLi9ub2RlX21vZHVsZXMvb2JqZWN0LWlzL3BvbHlmaWxsLmpzIiwid2VicGFjazovL2V4cGVyaW1lbnQtcmVwb3J0LWdlbmVyYXRvci8uL25vZGVfbW9kdWxlcy9vYmplY3QtaXMvc2hpbS5qcyIsIndlYnBhY2s6Ly9leHBlcmltZW50LXJlcG9ydC1nZW5lcmF0b3IvLi9ub2RlX21vZHVsZXMvb2JqZWN0LWtleXMvaW1wbGVtZW50YXRpb24uanMiLCJ3ZWJwYWNrOi8vZXhwZXJpbWVudC1yZXBvcnQtZ2VuZXJhdG9yLy4vbm9kZV9tb2R1bGVzL29iamVjdC1rZXlzL2luZGV4LmpzIiwid2VicGFjazovL2V4cGVyaW1lbnQtcmVwb3J0LWdlbmVyYXRvci8uL25vZGVfbW9kdWxlcy9vYmplY3Qta2V5cy9pc0FyZ3VtZW50cy5qcyIsIndlYnBhY2s6Ly9leHBlcmltZW50LXJlcG9ydC1nZW5lcmF0b3IvLi9ub2RlX21vZHVsZXMvcHJvY2Vzcy9icm93c2VyLmpzIiwid2VicGFjazovL2V4cGVyaW1lbnQtcmVwb3J0LWdlbmVyYXRvci8uL25vZGVfbW9kdWxlcy9yZWFjdC1kb20vY2pzL3JlYWN0LWRvbS5wcm9kdWN0aW9uLm1pbi5qcyIsIndlYnBhY2s6Ly9leHBlcmltZW50LXJlcG9ydC1nZW5lcmF0b3IvLi9ub2RlX21vZHVsZXMvcmVhY3QtZG9tL2luZGV4LmpzIiwid2VicGFjazovL2V4cGVyaW1lbnQtcmVwb3J0LWdlbmVyYXRvci8uL25vZGVfbW9kdWxlcy9yZWFjdC9janMvcmVhY3QucHJvZHVjdGlvbi5taW4uanMiLCJ3ZWJwYWNrOi8vZXhwZXJpbWVudC1yZXBvcnQtZ2VuZXJhdG9yLy4vbm9kZV9tb2R1bGVzL3JlYWN0L2luZGV4LmpzIiwid2VicGFjazovL2V4cGVyaW1lbnQtcmVwb3J0LWdlbmVyYXRvci8uL25vZGVfbW9kdWxlcy9zY2hlZHVsZXIvY2pzL3NjaGVkdWxlci5wcm9kdWN0aW9uLm1pbi5qcyIsIndlYnBhY2s6Ly9leHBlcmltZW50LXJlcG9ydC1nZW5lcmF0b3IvLi9ub2RlX21vZHVsZXMvc2NoZWR1bGVyL2luZGV4LmpzIiwid2VicGFjazovL2V4cGVyaW1lbnQtcmVwb3J0LWdlbmVyYXRvci8uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luamVjdFN0eWxlc0ludG9TdHlsZVRhZy5qcyIsIndlYnBhY2s6Ly9leHBlcmltZW50LXJlcG9ydC1nZW5lcmF0b3IvLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbnNlcnRCeVNlbGVjdG9yLmpzIiwid2VicGFjazovL2V4cGVyaW1lbnQtcmVwb3J0LWdlbmVyYXRvci8uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luc2VydFN0eWxlRWxlbWVudC5qcyIsIndlYnBhY2s6Ly9leHBlcmltZW50LXJlcG9ydC1nZW5lcmF0b3IvLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9zZXRBdHRyaWJ1dGVzV2l0aG91dEF0dHJpYnV0ZXMuanMiLCJ3ZWJwYWNrOi8vZXhwZXJpbWVudC1yZXBvcnQtZ2VuZXJhdG9yLy4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvc3R5bGVEb21BUEkuanMiLCJ3ZWJwYWNrOi8vZXhwZXJpbWVudC1yZXBvcnQtZ2VuZXJhdG9yLy4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvc3R5bGVUYWdUcmFuc2Zvcm0uanMiLCJ3ZWJwYWNrOi8vZXhwZXJpbWVudC1yZXBvcnQtZ2VuZXJhdG9yLy4vbm9kZV9tb2R1bGVzL3V0aWwvc3VwcG9ydC9pc0J1ZmZlckJyb3dzZXIuanMiLCJ3ZWJwYWNrOi8vZXhwZXJpbWVudC1yZXBvcnQtZ2VuZXJhdG9yLy4vbm9kZV9tb2R1bGVzL3V0aWwvc3VwcG9ydC90eXBlcy5qcyIsIndlYnBhY2s6Ly9leHBlcmltZW50LXJlcG9ydC1nZW5lcmF0b3IvLi9ub2RlX21vZHVsZXMvdXRpbC91dGlsLmpzIiwid2VicGFjazovL2V4cGVyaW1lbnQtcmVwb3J0LWdlbmVyYXRvci8uL25vZGVfbW9kdWxlcy93aGljaC10eXBlZC1hcnJheS9pbmRleC5qcyIsIndlYnBhY2s6Ly9leHBlcmltZW50LXJlcG9ydC1nZW5lcmF0b3IvLi9ub2RlX21vZHVsZXMvYXZhaWxhYmxlLXR5cGVkLWFycmF5cy9pbmRleC5qcyIsIndlYnBhY2s6Ly9leHBlcmltZW50LXJlcG9ydC1nZW5lcmF0b3IvLi9ub2RlX21vZHVsZXMvZXMtYWJzdHJhY3QvaGVscGVycy9nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IuanMiLCJ3ZWJwYWNrOi8vZXhwZXJpbWVudC1yZXBvcnQtZ2VuZXJhdG9yL3dlYnBhY2svYm9vdHN0cmFwIiwid2VicGFjazovL2V4cGVyaW1lbnQtcmVwb3J0LWdlbmVyYXRvci93ZWJwYWNrL3J1bnRpbWUvY29tcGF0IGdldCBkZWZhdWx0IGV4cG9ydCIsIndlYnBhY2s6Ly9leHBlcmltZW50LXJlcG9ydC1nZW5lcmF0b3Ivd2VicGFjay9ydW50aW1lL2RlZmluZSBwcm9wZXJ0eSBnZXR0ZXJzIiwid2VicGFjazovL2V4cGVyaW1lbnQtcmVwb3J0LWdlbmVyYXRvci93ZWJwYWNrL3J1bnRpbWUvZ2xvYmFsIiwid2VicGFjazovL2V4cGVyaW1lbnQtcmVwb3J0LWdlbmVyYXRvci93ZWJwYWNrL3J1bnRpbWUvaGFzT3duUHJvcGVydHkgc2hvcnRoYW5kIiwid2VicGFjazovL2V4cGVyaW1lbnQtcmVwb3J0LWdlbmVyYXRvci93ZWJwYWNrL3J1bnRpbWUvbm9uY2UiLCJ3ZWJwYWNrOi8vZXhwZXJpbWVudC1yZXBvcnQtZ2VuZXJhdG9yLy4vc3JjL2xheW91dHMvY29tcG9uZW50cy9oZWFkZXIudHN4Iiwid2VicGFjazovL2V4cGVyaW1lbnQtcmVwb3J0LWdlbmVyYXRvci8uL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9leHRlbmRzLmpzIiwid2VicGFjazovL2V4cGVyaW1lbnQtcmVwb3J0LWdlbmVyYXRvci8uL25vZGVfbW9kdWxlcy9oaXN0b3J5L2luZGV4LmpzIiwid2VicGFjazovL2V4cGVyaW1lbnQtcmVwb3J0LWdlbmVyYXRvci8uL25vZGVfbW9kdWxlcy9yZWFjdC1yb3V0ZXIvaW5kZXguanMiLCJ3ZWJwYWNrOi8vZXhwZXJpbWVudC1yZXBvcnQtZ2VuZXJhdG9yLy4vbm9kZV9tb2R1bGVzL3JlYWN0LXJvdXRlci1kb20vaW5kZXguanMiLCJ3ZWJwYWNrOi8vZXhwZXJpbWVudC1yZXBvcnQtZ2VuZXJhdG9yLy4vc3JjL2NvbXBvbmVudHMvaWNvbi9jaGV2cm9uUmlnaHQudHN4Iiwid2VicGFjazovL2V4cGVyaW1lbnQtcmVwb3J0LWdlbmVyYXRvci8uL3NyYy9sYXlvdXRzL2NvbXBvbmVudHMvYnJlYWRDcnVtYnMudHN4Iiwid2VicGFjazovL2V4cGVyaW1lbnQtcmVwb3J0LWdlbmVyYXRvci8uL3NyYy9sYXlvdXRzL21haW5MYXlvdXQudHN4Iiwid2VicGFjazovL2V4cGVyaW1lbnQtcmVwb3J0LWdlbmVyYXRvci8uL3NyYy9tb2R1bGVzL2xhbmRpbmcvbGFuZGluZy50c3giLCJ3ZWJwYWNrOi8vZXhwZXJpbWVudC1yZXBvcnQtZ2VuZXJhdG9yLy4vc3JjL3NlcnZpY2VzL2FwaVNlcnZpY2UuanMiLCJ3ZWJwYWNrOi8vZXhwZXJpbWVudC1yZXBvcnQtZ2VuZXJhdG9yLy4vc3JjL21vZGVscy9QYWNrYWdlRGV0YWlscy50cyIsIndlYnBhY2s6Ly9leHBlcmltZW50LXJlcG9ydC1nZW5lcmF0b3IvLi9zcmMvbW9kZWxzL01vZGVsQ29uZmlnLnRzIiwid2VicGFjazovL2V4cGVyaW1lbnQtcmVwb3J0LWdlbmVyYXRvci8uL3NyYy9tb2R1bGVzL3N0YW5kYXJkUmVwb3J0L3N0YW5kYXJkUmVwb3J0LnRzeCIsIndlYnBhY2s6Ly9leHBlcmltZW50LXJlcG9ydC1nZW5lcmF0b3IvLi9zcmMvbW9kdWxlcy9zdGFuZGFyZFJlcG9ydC9jb21wb25lbnRzL2dyaWRWaWV3LnRzeCIsIndlYnBhY2s6Ly9leHBlcmltZW50LXJlcG9ydC1nZW5lcmF0b3IvLi9zcmMvc2VydmljZXMvdXRpbGl0aWVzLmpzIiwid2VicGFjazovL2V4cGVyaW1lbnQtcmVwb3J0LWdlbmVyYXRvci8uL3NyYy9hcHAudHN4Iiwid2VicGFjazovL2V4cGVyaW1lbnQtcmVwb3J0LWdlbmVyYXRvci8uL3NyYy9pbmRleC5qcyIsIndlYnBhY2s6Ly9leHBlcmltZW50LXJlcG9ydC1nZW5lcmF0b3IvLi9zcmMvc2Nzcy9jdXN0b20uc2Nzcz9mNTY0Il0sInNvdXJjZXNDb250ZW50IjpbIi8vIEN1cnJlbnRseSBpbiBzeW5jIHdpdGggTm9kZS5qcyBsaWIvYXNzZXJ0LmpzXG4vLyBodHRwczovL2dpdGh1Yi5jb20vbm9kZWpzL25vZGUvY29tbWl0LzJhNTFhZTQyNGE1MTNlYzlhNmFhMzQ2NmJhYTBjYzFkNTVkZDRmM2Jcbi8vIE9yaWdpbmFsbHkgZnJvbSBuYXJ3aGFsLmpzIChodHRwOi8vbmFyd2hhbGpzLm9yZylcbi8vIENvcHlyaWdodCAoYykgMjAwOSBUaG9tYXMgUm9iaW5zb24gPDI4MG5vcnRoLmNvbT5cbi8vXG4vLyBQZXJtaXNzaW9uIGlzIGhlcmVieSBncmFudGVkLCBmcmVlIG9mIGNoYXJnZSwgdG8gYW55IHBlcnNvbiBvYnRhaW5pbmcgYSBjb3B5XG4vLyBvZiB0aGlzIHNvZnR3YXJlIGFuZCBhc3NvY2lhdGVkIGRvY3VtZW50YXRpb24gZmlsZXMgKHRoZSAnU29mdHdhcmUnKSwgdG9cbi8vIGRlYWwgaW4gdGhlIFNvZnR3YXJlIHdpdGhvdXQgcmVzdHJpY3Rpb24sIGluY2x1ZGluZyB3aXRob3V0IGxpbWl0YXRpb24gdGhlXG4vLyByaWdodHMgdG8gdXNlLCBjb3B5LCBtb2RpZnksIG1lcmdlLCBwdWJsaXNoLCBkaXN0cmlidXRlLCBzdWJsaWNlbnNlLCBhbmQvb3Jcbi8vIHNlbGwgY29waWVzIG9mIHRoZSBTb2Z0d2FyZSwgYW5kIHRvIHBlcm1pdCBwZXJzb25zIHRvIHdob20gdGhlIFNvZnR3YXJlIGlzXG4vLyBmdXJuaXNoZWQgdG8gZG8gc28sIHN1YmplY3QgdG8gdGhlIGZvbGxvd2luZyBjb25kaXRpb25zOlxuLy9cbi8vIFRoZSBhYm92ZSBjb3B5cmlnaHQgbm90aWNlIGFuZCB0aGlzIHBlcm1pc3Npb24gbm90aWNlIHNoYWxsIGJlIGluY2x1ZGVkIGluXG4vLyBhbGwgY29waWVzIG9yIHN1YnN0YW50aWFsIHBvcnRpb25zIG9mIHRoZSBTb2Z0d2FyZS5cbi8vXG4vLyBUSEUgU09GVFdBUkUgSVMgUFJPVklERUQgJ0FTIElTJywgV0lUSE9VVCBXQVJSQU5UWSBPRiBBTlkgS0lORCwgRVhQUkVTUyBPUlxuLy8gSU1QTElFRCwgSU5DTFVESU5HIEJVVCBOT1QgTElNSVRFRCBUTyBUSEUgV0FSUkFOVElFUyBPRiBNRVJDSEFOVEFCSUxJVFksXG4vLyBGSVRORVNTIEZPUiBBIFBBUlRJQ1VMQVIgUFVSUE9TRSBBTkQgTk9OSU5GUklOR0VNRU5ULiBJTiBOTyBFVkVOVCBTSEFMTCBUSEVcbi8vIEFVVEhPUlMgQkUgTElBQkxFIEZPUiBBTlkgQ0xBSU0sIERBTUFHRVMgT1IgT1RIRVIgTElBQklMSVRZLCBXSEVUSEVSIElOIEFOXG4vLyBBQ1RJT04gT0YgQ09OVFJBQ1QsIFRPUlQgT1IgT1RIRVJXSVNFLCBBUklTSU5HIEZST00sIE9VVCBPRiBPUiBJTiBDT05ORUNUSU9OXG4vLyBXSVRIIFRIRSBTT0ZUV0FSRSBPUiBUSEUgVVNFIE9SIE9USEVSIERFQUxJTkdTIElOIFRIRSBTT0ZUV0FSRS5cbid1c2Ugc3RyaWN0JztcblxuZnVuY3Rpb24gX3R5cGVvZihvYmopIHsgaWYgKHR5cGVvZiBTeW1ib2wgPT09IFwiZnVuY3Rpb25cIiAmJiB0eXBlb2YgU3ltYm9sLml0ZXJhdG9yID09PSBcInN5bWJvbFwiKSB7IF90eXBlb2YgPSBmdW5jdGlvbiBfdHlwZW9mKG9iaikgeyByZXR1cm4gdHlwZW9mIG9iajsgfTsgfSBlbHNlIHsgX3R5cGVvZiA9IGZ1bmN0aW9uIF90eXBlb2Yob2JqKSB7IHJldHVybiBvYmogJiYgdHlwZW9mIFN5bWJvbCA9PT0gXCJmdW5jdGlvblwiICYmIG9iai5jb25zdHJ1Y3RvciA9PT0gU3ltYm9sICYmIG9iaiAhPT0gU3ltYm9sLnByb3RvdHlwZSA/IFwic3ltYm9sXCIgOiB0eXBlb2Ygb2JqOyB9OyB9IHJldHVybiBfdHlwZW9mKG9iaik7IH1cblxuZnVuY3Rpb24gX2NsYXNzQ2FsbENoZWNrKGluc3RhbmNlLCBDb25zdHJ1Y3RvcikgeyBpZiAoIShpbnN0YW5jZSBpbnN0YW5jZW9mIENvbnN0cnVjdG9yKSkgeyB0aHJvdyBuZXcgVHlwZUVycm9yKFwiQ2Fubm90IGNhbGwgYSBjbGFzcyBhcyBhIGZ1bmN0aW9uXCIpOyB9IH1cblxudmFyIF9yZXF1aXJlID0gcmVxdWlyZSgnLi9pbnRlcm5hbC9lcnJvcnMnKSxcbiAgICBfcmVxdWlyZSRjb2RlcyA9IF9yZXF1aXJlLmNvZGVzLFxuICAgIEVSUl9BTUJJR1VPVVNfQVJHVU1FTlQgPSBfcmVxdWlyZSRjb2Rlcy5FUlJfQU1CSUdVT1VTX0FSR1VNRU5ULFxuICAgIEVSUl9JTlZBTElEX0FSR19UWVBFID0gX3JlcXVpcmUkY29kZXMuRVJSX0lOVkFMSURfQVJHX1RZUEUsXG4gICAgRVJSX0lOVkFMSURfQVJHX1ZBTFVFID0gX3JlcXVpcmUkY29kZXMuRVJSX0lOVkFMSURfQVJHX1ZBTFVFLFxuICAgIEVSUl9JTlZBTElEX1JFVFVSTl9WQUxVRSA9IF9yZXF1aXJlJGNvZGVzLkVSUl9JTlZBTElEX1JFVFVSTl9WQUxVRSxcbiAgICBFUlJfTUlTU0lOR19BUkdTID0gX3JlcXVpcmUkY29kZXMuRVJSX01JU1NJTkdfQVJHUztcblxudmFyIEFzc2VydGlvbkVycm9yID0gcmVxdWlyZSgnLi9pbnRlcm5hbC9hc3NlcnQvYXNzZXJ0aW9uX2Vycm9yJyk7XG5cbnZhciBfcmVxdWlyZTIgPSByZXF1aXJlKCd1dGlsLycpLFxuICAgIGluc3BlY3QgPSBfcmVxdWlyZTIuaW5zcGVjdDtcblxudmFyIF9yZXF1aXJlJHR5cGVzID0gcmVxdWlyZSgndXRpbC8nKS50eXBlcyxcbiAgICBpc1Byb21pc2UgPSBfcmVxdWlyZSR0eXBlcy5pc1Byb21pc2UsXG4gICAgaXNSZWdFeHAgPSBfcmVxdWlyZSR0eXBlcy5pc1JlZ0V4cDtcblxudmFyIG9iamVjdEFzc2lnbiA9IE9iamVjdC5hc3NpZ24gPyBPYmplY3QuYXNzaWduIDogcmVxdWlyZSgnZXM2LW9iamVjdC1hc3NpZ24nKS5hc3NpZ247XG52YXIgb2JqZWN0SXMgPSBPYmplY3QuaXMgPyBPYmplY3QuaXMgOiByZXF1aXJlKCdvYmplY3QtaXMnKTtcbnZhciBlcnJvckNhY2hlID0gbmV3IE1hcCgpO1xudmFyIGlzRGVlcEVxdWFsO1xudmFyIGlzRGVlcFN0cmljdEVxdWFsO1xudmFyIHBhcnNlRXhwcmVzc2lvbkF0O1xudmFyIGZpbmROb2RlQXJvdW5kO1xudmFyIGRlY29kZXI7XG5cbmZ1bmN0aW9uIGxhenlMb2FkQ29tcGFyaXNvbigpIHtcbiAgdmFyIGNvbXBhcmlzb24gPSByZXF1aXJlKCcuL2ludGVybmFsL3V0aWwvY29tcGFyaXNvbnMnKTtcblxuICBpc0RlZXBFcXVhbCA9IGNvbXBhcmlzb24uaXNEZWVwRXF1YWw7XG4gIGlzRGVlcFN0cmljdEVxdWFsID0gY29tcGFyaXNvbi5pc0RlZXBTdHJpY3RFcXVhbDtcbn0gLy8gRXNjYXBlIGNvbnRyb2wgY2hhcmFjdGVycyBidXQgbm90IFxcbiBhbmQgXFx0IHRvIGtlZXAgdGhlIGxpbmUgYnJlYWtzIGFuZFxuLy8gaW5kZW50YXRpb24gaW50YWN0LlxuLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLWNvbnRyb2wtcmVnZXhcblxuXG52YXIgZXNjYXBlU2VxdWVuY2VzUmVnRXhwID0gL1tcXHgwMC1cXHgwOFxceDBiXFx4MGNcXHgwZS1cXHgxZl0vZztcbnZhciBtZXRhID0gW1wiXFxcXHUwMDAwXCIsIFwiXFxcXHUwMDAxXCIsIFwiXFxcXHUwMDAyXCIsIFwiXFxcXHUwMDAzXCIsIFwiXFxcXHUwMDA0XCIsIFwiXFxcXHUwMDA1XCIsIFwiXFxcXHUwMDA2XCIsIFwiXFxcXHUwMDA3XCIsICdcXFxcYicsICcnLCAnJywgXCJcXFxcdTAwMGJcIiwgJ1xcXFxmJywgJycsIFwiXFxcXHUwMDBlXCIsIFwiXFxcXHUwMDBmXCIsIFwiXFxcXHUwMDEwXCIsIFwiXFxcXHUwMDExXCIsIFwiXFxcXHUwMDEyXCIsIFwiXFxcXHUwMDEzXCIsIFwiXFxcXHUwMDE0XCIsIFwiXFxcXHUwMDE1XCIsIFwiXFxcXHUwMDE2XCIsIFwiXFxcXHUwMDE3XCIsIFwiXFxcXHUwMDE4XCIsIFwiXFxcXHUwMDE5XCIsIFwiXFxcXHUwMDFhXCIsIFwiXFxcXHUwMDFiXCIsIFwiXFxcXHUwMDFjXCIsIFwiXFxcXHUwMDFkXCIsIFwiXFxcXHUwMDFlXCIsIFwiXFxcXHUwMDFmXCJdO1xuXG52YXIgZXNjYXBlRm4gPSBmdW5jdGlvbiBlc2NhcGVGbihzdHIpIHtcbiAgcmV0dXJuIG1ldGFbc3RyLmNoYXJDb2RlQXQoMCldO1xufTtcblxudmFyIHdhcm5lZCA9IGZhbHNlOyAvLyBUaGUgYXNzZXJ0IG1vZHVsZSBwcm92aWRlcyBmdW5jdGlvbnMgdGhhdCB0aHJvd1xuLy8gQXNzZXJ0aW9uRXJyb3IncyB3aGVuIHBhcnRpY3VsYXIgY29uZGl0aW9ucyBhcmUgbm90IG1ldC4gVGhlXG4vLyBhc3NlcnQgbW9kdWxlIG11c3QgY29uZm9ybSB0byB0aGUgZm9sbG93aW5nIGludGVyZmFjZS5cblxudmFyIGFzc2VydCA9IG1vZHVsZS5leHBvcnRzID0gb2s7XG52YXIgTk9fRVhDRVBUSU9OX1NFTlRJTkVMID0ge307IC8vIEFsbCBvZiB0aGUgZm9sbG93aW5nIGZ1bmN0aW9ucyBtdXN0IHRocm93IGFuIEFzc2VydGlvbkVycm9yXG4vLyB3aGVuIGEgY29ycmVzcG9uZGluZyBjb25kaXRpb24gaXMgbm90IG1ldCwgd2l0aCBhIG1lc3NhZ2UgdGhhdFxuLy8gbWF5IGJlIHVuZGVmaW5lZCBpZiBub3QgcHJvdmlkZWQuIEFsbCBhc3NlcnRpb24gbWV0aG9kcyBwcm92aWRlXG4vLyBib3RoIHRoZSBhY3R1YWwgYW5kIGV4cGVjdGVkIHZhbHVlcyB0byB0aGUgYXNzZXJ0aW9uIGVycm9yIGZvclxuLy8gZGlzcGxheSBwdXJwb3Nlcy5cblxuZnVuY3Rpb24gaW5uZXJGYWlsKG9iaikge1xuICBpZiAob2JqLm1lc3NhZ2UgaW5zdGFuY2VvZiBFcnJvcikgdGhyb3cgb2JqLm1lc3NhZ2U7XG4gIHRocm93IG5ldyBBc3NlcnRpb25FcnJvcihvYmopO1xufVxuXG5mdW5jdGlvbiBmYWlsKGFjdHVhbCwgZXhwZWN0ZWQsIG1lc3NhZ2UsIG9wZXJhdG9yLCBzdGFja1N0YXJ0Rm4pIHtcbiAgdmFyIGFyZ3NMZW4gPSBhcmd1bWVudHMubGVuZ3RoO1xuICB2YXIgaW50ZXJuYWxNZXNzYWdlO1xuXG4gIGlmIChhcmdzTGVuID09PSAwKSB7XG4gICAgaW50ZXJuYWxNZXNzYWdlID0gJ0ZhaWxlZCc7XG4gIH0gZWxzZSBpZiAoYXJnc0xlbiA9PT0gMSkge1xuICAgIG1lc3NhZ2UgPSBhY3R1YWw7XG4gICAgYWN0dWFsID0gdW5kZWZpbmVkO1xuICB9IGVsc2Uge1xuICAgIGlmICh3YXJuZWQgPT09IGZhbHNlKSB7XG4gICAgICB3YXJuZWQgPSB0cnVlO1xuICAgICAgdmFyIHdhcm4gPSBwcm9jZXNzLmVtaXRXYXJuaW5nID8gcHJvY2Vzcy5lbWl0V2FybmluZyA6IGNvbnNvbGUud2Fybi5iaW5kKGNvbnNvbGUpO1xuICAgICAgd2FybignYXNzZXJ0LmZhaWwoKSB3aXRoIG1vcmUgdGhhbiBvbmUgYXJndW1lbnQgaXMgZGVwcmVjYXRlZC4gJyArICdQbGVhc2UgdXNlIGFzc2VydC5zdHJpY3RFcXVhbCgpIGluc3RlYWQgb3Igb25seSBwYXNzIGEgbWVzc2FnZS4nLCAnRGVwcmVjYXRpb25XYXJuaW5nJywgJ0RFUDAwOTQnKTtcbiAgICB9XG5cbiAgICBpZiAoYXJnc0xlbiA9PT0gMikgb3BlcmF0b3IgPSAnIT0nO1xuICB9XG5cbiAgaWYgKG1lc3NhZ2UgaW5zdGFuY2VvZiBFcnJvcikgdGhyb3cgbWVzc2FnZTtcbiAgdmFyIGVyckFyZ3MgPSB7XG4gICAgYWN0dWFsOiBhY3R1YWwsXG4gICAgZXhwZWN0ZWQ6IGV4cGVjdGVkLFxuICAgIG9wZXJhdG9yOiBvcGVyYXRvciA9PT0gdW5kZWZpbmVkID8gJ2ZhaWwnIDogb3BlcmF0b3IsXG4gICAgc3RhY2tTdGFydEZuOiBzdGFja1N0YXJ0Rm4gfHwgZmFpbFxuICB9O1xuXG4gIGlmIChtZXNzYWdlICE9PSB1bmRlZmluZWQpIHtcbiAgICBlcnJBcmdzLm1lc3NhZ2UgPSBtZXNzYWdlO1xuICB9XG5cbiAgdmFyIGVyciA9IG5ldyBBc3NlcnRpb25FcnJvcihlcnJBcmdzKTtcblxuICBpZiAoaW50ZXJuYWxNZXNzYWdlKSB7XG4gICAgZXJyLm1lc3NhZ2UgPSBpbnRlcm5hbE1lc3NhZ2U7XG4gICAgZXJyLmdlbmVyYXRlZE1lc3NhZ2UgPSB0cnVlO1xuICB9XG5cbiAgdGhyb3cgZXJyO1xufVxuXG5hc3NlcnQuZmFpbCA9IGZhaWw7IC8vIFRoZSBBc3NlcnRpb25FcnJvciBpcyBkZWZpbmVkIGluIGludGVybmFsL2Vycm9yLlxuXG5hc3NlcnQuQXNzZXJ0aW9uRXJyb3IgPSBBc3NlcnRpb25FcnJvcjtcblxuZnVuY3Rpb24gaW5uZXJPayhmbiwgYXJnTGVuLCB2YWx1ZSwgbWVzc2FnZSkge1xuICBpZiAoIXZhbHVlKSB7XG4gICAgdmFyIGdlbmVyYXRlZE1lc3NhZ2UgPSBmYWxzZTtcblxuICAgIGlmIChhcmdMZW4gPT09IDApIHtcbiAgICAgIGdlbmVyYXRlZE1lc3NhZ2UgPSB0cnVlO1xuICAgICAgbWVzc2FnZSA9ICdObyB2YWx1ZSBhcmd1bWVudCBwYXNzZWQgdG8gYGFzc2VydC5vaygpYCc7XG4gICAgfSBlbHNlIGlmIChtZXNzYWdlIGluc3RhbmNlb2YgRXJyb3IpIHtcbiAgICAgIHRocm93IG1lc3NhZ2U7XG4gICAgfVxuXG4gICAgdmFyIGVyciA9IG5ldyBBc3NlcnRpb25FcnJvcih7XG4gICAgICBhY3R1YWw6IHZhbHVlLFxuICAgICAgZXhwZWN0ZWQ6IHRydWUsXG4gICAgICBtZXNzYWdlOiBtZXNzYWdlLFxuICAgICAgb3BlcmF0b3I6ICc9PScsXG4gICAgICBzdGFja1N0YXJ0Rm46IGZuXG4gICAgfSk7XG4gICAgZXJyLmdlbmVyYXRlZE1lc3NhZ2UgPSBnZW5lcmF0ZWRNZXNzYWdlO1xuICAgIHRocm93IGVycjtcbiAgfVxufSAvLyBQdXJlIGFzc2VydGlvbiB0ZXN0cyB3aGV0aGVyIGEgdmFsdWUgaXMgdHJ1dGh5LCBhcyBkZXRlcm1pbmVkXG4vLyBieSAhIXZhbHVlLlxuXG5cbmZ1bmN0aW9uIG9rKCkge1xuICBmb3IgKHZhciBfbGVuID0gYXJndW1lbnRzLmxlbmd0aCwgYXJncyA9IG5ldyBBcnJheShfbGVuKSwgX2tleSA9IDA7IF9rZXkgPCBfbGVuOyBfa2V5KyspIHtcbiAgICBhcmdzW19rZXldID0gYXJndW1lbnRzW19rZXldO1xuICB9XG5cbiAgaW5uZXJPay5hcHBseSh2b2lkIDAsIFtvaywgYXJncy5sZW5ndGhdLmNvbmNhdChhcmdzKSk7XG59XG5cbmFzc2VydC5vayA9IG9rOyAvLyBUaGUgZXF1YWxpdHkgYXNzZXJ0aW9uIHRlc3RzIHNoYWxsb3csIGNvZXJjaXZlIGVxdWFsaXR5IHdpdGggPT0uXG5cbi8qIGVzbGludC1kaXNhYmxlIG5vLXJlc3RyaWN0ZWQtcHJvcGVydGllcyAqL1xuXG5hc3NlcnQuZXF1YWwgPSBmdW5jdGlvbiBlcXVhbChhY3R1YWwsIGV4cGVjdGVkLCBtZXNzYWdlKSB7XG4gIGlmIChhcmd1bWVudHMubGVuZ3RoIDwgMikge1xuICAgIHRocm93IG5ldyBFUlJfTUlTU0lOR19BUkdTKCdhY3R1YWwnLCAnZXhwZWN0ZWQnKTtcbiAgfSAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgZXFlcWVxXG5cblxuICBpZiAoYWN0dWFsICE9IGV4cGVjdGVkKSB7XG4gICAgaW5uZXJGYWlsKHtcbiAgICAgIGFjdHVhbDogYWN0dWFsLFxuICAgICAgZXhwZWN0ZWQ6IGV4cGVjdGVkLFxuICAgICAgbWVzc2FnZTogbWVzc2FnZSxcbiAgICAgIG9wZXJhdG9yOiAnPT0nLFxuICAgICAgc3RhY2tTdGFydEZuOiBlcXVhbFxuICAgIH0pO1xuICB9XG59OyAvLyBUaGUgbm9uLWVxdWFsaXR5IGFzc2VydGlvbiB0ZXN0cyBmb3Igd2hldGhlciB0d28gb2JqZWN0cyBhcmUgbm90XG4vLyBlcXVhbCB3aXRoICE9LlxuXG5cbmFzc2VydC5ub3RFcXVhbCA9IGZ1bmN0aW9uIG5vdEVxdWFsKGFjdHVhbCwgZXhwZWN0ZWQsIG1lc3NhZ2UpIHtcbiAgaWYgKGFyZ3VtZW50cy5sZW5ndGggPCAyKSB7XG4gICAgdGhyb3cgbmV3IEVSUl9NSVNTSU5HX0FSR1MoJ2FjdHVhbCcsICdleHBlY3RlZCcpO1xuICB9IC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBlcWVxZXFcblxuXG4gIGlmIChhY3R1YWwgPT0gZXhwZWN0ZWQpIHtcbiAgICBpbm5lckZhaWwoe1xuICAgICAgYWN0dWFsOiBhY3R1YWwsXG4gICAgICBleHBlY3RlZDogZXhwZWN0ZWQsXG4gICAgICBtZXNzYWdlOiBtZXNzYWdlLFxuICAgICAgb3BlcmF0b3I6ICchPScsXG4gICAgICBzdGFja1N0YXJ0Rm46IG5vdEVxdWFsXG4gICAgfSk7XG4gIH1cbn07IC8vIFRoZSBlcXVpdmFsZW5jZSBhc3NlcnRpb24gdGVzdHMgYSBkZWVwIGVxdWFsaXR5IHJlbGF0aW9uLlxuXG5cbmFzc2VydC5kZWVwRXF1YWwgPSBmdW5jdGlvbiBkZWVwRXF1YWwoYWN0dWFsLCBleHBlY3RlZCwgbWVzc2FnZSkge1xuICBpZiAoYXJndW1lbnRzLmxlbmd0aCA8IDIpIHtcbiAgICB0aHJvdyBuZXcgRVJSX01JU1NJTkdfQVJHUygnYWN0dWFsJywgJ2V4cGVjdGVkJyk7XG4gIH1cblxuICBpZiAoaXNEZWVwRXF1YWwgPT09IHVuZGVmaW5lZCkgbGF6eUxvYWRDb21wYXJpc29uKCk7XG5cbiAgaWYgKCFpc0RlZXBFcXVhbChhY3R1YWwsIGV4cGVjdGVkKSkge1xuICAgIGlubmVyRmFpbCh7XG4gICAgICBhY3R1YWw6IGFjdHVhbCxcbiAgICAgIGV4cGVjdGVkOiBleHBlY3RlZCxcbiAgICAgIG1lc3NhZ2U6IG1lc3NhZ2UsXG4gICAgICBvcGVyYXRvcjogJ2RlZXBFcXVhbCcsXG4gICAgICBzdGFja1N0YXJ0Rm46IGRlZXBFcXVhbFxuICAgIH0pO1xuICB9XG59OyAvLyBUaGUgbm9uLWVxdWl2YWxlbmNlIGFzc2VydGlvbiB0ZXN0cyBmb3IgYW55IGRlZXAgaW5lcXVhbGl0eS5cblxuXG5hc3NlcnQubm90RGVlcEVxdWFsID0gZnVuY3Rpb24gbm90RGVlcEVxdWFsKGFjdHVhbCwgZXhwZWN0ZWQsIG1lc3NhZ2UpIHtcbiAgaWYgKGFyZ3VtZW50cy5sZW5ndGggPCAyKSB7XG4gICAgdGhyb3cgbmV3IEVSUl9NSVNTSU5HX0FSR1MoJ2FjdHVhbCcsICdleHBlY3RlZCcpO1xuICB9XG5cbiAgaWYgKGlzRGVlcEVxdWFsID09PSB1bmRlZmluZWQpIGxhenlMb2FkQ29tcGFyaXNvbigpO1xuXG4gIGlmIChpc0RlZXBFcXVhbChhY3R1YWwsIGV4cGVjdGVkKSkge1xuICAgIGlubmVyRmFpbCh7XG4gICAgICBhY3R1YWw6IGFjdHVhbCxcbiAgICAgIGV4cGVjdGVkOiBleHBlY3RlZCxcbiAgICAgIG1lc3NhZ2U6IG1lc3NhZ2UsXG4gICAgICBvcGVyYXRvcjogJ25vdERlZXBFcXVhbCcsXG4gICAgICBzdGFja1N0YXJ0Rm46IG5vdERlZXBFcXVhbFxuICAgIH0pO1xuICB9XG59O1xuLyogZXNsaW50LWVuYWJsZSAqL1xuXG5cbmFzc2VydC5kZWVwU3RyaWN0RXF1YWwgPSBmdW5jdGlvbiBkZWVwU3RyaWN0RXF1YWwoYWN0dWFsLCBleHBlY3RlZCwgbWVzc2FnZSkge1xuICBpZiAoYXJndW1lbnRzLmxlbmd0aCA8IDIpIHtcbiAgICB0aHJvdyBuZXcgRVJSX01JU1NJTkdfQVJHUygnYWN0dWFsJywgJ2V4cGVjdGVkJyk7XG4gIH1cblxuICBpZiAoaXNEZWVwRXF1YWwgPT09IHVuZGVmaW5lZCkgbGF6eUxvYWRDb21wYXJpc29uKCk7XG5cbiAgaWYgKCFpc0RlZXBTdHJpY3RFcXVhbChhY3R1YWwsIGV4cGVjdGVkKSkge1xuICAgIGlubmVyRmFpbCh7XG4gICAgICBhY3R1YWw6IGFjdHVhbCxcbiAgICAgIGV4cGVjdGVkOiBleHBlY3RlZCxcbiAgICAgIG1lc3NhZ2U6IG1lc3NhZ2UsXG4gICAgICBvcGVyYXRvcjogJ2RlZXBTdHJpY3RFcXVhbCcsXG4gICAgICBzdGFja1N0YXJ0Rm46IGRlZXBTdHJpY3RFcXVhbFxuICAgIH0pO1xuICB9XG59O1xuXG5hc3NlcnQubm90RGVlcFN0cmljdEVxdWFsID0gbm90RGVlcFN0cmljdEVxdWFsO1xuXG5mdW5jdGlvbiBub3REZWVwU3RyaWN0RXF1YWwoYWN0dWFsLCBleHBlY3RlZCwgbWVzc2FnZSkge1xuICBpZiAoYXJndW1lbnRzLmxlbmd0aCA8IDIpIHtcbiAgICB0aHJvdyBuZXcgRVJSX01JU1NJTkdfQVJHUygnYWN0dWFsJywgJ2V4cGVjdGVkJyk7XG4gIH1cblxuICBpZiAoaXNEZWVwRXF1YWwgPT09IHVuZGVmaW5lZCkgbGF6eUxvYWRDb21wYXJpc29uKCk7XG5cbiAgaWYgKGlzRGVlcFN0cmljdEVxdWFsKGFjdHVhbCwgZXhwZWN0ZWQpKSB7XG4gICAgaW5uZXJGYWlsKHtcbiAgICAgIGFjdHVhbDogYWN0dWFsLFxuICAgICAgZXhwZWN0ZWQ6IGV4cGVjdGVkLFxuICAgICAgbWVzc2FnZTogbWVzc2FnZSxcbiAgICAgIG9wZXJhdG9yOiAnbm90RGVlcFN0cmljdEVxdWFsJyxcbiAgICAgIHN0YWNrU3RhcnRGbjogbm90RGVlcFN0cmljdEVxdWFsXG4gICAgfSk7XG4gIH1cbn1cblxuYXNzZXJ0LnN0cmljdEVxdWFsID0gZnVuY3Rpb24gc3RyaWN0RXF1YWwoYWN0dWFsLCBleHBlY3RlZCwgbWVzc2FnZSkge1xuICBpZiAoYXJndW1lbnRzLmxlbmd0aCA8IDIpIHtcbiAgICB0aHJvdyBuZXcgRVJSX01JU1NJTkdfQVJHUygnYWN0dWFsJywgJ2V4cGVjdGVkJyk7XG4gIH1cblxuICBpZiAoIW9iamVjdElzKGFjdHVhbCwgZXhwZWN0ZWQpKSB7XG4gICAgaW5uZXJGYWlsKHtcbiAgICAgIGFjdHVhbDogYWN0dWFsLFxuICAgICAgZXhwZWN0ZWQ6IGV4cGVjdGVkLFxuICAgICAgbWVzc2FnZTogbWVzc2FnZSxcbiAgICAgIG9wZXJhdG9yOiAnc3RyaWN0RXF1YWwnLFxuICAgICAgc3RhY2tTdGFydEZuOiBzdHJpY3RFcXVhbFxuICAgIH0pO1xuICB9XG59O1xuXG5hc3NlcnQubm90U3RyaWN0RXF1YWwgPSBmdW5jdGlvbiBub3RTdHJpY3RFcXVhbChhY3R1YWwsIGV4cGVjdGVkLCBtZXNzYWdlKSB7XG4gIGlmIChhcmd1bWVudHMubGVuZ3RoIDwgMikge1xuICAgIHRocm93IG5ldyBFUlJfTUlTU0lOR19BUkdTKCdhY3R1YWwnLCAnZXhwZWN0ZWQnKTtcbiAgfVxuXG4gIGlmIChvYmplY3RJcyhhY3R1YWwsIGV4cGVjdGVkKSkge1xuICAgIGlubmVyRmFpbCh7XG4gICAgICBhY3R1YWw6IGFjdHVhbCxcbiAgICAgIGV4cGVjdGVkOiBleHBlY3RlZCxcbiAgICAgIG1lc3NhZ2U6IG1lc3NhZ2UsXG4gICAgICBvcGVyYXRvcjogJ25vdFN0cmljdEVxdWFsJyxcbiAgICAgIHN0YWNrU3RhcnRGbjogbm90U3RyaWN0RXF1YWxcbiAgICB9KTtcbiAgfVxufTtcblxudmFyIENvbXBhcmlzb24gPSBmdW5jdGlvbiBDb21wYXJpc29uKG9iaiwga2V5cywgYWN0dWFsKSB7XG4gIHZhciBfdGhpcyA9IHRoaXM7XG5cbiAgX2NsYXNzQ2FsbENoZWNrKHRoaXMsIENvbXBhcmlzb24pO1xuXG4gIGtleXMuZm9yRWFjaChmdW5jdGlvbiAoa2V5KSB7XG4gICAgaWYgKGtleSBpbiBvYmopIHtcbiAgICAgIGlmIChhY3R1YWwgIT09IHVuZGVmaW5lZCAmJiB0eXBlb2YgYWN0dWFsW2tleV0gPT09ICdzdHJpbmcnICYmIGlzUmVnRXhwKG9ialtrZXldKSAmJiBvYmpba2V5XS50ZXN0KGFjdHVhbFtrZXldKSkge1xuICAgICAgICBfdGhpc1trZXldID0gYWN0dWFsW2tleV07XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBfdGhpc1trZXldID0gb2JqW2tleV07XG4gICAgICB9XG4gICAgfVxuICB9KTtcbn07XG5cbmZ1bmN0aW9uIGNvbXBhcmVFeGNlcHRpb25LZXkoYWN0dWFsLCBleHBlY3RlZCwga2V5LCBtZXNzYWdlLCBrZXlzLCBmbikge1xuICBpZiAoIShrZXkgaW4gYWN0dWFsKSB8fCAhaXNEZWVwU3RyaWN0RXF1YWwoYWN0dWFsW2tleV0sIGV4cGVjdGVkW2tleV0pKSB7XG4gICAgaWYgKCFtZXNzYWdlKSB7XG4gICAgICAvLyBDcmVhdGUgcGxhY2Vob2xkZXIgb2JqZWN0cyB0byBjcmVhdGUgYSBuaWNlIG91dHB1dC5cbiAgICAgIHZhciBhID0gbmV3IENvbXBhcmlzb24oYWN0dWFsLCBrZXlzKTtcbiAgICAgIHZhciBiID0gbmV3IENvbXBhcmlzb24oZXhwZWN0ZWQsIGtleXMsIGFjdHVhbCk7XG4gICAgICB2YXIgZXJyID0gbmV3IEFzc2VydGlvbkVycm9yKHtcbiAgICAgICAgYWN0dWFsOiBhLFxuICAgICAgICBleHBlY3RlZDogYixcbiAgICAgICAgb3BlcmF0b3I6ICdkZWVwU3RyaWN0RXF1YWwnLFxuICAgICAgICBzdGFja1N0YXJ0Rm46IGZuXG4gICAgICB9KTtcbiAgICAgIGVyci5hY3R1YWwgPSBhY3R1YWw7XG4gICAgICBlcnIuZXhwZWN0ZWQgPSBleHBlY3RlZDtcbiAgICAgIGVyci5vcGVyYXRvciA9IGZuLm5hbWU7XG4gICAgICB0aHJvdyBlcnI7XG4gICAgfVxuXG4gICAgaW5uZXJGYWlsKHtcbiAgICAgIGFjdHVhbDogYWN0dWFsLFxuICAgICAgZXhwZWN0ZWQ6IGV4cGVjdGVkLFxuICAgICAgbWVzc2FnZTogbWVzc2FnZSxcbiAgICAgIG9wZXJhdG9yOiBmbi5uYW1lLFxuICAgICAgc3RhY2tTdGFydEZuOiBmblxuICAgIH0pO1xuICB9XG59XG5cbmZ1bmN0aW9uIGV4cGVjdGVkRXhjZXB0aW9uKGFjdHVhbCwgZXhwZWN0ZWQsIG1zZywgZm4pIHtcbiAgaWYgKHR5cGVvZiBleHBlY3RlZCAhPT0gJ2Z1bmN0aW9uJykge1xuICAgIGlmIChpc1JlZ0V4cChleHBlY3RlZCkpIHJldHVybiBleHBlY3RlZC50ZXN0KGFjdHVhbCk7IC8vIGFzc2VydC5kb2VzTm90VGhyb3cgZG9lcyBub3QgYWNjZXB0IG9iamVjdHMuXG5cbiAgICBpZiAoYXJndW1lbnRzLmxlbmd0aCA9PT0gMikge1xuICAgICAgdGhyb3cgbmV3IEVSUl9JTlZBTElEX0FSR19UWVBFKCdleHBlY3RlZCcsIFsnRnVuY3Rpb24nLCAnUmVnRXhwJ10sIGV4cGVjdGVkKTtcbiAgICB9IC8vIEhhbmRsZSBwcmltaXRpdmVzIHByb3Blcmx5LlxuXG5cbiAgICBpZiAoX3R5cGVvZihhY3R1YWwpICE9PSAnb2JqZWN0JyB8fCBhY3R1YWwgPT09IG51bGwpIHtcbiAgICAgIHZhciBlcnIgPSBuZXcgQXNzZXJ0aW9uRXJyb3Ioe1xuICAgICAgICBhY3R1YWw6IGFjdHVhbCxcbiAgICAgICAgZXhwZWN0ZWQ6IGV4cGVjdGVkLFxuICAgICAgICBtZXNzYWdlOiBtc2csXG4gICAgICAgIG9wZXJhdG9yOiAnZGVlcFN0cmljdEVxdWFsJyxcbiAgICAgICAgc3RhY2tTdGFydEZuOiBmblxuICAgICAgfSk7XG4gICAgICBlcnIub3BlcmF0b3IgPSBmbi5uYW1lO1xuICAgICAgdGhyb3cgZXJyO1xuICAgIH1cblxuICAgIHZhciBrZXlzID0gT2JqZWN0LmtleXMoZXhwZWN0ZWQpOyAvLyBTcGVjaWFsIGhhbmRsZSBlcnJvcnMgdG8gbWFrZSBzdXJlIHRoZSBuYW1lIGFuZCB0aGUgbWVzc2FnZSBhcmUgY29tcGFyZWRcbiAgICAvLyBhcyB3ZWxsLlxuXG4gICAgaWYgKGV4cGVjdGVkIGluc3RhbmNlb2YgRXJyb3IpIHtcbiAgICAgIGtleXMucHVzaCgnbmFtZScsICdtZXNzYWdlJyk7XG4gICAgfSBlbHNlIGlmIChrZXlzLmxlbmd0aCA9PT0gMCkge1xuICAgICAgdGhyb3cgbmV3IEVSUl9JTlZBTElEX0FSR19WQUxVRSgnZXJyb3InLCBleHBlY3RlZCwgJ21heSBub3QgYmUgYW4gZW1wdHkgb2JqZWN0Jyk7XG4gICAgfVxuXG4gICAgaWYgKGlzRGVlcEVxdWFsID09PSB1bmRlZmluZWQpIGxhenlMb2FkQ29tcGFyaXNvbigpO1xuICAgIGtleXMuZm9yRWFjaChmdW5jdGlvbiAoa2V5KSB7XG4gICAgICBpZiAodHlwZW9mIGFjdHVhbFtrZXldID09PSAnc3RyaW5nJyAmJiBpc1JlZ0V4cChleHBlY3RlZFtrZXldKSAmJiBleHBlY3RlZFtrZXldLnRlc3QoYWN0dWFsW2tleV0pKSB7XG4gICAgICAgIHJldHVybjtcbiAgICAgIH1cblxuICAgICAgY29tcGFyZUV4Y2VwdGlvbktleShhY3R1YWwsIGV4cGVjdGVkLCBrZXksIG1zZywga2V5cywgZm4pO1xuICAgIH0pO1xuICAgIHJldHVybiB0cnVlO1xuICB9IC8vIEd1YXJkIGluc3RhbmNlb2YgYWdhaW5zdCBhcnJvdyBmdW5jdGlvbnMgYXMgdGhleSBkb24ndCBoYXZlIGEgcHJvdG90eXBlLlxuXG5cbiAgaWYgKGV4cGVjdGVkLnByb3RvdHlwZSAhPT0gdW5kZWZpbmVkICYmIGFjdHVhbCBpbnN0YW5jZW9mIGV4cGVjdGVkKSB7XG4gICAgcmV0dXJuIHRydWU7XG4gIH1cblxuICBpZiAoRXJyb3IuaXNQcm90b3R5cGVPZihleHBlY3RlZCkpIHtcbiAgICByZXR1cm4gZmFsc2U7XG4gIH1cblxuICByZXR1cm4gZXhwZWN0ZWQuY2FsbCh7fSwgYWN0dWFsKSA9PT0gdHJ1ZTtcbn1cblxuZnVuY3Rpb24gZ2V0QWN0dWFsKGZuKSB7XG4gIGlmICh0eXBlb2YgZm4gIT09ICdmdW5jdGlvbicpIHtcbiAgICB0aHJvdyBuZXcgRVJSX0lOVkFMSURfQVJHX1RZUEUoJ2ZuJywgJ0Z1bmN0aW9uJywgZm4pO1xuICB9XG5cbiAgdHJ5IHtcbiAgICBmbigpO1xuICB9IGNhdGNoIChlKSB7XG4gICAgcmV0dXJuIGU7XG4gIH1cblxuICByZXR1cm4gTk9fRVhDRVBUSU9OX1NFTlRJTkVMO1xufVxuXG5mdW5jdGlvbiBjaGVja0lzUHJvbWlzZShvYmopIHtcbiAgLy8gQWNjZXB0IG5hdGl2ZSBFUzYgcHJvbWlzZXMgYW5kIHByb21pc2VzIHRoYXQgYXJlIGltcGxlbWVudGVkIGluIGEgc2ltaWxhclxuICAvLyB3YXkuIERvIG5vdCBhY2NlcHQgdGhlbmFibGVzIHRoYXQgdXNlIGEgZnVuY3Rpb24gYXMgYG9iamAgYW5kIHRoYXQgaGF2ZSBub1xuICAvLyBgY2F0Y2hgIGhhbmRsZXIuXG4gIC8vIFRPRE86IHRoZW5hYmxlcyBhcmUgY2hlY2tlZCB1cCB1bnRpbCB0aGV5IGhhdmUgdGhlIGNvcnJlY3QgbWV0aG9kcyxcbiAgLy8gYnV0IGFjY29yZGluZyB0byBkb2N1bWVudGF0aW9uLCB0aGUgYHRoZW5gIG1ldGhvZCBzaG91bGQgcmVjZWl2ZVxuICAvLyB0aGUgYGZ1bGZpbGxgIGFuZCBgcmVqZWN0YCBhcmd1bWVudHMgYXMgd2VsbCBvciBpdCBtYXkgYmUgbmV2ZXIgcmVzb2x2ZWQuXG4gIHJldHVybiBpc1Byb21pc2Uob2JqKSB8fCBvYmogIT09IG51bGwgJiYgX3R5cGVvZihvYmopID09PSAnb2JqZWN0JyAmJiB0eXBlb2Ygb2JqLnRoZW4gPT09ICdmdW5jdGlvbicgJiYgdHlwZW9mIG9iai5jYXRjaCA9PT0gJ2Z1bmN0aW9uJztcbn1cblxuZnVuY3Rpb24gd2FpdEZvckFjdHVhbChwcm9taXNlRm4pIHtcbiAgcmV0dXJuIFByb21pc2UucmVzb2x2ZSgpLnRoZW4oZnVuY3Rpb24gKCkge1xuICAgIHZhciByZXN1bHRQcm9taXNlO1xuXG4gICAgaWYgKHR5cGVvZiBwcm9taXNlRm4gPT09ICdmdW5jdGlvbicpIHtcbiAgICAgIC8vIFJldHVybiBhIHJlamVjdGVkIHByb21pc2UgaWYgYHByb21pc2VGbmAgdGhyb3dzIHN5bmNocm9ub3VzbHkuXG4gICAgICByZXN1bHRQcm9taXNlID0gcHJvbWlzZUZuKCk7IC8vIEZhaWwgaW4gY2FzZSBubyBwcm9taXNlIGlzIHJldHVybmVkLlxuXG4gICAgICBpZiAoIWNoZWNrSXNQcm9taXNlKHJlc3VsdFByb21pc2UpKSB7XG4gICAgICAgIHRocm93IG5ldyBFUlJfSU5WQUxJRF9SRVRVUk5fVkFMVUUoJ2luc3RhbmNlIG9mIFByb21pc2UnLCAncHJvbWlzZUZuJywgcmVzdWx0UHJvbWlzZSk7XG4gICAgICB9XG4gICAgfSBlbHNlIGlmIChjaGVja0lzUHJvbWlzZShwcm9taXNlRm4pKSB7XG4gICAgICByZXN1bHRQcm9taXNlID0gcHJvbWlzZUZuO1xuICAgIH0gZWxzZSB7XG4gICAgICB0aHJvdyBuZXcgRVJSX0lOVkFMSURfQVJHX1RZUEUoJ3Byb21pc2VGbicsIFsnRnVuY3Rpb24nLCAnUHJvbWlzZSddLCBwcm9taXNlRm4pO1xuICAgIH1cblxuICAgIHJldHVybiBQcm9taXNlLnJlc29sdmUoKS50aGVuKGZ1bmN0aW9uICgpIHtcbiAgICAgIHJldHVybiByZXN1bHRQcm9taXNlO1xuICAgIH0pLnRoZW4oZnVuY3Rpb24gKCkge1xuICAgICAgcmV0dXJuIE5PX0VYQ0VQVElPTl9TRU5USU5FTDtcbiAgICB9KS5jYXRjaChmdW5jdGlvbiAoZSkge1xuICAgICAgcmV0dXJuIGU7XG4gICAgfSk7XG4gIH0pO1xufVxuXG5mdW5jdGlvbiBleHBlY3RzRXJyb3Ioc3RhY2tTdGFydEZuLCBhY3R1YWwsIGVycm9yLCBtZXNzYWdlKSB7XG4gIGlmICh0eXBlb2YgZXJyb3IgPT09ICdzdHJpbmcnKSB7XG4gICAgaWYgKGFyZ3VtZW50cy5sZW5ndGggPT09IDQpIHtcbiAgICAgIHRocm93IG5ldyBFUlJfSU5WQUxJRF9BUkdfVFlQRSgnZXJyb3InLCBbJ09iamVjdCcsICdFcnJvcicsICdGdW5jdGlvbicsICdSZWdFeHAnXSwgZXJyb3IpO1xuICAgIH1cblxuICAgIGlmIChfdHlwZW9mKGFjdHVhbCkgPT09ICdvYmplY3QnICYmIGFjdHVhbCAhPT0gbnVsbCkge1xuICAgICAgaWYgKGFjdHVhbC5tZXNzYWdlID09PSBlcnJvcikge1xuICAgICAgICB0aHJvdyBuZXcgRVJSX0FNQklHVU9VU19BUkdVTUVOVCgnZXJyb3IvbWVzc2FnZScsIFwiVGhlIGVycm9yIG1lc3NhZ2UgXFxcIlwiLmNvbmNhdChhY3R1YWwubWVzc2FnZSwgXCJcXFwiIGlzIGlkZW50aWNhbCB0byB0aGUgbWVzc2FnZS5cIikpO1xuICAgICAgfVxuICAgIH0gZWxzZSBpZiAoYWN0dWFsID09PSBlcnJvcikge1xuICAgICAgdGhyb3cgbmV3IEVSUl9BTUJJR1VPVVNfQVJHVU1FTlQoJ2Vycm9yL21lc3NhZ2UnLCBcIlRoZSBlcnJvciBcXFwiXCIuY29uY2F0KGFjdHVhbCwgXCJcXFwiIGlzIGlkZW50aWNhbCB0byB0aGUgbWVzc2FnZS5cIikpO1xuICAgIH1cblxuICAgIG1lc3NhZ2UgPSBlcnJvcjtcbiAgICBlcnJvciA9IHVuZGVmaW5lZDtcbiAgfSBlbHNlIGlmIChlcnJvciAhPSBudWxsICYmIF90eXBlb2YoZXJyb3IpICE9PSAnb2JqZWN0JyAmJiB0eXBlb2YgZXJyb3IgIT09ICdmdW5jdGlvbicpIHtcbiAgICB0aHJvdyBuZXcgRVJSX0lOVkFMSURfQVJHX1RZUEUoJ2Vycm9yJywgWydPYmplY3QnLCAnRXJyb3InLCAnRnVuY3Rpb24nLCAnUmVnRXhwJ10sIGVycm9yKTtcbiAgfVxuXG4gIGlmIChhY3R1YWwgPT09IE5PX0VYQ0VQVElPTl9TRU5USU5FTCkge1xuICAgIHZhciBkZXRhaWxzID0gJyc7XG5cbiAgICBpZiAoZXJyb3IgJiYgZXJyb3IubmFtZSkge1xuICAgICAgZGV0YWlscyArPSBcIiAoXCIuY29uY2F0KGVycm9yLm5hbWUsIFwiKVwiKTtcbiAgICB9XG5cbiAgICBkZXRhaWxzICs9IG1lc3NhZ2UgPyBcIjogXCIuY29uY2F0KG1lc3NhZ2UpIDogJy4nO1xuICAgIHZhciBmblR5cGUgPSBzdGFja1N0YXJ0Rm4ubmFtZSA9PT0gJ3JlamVjdHMnID8gJ3JlamVjdGlvbicgOiAnZXhjZXB0aW9uJztcbiAgICBpbm5lckZhaWwoe1xuICAgICAgYWN0dWFsOiB1bmRlZmluZWQsXG4gICAgICBleHBlY3RlZDogZXJyb3IsXG4gICAgICBvcGVyYXRvcjogc3RhY2tTdGFydEZuLm5hbWUsXG4gICAgICBtZXNzYWdlOiBcIk1pc3NpbmcgZXhwZWN0ZWQgXCIuY29uY2F0KGZuVHlwZSkuY29uY2F0KGRldGFpbHMpLFxuICAgICAgc3RhY2tTdGFydEZuOiBzdGFja1N0YXJ0Rm5cbiAgICB9KTtcbiAgfVxuXG4gIGlmIChlcnJvciAmJiAhZXhwZWN0ZWRFeGNlcHRpb24oYWN0dWFsLCBlcnJvciwgbWVzc2FnZSwgc3RhY2tTdGFydEZuKSkge1xuICAgIHRocm93IGFjdHVhbDtcbiAgfVxufVxuXG5mdW5jdGlvbiBleHBlY3RzTm9FcnJvcihzdGFja1N0YXJ0Rm4sIGFjdHVhbCwgZXJyb3IsIG1lc3NhZ2UpIHtcbiAgaWYgKGFjdHVhbCA9PT0gTk9fRVhDRVBUSU9OX1NFTlRJTkVMKSByZXR1cm47XG5cbiAgaWYgKHR5cGVvZiBlcnJvciA9PT0gJ3N0cmluZycpIHtcbiAgICBtZXNzYWdlID0gZXJyb3I7XG4gICAgZXJyb3IgPSB1bmRlZmluZWQ7XG4gIH1cblxuICBpZiAoIWVycm9yIHx8IGV4cGVjdGVkRXhjZXB0aW9uKGFjdHVhbCwgZXJyb3IpKSB7XG4gICAgdmFyIGRldGFpbHMgPSBtZXNzYWdlID8gXCI6IFwiLmNvbmNhdChtZXNzYWdlKSA6ICcuJztcbiAgICB2YXIgZm5UeXBlID0gc3RhY2tTdGFydEZuLm5hbWUgPT09ICdkb2VzTm90UmVqZWN0JyA/ICdyZWplY3Rpb24nIDogJ2V4Y2VwdGlvbic7XG4gICAgaW5uZXJGYWlsKHtcbiAgICAgIGFjdHVhbDogYWN0dWFsLFxuICAgICAgZXhwZWN0ZWQ6IGVycm9yLFxuICAgICAgb3BlcmF0b3I6IHN0YWNrU3RhcnRGbi5uYW1lLFxuICAgICAgbWVzc2FnZTogXCJHb3QgdW53YW50ZWQgXCIuY29uY2F0KGZuVHlwZSkuY29uY2F0KGRldGFpbHMsIFwiXFxuXCIpICsgXCJBY3R1YWwgbWVzc2FnZTogXFxcIlwiLmNvbmNhdChhY3R1YWwgJiYgYWN0dWFsLm1lc3NhZ2UsIFwiXFxcIlwiKSxcbiAgICAgIHN0YWNrU3RhcnRGbjogc3RhY2tTdGFydEZuXG4gICAgfSk7XG4gIH1cblxuICB0aHJvdyBhY3R1YWw7XG59XG5cbmFzc2VydC50aHJvd3MgPSBmdW5jdGlvbiB0aHJvd3MocHJvbWlzZUZuKSB7XG4gIGZvciAodmFyIF9sZW4yID0gYXJndW1lbnRzLmxlbmd0aCwgYXJncyA9IG5ldyBBcnJheShfbGVuMiA+IDEgPyBfbGVuMiAtIDEgOiAwKSwgX2tleTIgPSAxOyBfa2V5MiA8IF9sZW4yOyBfa2V5MisrKSB7XG4gICAgYXJnc1tfa2V5MiAtIDFdID0gYXJndW1lbnRzW19rZXkyXTtcbiAgfVxuXG4gIGV4cGVjdHNFcnJvci5hcHBseSh2b2lkIDAsIFt0aHJvd3MsIGdldEFjdHVhbChwcm9taXNlRm4pXS5jb25jYXQoYXJncykpO1xufTtcblxuYXNzZXJ0LnJlamVjdHMgPSBmdW5jdGlvbiByZWplY3RzKHByb21pc2VGbikge1xuICBmb3IgKHZhciBfbGVuMyA9IGFyZ3VtZW50cy5sZW5ndGgsIGFyZ3MgPSBuZXcgQXJyYXkoX2xlbjMgPiAxID8gX2xlbjMgLSAxIDogMCksIF9rZXkzID0gMTsgX2tleTMgPCBfbGVuMzsgX2tleTMrKykge1xuICAgIGFyZ3NbX2tleTMgLSAxXSA9IGFyZ3VtZW50c1tfa2V5M107XG4gIH1cblxuICByZXR1cm4gd2FpdEZvckFjdHVhbChwcm9taXNlRm4pLnRoZW4oZnVuY3Rpb24gKHJlc3VsdCkge1xuICAgIHJldHVybiBleHBlY3RzRXJyb3IuYXBwbHkodm9pZCAwLCBbcmVqZWN0cywgcmVzdWx0XS5jb25jYXQoYXJncykpO1xuICB9KTtcbn07XG5cbmFzc2VydC5kb2VzTm90VGhyb3cgPSBmdW5jdGlvbiBkb2VzTm90VGhyb3coZm4pIHtcbiAgZm9yICh2YXIgX2xlbjQgPSBhcmd1bWVudHMubGVuZ3RoLCBhcmdzID0gbmV3IEFycmF5KF9sZW40ID4gMSA/IF9sZW40IC0gMSA6IDApLCBfa2V5NCA9IDE7IF9rZXk0IDwgX2xlbjQ7IF9rZXk0KyspIHtcbiAgICBhcmdzW19rZXk0IC0gMV0gPSBhcmd1bWVudHNbX2tleTRdO1xuICB9XG5cbiAgZXhwZWN0c05vRXJyb3IuYXBwbHkodm9pZCAwLCBbZG9lc05vdFRocm93LCBnZXRBY3R1YWwoZm4pXS5jb25jYXQoYXJncykpO1xufTtcblxuYXNzZXJ0LmRvZXNOb3RSZWplY3QgPSBmdW5jdGlvbiBkb2VzTm90UmVqZWN0KGZuKSB7XG4gIGZvciAodmFyIF9sZW41ID0gYXJndW1lbnRzLmxlbmd0aCwgYXJncyA9IG5ldyBBcnJheShfbGVuNSA+IDEgPyBfbGVuNSAtIDEgOiAwKSwgX2tleTUgPSAxOyBfa2V5NSA8IF9sZW41OyBfa2V5NSsrKSB7XG4gICAgYXJnc1tfa2V5NSAtIDFdID0gYXJndW1lbnRzW19rZXk1XTtcbiAgfVxuXG4gIHJldHVybiB3YWl0Rm9yQWN0dWFsKGZuKS50aGVuKGZ1bmN0aW9uIChyZXN1bHQpIHtcbiAgICByZXR1cm4gZXhwZWN0c05vRXJyb3IuYXBwbHkodm9pZCAwLCBbZG9lc05vdFJlamVjdCwgcmVzdWx0XS5jb25jYXQoYXJncykpO1xuICB9KTtcbn07XG5cbmFzc2VydC5pZkVycm9yID0gZnVuY3Rpb24gaWZFcnJvcihlcnIpIHtcbiAgaWYgKGVyciAhPT0gbnVsbCAmJiBlcnIgIT09IHVuZGVmaW5lZCkge1xuICAgIHZhciBtZXNzYWdlID0gJ2lmRXJyb3IgZ290IHVud2FudGVkIGV4Y2VwdGlvbjogJztcblxuICAgIGlmIChfdHlwZW9mKGVycikgPT09ICdvYmplY3QnICYmIHR5cGVvZiBlcnIubWVzc2FnZSA9PT0gJ3N0cmluZycpIHtcbiAgICAgIGlmIChlcnIubWVzc2FnZS5sZW5ndGggPT09IDAgJiYgZXJyLmNvbnN0cnVjdG9yKSB7XG4gICAgICAgIG1lc3NhZ2UgKz0gZXJyLmNvbnN0cnVjdG9yLm5hbWU7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBtZXNzYWdlICs9IGVyci5tZXNzYWdlO1xuICAgICAgfVxuICAgIH0gZWxzZSB7XG4gICAgICBtZXNzYWdlICs9IGluc3BlY3QoZXJyKTtcbiAgICB9XG5cbiAgICB2YXIgbmV3RXJyID0gbmV3IEFzc2VydGlvbkVycm9yKHtcbiAgICAgIGFjdHVhbDogZXJyLFxuICAgICAgZXhwZWN0ZWQ6IG51bGwsXG4gICAgICBvcGVyYXRvcjogJ2lmRXJyb3InLFxuICAgICAgbWVzc2FnZTogbWVzc2FnZSxcbiAgICAgIHN0YWNrU3RhcnRGbjogaWZFcnJvclxuICAgIH0pOyAvLyBNYWtlIHN1cmUgd2UgYWN0dWFsbHkgaGF2ZSBhIHN0YWNrIHRyYWNlIVxuXG4gICAgdmFyIG9yaWdTdGFjayA9IGVyci5zdGFjaztcblxuICAgIGlmICh0eXBlb2Ygb3JpZ1N0YWNrID09PSAnc3RyaW5nJykge1xuICAgICAgLy8gVGhpcyB3aWxsIHJlbW92ZSBhbnkgZHVwbGljYXRlZCBmcmFtZXMgZnJvbSB0aGUgZXJyb3IgZnJhbWVzIHRha2VuXG4gICAgICAvLyBmcm9tIHdpdGhpbiBgaWZFcnJvcmAgYW5kIGFkZCB0aGUgb3JpZ2luYWwgZXJyb3IgZnJhbWVzIHRvIHRoZSBuZXdseVxuICAgICAgLy8gY3JlYXRlZCBvbmVzLlxuICAgICAgdmFyIHRtcDIgPSBvcmlnU3RhY2suc3BsaXQoJ1xcbicpO1xuICAgICAgdG1wMi5zaGlmdCgpOyAvLyBGaWx0ZXIgYWxsIGZyYW1lcyBleGlzdGluZyBpbiBlcnIuc3RhY2suXG5cbiAgICAgIHZhciB0bXAxID0gbmV3RXJyLnN0YWNrLnNwbGl0KCdcXG4nKTtcblxuICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCB0bXAyLmxlbmd0aDsgaSsrKSB7XG4gICAgICAgIC8vIEZpbmQgdGhlIGZpcnN0IG9jY3VycmVuY2Ugb2YgdGhlIGZyYW1lLlxuICAgICAgICB2YXIgcG9zID0gdG1wMS5pbmRleE9mKHRtcDJbaV0pO1xuXG4gICAgICAgIGlmIChwb3MgIT09IC0xKSB7XG4gICAgICAgICAgLy8gT25seSBrZWVwIG5ldyBmcmFtZXMuXG4gICAgICAgICAgdG1wMSA9IHRtcDEuc2xpY2UoMCwgcG9zKTtcbiAgICAgICAgICBicmVhaztcbiAgICAgICAgfVxuICAgICAgfVxuXG4gICAgICBuZXdFcnIuc3RhY2sgPSBcIlwiLmNvbmNhdCh0bXAxLmpvaW4oJ1xcbicpLCBcIlxcblwiKS5jb25jYXQodG1wMi5qb2luKCdcXG4nKSk7XG4gICAgfVxuXG4gICAgdGhyb3cgbmV3RXJyO1xuICB9XG59OyAvLyBFeHBvc2UgYSBzdHJpY3Qgb25seSB2YXJpYW50IG9mIGFzc2VydFxuXG5cbmZ1bmN0aW9uIHN0cmljdCgpIHtcbiAgZm9yICh2YXIgX2xlbjYgPSBhcmd1bWVudHMubGVuZ3RoLCBhcmdzID0gbmV3IEFycmF5KF9sZW42KSwgX2tleTYgPSAwOyBfa2V5NiA8IF9sZW42OyBfa2V5NisrKSB7XG4gICAgYXJnc1tfa2V5Nl0gPSBhcmd1bWVudHNbX2tleTZdO1xuICB9XG5cbiAgaW5uZXJPay5hcHBseSh2b2lkIDAsIFtzdHJpY3QsIGFyZ3MubGVuZ3RoXS5jb25jYXQoYXJncykpO1xufVxuXG5hc3NlcnQuc3RyaWN0ID0gb2JqZWN0QXNzaWduKHN0cmljdCwgYXNzZXJ0LCB7XG4gIGVxdWFsOiBhc3NlcnQuc3RyaWN0RXF1YWwsXG4gIGRlZXBFcXVhbDogYXNzZXJ0LmRlZXBTdHJpY3RFcXVhbCxcbiAgbm90RXF1YWw6IGFzc2VydC5ub3RTdHJpY3RFcXVhbCxcbiAgbm90RGVlcEVxdWFsOiBhc3NlcnQubm90RGVlcFN0cmljdEVxdWFsXG59KTtcbmFzc2VydC5zdHJpY3Quc3RyaWN0ID0gYXNzZXJ0LnN0cmljdDsiLCIvLyBDdXJyZW50bHkgaW4gc3luYyB3aXRoIE5vZGUuanMgbGliL2ludGVybmFsL2Fzc2VydC9hc3NlcnRpb25fZXJyb3IuanNcbi8vIGh0dHBzOi8vZ2l0aHViLmNvbS9ub2RlanMvbm9kZS9jb21taXQvMDgxNzg0MGY3NzUwMzIxNjlkZGQ3MGM4NWFjMDU5ZjE4ZmZjYzgxY1xuJ3VzZSBzdHJpY3QnO1xuXG5mdW5jdGlvbiBfb2JqZWN0U3ByZWFkKHRhcmdldCkgeyBmb3IgKHZhciBpID0gMTsgaSA8IGFyZ3VtZW50cy5sZW5ndGg7IGkrKykgeyB2YXIgc291cmNlID0gYXJndW1lbnRzW2ldICE9IG51bGwgPyBhcmd1bWVudHNbaV0gOiB7fTsgdmFyIG93bktleXMgPSBPYmplY3Qua2V5cyhzb3VyY2UpOyBpZiAodHlwZW9mIE9iamVjdC5nZXRPd25Qcm9wZXJ0eVN5bWJvbHMgPT09ICdmdW5jdGlvbicpIHsgb3duS2V5cyA9IG93bktleXMuY29uY2F0KE9iamVjdC5nZXRPd25Qcm9wZXJ0eVN5bWJvbHMoc291cmNlKS5maWx0ZXIoZnVuY3Rpb24gKHN5bSkgeyByZXR1cm4gT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcihzb3VyY2UsIHN5bSkuZW51bWVyYWJsZTsgfSkpOyB9IG93bktleXMuZm9yRWFjaChmdW5jdGlvbiAoa2V5KSB7IF9kZWZpbmVQcm9wZXJ0eSh0YXJnZXQsIGtleSwgc291cmNlW2tleV0pOyB9KTsgfSByZXR1cm4gdGFyZ2V0OyB9XG5cbmZ1bmN0aW9uIF9kZWZpbmVQcm9wZXJ0eShvYmosIGtleSwgdmFsdWUpIHsgaWYgKGtleSBpbiBvYmopIHsgT2JqZWN0LmRlZmluZVByb3BlcnR5KG9iaiwga2V5LCB7IHZhbHVlOiB2YWx1ZSwgZW51bWVyYWJsZTogdHJ1ZSwgY29uZmlndXJhYmxlOiB0cnVlLCB3cml0YWJsZTogdHJ1ZSB9KTsgfSBlbHNlIHsgb2JqW2tleV0gPSB2YWx1ZTsgfSByZXR1cm4gb2JqOyB9XG5cbmZ1bmN0aW9uIF9jbGFzc0NhbGxDaGVjayhpbnN0YW5jZSwgQ29uc3RydWN0b3IpIHsgaWYgKCEoaW5zdGFuY2UgaW5zdGFuY2VvZiBDb25zdHJ1Y3RvcikpIHsgdGhyb3cgbmV3IFR5cGVFcnJvcihcIkNhbm5vdCBjYWxsIGEgY2xhc3MgYXMgYSBmdW5jdGlvblwiKTsgfSB9XG5cbmZ1bmN0aW9uIF9kZWZpbmVQcm9wZXJ0aWVzKHRhcmdldCwgcHJvcHMpIHsgZm9yICh2YXIgaSA9IDA7IGkgPCBwcm9wcy5sZW5ndGg7IGkrKykgeyB2YXIgZGVzY3JpcHRvciA9IHByb3BzW2ldOyBkZXNjcmlwdG9yLmVudW1lcmFibGUgPSBkZXNjcmlwdG9yLmVudW1lcmFibGUgfHwgZmFsc2U7IGRlc2NyaXB0b3IuY29uZmlndXJhYmxlID0gdHJ1ZTsgaWYgKFwidmFsdWVcIiBpbiBkZXNjcmlwdG9yKSBkZXNjcmlwdG9yLndyaXRhYmxlID0gdHJ1ZTsgT2JqZWN0LmRlZmluZVByb3BlcnR5KHRhcmdldCwgZGVzY3JpcHRvci5rZXksIGRlc2NyaXB0b3IpOyB9IH1cblxuZnVuY3Rpb24gX2NyZWF0ZUNsYXNzKENvbnN0cnVjdG9yLCBwcm90b1Byb3BzLCBzdGF0aWNQcm9wcykgeyBpZiAocHJvdG9Qcm9wcykgX2RlZmluZVByb3BlcnRpZXMoQ29uc3RydWN0b3IucHJvdG90eXBlLCBwcm90b1Byb3BzKTsgaWYgKHN0YXRpY1Byb3BzKSBfZGVmaW5lUHJvcGVydGllcyhDb25zdHJ1Y3Rvciwgc3RhdGljUHJvcHMpOyByZXR1cm4gQ29uc3RydWN0b3I7IH1cblxuZnVuY3Rpb24gX3Bvc3NpYmxlQ29uc3RydWN0b3JSZXR1cm4oc2VsZiwgY2FsbCkgeyBpZiAoY2FsbCAmJiAoX3R5cGVvZihjYWxsKSA9PT0gXCJvYmplY3RcIiB8fCB0eXBlb2YgY2FsbCA9PT0gXCJmdW5jdGlvblwiKSkgeyByZXR1cm4gY2FsbDsgfSByZXR1cm4gX2Fzc2VydFRoaXNJbml0aWFsaXplZChzZWxmKTsgfVxuXG5mdW5jdGlvbiBfYXNzZXJ0VGhpc0luaXRpYWxpemVkKHNlbGYpIHsgaWYgKHNlbGYgPT09IHZvaWQgMCkgeyB0aHJvdyBuZXcgUmVmZXJlbmNlRXJyb3IoXCJ0aGlzIGhhc24ndCBiZWVuIGluaXRpYWxpc2VkIC0gc3VwZXIoKSBoYXNuJ3QgYmVlbiBjYWxsZWRcIik7IH0gcmV0dXJuIHNlbGY7IH1cblxuZnVuY3Rpb24gX2luaGVyaXRzKHN1YkNsYXNzLCBzdXBlckNsYXNzKSB7IGlmICh0eXBlb2Ygc3VwZXJDbGFzcyAhPT0gXCJmdW5jdGlvblwiICYmIHN1cGVyQ2xhc3MgIT09IG51bGwpIHsgdGhyb3cgbmV3IFR5cGVFcnJvcihcIlN1cGVyIGV4cHJlc3Npb24gbXVzdCBlaXRoZXIgYmUgbnVsbCBvciBhIGZ1bmN0aW9uXCIpOyB9IHN1YkNsYXNzLnByb3RvdHlwZSA9IE9iamVjdC5jcmVhdGUoc3VwZXJDbGFzcyAmJiBzdXBlckNsYXNzLnByb3RvdHlwZSwgeyBjb25zdHJ1Y3RvcjogeyB2YWx1ZTogc3ViQ2xhc3MsIHdyaXRhYmxlOiB0cnVlLCBjb25maWd1cmFibGU6IHRydWUgfSB9KTsgaWYgKHN1cGVyQ2xhc3MpIF9zZXRQcm90b3R5cGVPZihzdWJDbGFzcywgc3VwZXJDbGFzcyk7IH1cblxuZnVuY3Rpb24gX3dyYXBOYXRpdmVTdXBlcihDbGFzcykgeyB2YXIgX2NhY2hlID0gdHlwZW9mIE1hcCA9PT0gXCJmdW5jdGlvblwiID8gbmV3IE1hcCgpIDogdW5kZWZpbmVkOyBfd3JhcE5hdGl2ZVN1cGVyID0gZnVuY3Rpb24gX3dyYXBOYXRpdmVTdXBlcihDbGFzcykgeyBpZiAoQ2xhc3MgPT09IG51bGwgfHwgIV9pc05hdGl2ZUZ1bmN0aW9uKENsYXNzKSkgcmV0dXJuIENsYXNzOyBpZiAodHlwZW9mIENsYXNzICE9PSBcImZ1bmN0aW9uXCIpIHsgdGhyb3cgbmV3IFR5cGVFcnJvcihcIlN1cGVyIGV4cHJlc3Npb24gbXVzdCBlaXRoZXIgYmUgbnVsbCBvciBhIGZ1bmN0aW9uXCIpOyB9IGlmICh0eXBlb2YgX2NhY2hlICE9PSBcInVuZGVmaW5lZFwiKSB7IGlmIChfY2FjaGUuaGFzKENsYXNzKSkgcmV0dXJuIF9jYWNoZS5nZXQoQ2xhc3MpOyBfY2FjaGUuc2V0KENsYXNzLCBXcmFwcGVyKTsgfSBmdW5jdGlvbiBXcmFwcGVyKCkgeyByZXR1cm4gX2NvbnN0cnVjdChDbGFzcywgYXJndW1lbnRzLCBfZ2V0UHJvdG90eXBlT2YodGhpcykuY29uc3RydWN0b3IpOyB9IFdyYXBwZXIucHJvdG90eXBlID0gT2JqZWN0LmNyZWF0ZShDbGFzcy5wcm90b3R5cGUsIHsgY29uc3RydWN0b3I6IHsgdmFsdWU6IFdyYXBwZXIsIGVudW1lcmFibGU6IGZhbHNlLCB3cml0YWJsZTogdHJ1ZSwgY29uZmlndXJhYmxlOiB0cnVlIH0gfSk7IHJldHVybiBfc2V0UHJvdG90eXBlT2YoV3JhcHBlciwgQ2xhc3MpOyB9OyByZXR1cm4gX3dyYXBOYXRpdmVTdXBlcihDbGFzcyk7IH1cblxuZnVuY3Rpb24gaXNOYXRpdmVSZWZsZWN0Q29uc3RydWN0KCkgeyBpZiAodHlwZW9mIFJlZmxlY3QgPT09IFwidW5kZWZpbmVkXCIgfHwgIVJlZmxlY3QuY29uc3RydWN0KSByZXR1cm4gZmFsc2U7IGlmIChSZWZsZWN0LmNvbnN0cnVjdC5zaGFtKSByZXR1cm4gZmFsc2U7IGlmICh0eXBlb2YgUHJveHkgPT09IFwiZnVuY3Rpb25cIikgcmV0dXJuIHRydWU7IHRyeSB7IERhdGUucHJvdG90eXBlLnRvU3RyaW5nLmNhbGwoUmVmbGVjdC5jb25zdHJ1Y3QoRGF0ZSwgW10sIGZ1bmN0aW9uICgpIHt9KSk7IHJldHVybiB0cnVlOyB9IGNhdGNoIChlKSB7IHJldHVybiBmYWxzZTsgfSB9XG5cbmZ1bmN0aW9uIF9jb25zdHJ1Y3QoUGFyZW50LCBhcmdzLCBDbGFzcykgeyBpZiAoaXNOYXRpdmVSZWZsZWN0Q29uc3RydWN0KCkpIHsgX2NvbnN0cnVjdCA9IFJlZmxlY3QuY29uc3RydWN0OyB9IGVsc2UgeyBfY29uc3RydWN0ID0gZnVuY3Rpb24gX2NvbnN0cnVjdChQYXJlbnQsIGFyZ3MsIENsYXNzKSB7IHZhciBhID0gW251bGxdOyBhLnB1c2guYXBwbHkoYSwgYXJncyk7IHZhciBDb25zdHJ1Y3RvciA9IEZ1bmN0aW9uLmJpbmQuYXBwbHkoUGFyZW50LCBhKTsgdmFyIGluc3RhbmNlID0gbmV3IENvbnN0cnVjdG9yKCk7IGlmIChDbGFzcykgX3NldFByb3RvdHlwZU9mKGluc3RhbmNlLCBDbGFzcy5wcm90b3R5cGUpOyByZXR1cm4gaW5zdGFuY2U7IH07IH0gcmV0dXJuIF9jb25zdHJ1Y3QuYXBwbHkobnVsbCwgYXJndW1lbnRzKTsgfVxuXG5mdW5jdGlvbiBfaXNOYXRpdmVGdW5jdGlvbihmbikgeyByZXR1cm4gRnVuY3Rpb24udG9TdHJpbmcuY2FsbChmbikuaW5kZXhPZihcIltuYXRpdmUgY29kZV1cIikgIT09IC0xOyB9XG5cbmZ1bmN0aW9uIF9zZXRQcm90b3R5cGVPZihvLCBwKSB7IF9zZXRQcm90b3R5cGVPZiA9IE9iamVjdC5zZXRQcm90b3R5cGVPZiB8fCBmdW5jdGlvbiBfc2V0UHJvdG90eXBlT2YobywgcCkgeyBvLl9fcHJvdG9fXyA9IHA7IHJldHVybiBvOyB9OyByZXR1cm4gX3NldFByb3RvdHlwZU9mKG8sIHApOyB9XG5cbmZ1bmN0aW9uIF9nZXRQcm90b3R5cGVPZihvKSB7IF9nZXRQcm90b3R5cGVPZiA9IE9iamVjdC5zZXRQcm90b3R5cGVPZiA/IE9iamVjdC5nZXRQcm90b3R5cGVPZiA6IGZ1bmN0aW9uIF9nZXRQcm90b3R5cGVPZihvKSB7IHJldHVybiBvLl9fcHJvdG9fXyB8fCBPYmplY3QuZ2V0UHJvdG90eXBlT2Yobyk7IH07IHJldHVybiBfZ2V0UHJvdG90eXBlT2Yobyk7IH1cblxuZnVuY3Rpb24gX3R5cGVvZihvYmopIHsgaWYgKHR5cGVvZiBTeW1ib2wgPT09IFwiZnVuY3Rpb25cIiAmJiB0eXBlb2YgU3ltYm9sLml0ZXJhdG9yID09PSBcInN5bWJvbFwiKSB7IF90eXBlb2YgPSBmdW5jdGlvbiBfdHlwZW9mKG9iaikgeyByZXR1cm4gdHlwZW9mIG9iajsgfTsgfSBlbHNlIHsgX3R5cGVvZiA9IGZ1bmN0aW9uIF90eXBlb2Yob2JqKSB7IHJldHVybiBvYmogJiYgdHlwZW9mIFN5bWJvbCA9PT0gXCJmdW5jdGlvblwiICYmIG9iai5jb25zdHJ1Y3RvciA9PT0gU3ltYm9sICYmIG9iaiAhPT0gU3ltYm9sLnByb3RvdHlwZSA/IFwic3ltYm9sXCIgOiB0eXBlb2Ygb2JqOyB9OyB9IHJldHVybiBfdHlwZW9mKG9iaik7IH1cblxudmFyIF9yZXF1aXJlID0gcmVxdWlyZSgndXRpbC8nKSxcbiAgICBpbnNwZWN0ID0gX3JlcXVpcmUuaW5zcGVjdDtcblxudmFyIF9yZXF1aXJlMiA9IHJlcXVpcmUoJy4uL2Vycm9ycycpLFxuICAgIEVSUl9JTlZBTElEX0FSR19UWVBFID0gX3JlcXVpcmUyLmNvZGVzLkVSUl9JTlZBTElEX0FSR19UWVBFOyAvLyBodHRwczovL2RldmVsb3Blci5tb3ppbGxhLm9yZy9lbi1VUy9kb2NzL1dlYi9KYXZhU2NyaXB0L1JlZmVyZW5jZS9HbG9iYWxfT2JqZWN0cy9TdHJpbmcvZW5kc1dpdGhcblxuXG5mdW5jdGlvbiBlbmRzV2l0aChzdHIsIHNlYXJjaCwgdGhpc19sZW4pIHtcbiAgaWYgKHRoaXNfbGVuID09PSB1bmRlZmluZWQgfHwgdGhpc19sZW4gPiBzdHIubGVuZ3RoKSB7XG4gICAgdGhpc19sZW4gPSBzdHIubGVuZ3RoO1xuICB9XG5cbiAgcmV0dXJuIHN0ci5zdWJzdHJpbmcodGhpc19sZW4gLSBzZWFyY2gubGVuZ3RoLCB0aGlzX2xlbikgPT09IHNlYXJjaDtcbn0gLy8gaHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZW4tVVMvZG9jcy9XZWIvSmF2YVNjcmlwdC9SZWZlcmVuY2UvR2xvYmFsX09iamVjdHMvU3RyaW5nL3JlcGVhdFxuXG5cbmZ1bmN0aW9uIHJlcGVhdChzdHIsIGNvdW50KSB7XG4gIGNvdW50ID0gTWF0aC5mbG9vcihjb3VudCk7XG4gIGlmIChzdHIubGVuZ3RoID09IDAgfHwgY291bnQgPT0gMCkgcmV0dXJuICcnO1xuICB2YXIgbWF4Q291bnQgPSBzdHIubGVuZ3RoICogY291bnQ7XG4gIGNvdW50ID0gTWF0aC5mbG9vcihNYXRoLmxvZyhjb3VudCkgLyBNYXRoLmxvZygyKSk7XG5cbiAgd2hpbGUgKGNvdW50KSB7XG4gICAgc3RyICs9IHN0cjtcbiAgICBjb3VudC0tO1xuICB9XG5cbiAgc3RyICs9IHN0ci5zdWJzdHJpbmcoMCwgbWF4Q291bnQgLSBzdHIubGVuZ3RoKTtcbiAgcmV0dXJuIHN0cjtcbn1cblxudmFyIGJsdWUgPSAnJztcbnZhciBncmVlbiA9ICcnO1xudmFyIHJlZCA9ICcnO1xudmFyIHdoaXRlID0gJyc7XG52YXIga1JlYWRhYmxlT3BlcmF0b3IgPSB7XG4gIGRlZXBTdHJpY3RFcXVhbDogJ0V4cGVjdGVkIHZhbHVlcyB0byBiZSBzdHJpY3RseSBkZWVwLWVxdWFsOicsXG4gIHN0cmljdEVxdWFsOiAnRXhwZWN0ZWQgdmFsdWVzIHRvIGJlIHN0cmljdGx5IGVxdWFsOicsXG4gIHN0cmljdEVxdWFsT2JqZWN0OiAnRXhwZWN0ZWQgXCJhY3R1YWxcIiB0byBiZSByZWZlcmVuY2UtZXF1YWwgdG8gXCJleHBlY3RlZFwiOicsXG4gIGRlZXBFcXVhbDogJ0V4cGVjdGVkIHZhbHVlcyB0byBiZSBsb29zZWx5IGRlZXAtZXF1YWw6JyxcbiAgZXF1YWw6ICdFeHBlY3RlZCB2YWx1ZXMgdG8gYmUgbG9vc2VseSBlcXVhbDonLFxuICBub3REZWVwU3RyaWN0RXF1YWw6ICdFeHBlY3RlZCBcImFjdHVhbFwiIG5vdCB0byBiZSBzdHJpY3RseSBkZWVwLWVxdWFsIHRvOicsXG4gIG5vdFN0cmljdEVxdWFsOiAnRXhwZWN0ZWQgXCJhY3R1YWxcIiB0byBiZSBzdHJpY3RseSB1bmVxdWFsIHRvOicsXG4gIG5vdFN0cmljdEVxdWFsT2JqZWN0OiAnRXhwZWN0ZWQgXCJhY3R1YWxcIiBub3QgdG8gYmUgcmVmZXJlbmNlLWVxdWFsIHRvIFwiZXhwZWN0ZWRcIjonLFxuICBub3REZWVwRXF1YWw6ICdFeHBlY3RlZCBcImFjdHVhbFwiIG5vdCB0byBiZSBsb29zZWx5IGRlZXAtZXF1YWwgdG86JyxcbiAgbm90RXF1YWw6ICdFeHBlY3RlZCBcImFjdHVhbFwiIHRvIGJlIGxvb3NlbHkgdW5lcXVhbCB0bzonLFxuICBub3RJZGVudGljYWw6ICdWYWx1ZXMgaWRlbnRpY2FsIGJ1dCBub3QgcmVmZXJlbmNlLWVxdWFsOidcbn07IC8vIENvbXBhcmluZyBzaG9ydCBwcmltaXRpdmVzIHNob3VsZCBqdXN0IHNob3cgPT09IC8gIT09IGluc3RlYWQgb2YgdXNpbmcgdGhlXG4vLyBkaWZmLlxuXG52YXIga01heFNob3J0TGVuZ3RoID0gMTA7XG5cbmZ1bmN0aW9uIGNvcHlFcnJvcihzb3VyY2UpIHtcbiAgdmFyIGtleXMgPSBPYmplY3Qua2V5cyhzb3VyY2UpO1xuICB2YXIgdGFyZ2V0ID0gT2JqZWN0LmNyZWF0ZShPYmplY3QuZ2V0UHJvdG90eXBlT2Yoc291cmNlKSk7XG4gIGtleXMuZm9yRWFjaChmdW5jdGlvbiAoa2V5KSB7XG4gICAgdGFyZ2V0W2tleV0gPSBzb3VyY2Vba2V5XTtcbiAgfSk7XG4gIE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0YXJnZXQsICdtZXNzYWdlJywge1xuICAgIHZhbHVlOiBzb3VyY2UubWVzc2FnZVxuICB9KTtcbiAgcmV0dXJuIHRhcmdldDtcbn1cblxuZnVuY3Rpb24gaW5zcGVjdFZhbHVlKHZhbCkge1xuICAvLyBUaGUgdXRpbC5pbnNwZWN0IGRlZmF1bHQgdmFsdWVzIGNvdWxkIGJlIGNoYW5nZWQuIFRoaXMgbWFrZXMgc3VyZSB0aGVcbiAgLy8gZXJyb3IgbWVzc2FnZXMgY29udGFpbiB0aGUgbmVjZXNzYXJ5IGluZm9ybWF0aW9uIG5ldmVydGhlbGVzcy5cbiAgcmV0dXJuIGluc3BlY3QodmFsLCB7XG4gICAgY29tcGFjdDogZmFsc2UsXG4gICAgY3VzdG9tSW5zcGVjdDogZmFsc2UsXG4gICAgZGVwdGg6IDEwMDAsXG4gICAgbWF4QXJyYXlMZW5ndGg6IEluZmluaXR5LFxuICAgIC8vIEFzc2VydCBjb21wYXJlcyBvbmx5IGVudW1lcmFibGUgcHJvcGVydGllcyAod2l0aCBhIGZldyBleGNlcHRpb25zKS5cbiAgICBzaG93SGlkZGVuOiBmYWxzZSxcbiAgICAvLyBIYXZpbmcgYSBsb25nIGxpbmUgYXMgZXJyb3IgaXMgYmV0dGVyIHRoYW4gd3JhcHBpbmcgdGhlIGxpbmUgZm9yXG4gICAgLy8gY29tcGFyaXNvbiBmb3Igbm93LlxuICAgIC8vIFRPRE8oQnJpZGdlQVIpOiBgYnJlYWtMZW5ndGhgIHNob3VsZCBiZSBsaW1pdGVkIGFzIHNvb24gYXMgc29vbiBhcyB3ZVxuICAgIC8vIGhhdmUgbWV0YSBpbmZvcm1hdGlvbiBhYm91dCB0aGUgaW5zcGVjdGVkIHByb3BlcnRpZXMgKGkuZS4sIGtub3cgd2hlcmVcbiAgICAvLyBpbiB3aGF0IGxpbmUgdGhlIHByb3BlcnR5IHN0YXJ0cyBhbmQgZW5kcykuXG4gICAgYnJlYWtMZW5ndGg6IEluZmluaXR5LFxuICAgIC8vIEFzc2VydCBkb2VzIG5vdCBkZXRlY3QgcHJveGllcyBjdXJyZW50bHkuXG4gICAgc2hvd1Byb3h5OiBmYWxzZSxcbiAgICBzb3J0ZWQ6IHRydWUsXG4gICAgLy8gSW5zcGVjdCBnZXR0ZXJzIGFzIHdlIGFsc28gY2hlY2sgdGhlbSB3aGVuIGNvbXBhcmluZyBlbnRyaWVzLlxuICAgIGdldHRlcnM6IHRydWVcbiAgfSk7XG59XG5cbmZ1bmN0aW9uIGNyZWF0ZUVyckRpZmYoYWN0dWFsLCBleHBlY3RlZCwgb3BlcmF0b3IpIHtcbiAgdmFyIG90aGVyID0gJyc7XG4gIHZhciByZXMgPSAnJztcbiAgdmFyIGxhc3RQb3MgPSAwO1xuICB2YXIgZW5kID0gJyc7XG4gIHZhciBza2lwcGVkID0gZmFsc2U7XG4gIHZhciBhY3R1YWxJbnNwZWN0ZWQgPSBpbnNwZWN0VmFsdWUoYWN0dWFsKTtcbiAgdmFyIGFjdHVhbExpbmVzID0gYWN0dWFsSW5zcGVjdGVkLnNwbGl0KCdcXG4nKTtcbiAgdmFyIGV4cGVjdGVkTGluZXMgPSBpbnNwZWN0VmFsdWUoZXhwZWN0ZWQpLnNwbGl0KCdcXG4nKTtcbiAgdmFyIGkgPSAwO1xuICB2YXIgaW5kaWNhdG9yID0gJyc7IC8vIEluIGNhc2UgYm90aCB2YWx1ZXMgYXJlIG9iamVjdHMgZXhwbGljaXRseSBtYXJrIHRoZW0gYXMgbm90IHJlZmVyZW5jZSBlcXVhbFxuICAvLyBmb3IgdGhlIGBzdHJpY3RFcXVhbGAgb3BlcmF0b3IuXG5cbiAgaWYgKG9wZXJhdG9yID09PSAnc3RyaWN0RXF1YWwnICYmIF90eXBlb2YoYWN0dWFsKSA9PT0gJ29iamVjdCcgJiYgX3R5cGVvZihleHBlY3RlZCkgPT09ICdvYmplY3QnICYmIGFjdHVhbCAhPT0gbnVsbCAmJiBleHBlY3RlZCAhPT0gbnVsbCkge1xuICAgIG9wZXJhdG9yID0gJ3N0cmljdEVxdWFsT2JqZWN0JztcbiAgfSAvLyBJZiBcImFjdHVhbFwiIGFuZCBcImV4cGVjdGVkXCIgZml0IG9uIGEgc2luZ2xlIGxpbmUgYW5kIHRoZXkgYXJlIG5vdCBzdHJpY3RseVxuICAvLyBlcXVhbCwgY2hlY2sgZnVydGhlciBzcGVjaWFsIGhhbmRsaW5nLlxuXG5cbiAgaWYgKGFjdHVhbExpbmVzLmxlbmd0aCA9PT0gMSAmJiBleHBlY3RlZExpbmVzLmxlbmd0aCA9PT0gMSAmJiBhY3R1YWxMaW5lc1swXSAhPT0gZXhwZWN0ZWRMaW5lc1swXSkge1xuICAgIHZhciBpbnB1dExlbmd0aCA9IGFjdHVhbExpbmVzWzBdLmxlbmd0aCArIGV4cGVjdGVkTGluZXNbMF0ubGVuZ3RoOyAvLyBJZiB0aGUgY2hhcmFjdGVyIGxlbmd0aCBvZiBcImFjdHVhbFwiIGFuZCBcImV4cGVjdGVkXCIgdG9nZXRoZXIgaXMgbGVzcyB0aGFuXG4gICAgLy8ga01heFNob3J0TGVuZ3RoIGFuZCBpZiBuZWl0aGVyIGlzIGFuIG9iamVjdCBhbmQgYXQgbGVhc3Qgb25lIG9mIHRoZW0gaXNcbiAgICAvLyBub3QgYHplcm9gLCB1c2UgdGhlIHN0cmljdCBlcXVhbCBjb21wYXJpc29uIHRvIHZpc3VhbGl6ZSB0aGUgb3V0cHV0LlxuXG4gICAgaWYgKGlucHV0TGVuZ3RoIDw9IGtNYXhTaG9ydExlbmd0aCkge1xuICAgICAgaWYgKChfdHlwZW9mKGFjdHVhbCkgIT09ICdvYmplY3QnIHx8IGFjdHVhbCA9PT0gbnVsbCkgJiYgKF90eXBlb2YoZXhwZWN0ZWQpICE9PSAnb2JqZWN0JyB8fCBleHBlY3RlZCA9PT0gbnVsbCkgJiYgKGFjdHVhbCAhPT0gMCB8fCBleHBlY3RlZCAhPT0gMCkpIHtcbiAgICAgICAgLy8gLTAgPT09ICswXG4gICAgICAgIHJldHVybiBcIlwiLmNvbmNhdChrUmVhZGFibGVPcGVyYXRvcltvcGVyYXRvcl0sIFwiXFxuXFxuXCIpICsgXCJcIi5jb25jYXQoYWN0dWFsTGluZXNbMF0sIFwiICE9PSBcIikuY29uY2F0KGV4cGVjdGVkTGluZXNbMF0sIFwiXFxuXCIpO1xuICAgICAgfVxuICAgIH0gZWxzZSBpZiAob3BlcmF0b3IgIT09ICdzdHJpY3RFcXVhbE9iamVjdCcpIHtcbiAgICAgIC8vIElmIHRoZSBzdGRlcnIgaXMgYSB0dHkgYW5kIHRoZSBpbnB1dCBsZW5ndGggaXMgbG93ZXIgdGhhbiB0aGUgY3VycmVudFxuICAgICAgLy8gY29sdW1ucyBwZXIgbGluZSwgYWRkIGEgbWlzbWF0Y2ggaW5kaWNhdG9yIGJlbG93IHRoZSBvdXRwdXQuIElmIGl0IGlzXG4gICAgICAvLyBub3QgYSB0dHksIHVzZSBhIGRlZmF1bHQgdmFsdWUgb2YgODAgY2hhcmFjdGVycy5cbiAgICAgIHZhciBtYXhMZW5ndGggPSBwcm9jZXNzLnN0ZGVyciAmJiBwcm9jZXNzLnN0ZGVyci5pc1RUWSA/IHByb2Nlc3Muc3RkZXJyLmNvbHVtbnMgOiA4MDtcblxuICAgICAgaWYgKGlucHV0TGVuZ3RoIDwgbWF4TGVuZ3RoKSB7XG4gICAgICAgIHdoaWxlIChhY3R1YWxMaW5lc1swXVtpXSA9PT0gZXhwZWN0ZWRMaW5lc1swXVtpXSkge1xuICAgICAgICAgIGkrKztcbiAgICAgICAgfSAvLyBJZ25vcmUgdGhlIGZpcnN0IGNoYXJhY3RlcnMuXG5cblxuICAgICAgICBpZiAoaSA+IDIpIHtcbiAgICAgICAgICAvLyBBZGQgcG9zaXRpb24gaW5kaWNhdG9yIGZvciB0aGUgZmlyc3QgbWlzbWF0Y2ggaW4gY2FzZSBpdCBpcyBhXG4gICAgICAgICAgLy8gc2luZ2xlIGxpbmUgYW5kIHRoZSBpbnB1dCBsZW5ndGggaXMgbGVzcyB0aGFuIHRoZSBjb2x1bW4gbGVuZ3RoLlxuICAgICAgICAgIGluZGljYXRvciA9IFwiXFxuICBcIi5jb25jYXQocmVwZWF0KCcgJywgaSksIFwiXlwiKTtcbiAgICAgICAgICBpID0gMDtcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH1cbiAgfSAvLyBSZW1vdmUgYWxsIGVuZGluZyBsaW5lcyB0aGF0IG1hdGNoICh0aGlzIG9wdGltaXplcyB0aGUgb3V0cHV0IGZvclxuICAvLyByZWFkYWJpbGl0eSBieSByZWR1Y2luZyB0aGUgbnVtYmVyIG9mIHRvdGFsIGNoYW5nZWQgbGluZXMpLlxuXG5cbiAgdmFyIGEgPSBhY3R1YWxMaW5lc1thY3R1YWxMaW5lcy5sZW5ndGggLSAxXTtcbiAgdmFyIGIgPSBleHBlY3RlZExpbmVzW2V4cGVjdGVkTGluZXMubGVuZ3RoIC0gMV07XG5cbiAgd2hpbGUgKGEgPT09IGIpIHtcbiAgICBpZiAoaSsrIDwgMikge1xuICAgICAgZW5kID0gXCJcXG4gIFwiLmNvbmNhdChhKS5jb25jYXQoZW5kKTtcbiAgICB9IGVsc2Uge1xuICAgICAgb3RoZXIgPSBhO1xuICAgIH1cblxuICAgIGFjdHVhbExpbmVzLnBvcCgpO1xuICAgIGV4cGVjdGVkTGluZXMucG9wKCk7XG4gICAgaWYgKGFjdHVhbExpbmVzLmxlbmd0aCA9PT0gMCB8fCBleHBlY3RlZExpbmVzLmxlbmd0aCA9PT0gMCkgYnJlYWs7XG4gICAgYSA9IGFjdHVhbExpbmVzW2FjdHVhbExpbmVzLmxlbmd0aCAtIDFdO1xuICAgIGIgPSBleHBlY3RlZExpbmVzW2V4cGVjdGVkTGluZXMubGVuZ3RoIC0gMV07XG4gIH1cblxuICB2YXIgbWF4TGluZXMgPSBNYXRoLm1heChhY3R1YWxMaW5lcy5sZW5ndGgsIGV4cGVjdGVkTGluZXMubGVuZ3RoKTsgLy8gU3RyaWN0IGVxdWFsIHdpdGggaWRlbnRpY2FsIG9iamVjdHMgdGhhdCBhcmUgbm90IGlkZW50aWNhbCBieSByZWZlcmVuY2UuXG4gIC8vIEUuZy4sIGFzc2VydC5kZWVwU3RyaWN0RXF1YWwoeyBhOiBTeW1ib2woKSB9LCB7IGE6IFN5bWJvbCgpIH0pXG5cbiAgaWYgKG1heExpbmVzID09PSAwKSB7XG4gICAgLy8gV2UgaGF2ZSB0byBnZXQgdGhlIHJlc3VsdCBhZ2Fpbi4gVGhlIGxpbmVzIHdlcmUgYWxsIHJlbW92ZWQgYmVmb3JlLlxuICAgIHZhciBfYWN0dWFsTGluZXMgPSBhY3R1YWxJbnNwZWN0ZWQuc3BsaXQoJ1xcbicpOyAvLyBPbmx5IHJlbW92ZSBsaW5lcyBpbiBjYXNlIGl0IG1ha2VzIHNlbnNlIHRvIGNvbGxhcHNlIHRob3NlLlxuICAgIC8vIFRPRE86IEFjY2VwdCBlbnYgdG8gYWx3YXlzIHNob3cgdGhlIGZ1bGwgZXJyb3IuXG5cblxuICAgIGlmIChfYWN0dWFsTGluZXMubGVuZ3RoID4gMzApIHtcbiAgICAgIF9hY3R1YWxMaW5lc1syNl0gPSBcIlwiLmNvbmNhdChibHVlLCBcIi4uLlwiKS5jb25jYXQod2hpdGUpO1xuXG4gICAgICB3aGlsZSAoX2FjdHVhbExpbmVzLmxlbmd0aCA+IDI3KSB7XG4gICAgICAgIF9hY3R1YWxMaW5lcy5wb3AoKTtcbiAgICAgIH1cbiAgICB9XG5cbiAgICByZXR1cm4gXCJcIi5jb25jYXQoa1JlYWRhYmxlT3BlcmF0b3Iubm90SWRlbnRpY2FsLCBcIlxcblxcblwiKS5jb25jYXQoX2FjdHVhbExpbmVzLmpvaW4oJ1xcbicpLCBcIlxcblwiKTtcbiAgfVxuXG4gIGlmIChpID4gMykge1xuICAgIGVuZCA9IFwiXFxuXCIuY29uY2F0KGJsdWUsIFwiLi4uXCIpLmNvbmNhdCh3aGl0ZSkuY29uY2F0KGVuZCk7XG4gICAgc2tpcHBlZCA9IHRydWU7XG4gIH1cblxuICBpZiAob3RoZXIgIT09ICcnKSB7XG4gICAgZW5kID0gXCJcXG4gIFwiLmNvbmNhdChvdGhlcikuY29uY2F0KGVuZCk7XG4gICAgb3RoZXIgPSAnJztcbiAgfVxuXG4gIHZhciBwcmludGVkTGluZXMgPSAwO1xuICB2YXIgbXNnID0ga1JlYWRhYmxlT3BlcmF0b3Jbb3BlcmF0b3JdICsgXCJcXG5cIi5jb25jYXQoZ3JlZW4sIFwiKyBhY3R1YWxcIikuY29uY2F0KHdoaXRlLCBcIiBcIikuY29uY2F0KHJlZCwgXCItIGV4cGVjdGVkXCIpLmNvbmNhdCh3aGl0ZSk7XG4gIHZhciBza2lwcGVkTXNnID0gXCIgXCIuY29uY2F0KGJsdWUsIFwiLi4uXCIpLmNvbmNhdCh3aGl0ZSwgXCIgTGluZXMgc2tpcHBlZFwiKTtcblxuICBmb3IgKGkgPSAwOyBpIDwgbWF4TGluZXM7IGkrKykge1xuICAgIC8vIE9ubHkgZXh0cmEgZXhwZWN0ZWQgbGluZXMgZXhpc3RcbiAgICB2YXIgY3VyID0gaSAtIGxhc3RQb3M7XG5cbiAgICBpZiAoYWN0dWFsTGluZXMubGVuZ3RoIDwgaSArIDEpIHtcbiAgICAgIC8vIElmIHRoZSBsYXN0IGRpdmVyZ2luZyBsaW5lIGlzIG1vcmUgdGhhbiBvbmUgbGluZSBhYm92ZSBhbmQgdGhlXG4gICAgICAvLyBjdXJyZW50IGxpbmUgaXMgYXQgbGVhc3QgbGluZSB0aHJlZSwgYWRkIHNvbWUgb2YgdGhlIGZvcm1lciBsaW5lcyBhbmRcbiAgICAgIC8vIGFsc28gYWRkIGRvdHMgdG8gaW5kaWNhdGUgc2tpcHBlZCBlbnRyaWVzLlxuICAgICAgaWYgKGN1ciA+IDEgJiYgaSA+IDIpIHtcbiAgICAgICAgaWYgKGN1ciA+IDQpIHtcbiAgICAgICAgICByZXMgKz0gXCJcXG5cIi5jb25jYXQoYmx1ZSwgXCIuLi5cIikuY29uY2F0KHdoaXRlKTtcbiAgICAgICAgICBza2lwcGVkID0gdHJ1ZTtcbiAgICAgICAgfSBlbHNlIGlmIChjdXIgPiAzKSB7XG4gICAgICAgICAgcmVzICs9IFwiXFxuICBcIi5jb25jYXQoZXhwZWN0ZWRMaW5lc1tpIC0gMl0pO1xuICAgICAgICAgIHByaW50ZWRMaW5lcysrO1xuICAgICAgICB9XG5cbiAgICAgICAgcmVzICs9IFwiXFxuICBcIi5jb25jYXQoZXhwZWN0ZWRMaW5lc1tpIC0gMV0pO1xuICAgICAgICBwcmludGVkTGluZXMrKztcbiAgICAgIH0gLy8gTWFyayB0aGUgY3VycmVudCBsaW5lIGFzIHRoZSBsYXN0IGRpdmVyZ2luZyBvbmUuXG5cblxuICAgICAgbGFzdFBvcyA9IGk7IC8vIEFkZCB0aGUgZXhwZWN0ZWQgbGluZSB0byB0aGUgY2FjaGUuXG5cbiAgICAgIG90aGVyICs9IFwiXFxuXCIuY29uY2F0KHJlZCwgXCItXCIpLmNvbmNhdCh3aGl0ZSwgXCIgXCIpLmNvbmNhdChleHBlY3RlZExpbmVzW2ldKTtcbiAgICAgIHByaW50ZWRMaW5lcysrOyAvLyBPbmx5IGV4dHJhIGFjdHVhbCBsaW5lcyBleGlzdFxuICAgIH0gZWxzZSBpZiAoZXhwZWN0ZWRMaW5lcy5sZW5ndGggPCBpICsgMSkge1xuICAgICAgLy8gSWYgdGhlIGxhc3QgZGl2ZXJnaW5nIGxpbmUgaXMgbW9yZSB0aGFuIG9uZSBsaW5lIGFib3ZlIGFuZCB0aGVcbiAgICAgIC8vIGN1cnJlbnQgbGluZSBpcyBhdCBsZWFzdCBsaW5lIHRocmVlLCBhZGQgc29tZSBvZiB0aGUgZm9ybWVyIGxpbmVzIGFuZFxuICAgICAgLy8gYWxzbyBhZGQgZG90cyB0byBpbmRpY2F0ZSBza2lwcGVkIGVudHJpZXMuXG4gICAgICBpZiAoY3VyID4gMSAmJiBpID4gMikge1xuICAgICAgICBpZiAoY3VyID4gNCkge1xuICAgICAgICAgIHJlcyArPSBcIlxcblwiLmNvbmNhdChibHVlLCBcIi4uLlwiKS5jb25jYXQod2hpdGUpO1xuICAgICAgICAgIHNraXBwZWQgPSB0cnVlO1xuICAgICAgICB9IGVsc2UgaWYgKGN1ciA+IDMpIHtcbiAgICAgICAgICByZXMgKz0gXCJcXG4gIFwiLmNvbmNhdChhY3R1YWxMaW5lc1tpIC0gMl0pO1xuICAgICAgICAgIHByaW50ZWRMaW5lcysrO1xuICAgICAgICB9XG5cbiAgICAgICAgcmVzICs9IFwiXFxuICBcIi5jb25jYXQoYWN0dWFsTGluZXNbaSAtIDFdKTtcbiAgICAgICAgcHJpbnRlZExpbmVzKys7XG4gICAgICB9IC8vIE1hcmsgdGhlIGN1cnJlbnQgbGluZSBhcyB0aGUgbGFzdCBkaXZlcmdpbmcgb25lLlxuXG5cbiAgICAgIGxhc3RQb3MgPSBpOyAvLyBBZGQgdGhlIGFjdHVhbCBsaW5lIHRvIHRoZSByZXN1bHQuXG5cbiAgICAgIHJlcyArPSBcIlxcblwiLmNvbmNhdChncmVlbiwgXCIrXCIpLmNvbmNhdCh3aGl0ZSwgXCIgXCIpLmNvbmNhdChhY3R1YWxMaW5lc1tpXSk7XG4gICAgICBwcmludGVkTGluZXMrKzsgLy8gTGluZXMgZGl2ZXJnZVxuICAgIH0gZWxzZSB7XG4gICAgICB2YXIgZXhwZWN0ZWRMaW5lID0gZXhwZWN0ZWRMaW5lc1tpXTtcbiAgICAgIHZhciBhY3R1YWxMaW5lID0gYWN0dWFsTGluZXNbaV07IC8vIElmIHRoZSBsaW5lcyBkaXZlcmdlLCBzcGVjaWZpY2FsbHkgY2hlY2sgZm9yIGxpbmVzIHRoYXQgb25seSBkaXZlcmdlIGJ5XG4gICAgICAvLyBhIHRyYWlsaW5nIGNvbW1hLiBJbiB0aGF0IGNhc2UgaXQgaXMgYWN0dWFsbHkgaWRlbnRpY2FsIGFuZCB3ZSBzaG91bGRcbiAgICAgIC8vIG1hcmsgaXQgYXMgc3VjaC5cblxuICAgICAgdmFyIGRpdmVyZ2luZ0xpbmVzID0gYWN0dWFsTGluZSAhPT0gZXhwZWN0ZWRMaW5lICYmICghZW5kc1dpdGgoYWN0dWFsTGluZSwgJywnKSB8fCBhY3R1YWxMaW5lLnNsaWNlKDAsIC0xKSAhPT0gZXhwZWN0ZWRMaW5lKTsgLy8gSWYgdGhlIGV4cGVjdGVkIGxpbmUgaGFzIGEgdHJhaWxpbmcgY29tbWEgYnV0IGlzIG90aGVyd2lzZSBpZGVudGljYWwsXG4gICAgICAvLyBhZGQgYSBjb21tYSBhdCB0aGUgZW5kIG9mIHRoZSBhY3R1YWwgbGluZS4gT3RoZXJ3aXNlIHRoZSBvdXRwdXQgY291bGRcbiAgICAgIC8vIGxvb2sgd2VpcmQgYXMgaW46XG4gICAgICAvL1xuICAgICAgLy8gICBbXG4gICAgICAvLyAgICAgMSAgICAgICAgIC8vIE5vIGNvbW1hIGF0IHRoZSBlbmQhXG4gICAgICAvLyArICAgMlxuICAgICAgLy8gICBdXG4gICAgICAvL1xuXG4gICAgICBpZiAoZGl2ZXJnaW5nTGluZXMgJiYgZW5kc1dpdGgoZXhwZWN0ZWRMaW5lLCAnLCcpICYmIGV4cGVjdGVkTGluZS5zbGljZSgwLCAtMSkgPT09IGFjdHVhbExpbmUpIHtcbiAgICAgICAgZGl2ZXJnaW5nTGluZXMgPSBmYWxzZTtcbiAgICAgICAgYWN0dWFsTGluZSArPSAnLCc7XG4gICAgICB9XG5cbiAgICAgIGlmIChkaXZlcmdpbmdMaW5lcykge1xuICAgICAgICAvLyBJZiB0aGUgbGFzdCBkaXZlcmdpbmcgbGluZSBpcyBtb3JlIHRoYW4gb25lIGxpbmUgYWJvdmUgYW5kIHRoZVxuICAgICAgICAvLyBjdXJyZW50IGxpbmUgaXMgYXQgbGVhc3QgbGluZSB0aHJlZSwgYWRkIHNvbWUgb2YgdGhlIGZvcm1lciBsaW5lcyBhbmRcbiAgICAgICAgLy8gYWxzbyBhZGQgZG90cyB0byBpbmRpY2F0ZSBza2lwcGVkIGVudHJpZXMuXG4gICAgICAgIGlmIChjdXIgPiAxICYmIGkgPiAyKSB7XG4gICAgICAgICAgaWYgKGN1ciA+IDQpIHtcbiAgICAgICAgICAgIHJlcyArPSBcIlxcblwiLmNvbmNhdChibHVlLCBcIi4uLlwiKS5jb25jYXQod2hpdGUpO1xuICAgICAgICAgICAgc2tpcHBlZCA9IHRydWU7XG4gICAgICAgICAgfSBlbHNlIGlmIChjdXIgPiAzKSB7XG4gICAgICAgICAgICByZXMgKz0gXCJcXG4gIFwiLmNvbmNhdChhY3R1YWxMaW5lc1tpIC0gMl0pO1xuICAgICAgICAgICAgcHJpbnRlZExpbmVzKys7XG4gICAgICAgICAgfVxuXG4gICAgICAgICAgcmVzICs9IFwiXFxuICBcIi5jb25jYXQoYWN0dWFsTGluZXNbaSAtIDFdKTtcbiAgICAgICAgICBwcmludGVkTGluZXMrKztcbiAgICAgICAgfSAvLyBNYXJrIHRoZSBjdXJyZW50IGxpbmUgYXMgdGhlIGxhc3QgZGl2ZXJnaW5nIG9uZS5cblxuXG4gICAgICAgIGxhc3RQb3MgPSBpOyAvLyBBZGQgdGhlIGFjdHVhbCBsaW5lIHRvIHRoZSByZXN1bHQgYW5kIGNhY2hlIHRoZSBleHBlY3RlZCBkaXZlcmdpbmdcbiAgICAgICAgLy8gbGluZSBzbyBjb25zZWN1dGl2ZSBkaXZlcmdpbmcgbGluZXMgc2hvdyB1cCBhcyArKystLS0gYW5kIG5vdCArLSstKy0uXG5cbiAgICAgICAgcmVzICs9IFwiXFxuXCIuY29uY2F0KGdyZWVuLCBcIitcIikuY29uY2F0KHdoaXRlLCBcIiBcIikuY29uY2F0KGFjdHVhbExpbmUpO1xuICAgICAgICBvdGhlciArPSBcIlxcblwiLmNvbmNhdChyZWQsIFwiLVwiKS5jb25jYXQod2hpdGUsIFwiIFwiKS5jb25jYXQoZXhwZWN0ZWRMaW5lKTtcbiAgICAgICAgcHJpbnRlZExpbmVzICs9IDI7IC8vIExpbmVzIGFyZSBpZGVudGljYWxcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIC8vIEFkZCBhbGwgY2FjaGVkIGluZm9ybWF0aW9uIHRvIHRoZSByZXN1bHQgYmVmb3JlIGFkZGluZyBvdGhlciB0aGluZ3NcbiAgICAgICAgLy8gYW5kIHJlc2V0IHRoZSBjYWNoZS5cbiAgICAgICAgcmVzICs9IG90aGVyO1xuICAgICAgICBvdGhlciA9ICcnOyAvLyBJZiB0aGUgbGFzdCBkaXZlcmdpbmcgbGluZSBpcyBleGFjdGx5IG9uZSBsaW5lIGFib3ZlIG9yIGlmIGl0IGlzIHRoZVxuICAgICAgICAvLyB2ZXJ5IGZpcnN0IGxpbmUsIGFkZCB0aGUgbGluZSB0byB0aGUgcmVzdWx0LlxuXG4gICAgICAgIGlmIChjdXIgPT09IDEgfHwgaSA9PT0gMCkge1xuICAgICAgICAgIHJlcyArPSBcIlxcbiAgXCIuY29uY2F0KGFjdHVhbExpbmUpO1xuICAgICAgICAgIHByaW50ZWRMaW5lcysrO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfSAvLyBJbnNwZWN0ZWQgb2JqZWN0IHRvIGJpZyAoU2hvdyB+MjAgcm93cyBtYXgpXG5cblxuICAgIGlmIChwcmludGVkTGluZXMgPiAyMCAmJiBpIDwgbWF4TGluZXMgLSAyKSB7XG4gICAgICByZXR1cm4gXCJcIi5jb25jYXQobXNnKS5jb25jYXQoc2tpcHBlZE1zZywgXCJcXG5cIikuY29uY2F0KHJlcywgXCJcXG5cIikuY29uY2F0KGJsdWUsIFwiLi4uXCIpLmNvbmNhdCh3aGl0ZSkuY29uY2F0KG90aGVyLCBcIlxcblwiKSArIFwiXCIuY29uY2F0KGJsdWUsIFwiLi4uXCIpLmNvbmNhdCh3aGl0ZSk7XG4gICAgfVxuICB9XG5cbiAgcmV0dXJuIFwiXCIuY29uY2F0KG1zZykuY29uY2F0KHNraXBwZWQgPyBza2lwcGVkTXNnIDogJycsIFwiXFxuXCIpLmNvbmNhdChyZXMpLmNvbmNhdChvdGhlcikuY29uY2F0KGVuZCkuY29uY2F0KGluZGljYXRvcik7XG59XG5cbnZhciBBc3NlcnRpb25FcnJvciA9XG4vKiNfX1BVUkVfXyovXG5mdW5jdGlvbiAoX0Vycm9yKSB7XG4gIF9pbmhlcml0cyhBc3NlcnRpb25FcnJvciwgX0Vycm9yKTtcblxuICBmdW5jdGlvbiBBc3NlcnRpb25FcnJvcihvcHRpb25zKSB7XG4gICAgdmFyIF90aGlzO1xuXG4gICAgX2NsYXNzQ2FsbENoZWNrKHRoaXMsIEFzc2VydGlvbkVycm9yKTtcblxuICAgIGlmIChfdHlwZW9mKG9wdGlvbnMpICE9PSAnb2JqZWN0JyB8fCBvcHRpb25zID09PSBudWxsKSB7XG4gICAgICB0aHJvdyBuZXcgRVJSX0lOVkFMSURfQVJHX1RZUEUoJ29wdGlvbnMnLCAnT2JqZWN0Jywgb3B0aW9ucyk7XG4gICAgfVxuXG4gICAgdmFyIG1lc3NhZ2UgPSBvcHRpb25zLm1lc3NhZ2UsXG4gICAgICAgIG9wZXJhdG9yID0gb3B0aW9ucy5vcGVyYXRvcixcbiAgICAgICAgc3RhY2tTdGFydEZuID0gb3B0aW9ucy5zdGFja1N0YXJ0Rm47XG4gICAgdmFyIGFjdHVhbCA9IG9wdGlvbnMuYWN0dWFsLFxuICAgICAgICBleHBlY3RlZCA9IG9wdGlvbnMuZXhwZWN0ZWQ7XG4gICAgdmFyIGxpbWl0ID0gRXJyb3Iuc3RhY2tUcmFjZUxpbWl0O1xuICAgIEVycm9yLnN0YWNrVHJhY2VMaW1pdCA9IDA7XG5cbiAgICBpZiAobWVzc2FnZSAhPSBudWxsKSB7XG4gICAgICBfdGhpcyA9IF9wb3NzaWJsZUNvbnN0cnVjdG9yUmV0dXJuKHRoaXMsIF9nZXRQcm90b3R5cGVPZihBc3NlcnRpb25FcnJvcikuY2FsbCh0aGlzLCBTdHJpbmcobWVzc2FnZSkpKTtcbiAgICB9IGVsc2Uge1xuICAgICAgaWYgKHByb2Nlc3Muc3RkZXJyICYmIHByb2Nlc3Muc3RkZXJyLmlzVFRZKSB7XG4gICAgICAgIC8vIFJlc2V0IG9uIGVhY2ggY2FsbCB0byBtYWtlIHN1cmUgd2UgaGFuZGxlIGR5bmFtaWNhbGx5IHNldCBlbnZpcm9ubWVudFxuICAgICAgICAvLyB2YXJpYWJsZXMgY29ycmVjdC5cbiAgICAgICAgaWYgKHByb2Nlc3Muc3RkZXJyICYmIHByb2Nlc3Muc3RkZXJyLmdldENvbG9yRGVwdGggJiYgcHJvY2Vzcy5zdGRlcnIuZ2V0Q29sb3JEZXB0aCgpICE9PSAxKSB7XG4gICAgICAgICAgYmx1ZSA9IFwiXFx4MUJbMzRtXCI7XG4gICAgICAgICAgZ3JlZW4gPSBcIlxceDFCWzMybVwiO1xuICAgICAgICAgIHdoaXRlID0gXCJcXHgxQlszOW1cIjtcbiAgICAgICAgICByZWQgPSBcIlxceDFCWzMxbVwiO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIGJsdWUgPSAnJztcbiAgICAgICAgICBncmVlbiA9ICcnO1xuICAgICAgICAgIHdoaXRlID0gJyc7XG4gICAgICAgICAgcmVkID0gJyc7XG4gICAgICAgIH1cbiAgICAgIH0gLy8gUHJldmVudCB0aGUgZXJyb3Igc3RhY2sgZnJvbSBiZWluZyB2aXNpYmxlIGJ5IGR1cGxpY2F0aW5nIHRoZSBlcnJvclxuICAgICAgLy8gaW4gYSB2ZXJ5IGNsb3NlIHdheSB0byB0aGUgb3JpZ2luYWwgaW4gY2FzZSBib3RoIHNpZGVzIGFyZSBhY3R1YWxseVxuICAgICAgLy8gaW5zdGFuY2VzIG9mIEVycm9yLlxuXG5cbiAgICAgIGlmIChfdHlwZW9mKGFjdHVhbCkgPT09ICdvYmplY3QnICYmIGFjdHVhbCAhPT0gbnVsbCAmJiBfdHlwZW9mKGV4cGVjdGVkKSA9PT0gJ29iamVjdCcgJiYgZXhwZWN0ZWQgIT09IG51bGwgJiYgJ3N0YWNrJyBpbiBhY3R1YWwgJiYgYWN0dWFsIGluc3RhbmNlb2YgRXJyb3IgJiYgJ3N0YWNrJyBpbiBleHBlY3RlZCAmJiBleHBlY3RlZCBpbnN0YW5jZW9mIEVycm9yKSB7XG4gICAgICAgIGFjdHVhbCA9IGNvcHlFcnJvcihhY3R1YWwpO1xuICAgICAgICBleHBlY3RlZCA9IGNvcHlFcnJvcihleHBlY3RlZCk7XG4gICAgICB9XG5cbiAgICAgIGlmIChvcGVyYXRvciA9PT0gJ2RlZXBTdHJpY3RFcXVhbCcgfHwgb3BlcmF0b3IgPT09ICdzdHJpY3RFcXVhbCcpIHtcbiAgICAgICAgX3RoaXMgPSBfcG9zc2libGVDb25zdHJ1Y3RvclJldHVybih0aGlzLCBfZ2V0UHJvdG90eXBlT2YoQXNzZXJ0aW9uRXJyb3IpLmNhbGwodGhpcywgY3JlYXRlRXJyRGlmZihhY3R1YWwsIGV4cGVjdGVkLCBvcGVyYXRvcikpKTtcbiAgICAgIH0gZWxzZSBpZiAob3BlcmF0b3IgPT09ICdub3REZWVwU3RyaWN0RXF1YWwnIHx8IG9wZXJhdG9yID09PSAnbm90U3RyaWN0RXF1YWwnKSB7XG4gICAgICAgIC8vIEluIGNhc2UgdGhlIG9iamVjdHMgYXJlIGVxdWFsIGJ1dCB0aGUgb3BlcmF0b3IgcmVxdWlyZXMgdW5lcXVhbCwgc2hvd1xuICAgICAgICAvLyB0aGUgZmlyc3Qgb2JqZWN0IGFuZCBzYXkgQSBlcXVhbHMgQlxuICAgICAgICB2YXIgYmFzZSA9IGtSZWFkYWJsZU9wZXJhdG9yW29wZXJhdG9yXTtcbiAgICAgICAgdmFyIHJlcyA9IGluc3BlY3RWYWx1ZShhY3R1YWwpLnNwbGl0KCdcXG4nKTsgLy8gSW4gY2FzZSBcImFjdHVhbFwiIGlzIGFuIG9iamVjdCwgaXQgc2hvdWxkIG5vdCBiZSByZWZlcmVuY2UgZXF1YWwuXG5cbiAgICAgICAgaWYgKG9wZXJhdG9yID09PSAnbm90U3RyaWN0RXF1YWwnICYmIF90eXBlb2YoYWN0dWFsKSA9PT0gJ29iamVjdCcgJiYgYWN0dWFsICE9PSBudWxsKSB7XG4gICAgICAgICAgYmFzZSA9IGtSZWFkYWJsZU9wZXJhdG9yLm5vdFN0cmljdEVxdWFsT2JqZWN0O1xuICAgICAgICB9IC8vIE9ubHkgcmVtb3ZlIGxpbmVzIGluIGNhc2UgaXQgbWFrZXMgc2Vuc2UgdG8gY29sbGFwc2UgdGhvc2UuXG4gICAgICAgIC8vIFRPRE86IEFjY2VwdCBlbnYgdG8gYWx3YXlzIHNob3cgdGhlIGZ1bGwgZXJyb3IuXG5cblxuICAgICAgICBpZiAocmVzLmxlbmd0aCA+IDMwKSB7XG4gICAgICAgICAgcmVzWzI2XSA9IFwiXCIuY29uY2F0KGJsdWUsIFwiLi4uXCIpLmNvbmNhdCh3aGl0ZSk7XG5cbiAgICAgICAgICB3aGlsZSAocmVzLmxlbmd0aCA+IDI3KSB7XG4gICAgICAgICAgICByZXMucG9wKCk7XG4gICAgICAgICAgfVxuICAgICAgICB9IC8vIE9ubHkgcHJpbnQgYSBzaW5nbGUgaW5wdXQuXG5cblxuICAgICAgICBpZiAocmVzLmxlbmd0aCA9PT0gMSkge1xuICAgICAgICAgIF90aGlzID0gX3Bvc3NpYmxlQ29uc3RydWN0b3JSZXR1cm4odGhpcywgX2dldFByb3RvdHlwZU9mKEFzc2VydGlvbkVycm9yKS5jYWxsKHRoaXMsIFwiXCIuY29uY2F0KGJhc2UsIFwiIFwiKS5jb25jYXQocmVzWzBdKSkpO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIF90aGlzID0gX3Bvc3NpYmxlQ29uc3RydWN0b3JSZXR1cm4odGhpcywgX2dldFByb3RvdHlwZU9mKEFzc2VydGlvbkVycm9yKS5jYWxsKHRoaXMsIFwiXCIuY29uY2F0KGJhc2UsIFwiXFxuXFxuXCIpLmNvbmNhdChyZXMuam9pbignXFxuJyksIFwiXFxuXCIpKSk7XG4gICAgICAgIH1cbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHZhciBfcmVzID0gaW5zcGVjdFZhbHVlKGFjdHVhbCk7XG5cbiAgICAgICAgdmFyIG90aGVyID0gJyc7XG4gICAgICAgIHZhciBrbm93bk9wZXJhdG9ycyA9IGtSZWFkYWJsZU9wZXJhdG9yW29wZXJhdG9yXTtcblxuICAgICAgICBpZiAob3BlcmF0b3IgPT09ICdub3REZWVwRXF1YWwnIHx8IG9wZXJhdG9yID09PSAnbm90RXF1YWwnKSB7XG4gICAgICAgICAgX3JlcyA9IFwiXCIuY29uY2F0KGtSZWFkYWJsZU9wZXJhdG9yW29wZXJhdG9yXSwgXCJcXG5cXG5cIikuY29uY2F0KF9yZXMpO1xuXG4gICAgICAgICAgaWYgKF9yZXMubGVuZ3RoID4gMTAyNCkge1xuICAgICAgICAgICAgX3JlcyA9IFwiXCIuY29uY2F0KF9yZXMuc2xpY2UoMCwgMTAyMSksIFwiLi4uXCIpO1xuICAgICAgICAgIH1cbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICBvdGhlciA9IFwiXCIuY29uY2F0KGluc3BlY3RWYWx1ZShleHBlY3RlZCkpO1xuXG4gICAgICAgICAgaWYgKF9yZXMubGVuZ3RoID4gNTEyKSB7XG4gICAgICAgICAgICBfcmVzID0gXCJcIi5jb25jYXQoX3Jlcy5zbGljZSgwLCA1MDkpLCBcIi4uLlwiKTtcbiAgICAgICAgICB9XG5cbiAgICAgICAgICBpZiAob3RoZXIubGVuZ3RoID4gNTEyKSB7XG4gICAgICAgICAgICBvdGhlciA9IFwiXCIuY29uY2F0KG90aGVyLnNsaWNlKDAsIDUwOSksIFwiLi4uXCIpO1xuICAgICAgICAgIH1cblxuICAgICAgICAgIGlmIChvcGVyYXRvciA9PT0gJ2RlZXBFcXVhbCcgfHwgb3BlcmF0b3IgPT09ICdlcXVhbCcpIHtcbiAgICAgICAgICAgIF9yZXMgPSBcIlwiLmNvbmNhdChrbm93bk9wZXJhdG9ycywgXCJcXG5cXG5cIikuY29uY2F0KF9yZXMsIFwiXFxuXFxuc2hvdWxkIGVxdWFsXFxuXFxuXCIpO1xuICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICBvdGhlciA9IFwiIFwiLmNvbmNhdChvcGVyYXRvciwgXCIgXCIpLmNvbmNhdChvdGhlcik7XG4gICAgICAgICAgfVxuICAgICAgICB9XG5cbiAgICAgICAgX3RoaXMgPSBfcG9zc2libGVDb25zdHJ1Y3RvclJldHVybih0aGlzLCBfZ2V0UHJvdG90eXBlT2YoQXNzZXJ0aW9uRXJyb3IpLmNhbGwodGhpcywgXCJcIi5jb25jYXQoX3JlcykuY29uY2F0KG90aGVyKSkpO1xuICAgICAgfVxuICAgIH1cblxuICAgIEVycm9yLnN0YWNrVHJhY2VMaW1pdCA9IGxpbWl0O1xuICAgIF90aGlzLmdlbmVyYXRlZE1lc3NhZ2UgPSAhbWVzc2FnZTtcbiAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkoX2Fzc2VydFRoaXNJbml0aWFsaXplZChfdGhpcyksICduYW1lJywge1xuICAgICAgdmFsdWU6ICdBc3NlcnRpb25FcnJvciBbRVJSX0FTU0VSVElPTl0nLFxuICAgICAgZW51bWVyYWJsZTogZmFsc2UsXG4gICAgICB3cml0YWJsZTogdHJ1ZSxcbiAgICAgIGNvbmZpZ3VyYWJsZTogdHJ1ZVxuICAgIH0pO1xuICAgIF90aGlzLmNvZGUgPSAnRVJSX0FTU0VSVElPTic7XG4gICAgX3RoaXMuYWN0dWFsID0gYWN0dWFsO1xuICAgIF90aGlzLmV4cGVjdGVkID0gZXhwZWN0ZWQ7XG4gICAgX3RoaXMub3BlcmF0b3IgPSBvcGVyYXRvcjtcblxuICAgIGlmIChFcnJvci5jYXB0dXJlU3RhY2tUcmFjZSkge1xuICAgICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLXJlc3RyaWN0ZWQtc3ludGF4XG4gICAgICBFcnJvci5jYXB0dXJlU3RhY2tUcmFjZShfYXNzZXJ0VGhpc0luaXRpYWxpemVkKF90aGlzKSwgc3RhY2tTdGFydEZuKTtcbiAgICB9IC8vIENyZWF0ZSBlcnJvciBtZXNzYWdlIGluY2x1ZGluZyB0aGUgZXJyb3IgY29kZSBpbiB0aGUgbmFtZS5cblxuXG4gICAgX3RoaXMuc3RhY2s7IC8vIFJlc2V0IHRoZSBuYW1lLlxuXG4gICAgX3RoaXMubmFtZSA9ICdBc3NlcnRpb25FcnJvcic7XG4gICAgcmV0dXJuIF9wb3NzaWJsZUNvbnN0cnVjdG9yUmV0dXJuKF90aGlzKTtcbiAgfVxuXG4gIF9jcmVhdGVDbGFzcyhBc3NlcnRpb25FcnJvciwgW3tcbiAgICBrZXk6IFwidG9TdHJpbmdcIixcbiAgICB2YWx1ZTogZnVuY3Rpb24gdG9TdHJpbmcoKSB7XG4gICAgICByZXR1cm4gXCJcIi5jb25jYXQodGhpcy5uYW1lLCBcIiBbXCIpLmNvbmNhdCh0aGlzLmNvZGUsIFwiXTogXCIpLmNvbmNhdCh0aGlzLm1lc3NhZ2UpO1xuICAgIH1cbiAgfSwge1xuICAgIGtleTogaW5zcGVjdC5jdXN0b20sXG4gICAgdmFsdWU6IGZ1bmN0aW9uIHZhbHVlKHJlY3Vyc2VUaW1lcywgY3R4KSB7XG4gICAgICAvLyBUaGlzIGxpbWl0cyB0aGUgYGFjdHVhbGAgYW5kIGBleHBlY3RlZGAgcHJvcGVydHkgZGVmYXVsdCBpbnNwZWN0aW9uIHRvXG4gICAgICAvLyB0aGUgbWluaW11bSBkZXB0aC4gT3RoZXJ3aXNlIHRob3NlIHZhbHVlcyB3b3VsZCBiZSB0b28gdmVyYm9zZSBjb21wYXJlZFxuICAgICAgLy8gdG8gdGhlIGFjdHVhbCBlcnJvciBtZXNzYWdlIHdoaWNoIGNvbnRhaW5zIGEgY29tYmluZWQgdmlldyBvZiB0aGVzZSB0d29cbiAgICAgIC8vIGlucHV0IHZhbHVlcy5cbiAgICAgIHJldHVybiBpbnNwZWN0KHRoaXMsIF9vYmplY3RTcHJlYWQoe30sIGN0eCwge1xuICAgICAgICBjdXN0b21JbnNwZWN0OiBmYWxzZSxcbiAgICAgICAgZGVwdGg6IDBcbiAgICAgIH0pKTtcbiAgICB9XG4gIH1dKTtcblxuICByZXR1cm4gQXNzZXJ0aW9uRXJyb3I7XG59KF93cmFwTmF0aXZlU3VwZXIoRXJyb3IpKTtcblxubW9kdWxlLmV4cG9ydHMgPSBBc3NlcnRpb25FcnJvcjsiLCIvLyBDdXJyZW50bHkgaW4gc3luYyB3aXRoIE5vZGUuanMgbGliL2ludGVybmFsL2Vycm9ycy5qc1xuLy8gaHR0cHM6Ly9naXRodWIuY29tL25vZGVqcy9ub2RlL2NvbW1pdC8zYjA0NDk2MmM0OGZlMzEzOTA1ODc3YTk2YjVkMDg5NGE1NDA0ZjZmXG5cbi8qIGVzbGludCBub2RlLWNvcmUvZG9jdW1lbnRlZC1lcnJvcnM6IFwiZXJyb3JcIiAqL1xuXG4vKiBlc2xpbnQgbm9kZS1jb3JlL2FscGhhYmV0aXplLWVycm9yczogXCJlcnJvclwiICovXG5cbi8qIGVzbGludCBub2RlLWNvcmUvcHJlZmVyLXV0aWwtZm9ybWF0LWVycm9yczogXCJlcnJvclwiICovXG4ndXNlIHN0cmljdCc7IC8vIFRoZSB3aG9sZSBwb2ludCBiZWhpbmQgdGhpcyBpbnRlcm5hbCBtb2R1bGUgaXMgdG8gYWxsb3cgTm9kZS5qcyB0byBub1xuLy8gbG9uZ2VyIGJlIGZvcmNlZCB0byB0cmVhdCBldmVyeSBlcnJvciBtZXNzYWdlIGNoYW5nZSBhcyBhIHNlbXZlci1tYWpvclxuLy8gY2hhbmdlLiBUaGUgTm9kZUVycm9yIGNsYXNzZXMgaGVyZSBhbGwgZXhwb3NlIGEgYGNvZGVgIHByb3BlcnR5IHdob3NlXG4vLyB2YWx1ZSBzdGF0aWNhbGx5IGFuZCBwZXJtYW5lbnRseSBpZGVudGlmaWVzIHRoZSBlcnJvci4gV2hpbGUgdGhlIGVycm9yXG4vLyBtZXNzYWdlIG1heSBjaGFuZ2UsIHRoZSBjb2RlIHNob3VsZCBub3QuXG5cbmZ1bmN0aW9uIF90eXBlb2Yob2JqKSB7IGlmICh0eXBlb2YgU3ltYm9sID09PSBcImZ1bmN0aW9uXCIgJiYgdHlwZW9mIFN5bWJvbC5pdGVyYXRvciA9PT0gXCJzeW1ib2xcIikgeyBfdHlwZW9mID0gZnVuY3Rpb24gX3R5cGVvZihvYmopIHsgcmV0dXJuIHR5cGVvZiBvYmo7IH07IH0gZWxzZSB7IF90eXBlb2YgPSBmdW5jdGlvbiBfdHlwZW9mKG9iaikgeyByZXR1cm4gb2JqICYmIHR5cGVvZiBTeW1ib2wgPT09IFwiZnVuY3Rpb25cIiAmJiBvYmouY29uc3RydWN0b3IgPT09IFN5bWJvbCAmJiBvYmogIT09IFN5bWJvbC5wcm90b3R5cGUgPyBcInN5bWJvbFwiIDogdHlwZW9mIG9iajsgfTsgfSByZXR1cm4gX3R5cGVvZihvYmopOyB9XG5cbmZ1bmN0aW9uIF9jbGFzc0NhbGxDaGVjayhpbnN0YW5jZSwgQ29uc3RydWN0b3IpIHsgaWYgKCEoaW5zdGFuY2UgaW5zdGFuY2VvZiBDb25zdHJ1Y3RvcikpIHsgdGhyb3cgbmV3IFR5cGVFcnJvcihcIkNhbm5vdCBjYWxsIGEgY2xhc3MgYXMgYSBmdW5jdGlvblwiKTsgfSB9XG5cbmZ1bmN0aW9uIF9wb3NzaWJsZUNvbnN0cnVjdG9yUmV0dXJuKHNlbGYsIGNhbGwpIHsgaWYgKGNhbGwgJiYgKF90eXBlb2YoY2FsbCkgPT09IFwib2JqZWN0XCIgfHwgdHlwZW9mIGNhbGwgPT09IFwiZnVuY3Rpb25cIikpIHsgcmV0dXJuIGNhbGw7IH0gcmV0dXJuIF9hc3NlcnRUaGlzSW5pdGlhbGl6ZWQoc2VsZik7IH1cblxuZnVuY3Rpb24gX2Fzc2VydFRoaXNJbml0aWFsaXplZChzZWxmKSB7IGlmIChzZWxmID09PSB2b2lkIDApIHsgdGhyb3cgbmV3IFJlZmVyZW5jZUVycm9yKFwidGhpcyBoYXNuJ3QgYmVlbiBpbml0aWFsaXNlZCAtIHN1cGVyKCkgaGFzbid0IGJlZW4gY2FsbGVkXCIpOyB9IHJldHVybiBzZWxmOyB9XG5cbmZ1bmN0aW9uIF9nZXRQcm90b3R5cGVPZihvKSB7IF9nZXRQcm90b3R5cGVPZiA9IE9iamVjdC5zZXRQcm90b3R5cGVPZiA/IE9iamVjdC5nZXRQcm90b3R5cGVPZiA6IGZ1bmN0aW9uIF9nZXRQcm90b3R5cGVPZihvKSB7IHJldHVybiBvLl9fcHJvdG9fXyB8fCBPYmplY3QuZ2V0UHJvdG90eXBlT2Yobyk7IH07IHJldHVybiBfZ2V0UHJvdG90eXBlT2Yobyk7IH1cblxuZnVuY3Rpb24gX2luaGVyaXRzKHN1YkNsYXNzLCBzdXBlckNsYXNzKSB7IGlmICh0eXBlb2Ygc3VwZXJDbGFzcyAhPT0gXCJmdW5jdGlvblwiICYmIHN1cGVyQ2xhc3MgIT09IG51bGwpIHsgdGhyb3cgbmV3IFR5cGVFcnJvcihcIlN1cGVyIGV4cHJlc3Npb24gbXVzdCBlaXRoZXIgYmUgbnVsbCBvciBhIGZ1bmN0aW9uXCIpOyB9IHN1YkNsYXNzLnByb3RvdHlwZSA9IE9iamVjdC5jcmVhdGUoc3VwZXJDbGFzcyAmJiBzdXBlckNsYXNzLnByb3RvdHlwZSwgeyBjb25zdHJ1Y3RvcjogeyB2YWx1ZTogc3ViQ2xhc3MsIHdyaXRhYmxlOiB0cnVlLCBjb25maWd1cmFibGU6IHRydWUgfSB9KTsgaWYgKHN1cGVyQ2xhc3MpIF9zZXRQcm90b3R5cGVPZihzdWJDbGFzcywgc3VwZXJDbGFzcyk7IH1cblxuZnVuY3Rpb24gX3NldFByb3RvdHlwZU9mKG8sIHApIHsgX3NldFByb3RvdHlwZU9mID0gT2JqZWN0LnNldFByb3RvdHlwZU9mIHx8IGZ1bmN0aW9uIF9zZXRQcm90b3R5cGVPZihvLCBwKSB7IG8uX19wcm90b19fID0gcDsgcmV0dXJuIG87IH07IHJldHVybiBfc2V0UHJvdG90eXBlT2YobywgcCk7IH1cblxudmFyIGNvZGVzID0ge307IC8vIExhenkgbG9hZGVkXG5cbnZhciBhc3NlcnQ7XG52YXIgdXRpbDtcblxuZnVuY3Rpb24gY3JlYXRlRXJyb3JUeXBlKGNvZGUsIG1lc3NhZ2UsIEJhc2UpIHtcbiAgaWYgKCFCYXNlKSB7XG4gICAgQmFzZSA9IEVycm9yO1xuICB9XG5cbiAgZnVuY3Rpb24gZ2V0TWVzc2FnZShhcmcxLCBhcmcyLCBhcmczKSB7XG4gICAgaWYgKHR5cGVvZiBtZXNzYWdlID09PSAnc3RyaW5nJykge1xuICAgICAgcmV0dXJuIG1lc3NhZ2U7XG4gICAgfSBlbHNlIHtcbiAgICAgIHJldHVybiBtZXNzYWdlKGFyZzEsIGFyZzIsIGFyZzMpO1xuICAgIH1cbiAgfVxuXG4gIHZhciBOb2RlRXJyb3IgPVxuICAvKiNfX1BVUkVfXyovXG4gIGZ1bmN0aW9uIChfQmFzZSkge1xuICAgIF9pbmhlcml0cyhOb2RlRXJyb3IsIF9CYXNlKTtcblxuICAgIGZ1bmN0aW9uIE5vZGVFcnJvcihhcmcxLCBhcmcyLCBhcmczKSB7XG4gICAgICB2YXIgX3RoaXM7XG5cbiAgICAgIF9jbGFzc0NhbGxDaGVjayh0aGlzLCBOb2RlRXJyb3IpO1xuXG4gICAgICBfdGhpcyA9IF9wb3NzaWJsZUNvbnN0cnVjdG9yUmV0dXJuKHRoaXMsIF9nZXRQcm90b3R5cGVPZihOb2RlRXJyb3IpLmNhbGwodGhpcywgZ2V0TWVzc2FnZShhcmcxLCBhcmcyLCBhcmczKSkpO1xuICAgICAgX3RoaXMuY29kZSA9IGNvZGU7XG4gICAgICByZXR1cm4gX3RoaXM7XG4gICAgfVxuXG4gICAgcmV0dXJuIE5vZGVFcnJvcjtcbiAgfShCYXNlKTtcblxuICBjb2Rlc1tjb2RlXSA9IE5vZGVFcnJvcjtcbn0gLy8gaHR0cHM6Ly9naXRodWIuY29tL25vZGVqcy9ub2RlL2Jsb2IvdjEwLjguMC9saWIvaW50ZXJuYWwvZXJyb3JzLmpzXG5cblxuZnVuY3Rpb24gb25lT2YoZXhwZWN0ZWQsIHRoaW5nKSB7XG4gIGlmIChBcnJheS5pc0FycmF5KGV4cGVjdGVkKSkge1xuICAgIHZhciBsZW4gPSBleHBlY3RlZC5sZW5ndGg7XG4gICAgZXhwZWN0ZWQgPSBleHBlY3RlZC5tYXAoZnVuY3Rpb24gKGkpIHtcbiAgICAgIHJldHVybiBTdHJpbmcoaSk7XG4gICAgfSk7XG5cbiAgICBpZiAobGVuID4gMikge1xuICAgICAgcmV0dXJuIFwib25lIG9mIFwiLmNvbmNhdCh0aGluZywgXCIgXCIpLmNvbmNhdChleHBlY3RlZC5zbGljZSgwLCBsZW4gLSAxKS5qb2luKCcsICcpLCBcIiwgb3IgXCIpICsgZXhwZWN0ZWRbbGVuIC0gMV07XG4gICAgfSBlbHNlIGlmIChsZW4gPT09IDIpIHtcbiAgICAgIHJldHVybiBcIm9uZSBvZiBcIi5jb25jYXQodGhpbmcsIFwiIFwiKS5jb25jYXQoZXhwZWN0ZWRbMF0sIFwiIG9yIFwiKS5jb25jYXQoZXhwZWN0ZWRbMV0pO1xuICAgIH0gZWxzZSB7XG4gICAgICByZXR1cm4gXCJvZiBcIi5jb25jYXQodGhpbmcsIFwiIFwiKS5jb25jYXQoZXhwZWN0ZWRbMF0pO1xuICAgIH1cbiAgfSBlbHNlIHtcbiAgICByZXR1cm4gXCJvZiBcIi5jb25jYXQodGhpbmcsIFwiIFwiKS5jb25jYXQoU3RyaW5nKGV4cGVjdGVkKSk7XG4gIH1cbn0gLy8gaHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZW4tVVMvZG9jcy9XZWIvSmF2YVNjcmlwdC9SZWZlcmVuY2UvR2xvYmFsX09iamVjdHMvU3RyaW5nL3N0YXJ0c1dpdGhcblxuXG5mdW5jdGlvbiBzdGFydHNXaXRoKHN0ciwgc2VhcmNoLCBwb3MpIHtcbiAgcmV0dXJuIHN0ci5zdWJzdHIoIXBvcyB8fCBwb3MgPCAwID8gMCA6ICtwb3MsIHNlYXJjaC5sZW5ndGgpID09PSBzZWFyY2g7XG59IC8vIGh0dHBzOi8vZGV2ZWxvcGVyLm1vemlsbGEub3JnL2VuLVVTL2RvY3MvV2ViL0phdmFTY3JpcHQvUmVmZXJlbmNlL0dsb2JhbF9PYmplY3RzL1N0cmluZy9lbmRzV2l0aFxuXG5cbmZ1bmN0aW9uIGVuZHNXaXRoKHN0ciwgc2VhcmNoLCB0aGlzX2xlbikge1xuICBpZiAodGhpc19sZW4gPT09IHVuZGVmaW5lZCB8fCB0aGlzX2xlbiA+IHN0ci5sZW5ndGgpIHtcbiAgICB0aGlzX2xlbiA9IHN0ci5sZW5ndGg7XG4gIH1cblxuICByZXR1cm4gc3RyLnN1YnN0cmluZyh0aGlzX2xlbiAtIHNlYXJjaC5sZW5ndGgsIHRoaXNfbGVuKSA9PT0gc2VhcmNoO1xufSAvLyBodHRwczovL2RldmVsb3Blci5tb3ppbGxhLm9yZy9lbi1VUy9kb2NzL1dlYi9KYXZhU2NyaXB0L1JlZmVyZW5jZS9HbG9iYWxfT2JqZWN0cy9TdHJpbmcvaW5jbHVkZXNcblxuXG5mdW5jdGlvbiBpbmNsdWRlcyhzdHIsIHNlYXJjaCwgc3RhcnQpIHtcbiAgaWYgKHR5cGVvZiBzdGFydCAhPT0gJ251bWJlcicpIHtcbiAgICBzdGFydCA9IDA7XG4gIH1cblxuICBpZiAoc3RhcnQgKyBzZWFyY2gubGVuZ3RoID4gc3RyLmxlbmd0aCkge1xuICAgIHJldHVybiBmYWxzZTtcbiAgfSBlbHNlIHtcbiAgICByZXR1cm4gc3RyLmluZGV4T2Yoc2VhcmNoLCBzdGFydCkgIT09IC0xO1xuICB9XG59XG5cbmNyZWF0ZUVycm9yVHlwZSgnRVJSX0FNQklHVU9VU19BUkdVTUVOVCcsICdUaGUgXCIlc1wiIGFyZ3VtZW50IGlzIGFtYmlndW91cy4gJXMnLCBUeXBlRXJyb3IpO1xuY3JlYXRlRXJyb3JUeXBlKCdFUlJfSU5WQUxJRF9BUkdfVFlQRScsIGZ1bmN0aW9uIChuYW1lLCBleHBlY3RlZCwgYWN0dWFsKSB7XG4gIGlmIChhc3NlcnQgPT09IHVuZGVmaW5lZCkgYXNzZXJ0ID0gcmVxdWlyZSgnLi4vYXNzZXJ0Jyk7XG4gIGFzc2VydCh0eXBlb2YgbmFtZSA9PT0gJ3N0cmluZycsIFwiJ25hbWUnIG11c3QgYmUgYSBzdHJpbmdcIik7IC8vIGRldGVybWluZXI6ICdtdXN0IGJlJyBvciAnbXVzdCBub3QgYmUnXG5cbiAgdmFyIGRldGVybWluZXI7XG5cbiAgaWYgKHR5cGVvZiBleHBlY3RlZCA9PT0gJ3N0cmluZycgJiYgc3RhcnRzV2l0aChleHBlY3RlZCwgJ25vdCAnKSkge1xuICAgIGRldGVybWluZXIgPSAnbXVzdCBub3QgYmUnO1xuICAgIGV4cGVjdGVkID0gZXhwZWN0ZWQucmVwbGFjZSgvXm5vdCAvLCAnJyk7XG4gIH0gZWxzZSB7XG4gICAgZGV0ZXJtaW5lciA9ICdtdXN0IGJlJztcbiAgfVxuXG4gIHZhciBtc2c7XG5cbiAgaWYgKGVuZHNXaXRoKG5hbWUsICcgYXJndW1lbnQnKSkge1xuICAgIC8vIEZvciBjYXNlcyBsaWtlICdmaXJzdCBhcmd1bWVudCdcbiAgICBtc2cgPSBcIlRoZSBcIi5jb25jYXQobmFtZSwgXCIgXCIpLmNvbmNhdChkZXRlcm1pbmVyLCBcIiBcIikuY29uY2F0KG9uZU9mKGV4cGVjdGVkLCAndHlwZScpKTtcbiAgfSBlbHNlIHtcbiAgICB2YXIgdHlwZSA9IGluY2x1ZGVzKG5hbWUsICcuJykgPyAncHJvcGVydHknIDogJ2FyZ3VtZW50JztcbiAgICBtc2cgPSBcIlRoZSBcXFwiXCIuY29uY2F0KG5hbWUsIFwiXFxcIiBcIikuY29uY2F0KHR5cGUsIFwiIFwiKS5jb25jYXQoZGV0ZXJtaW5lciwgXCIgXCIpLmNvbmNhdChvbmVPZihleHBlY3RlZCwgJ3R5cGUnKSk7XG4gIH0gLy8gVE9ETyhCcmlkZ2VBUik6IEltcHJvdmUgdGhlIG91dHB1dCBieSBzaG93aW5nIGBudWxsYCBhbmQgc2ltaWxhci5cblxuXG4gIG1zZyArPSBcIi4gUmVjZWl2ZWQgdHlwZSBcIi5jb25jYXQoX3R5cGVvZihhY3R1YWwpKTtcbiAgcmV0dXJuIG1zZztcbn0sIFR5cGVFcnJvcik7XG5jcmVhdGVFcnJvclR5cGUoJ0VSUl9JTlZBTElEX0FSR19WQUxVRScsIGZ1bmN0aW9uIChuYW1lLCB2YWx1ZSkge1xuICB2YXIgcmVhc29uID0gYXJndW1lbnRzLmxlbmd0aCA+IDIgJiYgYXJndW1lbnRzWzJdICE9PSB1bmRlZmluZWQgPyBhcmd1bWVudHNbMl0gOiAnaXMgaW52YWxpZCc7XG4gIGlmICh1dGlsID09PSB1bmRlZmluZWQpIHV0aWwgPSByZXF1aXJlKCd1dGlsLycpO1xuICB2YXIgaW5zcGVjdGVkID0gdXRpbC5pbnNwZWN0KHZhbHVlKTtcblxuICBpZiAoaW5zcGVjdGVkLmxlbmd0aCA+IDEyOCkge1xuICAgIGluc3BlY3RlZCA9IFwiXCIuY29uY2F0KGluc3BlY3RlZC5zbGljZSgwLCAxMjgpLCBcIi4uLlwiKTtcbiAgfVxuXG4gIHJldHVybiBcIlRoZSBhcmd1bWVudCAnXCIuY29uY2F0KG5hbWUsIFwiJyBcIikuY29uY2F0KHJlYXNvbiwgXCIuIFJlY2VpdmVkIFwiKS5jb25jYXQoaW5zcGVjdGVkKTtcbn0sIFR5cGVFcnJvciwgUmFuZ2VFcnJvcik7XG5jcmVhdGVFcnJvclR5cGUoJ0VSUl9JTlZBTElEX1JFVFVSTl9WQUxVRScsIGZ1bmN0aW9uIChpbnB1dCwgbmFtZSwgdmFsdWUpIHtcbiAgdmFyIHR5cGU7XG5cbiAgaWYgKHZhbHVlICYmIHZhbHVlLmNvbnN0cnVjdG9yICYmIHZhbHVlLmNvbnN0cnVjdG9yLm5hbWUpIHtcbiAgICB0eXBlID0gXCJpbnN0YW5jZSBvZiBcIi5jb25jYXQodmFsdWUuY29uc3RydWN0b3IubmFtZSk7XG4gIH0gZWxzZSB7XG4gICAgdHlwZSA9IFwidHlwZSBcIi5jb25jYXQoX3R5cGVvZih2YWx1ZSkpO1xuICB9XG5cbiAgcmV0dXJuIFwiRXhwZWN0ZWQgXCIuY29uY2F0KGlucHV0LCBcIiB0byBiZSByZXR1cm5lZCBmcm9tIHRoZSBcXFwiXCIpLmNvbmNhdChuYW1lLCBcIlxcXCJcIikgKyBcIiBmdW5jdGlvbiBidXQgZ290IFwiLmNvbmNhdCh0eXBlLCBcIi5cIik7XG59LCBUeXBlRXJyb3IpO1xuY3JlYXRlRXJyb3JUeXBlKCdFUlJfTUlTU0lOR19BUkdTJywgZnVuY3Rpb24gKCkge1xuICBmb3IgKHZhciBfbGVuID0gYXJndW1lbnRzLmxlbmd0aCwgYXJncyA9IG5ldyBBcnJheShfbGVuKSwgX2tleSA9IDA7IF9rZXkgPCBfbGVuOyBfa2V5KyspIHtcbiAgICBhcmdzW19rZXldID0gYXJndW1lbnRzW19rZXldO1xuICB9XG5cbiAgaWYgKGFzc2VydCA9PT0gdW5kZWZpbmVkKSBhc3NlcnQgPSByZXF1aXJlKCcuLi9hc3NlcnQnKTtcbiAgYXNzZXJ0KGFyZ3MubGVuZ3RoID4gMCwgJ0F0IGxlYXN0IG9uZSBhcmcgbmVlZHMgdG8gYmUgc3BlY2lmaWVkJyk7XG4gIHZhciBtc2cgPSAnVGhlICc7XG4gIHZhciBsZW4gPSBhcmdzLmxlbmd0aDtcbiAgYXJncyA9IGFyZ3MubWFwKGZ1bmN0aW9uIChhKSB7XG4gICAgcmV0dXJuIFwiXFxcIlwiLmNvbmNhdChhLCBcIlxcXCJcIik7XG4gIH0pO1xuXG4gIHN3aXRjaCAobGVuKSB7XG4gICAgY2FzZSAxOlxuICAgICAgbXNnICs9IFwiXCIuY29uY2F0KGFyZ3NbMF0sIFwiIGFyZ3VtZW50XCIpO1xuICAgICAgYnJlYWs7XG5cbiAgICBjYXNlIDI6XG4gICAgICBtc2cgKz0gXCJcIi5jb25jYXQoYXJnc1swXSwgXCIgYW5kIFwiKS5jb25jYXQoYXJnc1sxXSwgXCIgYXJndW1lbnRzXCIpO1xuICAgICAgYnJlYWs7XG5cbiAgICBkZWZhdWx0OlxuICAgICAgbXNnICs9IGFyZ3Muc2xpY2UoMCwgbGVuIC0gMSkuam9pbignLCAnKTtcbiAgICAgIG1zZyArPSBcIiwgYW5kIFwiLmNvbmNhdChhcmdzW2xlbiAtIDFdLCBcIiBhcmd1bWVudHNcIik7XG4gICAgICBicmVhaztcbiAgfVxuXG4gIHJldHVybiBcIlwiLmNvbmNhdChtc2csIFwiIG11c3QgYmUgc3BlY2lmaWVkXCIpO1xufSwgVHlwZUVycm9yKTtcbm1vZHVsZS5leHBvcnRzLmNvZGVzID0gY29kZXM7IiwiLy8gQ3VycmVudGx5IGluIHN5bmMgd2l0aCBOb2RlLmpzIGxpYi9pbnRlcm5hbC91dGlsL2NvbXBhcmlzb25zLmpzXG4vLyBodHRwczovL2dpdGh1Yi5jb20vbm9kZWpzL25vZGUvY29tbWl0LzExMmNjN2MyNzU1MTI1NGFhMmIxNzA5OGZiNzc0ODY3ZjA1ZWQwZDlcbid1c2Ugc3RyaWN0JztcblxuZnVuY3Rpb24gX3NsaWNlZFRvQXJyYXkoYXJyLCBpKSB7IHJldHVybiBfYXJyYXlXaXRoSG9sZXMoYXJyKSB8fCBfaXRlcmFibGVUb0FycmF5TGltaXQoYXJyLCBpKSB8fCBfbm9uSXRlcmFibGVSZXN0KCk7IH1cblxuZnVuY3Rpb24gX25vbkl0ZXJhYmxlUmVzdCgpIHsgdGhyb3cgbmV3IFR5cGVFcnJvcihcIkludmFsaWQgYXR0ZW1wdCB0byBkZXN0cnVjdHVyZSBub24taXRlcmFibGUgaW5zdGFuY2VcIik7IH1cblxuZnVuY3Rpb24gX2l0ZXJhYmxlVG9BcnJheUxpbWl0KGFyciwgaSkgeyB2YXIgX2FyciA9IFtdOyB2YXIgX24gPSB0cnVlOyB2YXIgX2QgPSBmYWxzZTsgdmFyIF9lID0gdW5kZWZpbmVkOyB0cnkgeyBmb3IgKHZhciBfaSA9IGFycltTeW1ib2wuaXRlcmF0b3JdKCksIF9zOyAhKF9uID0gKF9zID0gX2kubmV4dCgpKS5kb25lKTsgX24gPSB0cnVlKSB7IF9hcnIucHVzaChfcy52YWx1ZSk7IGlmIChpICYmIF9hcnIubGVuZ3RoID09PSBpKSBicmVhazsgfSB9IGNhdGNoIChlcnIpIHsgX2QgPSB0cnVlOyBfZSA9IGVycjsgfSBmaW5hbGx5IHsgdHJ5IHsgaWYgKCFfbiAmJiBfaVtcInJldHVyblwiXSAhPSBudWxsKSBfaVtcInJldHVyblwiXSgpOyB9IGZpbmFsbHkgeyBpZiAoX2QpIHRocm93IF9lOyB9IH0gcmV0dXJuIF9hcnI7IH1cblxuZnVuY3Rpb24gX2FycmF5V2l0aEhvbGVzKGFycikgeyBpZiAoQXJyYXkuaXNBcnJheShhcnIpKSByZXR1cm4gYXJyOyB9XG5cbmZ1bmN0aW9uIF90eXBlb2Yob2JqKSB7IGlmICh0eXBlb2YgU3ltYm9sID09PSBcImZ1bmN0aW9uXCIgJiYgdHlwZW9mIFN5bWJvbC5pdGVyYXRvciA9PT0gXCJzeW1ib2xcIikgeyBfdHlwZW9mID0gZnVuY3Rpb24gX3R5cGVvZihvYmopIHsgcmV0dXJuIHR5cGVvZiBvYmo7IH07IH0gZWxzZSB7IF90eXBlb2YgPSBmdW5jdGlvbiBfdHlwZW9mKG9iaikgeyByZXR1cm4gb2JqICYmIHR5cGVvZiBTeW1ib2wgPT09IFwiZnVuY3Rpb25cIiAmJiBvYmouY29uc3RydWN0b3IgPT09IFN5bWJvbCAmJiBvYmogIT09IFN5bWJvbC5wcm90b3R5cGUgPyBcInN5bWJvbFwiIDogdHlwZW9mIG9iajsgfTsgfSByZXR1cm4gX3R5cGVvZihvYmopOyB9XG5cbnZhciByZWdleEZsYWdzU3VwcG9ydGVkID0gL2EvZy5mbGFncyAhPT0gdW5kZWZpbmVkO1xuXG52YXIgYXJyYXlGcm9tU2V0ID0gZnVuY3Rpb24gYXJyYXlGcm9tU2V0KHNldCkge1xuICB2YXIgYXJyYXkgPSBbXTtcbiAgc2V0LmZvckVhY2goZnVuY3Rpb24gKHZhbHVlKSB7XG4gICAgcmV0dXJuIGFycmF5LnB1c2godmFsdWUpO1xuICB9KTtcbiAgcmV0dXJuIGFycmF5O1xufTtcblxudmFyIGFycmF5RnJvbU1hcCA9IGZ1bmN0aW9uIGFycmF5RnJvbU1hcChtYXApIHtcbiAgdmFyIGFycmF5ID0gW107XG4gIG1hcC5mb3JFYWNoKGZ1bmN0aW9uICh2YWx1ZSwga2V5KSB7XG4gICAgcmV0dXJuIGFycmF5LnB1c2goW2tleSwgdmFsdWVdKTtcbiAgfSk7XG4gIHJldHVybiBhcnJheTtcbn07XG5cbnZhciBvYmplY3RJcyA9IE9iamVjdC5pcyA/IE9iamVjdC5pcyA6IHJlcXVpcmUoJ29iamVjdC1pcycpO1xudmFyIG9iamVjdEdldE93blByb3BlcnR5U3ltYm9scyA9IE9iamVjdC5nZXRPd25Qcm9wZXJ0eVN5bWJvbHMgPyBPYmplY3QuZ2V0T3duUHJvcGVydHlTeW1ib2xzIDogZnVuY3Rpb24gKCkge1xuICByZXR1cm4gW107XG59O1xudmFyIG51bWJlcklzTmFOID0gTnVtYmVyLmlzTmFOID8gTnVtYmVyLmlzTmFOIDogcmVxdWlyZSgnaXMtbmFuJyk7XG5cbmZ1bmN0aW9uIHVuY3VycnlUaGlzKGYpIHtcbiAgcmV0dXJuIGYuY2FsbC5iaW5kKGYpO1xufVxuXG52YXIgaGFzT3duUHJvcGVydHkgPSB1bmN1cnJ5VGhpcyhPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5KTtcbnZhciBwcm9wZXJ0eUlzRW51bWVyYWJsZSA9IHVuY3VycnlUaGlzKE9iamVjdC5wcm90b3R5cGUucHJvcGVydHlJc0VudW1lcmFibGUpO1xudmFyIG9iamVjdFRvU3RyaW5nID0gdW5jdXJyeVRoaXMoT2JqZWN0LnByb3RvdHlwZS50b1N0cmluZyk7XG5cbnZhciBfcmVxdWlyZSR0eXBlcyA9IHJlcXVpcmUoJ3V0aWwvJykudHlwZXMsXG4gICAgaXNBbnlBcnJheUJ1ZmZlciA9IF9yZXF1aXJlJHR5cGVzLmlzQW55QXJyYXlCdWZmZXIsXG4gICAgaXNBcnJheUJ1ZmZlclZpZXcgPSBfcmVxdWlyZSR0eXBlcy5pc0FycmF5QnVmZmVyVmlldyxcbiAgICBpc0RhdGUgPSBfcmVxdWlyZSR0eXBlcy5pc0RhdGUsXG4gICAgaXNNYXAgPSBfcmVxdWlyZSR0eXBlcy5pc01hcCxcbiAgICBpc1JlZ0V4cCA9IF9yZXF1aXJlJHR5cGVzLmlzUmVnRXhwLFxuICAgIGlzU2V0ID0gX3JlcXVpcmUkdHlwZXMuaXNTZXQsXG4gICAgaXNOYXRpdmVFcnJvciA9IF9yZXF1aXJlJHR5cGVzLmlzTmF0aXZlRXJyb3IsXG4gICAgaXNCb3hlZFByaW1pdGl2ZSA9IF9yZXF1aXJlJHR5cGVzLmlzQm94ZWRQcmltaXRpdmUsXG4gICAgaXNOdW1iZXJPYmplY3QgPSBfcmVxdWlyZSR0eXBlcy5pc051bWJlck9iamVjdCxcbiAgICBpc1N0cmluZ09iamVjdCA9IF9yZXF1aXJlJHR5cGVzLmlzU3RyaW5nT2JqZWN0LFxuICAgIGlzQm9vbGVhbk9iamVjdCA9IF9yZXF1aXJlJHR5cGVzLmlzQm9vbGVhbk9iamVjdCxcbiAgICBpc0JpZ0ludE9iamVjdCA9IF9yZXF1aXJlJHR5cGVzLmlzQmlnSW50T2JqZWN0LFxuICAgIGlzU3ltYm9sT2JqZWN0ID0gX3JlcXVpcmUkdHlwZXMuaXNTeW1ib2xPYmplY3QsXG4gICAgaXNGbG9hdDMyQXJyYXkgPSBfcmVxdWlyZSR0eXBlcy5pc0Zsb2F0MzJBcnJheSxcbiAgICBpc0Zsb2F0NjRBcnJheSA9IF9yZXF1aXJlJHR5cGVzLmlzRmxvYXQ2NEFycmF5O1xuXG5mdW5jdGlvbiBpc05vbkluZGV4KGtleSkge1xuICBpZiAoa2V5Lmxlbmd0aCA9PT0gMCB8fCBrZXkubGVuZ3RoID4gMTApIHJldHVybiB0cnVlO1xuXG4gIGZvciAodmFyIGkgPSAwOyBpIDwga2V5Lmxlbmd0aDsgaSsrKSB7XG4gICAgdmFyIGNvZGUgPSBrZXkuY2hhckNvZGVBdChpKTtcbiAgICBpZiAoY29kZSA8IDQ4IHx8IGNvZGUgPiA1NykgcmV0dXJuIHRydWU7XG4gIH0gLy8gVGhlIG1heGltdW0gc2l6ZSBmb3IgYW4gYXJyYXkgaXMgMiAqKiAzMiAtMS5cblxuXG4gIHJldHVybiBrZXkubGVuZ3RoID09PSAxMCAmJiBrZXkgPj0gTWF0aC5wb3coMiwgMzIpO1xufVxuXG5mdW5jdGlvbiBnZXRPd25Ob25JbmRleFByb3BlcnRpZXModmFsdWUpIHtcbiAgcmV0dXJuIE9iamVjdC5rZXlzKHZhbHVlKS5maWx0ZXIoaXNOb25JbmRleCkuY29uY2F0KG9iamVjdEdldE93blByb3BlcnR5U3ltYm9scyh2YWx1ZSkuZmlsdGVyKE9iamVjdC5wcm90b3R5cGUucHJvcGVydHlJc0VudW1lcmFibGUuYmluZCh2YWx1ZSkpKTtcbn0gLy8gVGFrZW4gZnJvbSBodHRwczovL2dpdGh1Yi5jb20vZmVyb3NzL2J1ZmZlci9ibG9iLzY4MGU5ZTVlNDg4ZjIyYWFjMjc1OTlhNTdkYzg0NGE2MzE1OTI4ZGQvaW5kZXguanNcbi8vIG9yaWdpbmFsIG5vdGljZTpcblxuLyohXG4gKiBUaGUgYnVmZmVyIG1vZHVsZSBmcm9tIG5vZGUuanMsIGZvciB0aGUgYnJvd3Nlci5cbiAqXG4gKiBAYXV0aG9yICAgRmVyb3NzIEFib3VraGFkaWplaCA8ZmVyb3NzQGZlcm9zcy5vcmc+IDxodHRwOi8vZmVyb3NzLm9yZz5cbiAqIEBsaWNlbnNlICBNSVRcbiAqL1xuXG5cbmZ1bmN0aW9uIGNvbXBhcmUoYSwgYikge1xuICBpZiAoYSA9PT0gYikge1xuICAgIHJldHVybiAwO1xuICB9XG5cbiAgdmFyIHggPSBhLmxlbmd0aDtcbiAgdmFyIHkgPSBiLmxlbmd0aDtcblxuICBmb3IgKHZhciBpID0gMCwgbGVuID0gTWF0aC5taW4oeCwgeSk7IGkgPCBsZW47ICsraSkge1xuICAgIGlmIChhW2ldICE9PSBiW2ldKSB7XG4gICAgICB4ID0gYVtpXTtcbiAgICAgIHkgPSBiW2ldO1xuICAgICAgYnJlYWs7XG4gICAgfVxuICB9XG5cbiAgaWYgKHggPCB5KSB7XG4gICAgcmV0dXJuIC0xO1xuICB9XG5cbiAgaWYgKHkgPCB4KSB7XG4gICAgcmV0dXJuIDE7XG4gIH1cblxuICByZXR1cm4gMDtcbn1cblxudmFyIE9OTFlfRU5VTUVSQUJMRSA9IHVuZGVmaW5lZDtcbnZhciBrU3RyaWN0ID0gdHJ1ZTtcbnZhciBrTG9vc2UgPSBmYWxzZTtcbnZhciBrTm9JdGVyYXRvciA9IDA7XG52YXIga0lzQXJyYXkgPSAxO1xudmFyIGtJc1NldCA9IDI7XG52YXIga0lzTWFwID0gMzsgLy8gQ2hlY2sgaWYgdGhleSBoYXZlIHRoZSBzYW1lIHNvdXJjZSBhbmQgZmxhZ3NcblxuZnVuY3Rpb24gYXJlU2ltaWxhclJlZ0V4cHMoYSwgYikge1xuICByZXR1cm4gcmVnZXhGbGFnc1N1cHBvcnRlZCA/IGEuc291cmNlID09PSBiLnNvdXJjZSAmJiBhLmZsYWdzID09PSBiLmZsYWdzIDogUmVnRXhwLnByb3RvdHlwZS50b1N0cmluZy5jYWxsKGEpID09PSBSZWdFeHAucHJvdG90eXBlLnRvU3RyaW5nLmNhbGwoYik7XG59XG5cbmZ1bmN0aW9uIGFyZVNpbWlsYXJGbG9hdEFycmF5cyhhLCBiKSB7XG4gIGlmIChhLmJ5dGVMZW5ndGggIT09IGIuYnl0ZUxlbmd0aCkge1xuICAgIHJldHVybiBmYWxzZTtcbiAgfVxuXG4gIGZvciAodmFyIG9mZnNldCA9IDA7IG9mZnNldCA8IGEuYnl0ZUxlbmd0aDsgb2Zmc2V0KyspIHtcbiAgICBpZiAoYVtvZmZzZXRdICE9PSBiW29mZnNldF0pIHtcbiAgICAgIHJldHVybiBmYWxzZTtcbiAgICB9XG4gIH1cblxuICByZXR1cm4gdHJ1ZTtcbn1cblxuZnVuY3Rpb24gYXJlU2ltaWxhclR5cGVkQXJyYXlzKGEsIGIpIHtcbiAgaWYgKGEuYnl0ZUxlbmd0aCAhPT0gYi5ieXRlTGVuZ3RoKSB7XG4gICAgcmV0dXJuIGZhbHNlO1xuICB9XG5cbiAgcmV0dXJuIGNvbXBhcmUobmV3IFVpbnQ4QXJyYXkoYS5idWZmZXIsIGEuYnl0ZU9mZnNldCwgYS5ieXRlTGVuZ3RoKSwgbmV3IFVpbnQ4QXJyYXkoYi5idWZmZXIsIGIuYnl0ZU9mZnNldCwgYi5ieXRlTGVuZ3RoKSkgPT09IDA7XG59XG5cbmZ1bmN0aW9uIGFyZUVxdWFsQXJyYXlCdWZmZXJzKGJ1ZjEsIGJ1ZjIpIHtcbiAgcmV0dXJuIGJ1ZjEuYnl0ZUxlbmd0aCA9PT0gYnVmMi5ieXRlTGVuZ3RoICYmIGNvbXBhcmUobmV3IFVpbnQ4QXJyYXkoYnVmMSksIG5ldyBVaW50OEFycmF5KGJ1ZjIpKSA9PT0gMDtcbn1cblxuZnVuY3Rpb24gaXNFcXVhbEJveGVkUHJpbWl0aXZlKHZhbDEsIHZhbDIpIHtcbiAgaWYgKGlzTnVtYmVyT2JqZWN0KHZhbDEpKSB7XG4gICAgcmV0dXJuIGlzTnVtYmVyT2JqZWN0KHZhbDIpICYmIG9iamVjdElzKE51bWJlci5wcm90b3R5cGUudmFsdWVPZi5jYWxsKHZhbDEpLCBOdW1iZXIucHJvdG90eXBlLnZhbHVlT2YuY2FsbCh2YWwyKSk7XG4gIH1cblxuICBpZiAoaXNTdHJpbmdPYmplY3QodmFsMSkpIHtcbiAgICByZXR1cm4gaXNTdHJpbmdPYmplY3QodmFsMikgJiYgU3RyaW5nLnByb3RvdHlwZS52YWx1ZU9mLmNhbGwodmFsMSkgPT09IFN0cmluZy5wcm90b3R5cGUudmFsdWVPZi5jYWxsKHZhbDIpO1xuICB9XG5cbiAgaWYgKGlzQm9vbGVhbk9iamVjdCh2YWwxKSkge1xuICAgIHJldHVybiBpc0Jvb2xlYW5PYmplY3QodmFsMikgJiYgQm9vbGVhbi5wcm90b3R5cGUudmFsdWVPZi5jYWxsKHZhbDEpID09PSBCb29sZWFuLnByb3RvdHlwZS52YWx1ZU9mLmNhbGwodmFsMik7XG4gIH1cblxuICBpZiAoaXNCaWdJbnRPYmplY3QodmFsMSkpIHtcbiAgICByZXR1cm4gaXNCaWdJbnRPYmplY3QodmFsMikgJiYgQmlnSW50LnByb3RvdHlwZS52YWx1ZU9mLmNhbGwodmFsMSkgPT09IEJpZ0ludC5wcm90b3R5cGUudmFsdWVPZi5jYWxsKHZhbDIpO1xuICB9XG5cbiAgcmV0dXJuIGlzU3ltYm9sT2JqZWN0KHZhbDIpICYmIFN5bWJvbC5wcm90b3R5cGUudmFsdWVPZi5jYWxsKHZhbDEpID09PSBTeW1ib2wucHJvdG90eXBlLnZhbHVlT2YuY2FsbCh2YWwyKTtcbn0gLy8gTm90ZXM6IFR5cGUgdGFncyBhcmUgaGlzdG9yaWNhbCBbW0NsYXNzXV0gcHJvcGVydGllcyB0aGF0IGNhbiBiZSBzZXQgYnlcbi8vIEZ1bmN0aW9uVGVtcGxhdGU6OlNldENsYXNzTmFtZSgpIGluIEMrKyBvciBTeW1ib2wudG9TdHJpbmdUYWcgaW4gSlNcbi8vIGFuZCByZXRyaWV2ZWQgdXNpbmcgT2JqZWN0LnByb3RvdHlwZS50b1N0cmluZy5jYWxsKG9iaikgaW4gSlNcbi8vIFNlZSBodHRwczovL3RjMzkuZ2l0aHViLmlvL2VjbWEyNjIvI3NlYy1vYmplY3QucHJvdG90eXBlLnRvc3RyaW5nXG4vLyBmb3IgYSBsaXN0IG9mIHRhZ3MgcHJlLWRlZmluZWQgaW4gdGhlIHNwZWMuXG4vLyBUaGVyZSBhcmUgc29tZSB1bnNwZWNpZmllZCB0YWdzIGluIHRoZSB3aWxkIHRvbyAoZS5nLiB0eXBlZCBhcnJheSB0YWdzKS5cbi8vIFNpbmNlIHRhZ3MgY2FuIGJlIGFsdGVyZWQsIHRoZXkgb25seSBzZXJ2ZSBmYXN0IGZhaWx1cmVzXG4vL1xuLy8gVHlwZWQgYXJyYXlzIGFuZCBidWZmZXJzIGFyZSBjaGVja2VkIGJ5IGNvbXBhcmluZyB0aGUgY29udGVudCBpbiB0aGVpclxuLy8gdW5kZXJseWluZyBBcnJheUJ1ZmZlci4gVGhpcyBvcHRpbWl6YXRpb24gcmVxdWlyZXMgdGhhdCBpdCdzXG4vLyByZWFzb25hYmxlIHRvIGludGVycHJldCB0aGVpciB1bmRlcmx5aW5nIG1lbW9yeSBpbiB0aGUgc2FtZSB3YXksXG4vLyB3aGljaCBpcyBjaGVja2VkIGJ5IGNvbXBhcmluZyB0aGVpciB0eXBlIHRhZ3MuXG4vLyAoZS5nLiBhIFVpbnQ4QXJyYXkgYW5kIGEgVWludDE2QXJyYXkgd2l0aCB0aGUgc2FtZSBtZW1vcnkgY29udGVudFxuLy8gY291bGQgc3RpbGwgYmUgZGlmZmVyZW50IGJlY2F1c2UgdGhleSB3aWxsIGJlIGludGVycHJldGVkIGRpZmZlcmVudGx5KS5cbi8vXG4vLyBGb3Igc3RyaWN0IGNvbXBhcmlzb24sIG9iamVjdHMgc2hvdWxkIGhhdmVcbi8vIGEpIFRoZSBzYW1lIGJ1aWx0LWluIHR5cGUgdGFnc1xuLy8gYikgVGhlIHNhbWUgcHJvdG90eXBlcy5cblxuXG5mdW5jdGlvbiBpbm5lckRlZXBFcXVhbCh2YWwxLCB2YWwyLCBzdHJpY3QsIG1lbW9zKSB7XG4gIC8vIEFsbCBpZGVudGljYWwgdmFsdWVzIGFyZSBlcXVpdmFsZW50LCBhcyBkZXRlcm1pbmVkIGJ5ID09PS5cbiAgaWYgKHZhbDEgPT09IHZhbDIpIHtcbiAgICBpZiAodmFsMSAhPT0gMCkgcmV0dXJuIHRydWU7XG4gICAgcmV0dXJuIHN0cmljdCA/IG9iamVjdElzKHZhbDEsIHZhbDIpIDogdHJ1ZTtcbiAgfSAvLyBDaGVjayBtb3JlIGNsb3NlbHkgaWYgdmFsMSBhbmQgdmFsMiBhcmUgZXF1YWwuXG5cblxuICBpZiAoc3RyaWN0KSB7XG4gICAgaWYgKF90eXBlb2YodmFsMSkgIT09ICdvYmplY3QnKSB7XG4gICAgICByZXR1cm4gdHlwZW9mIHZhbDEgPT09ICdudW1iZXInICYmIG51bWJlcklzTmFOKHZhbDEpICYmIG51bWJlcklzTmFOKHZhbDIpO1xuICAgIH1cblxuICAgIGlmIChfdHlwZW9mKHZhbDIpICE9PSAnb2JqZWN0JyB8fCB2YWwxID09PSBudWxsIHx8IHZhbDIgPT09IG51bGwpIHtcbiAgICAgIHJldHVybiBmYWxzZTtcbiAgICB9XG5cbiAgICBpZiAoT2JqZWN0LmdldFByb3RvdHlwZU9mKHZhbDEpICE9PSBPYmplY3QuZ2V0UHJvdG90eXBlT2YodmFsMikpIHtcbiAgICAgIHJldHVybiBmYWxzZTtcbiAgICB9XG4gIH0gZWxzZSB7XG4gICAgaWYgKHZhbDEgPT09IG51bGwgfHwgX3R5cGVvZih2YWwxKSAhPT0gJ29iamVjdCcpIHtcbiAgICAgIGlmICh2YWwyID09PSBudWxsIHx8IF90eXBlb2YodmFsMikgIT09ICdvYmplY3QnKSB7XG4gICAgICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBlcWVxZXFcbiAgICAgICAgcmV0dXJuIHZhbDEgPT0gdmFsMjtcbiAgICAgIH1cblxuICAgICAgcmV0dXJuIGZhbHNlO1xuICAgIH1cblxuICAgIGlmICh2YWwyID09PSBudWxsIHx8IF90eXBlb2YodmFsMikgIT09ICdvYmplY3QnKSB7XG4gICAgICByZXR1cm4gZmFsc2U7XG4gICAgfVxuICB9XG5cbiAgdmFyIHZhbDFUYWcgPSBvYmplY3RUb1N0cmluZyh2YWwxKTtcbiAgdmFyIHZhbDJUYWcgPSBvYmplY3RUb1N0cmluZyh2YWwyKTtcblxuICBpZiAodmFsMVRhZyAhPT0gdmFsMlRhZykge1xuICAgIHJldHVybiBmYWxzZTtcbiAgfVxuXG4gIGlmIChBcnJheS5pc0FycmF5KHZhbDEpKSB7XG4gICAgLy8gQ2hlY2sgZm9yIHNwYXJzZSBhcnJheXMgYW5kIGdlbmVyYWwgZmFzdCBwYXRoXG4gICAgaWYgKHZhbDEubGVuZ3RoICE9PSB2YWwyLmxlbmd0aCkge1xuICAgICAgcmV0dXJuIGZhbHNlO1xuICAgIH1cblxuICAgIHZhciBrZXlzMSA9IGdldE93bk5vbkluZGV4UHJvcGVydGllcyh2YWwxLCBPTkxZX0VOVU1FUkFCTEUpO1xuICAgIHZhciBrZXlzMiA9IGdldE93bk5vbkluZGV4UHJvcGVydGllcyh2YWwyLCBPTkxZX0VOVU1FUkFCTEUpO1xuXG4gICAgaWYgKGtleXMxLmxlbmd0aCAhPT0ga2V5czIubGVuZ3RoKSB7XG4gICAgICByZXR1cm4gZmFsc2U7XG4gICAgfVxuXG4gICAgcmV0dXJuIGtleUNoZWNrKHZhbDEsIHZhbDIsIHN0cmljdCwgbWVtb3MsIGtJc0FycmF5LCBrZXlzMSk7XG4gIH0gLy8gW2Jyb3dzZXJpZnldIFRoaXMgdHJpZ2dlcnMgb24gY2VydGFpbiB0eXBlcyBpbiBJRSAoTWFwL1NldCkgc28gd2UgZG9uJ3RcbiAgLy8gd2FuJ3QgdG8gZWFybHkgcmV0dXJuIG91dCBvZiB0aGUgcmVzdCBvZiB0aGUgY2hlY2tzLiBIb3dldmVyIHdlIGNhbiBjaGVja1xuICAvLyBpZiB0aGUgc2Vjb25kIHZhbHVlIGlzIG9uZSBvZiB0aGVzZSB2YWx1ZXMgYW5kIHRoZSBmaXJzdCBpc24ndC5cblxuXG4gIGlmICh2YWwxVGFnID09PSAnW29iamVjdCBPYmplY3RdJykge1xuICAgIC8vIHJldHVybiBrZXlDaGVjayh2YWwxLCB2YWwyLCBzdHJpY3QsIG1lbW9zLCBrTm9JdGVyYXRvcik7XG4gICAgaWYgKCFpc01hcCh2YWwxKSAmJiBpc01hcCh2YWwyKSB8fCAhaXNTZXQodmFsMSkgJiYgaXNTZXQodmFsMikpIHtcbiAgICAgIHJldHVybiBmYWxzZTtcbiAgICB9XG4gIH1cblxuICBpZiAoaXNEYXRlKHZhbDEpKSB7XG4gICAgaWYgKCFpc0RhdGUodmFsMikgfHwgRGF0ZS5wcm90b3R5cGUuZ2V0VGltZS5jYWxsKHZhbDEpICE9PSBEYXRlLnByb3RvdHlwZS5nZXRUaW1lLmNhbGwodmFsMikpIHtcbiAgICAgIHJldHVybiBmYWxzZTtcbiAgICB9XG4gIH0gZWxzZSBpZiAoaXNSZWdFeHAodmFsMSkpIHtcbiAgICBpZiAoIWlzUmVnRXhwKHZhbDIpIHx8ICFhcmVTaW1pbGFyUmVnRXhwcyh2YWwxLCB2YWwyKSkge1xuICAgICAgcmV0dXJuIGZhbHNlO1xuICAgIH1cbiAgfSBlbHNlIGlmIChpc05hdGl2ZUVycm9yKHZhbDEpIHx8IHZhbDEgaW5zdGFuY2VvZiBFcnJvcikge1xuICAgIC8vIERvIG5vdCBjb21wYXJlIHRoZSBzdGFjayBhcyBpdCBtaWdodCBkaWZmZXIgZXZlbiB0aG91Z2ggdGhlIGVycm9yIGl0c2VsZlxuICAgIC8vIGlzIG90aGVyd2lzZSBpZGVudGljYWwuXG4gICAgaWYgKHZhbDEubWVzc2FnZSAhPT0gdmFsMi5tZXNzYWdlIHx8IHZhbDEubmFtZSAhPT0gdmFsMi5uYW1lKSB7XG4gICAgICByZXR1cm4gZmFsc2U7XG4gICAgfVxuICB9IGVsc2UgaWYgKGlzQXJyYXlCdWZmZXJWaWV3KHZhbDEpKSB7XG4gICAgaWYgKCFzdHJpY3QgJiYgKGlzRmxvYXQzMkFycmF5KHZhbDEpIHx8IGlzRmxvYXQ2NEFycmF5KHZhbDEpKSkge1xuICAgICAgaWYgKCFhcmVTaW1pbGFyRmxvYXRBcnJheXModmFsMSwgdmFsMikpIHtcbiAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgICAgfVxuICAgIH0gZWxzZSBpZiAoIWFyZVNpbWlsYXJUeXBlZEFycmF5cyh2YWwxLCB2YWwyKSkge1xuICAgICAgcmV0dXJuIGZhbHNlO1xuICAgIH0gLy8gQnVmZmVyLmNvbXBhcmUgcmV0dXJucyB0cnVlLCBzbyB2YWwxLmxlbmd0aCA9PT0gdmFsMi5sZW5ndGguIElmIHRoZXkgYm90aFxuICAgIC8vIG9ubHkgY29udGFpbiBudW1lcmljIGtleXMsIHdlIGRvbid0IG5lZWQgdG8gZXhhbSBmdXJ0aGVyIHRoYW4gY2hlY2tpbmdcbiAgICAvLyB0aGUgc3ltYm9scy5cblxuXG4gICAgdmFyIF9rZXlzID0gZ2V0T3duTm9uSW5kZXhQcm9wZXJ0aWVzKHZhbDEsIE9OTFlfRU5VTUVSQUJMRSk7XG5cbiAgICB2YXIgX2tleXMyID0gZ2V0T3duTm9uSW5kZXhQcm9wZXJ0aWVzKHZhbDIsIE9OTFlfRU5VTUVSQUJMRSk7XG5cbiAgICBpZiAoX2tleXMubGVuZ3RoICE9PSBfa2V5czIubGVuZ3RoKSB7XG4gICAgICByZXR1cm4gZmFsc2U7XG4gICAgfVxuXG4gICAgcmV0dXJuIGtleUNoZWNrKHZhbDEsIHZhbDIsIHN0cmljdCwgbWVtb3MsIGtOb0l0ZXJhdG9yLCBfa2V5cyk7XG4gIH0gZWxzZSBpZiAoaXNTZXQodmFsMSkpIHtcbiAgICBpZiAoIWlzU2V0KHZhbDIpIHx8IHZhbDEuc2l6ZSAhPT0gdmFsMi5zaXplKSB7XG4gICAgICByZXR1cm4gZmFsc2U7XG4gICAgfVxuXG4gICAgcmV0dXJuIGtleUNoZWNrKHZhbDEsIHZhbDIsIHN0cmljdCwgbWVtb3MsIGtJc1NldCk7XG4gIH0gZWxzZSBpZiAoaXNNYXAodmFsMSkpIHtcbiAgICBpZiAoIWlzTWFwKHZhbDIpIHx8IHZhbDEuc2l6ZSAhPT0gdmFsMi5zaXplKSB7XG4gICAgICByZXR1cm4gZmFsc2U7XG4gICAgfVxuXG4gICAgcmV0dXJuIGtleUNoZWNrKHZhbDEsIHZhbDIsIHN0cmljdCwgbWVtb3MsIGtJc01hcCk7XG4gIH0gZWxzZSBpZiAoaXNBbnlBcnJheUJ1ZmZlcih2YWwxKSkge1xuICAgIGlmICghYXJlRXF1YWxBcnJheUJ1ZmZlcnModmFsMSwgdmFsMikpIHtcbiAgICAgIHJldHVybiBmYWxzZTtcbiAgICB9XG4gIH0gZWxzZSBpZiAoaXNCb3hlZFByaW1pdGl2ZSh2YWwxKSAmJiAhaXNFcXVhbEJveGVkUHJpbWl0aXZlKHZhbDEsIHZhbDIpKSB7XG4gICAgcmV0dXJuIGZhbHNlO1xuICB9XG5cbiAgcmV0dXJuIGtleUNoZWNrKHZhbDEsIHZhbDIsIHN0cmljdCwgbWVtb3MsIGtOb0l0ZXJhdG9yKTtcbn1cblxuZnVuY3Rpb24gZ2V0RW51bWVyYWJsZXModmFsLCBrZXlzKSB7XG4gIHJldHVybiBrZXlzLmZpbHRlcihmdW5jdGlvbiAoaykge1xuICAgIHJldHVybiBwcm9wZXJ0eUlzRW51bWVyYWJsZSh2YWwsIGspO1xuICB9KTtcbn1cblxuZnVuY3Rpb24ga2V5Q2hlY2sodmFsMSwgdmFsMiwgc3RyaWN0LCBtZW1vcywgaXRlcmF0aW9uVHlwZSwgYUtleXMpIHtcbiAgLy8gRm9yIGFsbCByZW1haW5pbmcgT2JqZWN0IHBhaXJzLCBpbmNsdWRpbmcgQXJyYXksIG9iamVjdHMgYW5kIE1hcHMsXG4gIC8vIGVxdWl2YWxlbmNlIGlzIGRldGVybWluZWQgYnkgaGF2aW5nOlxuICAvLyBhKSBUaGUgc2FtZSBudW1iZXIgb2Ygb3duZWQgZW51bWVyYWJsZSBwcm9wZXJ0aWVzXG4gIC8vIGIpIFRoZSBzYW1lIHNldCBvZiBrZXlzL2luZGV4ZXMgKGFsdGhvdWdoIG5vdCBuZWNlc3NhcmlseSB0aGUgc2FtZSBvcmRlcilcbiAgLy8gYykgRXF1aXZhbGVudCB2YWx1ZXMgZm9yIGV2ZXJ5IGNvcnJlc3BvbmRpbmcga2V5L2luZGV4XG4gIC8vIGQpIEZvciBTZXRzIGFuZCBNYXBzLCBlcXVhbCBjb250ZW50c1xuICAvLyBOb3RlOiB0aGlzIGFjY291bnRzIGZvciBib3RoIG5hbWVkIGFuZCBpbmRleGVkIHByb3BlcnRpZXMgb24gQXJyYXlzLlxuICBpZiAoYXJndW1lbnRzLmxlbmd0aCA9PT0gNSkge1xuICAgIGFLZXlzID0gT2JqZWN0LmtleXModmFsMSk7XG4gICAgdmFyIGJLZXlzID0gT2JqZWN0LmtleXModmFsMik7IC8vIFRoZSBwYWlyIG11c3QgaGF2ZSB0aGUgc2FtZSBudW1iZXIgb2Ygb3duZWQgcHJvcGVydGllcy5cblxuICAgIGlmIChhS2V5cy5sZW5ndGggIT09IGJLZXlzLmxlbmd0aCkge1xuICAgICAgcmV0dXJuIGZhbHNlO1xuICAgIH1cbiAgfSAvLyBDaGVhcCBrZXkgdGVzdFxuXG5cbiAgdmFyIGkgPSAwO1xuXG4gIGZvciAoOyBpIDwgYUtleXMubGVuZ3RoOyBpKyspIHtcbiAgICBpZiAoIWhhc093blByb3BlcnR5KHZhbDIsIGFLZXlzW2ldKSkge1xuICAgICAgcmV0dXJuIGZhbHNlO1xuICAgIH1cbiAgfVxuXG4gIGlmIChzdHJpY3QgJiYgYXJndW1lbnRzLmxlbmd0aCA9PT0gNSkge1xuICAgIHZhciBzeW1ib2xLZXlzQSA9IG9iamVjdEdldE93blByb3BlcnR5U3ltYm9scyh2YWwxKTtcblxuICAgIGlmIChzeW1ib2xLZXlzQS5sZW5ndGggIT09IDApIHtcbiAgICAgIHZhciBjb3VudCA9IDA7XG5cbiAgICAgIGZvciAoaSA9IDA7IGkgPCBzeW1ib2xLZXlzQS5sZW5ndGg7IGkrKykge1xuICAgICAgICB2YXIga2V5ID0gc3ltYm9sS2V5c0FbaV07XG5cbiAgICAgICAgaWYgKHByb3BlcnR5SXNFbnVtZXJhYmxlKHZhbDEsIGtleSkpIHtcbiAgICAgICAgICBpZiAoIXByb3BlcnR5SXNFbnVtZXJhYmxlKHZhbDIsIGtleSkpIHtcbiAgICAgICAgICAgIHJldHVybiBmYWxzZTtcbiAgICAgICAgICB9XG5cbiAgICAgICAgICBhS2V5cy5wdXNoKGtleSk7XG4gICAgICAgICAgY291bnQrKztcbiAgICAgICAgfSBlbHNlIGlmIChwcm9wZXJ0eUlzRW51bWVyYWJsZSh2YWwyLCBrZXkpKSB7XG4gICAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgICAgICB9XG4gICAgICB9XG5cbiAgICAgIHZhciBzeW1ib2xLZXlzQiA9IG9iamVjdEdldE93blByb3BlcnR5U3ltYm9scyh2YWwyKTtcblxuICAgICAgaWYgKHN5bWJvbEtleXNBLmxlbmd0aCAhPT0gc3ltYm9sS2V5c0IubGVuZ3RoICYmIGdldEVudW1lcmFibGVzKHZhbDIsIHN5bWJvbEtleXNCKS5sZW5ndGggIT09IGNvdW50KSB7XG4gICAgICAgIHJldHVybiBmYWxzZTtcbiAgICAgIH1cbiAgICB9IGVsc2Uge1xuICAgICAgdmFyIF9zeW1ib2xLZXlzQiA9IG9iamVjdEdldE93blByb3BlcnR5U3ltYm9scyh2YWwyKTtcblxuICAgICAgaWYgKF9zeW1ib2xLZXlzQi5sZW5ndGggIT09IDAgJiYgZ2V0RW51bWVyYWJsZXModmFsMiwgX3N5bWJvbEtleXNCKS5sZW5ndGggIT09IDApIHtcbiAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgICAgfVxuICAgIH1cbiAgfVxuXG4gIGlmIChhS2V5cy5sZW5ndGggPT09IDAgJiYgKGl0ZXJhdGlvblR5cGUgPT09IGtOb0l0ZXJhdG9yIHx8IGl0ZXJhdGlvblR5cGUgPT09IGtJc0FycmF5ICYmIHZhbDEubGVuZ3RoID09PSAwIHx8IHZhbDEuc2l6ZSA9PT0gMCkpIHtcbiAgICByZXR1cm4gdHJ1ZTtcbiAgfSAvLyBVc2UgbWVtb3MgdG8gaGFuZGxlIGN5Y2xlcy5cblxuXG4gIGlmIChtZW1vcyA9PT0gdW5kZWZpbmVkKSB7XG4gICAgbWVtb3MgPSB7XG4gICAgICB2YWwxOiBuZXcgTWFwKCksXG4gICAgICB2YWwyOiBuZXcgTWFwKCksXG4gICAgICBwb3NpdGlvbjogMFxuICAgIH07XG4gIH0gZWxzZSB7XG4gICAgLy8gV2UgcHJldmVudCB1cCB0byB0d28gbWFwLmhhcyh4KSBjYWxscyBieSBkaXJlY3RseSByZXRyaWV2aW5nIHRoZSB2YWx1ZVxuICAgIC8vIGFuZCBjaGVja2luZyBmb3IgdW5kZWZpbmVkLiBUaGUgbWFwIGNhbiBvbmx5IGNvbnRhaW4gbnVtYmVycywgc28gaXQgaXNcbiAgICAvLyBzYWZlIHRvIGNoZWNrIGZvciB1bmRlZmluZWQgb25seS5cbiAgICB2YXIgdmFsMk1lbW9BID0gbWVtb3MudmFsMS5nZXQodmFsMSk7XG5cbiAgICBpZiAodmFsMk1lbW9BICE9PSB1bmRlZmluZWQpIHtcbiAgICAgIHZhciB2YWwyTWVtb0IgPSBtZW1vcy52YWwyLmdldCh2YWwyKTtcblxuICAgICAgaWYgKHZhbDJNZW1vQiAhPT0gdW5kZWZpbmVkKSB7XG4gICAgICAgIHJldHVybiB2YWwyTWVtb0EgPT09IHZhbDJNZW1vQjtcbiAgICAgIH1cbiAgICB9XG5cbiAgICBtZW1vcy5wb3NpdGlvbisrO1xuICB9XG5cbiAgbWVtb3MudmFsMS5zZXQodmFsMSwgbWVtb3MucG9zaXRpb24pO1xuICBtZW1vcy52YWwyLnNldCh2YWwyLCBtZW1vcy5wb3NpdGlvbik7XG4gIHZhciBhcmVFcSA9IG9iakVxdWl2KHZhbDEsIHZhbDIsIHN0cmljdCwgYUtleXMsIG1lbW9zLCBpdGVyYXRpb25UeXBlKTtcbiAgbWVtb3MudmFsMS5kZWxldGUodmFsMSk7XG4gIG1lbW9zLnZhbDIuZGVsZXRlKHZhbDIpO1xuICByZXR1cm4gYXJlRXE7XG59XG5cbmZ1bmN0aW9uIHNldEhhc0VxdWFsRWxlbWVudChzZXQsIHZhbDEsIHN0cmljdCwgbWVtbykge1xuICAvLyBHbyBsb29raW5nLlxuICB2YXIgc2V0VmFsdWVzID0gYXJyYXlGcm9tU2V0KHNldCk7XG5cbiAgZm9yICh2YXIgaSA9IDA7IGkgPCBzZXRWYWx1ZXMubGVuZ3RoOyBpKyspIHtcbiAgICB2YXIgdmFsMiA9IHNldFZhbHVlc1tpXTtcblxuICAgIGlmIChpbm5lckRlZXBFcXVhbCh2YWwxLCB2YWwyLCBzdHJpY3QsIG1lbW8pKSB7XG4gICAgICAvLyBSZW1vdmUgdGhlIG1hdGNoaW5nIGVsZW1lbnQgdG8gbWFrZSBzdXJlIHdlIGRvIG5vdCBjaGVjayB0aGF0IGFnYWluLlxuICAgICAgc2V0LmRlbGV0ZSh2YWwyKTtcbiAgICAgIHJldHVybiB0cnVlO1xuICAgIH1cbiAgfVxuXG4gIHJldHVybiBmYWxzZTtcbn0gLy8gU2VlIGh0dHBzOi8vZGV2ZWxvcGVyLm1vemlsbGEub3JnL2VuLVVTL2RvY3MvV2ViL0phdmFTY3JpcHQvRXF1YWxpdHlfY29tcGFyaXNvbnNfYW5kX3NhbWVuZXNzI0xvb3NlX2VxdWFsaXR5X3VzaW5nXG4vLyBTYWRseSBpdCBpcyBub3QgcG9zc2libGUgdG8gZGV0ZWN0IGNvcnJlc3BvbmRpbmcgdmFsdWVzIHByb3Blcmx5IGluIGNhc2UgdGhlXG4vLyB0eXBlIGlzIGEgc3RyaW5nLCBudW1iZXIsIGJpZ2ludCBvciBib29sZWFuLiBUaGUgcmVhc29uIGlzIHRoYXQgdGhvc2UgdmFsdWVzXG4vLyBjYW4gbWF0Y2ggbG90cyBvZiBkaWZmZXJlbnQgc3RyaW5nIHZhbHVlcyAoZS5nLiwgMW4gPT0gJyswMDAwMScpLlxuXG5cbmZ1bmN0aW9uIGZpbmRMb29zZU1hdGNoaW5nUHJpbWl0aXZlcyhwcmltKSB7XG4gIHN3aXRjaCAoX3R5cGVvZihwcmltKSkge1xuICAgIGNhc2UgJ3VuZGVmaW5lZCc6XG4gICAgICByZXR1cm4gbnVsbDtcblxuICAgIGNhc2UgJ29iamVjdCc6XG4gICAgICAvLyBPbmx5IHBhc3MgaW4gbnVsbCBhcyBvYmplY3QhXG4gICAgICByZXR1cm4gdW5kZWZpbmVkO1xuXG4gICAgY2FzZSAnc3ltYm9sJzpcbiAgICAgIHJldHVybiBmYWxzZTtcblxuICAgIGNhc2UgJ3N0cmluZyc6XG4gICAgICBwcmltID0gK3ByaW07XG4gICAgLy8gTG9vc2UgZXF1YWwgZW50cmllcyBleGlzdCBvbmx5IGlmIHRoZSBzdHJpbmcgaXMgcG9zc2libGUgdG8gY29udmVydCB0b1xuICAgIC8vIGEgcmVndWxhciBudW1iZXIgYW5kIG5vdCBOYU4uXG4gICAgLy8gRmFsbCB0aHJvdWdoXG5cbiAgICBjYXNlICdudW1iZXInOlxuICAgICAgaWYgKG51bWJlcklzTmFOKHByaW0pKSB7XG4gICAgICAgIHJldHVybiBmYWxzZTtcbiAgICAgIH1cblxuICB9XG5cbiAgcmV0dXJuIHRydWU7XG59XG5cbmZ1bmN0aW9uIHNldE1pZ2h0SGF2ZUxvb3NlUHJpbShhLCBiLCBwcmltKSB7XG4gIHZhciBhbHRWYWx1ZSA9IGZpbmRMb29zZU1hdGNoaW5nUHJpbWl0aXZlcyhwcmltKTtcbiAgaWYgKGFsdFZhbHVlICE9IG51bGwpIHJldHVybiBhbHRWYWx1ZTtcbiAgcmV0dXJuIGIuaGFzKGFsdFZhbHVlKSAmJiAhYS5oYXMoYWx0VmFsdWUpO1xufVxuXG5mdW5jdGlvbiBtYXBNaWdodEhhdmVMb29zZVByaW0oYSwgYiwgcHJpbSwgaXRlbSwgbWVtbykge1xuICB2YXIgYWx0VmFsdWUgPSBmaW5kTG9vc2VNYXRjaGluZ1ByaW1pdGl2ZXMocHJpbSk7XG5cbiAgaWYgKGFsdFZhbHVlICE9IG51bGwpIHtcbiAgICByZXR1cm4gYWx0VmFsdWU7XG4gIH1cblxuICB2YXIgY3VyQiA9IGIuZ2V0KGFsdFZhbHVlKTtcblxuICBpZiAoY3VyQiA9PT0gdW5kZWZpbmVkICYmICFiLmhhcyhhbHRWYWx1ZSkgfHwgIWlubmVyRGVlcEVxdWFsKGl0ZW0sIGN1ckIsIGZhbHNlLCBtZW1vKSkge1xuICAgIHJldHVybiBmYWxzZTtcbiAgfVxuXG4gIHJldHVybiAhYS5oYXMoYWx0VmFsdWUpICYmIGlubmVyRGVlcEVxdWFsKGl0ZW0sIGN1ckIsIGZhbHNlLCBtZW1vKTtcbn1cblxuZnVuY3Rpb24gc2V0RXF1aXYoYSwgYiwgc3RyaWN0LCBtZW1vKSB7XG4gIC8vIFRoaXMgaXMgYSBsYXppbHkgaW5pdGlhdGVkIFNldCBvZiBlbnRyaWVzIHdoaWNoIGhhdmUgdG8gYmUgY29tcGFyZWRcbiAgLy8gcGFpcndpc2UuXG4gIHZhciBzZXQgPSBudWxsO1xuICB2YXIgYVZhbHVlcyA9IGFycmF5RnJvbVNldChhKTtcblxuICBmb3IgKHZhciBpID0gMDsgaSA8IGFWYWx1ZXMubGVuZ3RoOyBpKyspIHtcbiAgICB2YXIgdmFsID0gYVZhbHVlc1tpXTsgLy8gTm90ZTogQ2hlY2tpbmcgZm9yIHRoZSBvYmplY3RzIGZpcnN0IGltcHJvdmVzIHRoZSBwZXJmb3JtYW5jZSBmb3Igb2JqZWN0XG4gICAgLy8gaGVhdnkgc2V0cyBidXQgaXQgaXMgYSBtaW5vciBzbG93IGRvd24gZm9yIHByaW1pdGl2ZXMuIEFzIHRoZXkgYXJlIGZhc3RcbiAgICAvLyB0byBjaGVjayB0aGlzIGltcHJvdmVzIHRoZSB3b3JzdCBjYXNlIHNjZW5hcmlvIGluc3RlYWQuXG5cbiAgICBpZiAoX3R5cGVvZih2YWwpID09PSAnb2JqZWN0JyAmJiB2YWwgIT09IG51bGwpIHtcbiAgICAgIGlmIChzZXQgPT09IG51bGwpIHtcbiAgICAgICAgc2V0ID0gbmV3IFNldCgpO1xuICAgICAgfSAvLyBJZiB0aGUgc3BlY2lmaWVkIHZhbHVlIGRvZXNuJ3QgZXhpc3QgaW4gdGhlIHNlY29uZCBzZXQgaXRzIGFuIG5vdCBudWxsXG4gICAgICAvLyBvYmplY3QgKG9yIG5vbiBzdHJpY3Qgb25seTogYSBub3QgbWF0Y2hpbmcgcHJpbWl0aXZlKSB3ZSdsbCBuZWVkIHRvIGdvXG4gICAgICAvLyBodW50aW5nIGZvciBzb21ldGhpbmcgdGhhdHMgZGVlcC0oc3RyaWN0LSllcXVhbCB0byBpdC4gVG8gbWFrZSB0aGlzXG4gICAgICAvLyBPKG4gbG9nIG4pIGNvbXBsZXhpdHkgd2UgaGF2ZSB0byBjb3B5IHRoZXNlIHZhbHVlcyBpbiBhIG5ldyBzZXQgZmlyc3QuXG5cblxuICAgICAgc2V0LmFkZCh2YWwpO1xuICAgIH0gZWxzZSBpZiAoIWIuaGFzKHZhbCkpIHtcbiAgICAgIGlmIChzdHJpY3QpIHJldHVybiBmYWxzZTsgLy8gRmFzdCBwYXRoIHRvIGRldGVjdCBtaXNzaW5nIHN0cmluZywgc3ltYm9sLCB1bmRlZmluZWQgYW5kIG51bGwgdmFsdWVzLlxuXG4gICAgICBpZiAoIXNldE1pZ2h0SGF2ZUxvb3NlUHJpbShhLCBiLCB2YWwpKSB7XG4gICAgICAgIHJldHVybiBmYWxzZTtcbiAgICAgIH1cblxuICAgICAgaWYgKHNldCA9PT0gbnVsbCkge1xuICAgICAgICBzZXQgPSBuZXcgU2V0KCk7XG4gICAgICB9XG5cbiAgICAgIHNldC5hZGQodmFsKTtcbiAgICB9XG4gIH1cblxuICBpZiAoc2V0ICE9PSBudWxsKSB7XG4gICAgdmFyIGJWYWx1ZXMgPSBhcnJheUZyb21TZXQoYik7XG5cbiAgICBmb3IgKHZhciBfaSA9IDA7IF9pIDwgYlZhbHVlcy5sZW5ndGg7IF9pKyspIHtcbiAgICAgIHZhciBfdmFsID0gYlZhbHVlc1tfaV07IC8vIFdlIGhhdmUgdG8gY2hlY2sgaWYgYSBwcmltaXRpdmUgdmFsdWUgaXMgYWxyZWFkeVxuICAgICAgLy8gbWF0Y2hpbmcgYW5kIG9ubHkgaWYgaXQncyBub3QsIGdvIGh1bnRpbmcgZm9yIGl0LlxuXG4gICAgICBpZiAoX3R5cGVvZihfdmFsKSA9PT0gJ29iamVjdCcgJiYgX3ZhbCAhPT0gbnVsbCkge1xuICAgICAgICBpZiAoIXNldEhhc0VxdWFsRWxlbWVudChzZXQsIF92YWwsIHN0cmljdCwgbWVtbykpIHJldHVybiBmYWxzZTtcbiAgICAgIH0gZWxzZSBpZiAoIXN0cmljdCAmJiAhYS5oYXMoX3ZhbCkgJiYgIXNldEhhc0VxdWFsRWxlbWVudChzZXQsIF92YWwsIHN0cmljdCwgbWVtbykpIHtcbiAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgICAgfVxuICAgIH1cblxuICAgIHJldHVybiBzZXQuc2l6ZSA9PT0gMDtcbiAgfVxuXG4gIHJldHVybiB0cnVlO1xufVxuXG5mdW5jdGlvbiBtYXBIYXNFcXVhbEVudHJ5KHNldCwgbWFwLCBrZXkxLCBpdGVtMSwgc3RyaWN0LCBtZW1vKSB7XG4gIC8vIFRvIGJlIGFibGUgdG8gaGFuZGxlIGNhc2VzIGxpa2U6XG4gIC8vICAgTWFwKFtbe30sICdhJ10sIFt7fSwgJ2InXV0pIHZzIE1hcChbW3t9LCAnYiddLCBbe30sICdhJ11dKVxuICAvLyAuLi4gd2UgbmVlZCB0byBjb25zaWRlciAqYWxsKiBtYXRjaGluZyBrZXlzLCBub3QganVzdCB0aGUgZmlyc3Qgd2UgZmluZC5cbiAgdmFyIHNldFZhbHVlcyA9IGFycmF5RnJvbVNldChzZXQpO1xuXG4gIGZvciAodmFyIGkgPSAwOyBpIDwgc2V0VmFsdWVzLmxlbmd0aDsgaSsrKSB7XG4gICAgdmFyIGtleTIgPSBzZXRWYWx1ZXNbaV07XG5cbiAgICBpZiAoaW5uZXJEZWVwRXF1YWwoa2V5MSwga2V5Miwgc3RyaWN0LCBtZW1vKSAmJiBpbm5lckRlZXBFcXVhbChpdGVtMSwgbWFwLmdldChrZXkyKSwgc3RyaWN0LCBtZW1vKSkge1xuICAgICAgc2V0LmRlbGV0ZShrZXkyKTtcbiAgICAgIHJldHVybiB0cnVlO1xuICAgIH1cbiAgfVxuXG4gIHJldHVybiBmYWxzZTtcbn1cblxuZnVuY3Rpb24gbWFwRXF1aXYoYSwgYiwgc3RyaWN0LCBtZW1vKSB7XG4gIHZhciBzZXQgPSBudWxsO1xuICB2YXIgYUVudHJpZXMgPSBhcnJheUZyb21NYXAoYSk7XG5cbiAgZm9yICh2YXIgaSA9IDA7IGkgPCBhRW50cmllcy5sZW5ndGg7IGkrKykge1xuICAgIHZhciBfYUVudHJpZXMkaSA9IF9zbGljZWRUb0FycmF5KGFFbnRyaWVzW2ldLCAyKSxcbiAgICAgICAga2V5ID0gX2FFbnRyaWVzJGlbMF0sXG4gICAgICAgIGl0ZW0xID0gX2FFbnRyaWVzJGlbMV07XG5cbiAgICBpZiAoX3R5cGVvZihrZXkpID09PSAnb2JqZWN0JyAmJiBrZXkgIT09IG51bGwpIHtcbiAgICAgIGlmIChzZXQgPT09IG51bGwpIHtcbiAgICAgICAgc2V0ID0gbmV3IFNldCgpO1xuICAgICAgfVxuXG4gICAgICBzZXQuYWRkKGtleSk7XG4gICAgfSBlbHNlIHtcbiAgICAgIC8vIEJ5IGRpcmVjdGx5IHJldHJpZXZpbmcgdGhlIHZhbHVlIHdlIHByZXZlbnQgYW5vdGhlciBiLmhhcyhrZXkpIGNoZWNrIGluXG4gICAgICAvLyBhbG1vc3QgYWxsIHBvc3NpYmxlIGNhc2VzLlxuICAgICAgdmFyIGl0ZW0yID0gYi5nZXQoa2V5KTtcblxuICAgICAgaWYgKGl0ZW0yID09PSB1bmRlZmluZWQgJiYgIWIuaGFzKGtleSkgfHwgIWlubmVyRGVlcEVxdWFsKGl0ZW0xLCBpdGVtMiwgc3RyaWN0LCBtZW1vKSkge1xuICAgICAgICBpZiAoc3RyaWN0KSByZXR1cm4gZmFsc2U7IC8vIEZhc3QgcGF0aCB0byBkZXRlY3QgbWlzc2luZyBzdHJpbmcsIHN5bWJvbCwgdW5kZWZpbmVkIGFuZCBudWxsXG4gICAgICAgIC8vIGtleXMuXG5cbiAgICAgICAgaWYgKCFtYXBNaWdodEhhdmVMb29zZVByaW0oYSwgYiwga2V5LCBpdGVtMSwgbWVtbykpIHJldHVybiBmYWxzZTtcblxuICAgICAgICBpZiAoc2V0ID09PSBudWxsKSB7XG4gICAgICAgICAgc2V0ID0gbmV3IFNldCgpO1xuICAgICAgICB9XG5cbiAgICAgICAgc2V0LmFkZChrZXkpO1xuICAgICAgfVxuICAgIH1cbiAgfVxuXG4gIGlmIChzZXQgIT09IG51bGwpIHtcbiAgICB2YXIgYkVudHJpZXMgPSBhcnJheUZyb21NYXAoYik7XG5cbiAgICBmb3IgKHZhciBfaTIgPSAwOyBfaTIgPCBiRW50cmllcy5sZW5ndGg7IF9pMisrKSB7XG4gICAgICB2YXIgX2JFbnRyaWVzJF9pID0gX3NsaWNlZFRvQXJyYXkoYkVudHJpZXNbX2kyXSwgMiksXG4gICAgICAgICAga2V5ID0gX2JFbnRyaWVzJF9pWzBdLFxuICAgICAgICAgIGl0ZW0gPSBfYkVudHJpZXMkX2lbMV07XG5cbiAgICAgIGlmIChfdHlwZW9mKGtleSkgPT09ICdvYmplY3QnICYmIGtleSAhPT0gbnVsbCkge1xuICAgICAgICBpZiAoIW1hcEhhc0VxdWFsRW50cnkoc2V0LCBhLCBrZXksIGl0ZW0sIHN0cmljdCwgbWVtbykpIHJldHVybiBmYWxzZTtcbiAgICAgIH0gZWxzZSBpZiAoIXN0cmljdCAmJiAoIWEuaGFzKGtleSkgfHwgIWlubmVyRGVlcEVxdWFsKGEuZ2V0KGtleSksIGl0ZW0sIGZhbHNlLCBtZW1vKSkgJiYgIW1hcEhhc0VxdWFsRW50cnkoc2V0LCBhLCBrZXksIGl0ZW0sIGZhbHNlLCBtZW1vKSkge1xuICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgICB9XG4gICAgfVxuXG4gICAgcmV0dXJuIHNldC5zaXplID09PSAwO1xuICB9XG5cbiAgcmV0dXJuIHRydWU7XG59XG5cbmZ1bmN0aW9uIG9iakVxdWl2KGEsIGIsIHN0cmljdCwga2V5cywgbWVtb3MsIGl0ZXJhdGlvblR5cGUpIHtcbiAgLy8gU2V0cyBhbmQgbWFwcyBkb24ndCBoYXZlIHRoZWlyIGVudHJpZXMgYWNjZXNzaWJsZSB2aWEgbm9ybWFsIG9iamVjdFxuICAvLyBwcm9wZXJ0aWVzLlxuICB2YXIgaSA9IDA7XG5cbiAgaWYgKGl0ZXJhdGlvblR5cGUgPT09IGtJc1NldCkge1xuICAgIGlmICghc2V0RXF1aXYoYSwgYiwgc3RyaWN0LCBtZW1vcykpIHtcbiAgICAgIHJldHVybiBmYWxzZTtcbiAgICB9XG4gIH0gZWxzZSBpZiAoaXRlcmF0aW9uVHlwZSA9PT0ga0lzTWFwKSB7XG4gICAgaWYgKCFtYXBFcXVpdihhLCBiLCBzdHJpY3QsIG1lbW9zKSkge1xuICAgICAgcmV0dXJuIGZhbHNlO1xuICAgIH1cbiAgfSBlbHNlIGlmIChpdGVyYXRpb25UeXBlID09PSBrSXNBcnJheSkge1xuICAgIGZvciAoOyBpIDwgYS5sZW5ndGg7IGkrKykge1xuICAgICAgaWYgKGhhc093blByb3BlcnR5KGEsIGkpKSB7XG4gICAgICAgIGlmICghaGFzT3duUHJvcGVydHkoYiwgaSkgfHwgIWlubmVyRGVlcEVxdWFsKGFbaV0sIGJbaV0sIHN0cmljdCwgbWVtb3MpKSB7XG4gICAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgICAgICB9XG4gICAgICB9IGVsc2UgaWYgKGhhc093blByb3BlcnR5KGIsIGkpKSB7XG4gICAgICAgIHJldHVybiBmYWxzZTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIC8vIEFycmF5IGlzIHNwYXJzZS5cbiAgICAgICAgdmFyIGtleXNBID0gT2JqZWN0LmtleXMoYSk7XG5cbiAgICAgICAgZm9yICg7IGkgPCBrZXlzQS5sZW5ndGg7IGkrKykge1xuICAgICAgICAgIHZhciBrZXkgPSBrZXlzQVtpXTtcblxuICAgICAgICAgIGlmICghaGFzT3duUHJvcGVydHkoYiwga2V5KSB8fCAhaW5uZXJEZWVwRXF1YWwoYVtrZXldLCBiW2tleV0sIHN0cmljdCwgbWVtb3MpKSB7XG4gICAgICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgICAgICAgfVxuICAgICAgICB9XG5cbiAgICAgICAgaWYgKGtleXNBLmxlbmd0aCAhPT0gT2JqZWN0LmtleXMoYikubGVuZ3RoKSB7XG4gICAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgICAgICB9XG5cbiAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgICB9XG4gICAgfVxuICB9IC8vIFRoZSBwYWlyIG11c3QgaGF2ZSBlcXVpdmFsZW50IHZhbHVlcyBmb3IgZXZlcnkgY29ycmVzcG9uZGluZyBrZXkuXG4gIC8vIFBvc3NpYmx5IGV4cGVuc2l2ZSBkZWVwIHRlc3Q6XG5cblxuICBmb3IgKGkgPSAwOyBpIDwga2V5cy5sZW5ndGg7IGkrKykge1xuICAgIHZhciBfa2V5ID0ga2V5c1tpXTtcblxuICAgIGlmICghaW5uZXJEZWVwRXF1YWwoYVtfa2V5XSwgYltfa2V5XSwgc3RyaWN0LCBtZW1vcykpIHtcbiAgICAgIHJldHVybiBmYWxzZTtcbiAgICB9XG4gIH1cblxuICByZXR1cm4gdHJ1ZTtcbn1cblxuZnVuY3Rpb24gaXNEZWVwRXF1YWwodmFsMSwgdmFsMikge1xuICByZXR1cm4gaW5uZXJEZWVwRXF1YWwodmFsMSwgdmFsMiwga0xvb3NlKTtcbn1cblxuZnVuY3Rpb24gaXNEZWVwU3RyaWN0RXF1YWwodmFsMSwgdmFsMikge1xuICByZXR1cm4gaW5uZXJEZWVwRXF1YWwodmFsMSwgdmFsMiwga1N0cmljdCk7XG59XG5cbm1vZHVsZS5leHBvcnRzID0ge1xuICBpc0RlZXBFcXVhbDogaXNEZWVwRXF1YWwsXG4gIGlzRGVlcFN0cmljdEVxdWFsOiBpc0RlZXBTdHJpY3RFcXVhbFxufTsiLCIndXNlIHN0cmljdCc7XG5cbnZhciBHZXRJbnRyaW5zaWMgPSByZXF1aXJlKCdnZXQtaW50cmluc2ljJyk7XG5cbnZhciBjYWxsQmluZCA9IHJlcXVpcmUoJy4vJyk7XG5cbnZhciAkaW5kZXhPZiA9IGNhbGxCaW5kKEdldEludHJpbnNpYygnU3RyaW5nLnByb3RvdHlwZS5pbmRleE9mJykpO1xuXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIGNhbGxCb3VuZEludHJpbnNpYyhuYW1lLCBhbGxvd01pc3NpbmcpIHtcblx0dmFyIGludHJpbnNpYyA9IEdldEludHJpbnNpYyhuYW1lLCAhIWFsbG93TWlzc2luZyk7XG5cdGlmICh0eXBlb2YgaW50cmluc2ljID09PSAnZnVuY3Rpb24nICYmICRpbmRleE9mKG5hbWUsICcucHJvdG90eXBlLicpID4gLTEpIHtcblx0XHRyZXR1cm4gY2FsbEJpbmQoaW50cmluc2ljKTtcblx0fVxuXHRyZXR1cm4gaW50cmluc2ljO1xufTtcbiIsIid1c2Ugc3RyaWN0JztcblxudmFyIGJpbmQgPSByZXF1aXJlKCdmdW5jdGlvbi1iaW5kJyk7XG52YXIgR2V0SW50cmluc2ljID0gcmVxdWlyZSgnZ2V0LWludHJpbnNpYycpO1xuXG52YXIgJGFwcGx5ID0gR2V0SW50cmluc2ljKCclRnVuY3Rpb24ucHJvdG90eXBlLmFwcGx5JScpO1xudmFyICRjYWxsID0gR2V0SW50cmluc2ljKCclRnVuY3Rpb24ucHJvdG90eXBlLmNhbGwlJyk7XG52YXIgJHJlZmxlY3RBcHBseSA9IEdldEludHJpbnNpYygnJVJlZmxlY3QuYXBwbHklJywgdHJ1ZSkgfHwgYmluZC5jYWxsKCRjYWxsLCAkYXBwbHkpO1xuXG52YXIgJGdPUEQgPSBHZXRJbnRyaW5zaWMoJyVPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yJScsIHRydWUpO1xudmFyICRkZWZpbmVQcm9wZXJ0eSA9IEdldEludHJpbnNpYygnJU9iamVjdC5kZWZpbmVQcm9wZXJ0eSUnLCB0cnVlKTtcbnZhciAkbWF4ID0gR2V0SW50cmluc2ljKCclTWF0aC5tYXglJyk7XG5cbmlmICgkZGVmaW5lUHJvcGVydHkpIHtcblx0dHJ5IHtcblx0XHQkZGVmaW5lUHJvcGVydHkoe30sICdhJywgeyB2YWx1ZTogMSB9KTtcblx0fSBjYXRjaCAoZSkge1xuXHRcdC8vIElFIDggaGFzIGEgYnJva2VuIGRlZmluZVByb3BlcnR5XG5cdFx0JGRlZmluZVByb3BlcnR5ID0gbnVsbDtcblx0fVxufVxuXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIGNhbGxCaW5kKG9yaWdpbmFsRnVuY3Rpb24pIHtcblx0dmFyIGZ1bmMgPSAkcmVmbGVjdEFwcGx5KGJpbmQsICRjYWxsLCBhcmd1bWVudHMpO1xuXHRpZiAoJGdPUEQgJiYgJGRlZmluZVByb3BlcnR5KSB7XG5cdFx0dmFyIGRlc2MgPSAkZ09QRChmdW5jLCAnbGVuZ3RoJyk7XG5cdFx0aWYgKGRlc2MuY29uZmlndXJhYmxlKSB7XG5cdFx0XHQvLyBvcmlnaW5hbCBsZW5ndGgsIHBsdXMgdGhlIHJlY2VpdmVyLCBtaW51cyBhbnkgYWRkaXRpb25hbCBhcmd1bWVudHMgKGFmdGVyIHRoZSByZWNlaXZlcilcblx0XHRcdCRkZWZpbmVQcm9wZXJ0eShcblx0XHRcdFx0ZnVuYyxcblx0XHRcdFx0J2xlbmd0aCcsXG5cdFx0XHRcdHsgdmFsdWU6IDEgKyAkbWF4KDAsIG9yaWdpbmFsRnVuY3Rpb24ubGVuZ3RoIC0gKGFyZ3VtZW50cy5sZW5ndGggLSAxKSkgfVxuXHRcdFx0KTtcblx0XHR9XG5cdH1cblx0cmV0dXJuIGZ1bmM7XG59O1xuXG52YXIgYXBwbHlCaW5kID0gZnVuY3Rpb24gYXBwbHlCaW5kKCkge1xuXHRyZXR1cm4gJHJlZmxlY3RBcHBseShiaW5kLCAkYXBwbHksIGFyZ3VtZW50cyk7XG59O1xuXG5pZiAoJGRlZmluZVByb3BlcnR5KSB7XG5cdCRkZWZpbmVQcm9wZXJ0eShtb2R1bGUuZXhwb3J0cywgJ2FwcGx5JywgeyB2YWx1ZTogYXBwbHlCaW5kIH0pO1xufSBlbHNlIHtcblx0bW9kdWxlLmV4cG9ydHMuYXBwbHkgPSBhcHBseUJpbmQ7XG59XG4iLCIvKmdsb2JhbCB3aW5kb3csIGdsb2JhbCovXG52YXIgdXRpbCA9IHJlcXVpcmUoXCJ1dGlsXCIpXG52YXIgYXNzZXJ0ID0gcmVxdWlyZShcImFzc2VydFwiKVxuZnVuY3Rpb24gbm93KCkgeyByZXR1cm4gbmV3IERhdGUoKS5nZXRUaW1lKCkgfVxuXG52YXIgc2xpY2UgPSBBcnJheS5wcm90b3R5cGUuc2xpY2VcbnZhciBjb25zb2xlXG52YXIgdGltZXMgPSB7fVxuXG5pZiAodHlwZW9mIGdsb2JhbCAhPT0gXCJ1bmRlZmluZWRcIiAmJiBnbG9iYWwuY29uc29sZSkge1xuICAgIGNvbnNvbGUgPSBnbG9iYWwuY29uc29sZVxufSBlbHNlIGlmICh0eXBlb2Ygd2luZG93ICE9PSBcInVuZGVmaW5lZFwiICYmIHdpbmRvdy5jb25zb2xlKSB7XG4gICAgY29uc29sZSA9IHdpbmRvdy5jb25zb2xlXG59IGVsc2Uge1xuICAgIGNvbnNvbGUgPSB7fVxufVxuXG52YXIgZnVuY3Rpb25zID0gW1xuICAgIFtsb2csIFwibG9nXCJdLFxuICAgIFtpbmZvLCBcImluZm9cIl0sXG4gICAgW3dhcm4sIFwid2FyblwiXSxcbiAgICBbZXJyb3IsIFwiZXJyb3JcIl0sXG4gICAgW3RpbWUsIFwidGltZVwiXSxcbiAgICBbdGltZUVuZCwgXCJ0aW1lRW5kXCJdLFxuICAgIFt0cmFjZSwgXCJ0cmFjZVwiXSxcbiAgICBbZGlyLCBcImRpclwiXSxcbiAgICBbY29uc29sZUFzc2VydCwgXCJhc3NlcnRcIl1cbl1cblxuZm9yICh2YXIgaSA9IDA7IGkgPCBmdW5jdGlvbnMubGVuZ3RoOyBpKyspIHtcbiAgICB2YXIgdHVwbGUgPSBmdW5jdGlvbnNbaV1cbiAgICB2YXIgZiA9IHR1cGxlWzBdXG4gICAgdmFyIG5hbWUgPSB0dXBsZVsxXVxuXG4gICAgaWYgKCFjb25zb2xlW25hbWVdKSB7XG4gICAgICAgIGNvbnNvbGVbbmFtZV0gPSBmXG4gICAgfVxufVxuXG5tb2R1bGUuZXhwb3J0cyA9IGNvbnNvbGVcblxuZnVuY3Rpb24gbG9nKCkge31cblxuZnVuY3Rpb24gaW5mbygpIHtcbiAgICBjb25zb2xlLmxvZy5hcHBseShjb25zb2xlLCBhcmd1bWVudHMpXG59XG5cbmZ1bmN0aW9uIHdhcm4oKSB7XG4gICAgY29uc29sZS5sb2cuYXBwbHkoY29uc29sZSwgYXJndW1lbnRzKVxufVxuXG5mdW5jdGlvbiBlcnJvcigpIHtcbiAgICBjb25zb2xlLndhcm4uYXBwbHkoY29uc29sZSwgYXJndW1lbnRzKVxufVxuXG5mdW5jdGlvbiB0aW1lKGxhYmVsKSB7XG4gICAgdGltZXNbbGFiZWxdID0gbm93KClcbn1cblxuZnVuY3Rpb24gdGltZUVuZChsYWJlbCkge1xuICAgIHZhciB0aW1lID0gdGltZXNbbGFiZWxdXG4gICAgaWYgKCF0aW1lKSB7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcihcIk5vIHN1Y2ggbGFiZWw6IFwiICsgbGFiZWwpXG4gICAgfVxuXG4gICAgZGVsZXRlIHRpbWVzW2xhYmVsXVxuICAgIHZhciBkdXJhdGlvbiA9IG5vdygpIC0gdGltZVxuICAgIGNvbnNvbGUubG9nKGxhYmVsICsgXCI6IFwiICsgZHVyYXRpb24gKyBcIm1zXCIpXG59XG5cbmZ1bmN0aW9uIHRyYWNlKCkge1xuICAgIHZhciBlcnIgPSBuZXcgRXJyb3IoKVxuICAgIGVyci5uYW1lID0gXCJUcmFjZVwiXG4gICAgZXJyLm1lc3NhZ2UgPSB1dGlsLmZvcm1hdC5hcHBseShudWxsLCBhcmd1bWVudHMpXG4gICAgY29uc29sZS5lcnJvcihlcnIuc3RhY2spXG59XG5cbmZ1bmN0aW9uIGRpcihvYmplY3QpIHtcbiAgICBjb25zb2xlLmxvZyh1dGlsLmluc3BlY3Qob2JqZWN0KSArIFwiXFxuXCIpXG59XG5cbmZ1bmN0aW9uIGNvbnNvbGVBc3NlcnQoZXhwcmVzc2lvbikge1xuICAgIGlmICghZXhwcmVzc2lvbikge1xuICAgICAgICB2YXIgYXJyID0gc2xpY2UuY2FsbChhcmd1bWVudHMsIDEpXG4gICAgICAgIGFzc2VydC5vayhmYWxzZSwgdXRpbC5mb3JtYXQuYXBwbHkobnVsbCwgYXJyKSlcbiAgICB9XG59XG4iLCIvLyBJbXBvcnRzXG5pbXBvcnQgX19fQ1NTX0xPQURFUl9BUElfU09VUkNFTUFQX0lNUE9SVF9fXyBmcm9tIFwiLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL3NvdXJjZU1hcHMuanNcIjtcbmltcG9ydCBfX19DU1NfTE9BREVSX0FQSV9JTVBPUlRfX18gZnJvbSBcIi4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9hcGkuanNcIjtcbnZhciBfX19DU1NfTE9BREVSX0VYUE9SVF9fXyA9IF9fX0NTU19MT0FERVJfQVBJX0lNUE9SVF9fXyhfX19DU1NfTE9BREVSX0FQSV9TT1VSQ0VNQVBfSU1QT1JUX19fKTtcbi8vIE1vZHVsZVxuX19fQ1NTX0xPQURFUl9FWFBPUlRfX18ucHVzaChbbW9kdWxlLmlkLCBcImh0bWx7aGVpZ2h0OjEwMHZoO3dpZHRoOjEwMHZ3O292ZXJmbG93OmhpZGRlbjtmb250LWZhbWlseTpzeXN0ZW0tdWksLWFwcGxlLXN5c3RlbSxCbGlua01hY1N5c3RlbUZvbnQsXFxcIlNlZ29lIFVJXFxcIixSb2JvdG8sT3h5Z2VuLFVidW50dSxDYW50YXJlbGwsXFxcIk9wZW4gU2Fuc1xcXCIsXFxcIkhlbHZldGljYSBOZXVlXFxcIixzYW5zLXNlcmlmfWJvZHl7aGVpZ2h0OjEwMCU7d2lkdGg6MTAwJX1odG1sLGJvZHl7bWFyZ2luOjA7cGFkZGluZzowO2ZvbnQtc2l6ZToxNHB4fWNvZGV7Zm9udC1mYW1pbHk6c291cmNlLWNvZGUtcHJvLE1lbmxvLE1vbmFjbyxDb25zb2xhcyxcXFwiQ291cmllciBOZXdcXFwiLG1vbm9zcGFjZX0jcm9vdHtoZWlnaHQ6MTAwJTt3aWR0aDoxMDAlO21hcmdpbjowO292ZXJmbG93OmhpZGRlbn0udGl0bGUtMXtmb250LXNpemU6MjRweDttYXJnaW46MH0udGl0bGUtMntmb250LXNpemU6MThweDtjb2xvcjojMDAwO21hcmdpbjowfS50aXRsZS0ze2ZvbnQtc2l6ZToxOHB4O2ZvbnQtd2VpZ2h0OjYwMDtjb2xvcjojMDAwO21hcmdpbjowfS50aXRsZS00e2ZvbnQtc2l6ZToxNnB4O2ZvbnQtd2VpZ2h0OjYwMDtjb2xvcjojMDAwO21hcmdpbjowfS5lb2ctY2FyZHtjdXJzb3I6cG9pbnRlcjtiYWNrZ3JvdW5kOnJnYmEoMCwwLDAsMCk7aGVpZ2h0OjIxOHB4O3dpZHRoOjE3N3B4O2JveC1zaGFkb3c6MnB4IDJweCA0cHggMnB4ICNjY2M7Ym9yZGVyLXJhZGl1czo4cHh9LmVvZy1jYXJkOmhvdmVye2JhY2tncm91bmQ6cmdiYSgyMzgsMjM4LDIzOCwuNil9LmVvZy1jYXJkX19pbWd7aGVpZ2h0OjE3N3B4O3dpZHRoOjE3N3B4O2JvcmRlci1yYWRpdXM6OHB4IDhweCAwIDB9LmVvZy1jYXJkX19jYXB0aW9ue21hcmdpbi10b3A6OHB4O2Rpc3BsYXk6YmxvY2s7Zm9udC1zaXplOjE0cHg7Y29sb3I6IzAwMDtjdXJzb3I6cG9pbnRlcjt0ZXh0LWFsaWduOmNlbnRlcn0uZW9nLWNhcmQtaW1ne2N1cnNvcjpwb2ludGVyO2JhY2tncm91bmQ6cmdiYSgwLDAsMCwwKTttYXJnaW46MjBweCAyMHB4IDIwcHggMDtoZWlnaHQ6NTUwcHg7d2lkdGg6NDYwcHg7Ym94LXNoYWRvdzoycHggMnB4IDRweCAycHggI2NjYztib3JkZXItcmFkaXVzOjhweDt0ZXh0LWFsaWduOmNlbnRlcn0uZW9nLWNhcmQtaW1nOm5vdCg6bnRoLWNoaWxkKDNuKzEpKXttYXJnaW4tbGVmdDoyMHB4fS5lb2ctY2FyZC1pbWdfX2ltZ3toZWlnaHQ6NDAwcHg7d2lkdGg6NDAwcHg7Ym9yZGVyLXJhZGl1czo4cHggOHB4IDAgMH0uZW9nLWNhcmQtaW1nX19jYXB0aW9ue21hcmdpbi10b3A6OHB4O2Rpc3BsYXk6YmxvY2s7Zm9udC1zaXplOjE0cHg7Y29sb3I6IzAwMDtjdXJzb3I6cG9pbnRlcjt0ZXh0LWFsaWduOmNlbnRlcn0uZW9nLWJyZWFkY3J1bWJze2Rpc3BsYXk6ZmxleDthbGlnbi1pdGVtczpjZW50ZXI7aGVpZ2h0OjMxcHg7cGFkZGluZzoxMHB4IDA7bWFyZ2luLXRvcDoyMHB4O3BhZGRpbmctbGVmdDoyMHB4fS5lb2ctYnJlYWRjcnVtYnNfX2l0ZW17Zm9udC1zaXplOjE4cHg7Zm9udC13ZWlnaHQ6NjAwO2NvbG9yOiMwMDA7dGV4dC1kZWNvcmF0aW9uOm5vbmV9LmVvZy1icmVhZGNydW1ic19faXRlbS5hY3RpdmV7Y29sb3I6IzAwYmNkNH0uZW9nLWxpc3QtZGF0YV9fbGFiZWx7Zm9udC13ZWlnaHQ6NjAwO2ZvbnQtc2l6ZToxNHB4O2Rpc3BsYXk6aW5saW5lLWJsb2NrfS5lb2ctbGlzdC1kYXRhX192YWx1ZXtmb250LXNpemU6MTRweDtkaXNwbGF5OmlubGluZS1ibG9jazttYXJnaW4tbGVmdDoyMHB4fS5lb2ctYnRue2hlaWdodDozNXB4O2JvcmRlcjpub25lO3BhZGRpbmc6OHB4IDE2cHg7Ym9yZGVyLXJhZGl1czo1cHh9LmVvZy1idG4tcHJpbWFyeXtiYWNrZ3JvdW5kOiMwMGJjZDQ7Y29sb3I6I2ZmZn0uZW9nLWhlYWRlcntoZWlnaHQ6MjZweDt3aWR0aDoxMDAlO2JhY2tncm91bmQ6IzAwYmNkNDtwYWRkaW5nOjEzcHggMjBweH0uZW9nLWhlYWRlcl9fdGl0bGV7bWFyZ2luOjA7Y29sb3I6I2ZmZjtmb250LXdlaWdodDpib2xkO2ZvbnQtc2l6ZToyMHB4fS5lb2ctbWFpbntwYWRkaW5nOjIwcHg7aGVpZ2h0OmNhbGMoMTAwJSAtIDE3M3B4KTt3aWR0aDpjYWxjKDEwMCUgLSAyMHB4KX0uZW9nLWdyaWR7ZGlzcGxheTpmbGV4O2ZsZXgtd3JhcDp3cmFwO3BhZGRpbmc6MS40Mjg1NzE0Mjg2cmVtIDA7aGVpZ2h0OmNhbGMoMTAwJSAtIDIwcHgpO3dpZHRoOjEwMCU7b3ZlcmZsb3cteTphdXRvfS5tYS0we21hcmdpbjowcHggIWltcG9ydGFudH0ubXQtMHttYXJnaW4tdG9wOjBweCAhaW1wb3J0YW50fS5tYi0we21hcmdpbi1ib3R0b206MHB4ICFpbXBvcnRhbnR9Lm1sLTB7bWFyZ2luLWxlZnQ6MHB4ICFpbXBvcnRhbnR9Lm1yLTB7bWFyZ2luLXJpZ2h0OjBweCAhaW1wb3J0YW50fS5teC0we21hcmdpbi1sZWZ0OjBweCAhaW1wb3J0YW50O21hcmdpbi1yaWdodDowcHggIWltcG9ydGFudH0ubXktMHttYXJnaW4tdG9wOjBweCAhaW1wb3J0YW50O21hcmdpbi1ib3R0b206MHB4ICFpbXBvcnRhbnR9Lm1hLW4we21hcmdpbjowcHggIWltcG9ydGFudH0ubXQtbjB7bWFyZ2luLXRvcDowcHggIWltcG9ydGFudH0ubWItbjB7bWFyZ2luLWJvdHRvbTowcHggIWltcG9ydGFudH0ubWwtbjB7bWFyZ2luLWxlZnQ6MHB4ICFpbXBvcnRhbnR9Lm1yLW4we21hcmdpbi1yaWdodDowcHggIWltcG9ydGFudH0ubXgtbjB7bWFyZ2luLWxlZnQ6MHB4ICFpbXBvcnRhbnQ7bWFyZ2luLXJpZ2h0OjBweCAhaW1wb3J0YW50fS5teS1uMHttYXJnaW4tdG9wOjBweCAhaW1wb3J0YW50O21hcmdpbi1ib3R0b206MHB4ICFpbXBvcnRhbnR9Lm1hLXNtLTB7bWFyZ2luOjBweCAhaW1wb3J0YW50fS5tdC1zbS0we21hcmdpbi10b3A6MHB4ICFpbXBvcnRhbnR9Lm10LXNtLW4we21hcmdpbi10b3A6MHB4ICFpbXBvcnRhbnR9Lm1iLXNtLTB7bWFyZ2luLWJvdHRvbTowcHggIWltcG9ydGFudH0ubWwtc20tMHttYXJnaW4tbGVmdDowcHggIWltcG9ydGFudH0ubXItc20tMHttYXJnaW4tcmlnaHQ6MHB4ICFpbXBvcnRhbnR9Lm14LXNtLTB7bWFyZ2luLWxlZnQ6MHB4ICFpbXBvcnRhbnQ7bWFyZ2luLXJpZ2h0OjBweCAhaW1wb3J0YW50fS5teS1zbS0we21hcmdpbi10b3A6MHB4ICFpbXBvcnRhbnQ7bWFyZ2luLWJvdHRvbTowcHggIWltcG9ydGFudH0ucGEtMHtwYWRkaW5nOjBweCAhaW1wb3J0YW50fS5wdC0we3BhZGRpbmctdG9wOjBweCAhaW1wb3J0YW50fS5wYi0we3BhZGRpbmctYm90dG9tOjBweCAhaW1wb3J0YW50fS5wbC0we3BhZGRpbmctbGVmdDowcHggIWltcG9ydGFudH0ucHItMHtwYWRkaW5nLXJpZ2h0OjBweCAhaW1wb3J0YW50fS5weC0we3BhZGRpbmctbGVmdDowcHggIWltcG9ydGFudDtwYWRkaW5nLXJpZ2h0OjBweCAhaW1wb3J0YW50fS5weS0we3BhZGRpbmctdG9wOjBweCAhaW1wb3J0YW50O3BhZGRpbmctYm90dG9tOjBweCAhaW1wb3J0YW50fS5tYS0xe21hcmdpbjo4cHggIWltcG9ydGFudH0ubXQtMXttYXJnaW4tdG9wOjhweCAhaW1wb3J0YW50fS5tYi0xe21hcmdpbi1ib3R0b206OHB4ICFpbXBvcnRhbnR9Lm1sLTF7bWFyZ2luLWxlZnQ6OHB4ICFpbXBvcnRhbnR9Lm1yLTF7bWFyZ2luLXJpZ2h0OjhweCAhaW1wb3J0YW50fS5teC0xe21hcmdpbi1sZWZ0OjhweCAhaW1wb3J0YW50O21hcmdpbi1yaWdodDo4cHggIWltcG9ydGFudH0ubXktMXttYXJnaW4tdG9wOjhweCAhaW1wb3J0YW50O21hcmdpbi1ib3R0b206OHB4ICFpbXBvcnRhbnR9Lm1hLW4xe21hcmdpbjotOHB4ICFpbXBvcnRhbnR9Lm10LW4xe21hcmdpbi10b3A6LThweCAhaW1wb3J0YW50fS5tYi1uMXttYXJnaW4tYm90dG9tOi04cHggIWltcG9ydGFudH0ubWwtbjF7bWFyZ2luLWxlZnQ6LThweCAhaW1wb3J0YW50fS5tci1uMXttYXJnaW4tcmlnaHQ6LThweCAhaW1wb3J0YW50fS5teC1uMXttYXJnaW4tbGVmdDotOHB4ICFpbXBvcnRhbnQ7bWFyZ2luLXJpZ2h0Oi04cHggIWltcG9ydGFudH0ubXktbjF7bWFyZ2luLXRvcDotOHB4ICFpbXBvcnRhbnQ7bWFyZ2luLWJvdHRvbTotOHB4ICFpbXBvcnRhbnR9Lm1hLXNtLTF7bWFyZ2luOjRweCAhaW1wb3J0YW50fS5tdC1zbS0xe21hcmdpbi10b3A6NHB4ICFpbXBvcnRhbnR9Lm10LXNtLW4xe21hcmdpbi10b3A6LTRweCAhaW1wb3J0YW50fS5tYi1zbS0xe21hcmdpbi1ib3R0b206NHB4ICFpbXBvcnRhbnR9Lm1sLXNtLTF7bWFyZ2luLWxlZnQ6NHB4ICFpbXBvcnRhbnR9Lm1yLXNtLTF7bWFyZ2luLXJpZ2h0OjRweCAhaW1wb3J0YW50fS5teC1zbS0xe21hcmdpbi1sZWZ0OjRweCAhaW1wb3J0YW50O21hcmdpbi1yaWdodDo0cHggIWltcG9ydGFudH0ubXktc20tMXttYXJnaW4tdG9wOjRweCAhaW1wb3J0YW50O21hcmdpbi1ib3R0b206NHB4ICFpbXBvcnRhbnR9LnBhLTF7cGFkZGluZzo4cHggIWltcG9ydGFudH0ucHQtMXtwYWRkaW5nLXRvcDo4cHggIWltcG9ydGFudH0ucGItMXtwYWRkaW5nLWJvdHRvbTo4cHggIWltcG9ydGFudH0ucGwtMXtwYWRkaW5nLWxlZnQ6OHB4ICFpbXBvcnRhbnR9LnByLTF7cGFkZGluZy1yaWdodDo4cHggIWltcG9ydGFudH0ucHgtMXtwYWRkaW5nLWxlZnQ6OHB4ICFpbXBvcnRhbnQ7cGFkZGluZy1yaWdodDo4cHggIWltcG9ydGFudH0ucHktMXtwYWRkaW5nLXRvcDo4cHggIWltcG9ydGFudDtwYWRkaW5nLWJvdHRvbTo4cHggIWltcG9ydGFudH0ubWEtMnttYXJnaW46MTZweCAhaW1wb3J0YW50fS5tdC0ye21hcmdpbi10b3A6MTZweCAhaW1wb3J0YW50fS5tYi0ye21hcmdpbi1ib3R0b206MTZweCAhaW1wb3J0YW50fS5tbC0ye21hcmdpbi1sZWZ0OjE2cHggIWltcG9ydGFudH0ubXItMnttYXJnaW4tcmlnaHQ6MTZweCAhaW1wb3J0YW50fS5teC0ye21hcmdpbi1sZWZ0OjE2cHggIWltcG9ydGFudDttYXJnaW4tcmlnaHQ6MTZweCAhaW1wb3J0YW50fS5teS0ye21hcmdpbi10b3A6MTZweCAhaW1wb3J0YW50O21hcmdpbi1ib3R0b206MTZweCAhaW1wb3J0YW50fS5tYS1uMnttYXJnaW46LTE2cHggIWltcG9ydGFudH0ubXQtbjJ7bWFyZ2luLXRvcDotMTZweCAhaW1wb3J0YW50fS5tYi1uMnttYXJnaW4tYm90dG9tOi0xNnB4ICFpbXBvcnRhbnR9Lm1sLW4ye21hcmdpbi1sZWZ0Oi0xNnB4ICFpbXBvcnRhbnR9Lm1yLW4ye21hcmdpbi1yaWdodDotMTZweCAhaW1wb3J0YW50fS5teC1uMnttYXJnaW4tbGVmdDotMTZweCAhaW1wb3J0YW50O21hcmdpbi1yaWdodDotMTZweCAhaW1wb3J0YW50fS5teS1uMnttYXJnaW4tdG9wOi0xNnB4ICFpbXBvcnRhbnQ7bWFyZ2luLWJvdHRvbTotMTZweCAhaW1wb3J0YW50fS5tYS1zbS0ye21hcmdpbjo4cHggIWltcG9ydGFudH0ubXQtc20tMnttYXJnaW4tdG9wOjhweCAhaW1wb3J0YW50fS5tdC1zbS1uMnttYXJnaW4tdG9wOi04cHggIWltcG9ydGFudH0ubWItc20tMnttYXJnaW4tYm90dG9tOjhweCAhaW1wb3J0YW50fS5tbC1zbS0ye21hcmdpbi1sZWZ0OjhweCAhaW1wb3J0YW50fS5tci1zbS0ye21hcmdpbi1yaWdodDo4cHggIWltcG9ydGFudH0ubXgtc20tMnttYXJnaW4tbGVmdDo4cHggIWltcG9ydGFudDttYXJnaW4tcmlnaHQ6OHB4ICFpbXBvcnRhbnR9Lm15LXNtLTJ7bWFyZ2luLXRvcDo4cHggIWltcG9ydGFudDttYXJnaW4tYm90dG9tOjhweCAhaW1wb3J0YW50fS5wYS0ye3BhZGRpbmc6MTZweCAhaW1wb3J0YW50fS5wdC0ye3BhZGRpbmctdG9wOjE2cHggIWltcG9ydGFudH0ucGItMntwYWRkaW5nLWJvdHRvbToxNnB4ICFpbXBvcnRhbnR9LnBsLTJ7cGFkZGluZy1sZWZ0OjE2cHggIWltcG9ydGFudH0ucHItMntwYWRkaW5nLXJpZ2h0OjE2cHggIWltcG9ydGFudH0ucHgtMntwYWRkaW5nLWxlZnQ6MTZweCAhaW1wb3J0YW50O3BhZGRpbmctcmlnaHQ6MTZweCAhaW1wb3J0YW50fS5weS0ye3BhZGRpbmctdG9wOjE2cHggIWltcG9ydGFudDtwYWRkaW5nLWJvdHRvbToxNnB4ICFpbXBvcnRhbnR9Lm1hLTN7bWFyZ2luOjI0cHggIWltcG9ydGFudH0ubXQtM3ttYXJnaW4tdG9wOjI0cHggIWltcG9ydGFudH0ubWItM3ttYXJnaW4tYm90dG9tOjI0cHggIWltcG9ydGFudH0ubWwtM3ttYXJnaW4tbGVmdDoyNHB4ICFpbXBvcnRhbnR9Lm1yLTN7bWFyZ2luLXJpZ2h0OjI0cHggIWltcG9ydGFudH0ubXgtM3ttYXJnaW4tbGVmdDoyNHB4ICFpbXBvcnRhbnQ7bWFyZ2luLXJpZ2h0OjI0cHggIWltcG9ydGFudH0ubXktM3ttYXJnaW4tdG9wOjI0cHggIWltcG9ydGFudDttYXJnaW4tYm90dG9tOjI0cHggIWltcG9ydGFudH0ubWEtbjN7bWFyZ2luOi0yNHB4ICFpbXBvcnRhbnR9Lm10LW4ze21hcmdpbi10b3A6LTI0cHggIWltcG9ydGFudH0ubWItbjN7bWFyZ2luLWJvdHRvbTotMjRweCAhaW1wb3J0YW50fS5tbC1uM3ttYXJnaW4tbGVmdDotMjRweCAhaW1wb3J0YW50fS5tci1uM3ttYXJnaW4tcmlnaHQ6LTI0cHggIWltcG9ydGFudH0ubXgtbjN7bWFyZ2luLWxlZnQ6LTI0cHggIWltcG9ydGFudDttYXJnaW4tcmlnaHQ6LTI0cHggIWltcG9ydGFudH0ubXktbjN7bWFyZ2luLXRvcDotMjRweCAhaW1wb3J0YW50O21hcmdpbi1ib3R0b206LTI0cHggIWltcG9ydGFudH0ubWEtc20tM3ttYXJnaW46MTJweCAhaW1wb3J0YW50fS5tdC1zbS0ze21hcmdpbi10b3A6MTJweCAhaW1wb3J0YW50fS5tdC1zbS1uM3ttYXJnaW4tdG9wOi0xMnB4ICFpbXBvcnRhbnR9Lm1iLXNtLTN7bWFyZ2luLWJvdHRvbToxMnB4ICFpbXBvcnRhbnR9Lm1sLXNtLTN7bWFyZ2luLWxlZnQ6MTJweCAhaW1wb3J0YW50fS5tci1zbS0ze21hcmdpbi1yaWdodDoxMnB4ICFpbXBvcnRhbnR9Lm14LXNtLTN7bWFyZ2luLWxlZnQ6MTJweCAhaW1wb3J0YW50O21hcmdpbi1yaWdodDoxMnB4ICFpbXBvcnRhbnR9Lm15LXNtLTN7bWFyZ2luLXRvcDoxMnB4ICFpbXBvcnRhbnQ7bWFyZ2luLWJvdHRvbToxMnB4ICFpbXBvcnRhbnR9LnBhLTN7cGFkZGluZzoyNHB4ICFpbXBvcnRhbnR9LnB0LTN7cGFkZGluZy10b3A6MjRweCAhaW1wb3J0YW50fS5wYi0ze3BhZGRpbmctYm90dG9tOjI0cHggIWltcG9ydGFudH0ucGwtM3twYWRkaW5nLWxlZnQ6MjRweCAhaW1wb3J0YW50fS5wci0ze3BhZGRpbmctcmlnaHQ6MjRweCAhaW1wb3J0YW50fS5weC0ze3BhZGRpbmctbGVmdDoyNHB4ICFpbXBvcnRhbnQ7cGFkZGluZy1yaWdodDoyNHB4ICFpbXBvcnRhbnR9LnB5LTN7cGFkZGluZy10b3A6MjRweCAhaW1wb3J0YW50O3BhZGRpbmctYm90dG9tOjI0cHggIWltcG9ydGFudH0ubWEtNHttYXJnaW46MzJweCAhaW1wb3J0YW50fS5tdC00e21hcmdpbi10b3A6MzJweCAhaW1wb3J0YW50fS5tYi00e21hcmdpbi1ib3R0b206MzJweCAhaW1wb3J0YW50fS5tbC00e21hcmdpbi1sZWZ0OjMycHggIWltcG9ydGFudH0ubXItNHttYXJnaW4tcmlnaHQ6MzJweCAhaW1wb3J0YW50fS5teC00e21hcmdpbi1sZWZ0OjMycHggIWltcG9ydGFudDttYXJnaW4tcmlnaHQ6MzJweCAhaW1wb3J0YW50fS5teS00e21hcmdpbi10b3A6MzJweCAhaW1wb3J0YW50O21hcmdpbi1ib3R0b206MzJweCAhaW1wb3J0YW50fS5tYS1uNHttYXJnaW46LTMycHggIWltcG9ydGFudH0ubXQtbjR7bWFyZ2luLXRvcDotMzJweCAhaW1wb3J0YW50fS5tYi1uNHttYXJnaW4tYm90dG9tOi0zMnB4ICFpbXBvcnRhbnR9Lm1sLW40e21hcmdpbi1sZWZ0Oi0zMnB4ICFpbXBvcnRhbnR9Lm1yLW40e21hcmdpbi1yaWdodDotMzJweCAhaW1wb3J0YW50fS5teC1uNHttYXJnaW4tbGVmdDotMzJweCAhaW1wb3J0YW50O21hcmdpbi1yaWdodDotMzJweCAhaW1wb3J0YW50fS5teS1uNHttYXJnaW4tdG9wOi0zMnB4ICFpbXBvcnRhbnQ7bWFyZ2luLWJvdHRvbTotMzJweCAhaW1wb3J0YW50fS5tYS1zbS00e21hcmdpbjoxNnB4ICFpbXBvcnRhbnR9Lm10LXNtLTR7bWFyZ2luLXRvcDoxNnB4ICFpbXBvcnRhbnR9Lm10LXNtLW40e21hcmdpbi10b3A6LTE2cHggIWltcG9ydGFudH0ubWItc20tNHttYXJnaW4tYm90dG9tOjE2cHggIWltcG9ydGFudH0ubWwtc20tNHttYXJnaW4tbGVmdDoxNnB4ICFpbXBvcnRhbnR9Lm1yLXNtLTR7bWFyZ2luLXJpZ2h0OjE2cHggIWltcG9ydGFudH0ubXgtc20tNHttYXJnaW4tbGVmdDoxNnB4ICFpbXBvcnRhbnQ7bWFyZ2luLXJpZ2h0OjE2cHggIWltcG9ydGFudH0ubXktc20tNHttYXJnaW4tdG9wOjE2cHggIWltcG9ydGFudDttYXJnaW4tYm90dG9tOjE2cHggIWltcG9ydGFudH0ucGEtNHtwYWRkaW5nOjMycHggIWltcG9ydGFudH0ucHQtNHtwYWRkaW5nLXRvcDozMnB4ICFpbXBvcnRhbnR9LnBiLTR7cGFkZGluZy1ib3R0b206MzJweCAhaW1wb3J0YW50fS5wbC00e3BhZGRpbmctbGVmdDozMnB4ICFpbXBvcnRhbnR9LnByLTR7cGFkZGluZy1yaWdodDozMnB4ICFpbXBvcnRhbnR9LnB4LTR7cGFkZGluZy1sZWZ0OjMycHggIWltcG9ydGFudDtwYWRkaW5nLXJpZ2h0OjMycHggIWltcG9ydGFudH0ucHktNHtwYWRkaW5nLXRvcDozMnB4ICFpbXBvcnRhbnQ7cGFkZGluZy1ib3R0b206MzJweCAhaW1wb3J0YW50fS5tYS01e21hcmdpbjo0MHB4ICFpbXBvcnRhbnR9Lm10LTV7bWFyZ2luLXRvcDo0MHB4ICFpbXBvcnRhbnR9Lm1iLTV7bWFyZ2luLWJvdHRvbTo0MHB4ICFpbXBvcnRhbnR9Lm1sLTV7bWFyZ2luLWxlZnQ6NDBweCAhaW1wb3J0YW50fS5tci01e21hcmdpbi1yaWdodDo0MHB4ICFpbXBvcnRhbnR9Lm14LTV7bWFyZ2luLWxlZnQ6NDBweCAhaW1wb3J0YW50O21hcmdpbi1yaWdodDo0MHB4ICFpbXBvcnRhbnR9Lm15LTV7bWFyZ2luLXRvcDo0MHB4ICFpbXBvcnRhbnQ7bWFyZ2luLWJvdHRvbTo0MHB4ICFpbXBvcnRhbnR9Lm1hLW41e21hcmdpbjotNDBweCAhaW1wb3J0YW50fS5tdC1uNXttYXJnaW4tdG9wOi00MHB4ICFpbXBvcnRhbnR9Lm1iLW41e21hcmdpbi1ib3R0b206LTQwcHggIWltcG9ydGFudH0ubWwtbjV7bWFyZ2luLWxlZnQ6LTQwcHggIWltcG9ydGFudH0ubXItbjV7bWFyZ2luLXJpZ2h0Oi00MHB4ICFpbXBvcnRhbnR9Lm14LW41e21hcmdpbi1sZWZ0Oi00MHB4ICFpbXBvcnRhbnQ7bWFyZ2luLXJpZ2h0Oi00MHB4ICFpbXBvcnRhbnR9Lm15LW41e21hcmdpbi10b3A6LTQwcHggIWltcG9ydGFudDttYXJnaW4tYm90dG9tOi00MHB4ICFpbXBvcnRhbnR9Lm1hLXNtLTV7bWFyZ2luOjIwcHggIWltcG9ydGFudH0ubXQtc20tNXttYXJnaW4tdG9wOjIwcHggIWltcG9ydGFudH0ubXQtc20tbjV7bWFyZ2luLXRvcDotMjBweCAhaW1wb3J0YW50fS5tYi1zbS01e21hcmdpbi1ib3R0b206MjBweCAhaW1wb3J0YW50fS5tbC1zbS01e21hcmdpbi1sZWZ0OjIwcHggIWltcG9ydGFudH0ubXItc20tNXttYXJnaW4tcmlnaHQ6MjBweCAhaW1wb3J0YW50fS5teC1zbS01e21hcmdpbi1sZWZ0OjIwcHggIWltcG9ydGFudDttYXJnaW4tcmlnaHQ6MjBweCAhaW1wb3J0YW50fS5teS1zbS01e21hcmdpbi10b3A6MjBweCAhaW1wb3J0YW50O21hcmdpbi1ib3R0b206MjBweCAhaW1wb3J0YW50fS5wYS01e3BhZGRpbmc6NDBweCAhaW1wb3J0YW50fS5wdC01e3BhZGRpbmctdG9wOjQwcHggIWltcG9ydGFudH0ucGItNXtwYWRkaW5nLWJvdHRvbTo0MHB4ICFpbXBvcnRhbnR9LnBsLTV7cGFkZGluZy1sZWZ0OjQwcHggIWltcG9ydGFudH0ucHItNXtwYWRkaW5nLXJpZ2h0OjQwcHggIWltcG9ydGFudH0ucHgtNXtwYWRkaW5nLWxlZnQ6NDBweCAhaW1wb3J0YW50O3BhZGRpbmctcmlnaHQ6NDBweCAhaW1wb3J0YW50fS5weS01e3BhZGRpbmctdG9wOjQwcHggIWltcG9ydGFudDtwYWRkaW5nLWJvdHRvbTo0MHB4ICFpbXBvcnRhbnR9Lm1hLTZ7bWFyZ2luOjQ4cHggIWltcG9ydGFudH0ubXQtNnttYXJnaW4tdG9wOjQ4cHggIWltcG9ydGFudH0ubWItNnttYXJnaW4tYm90dG9tOjQ4cHggIWltcG9ydGFudH0ubWwtNnttYXJnaW4tbGVmdDo0OHB4ICFpbXBvcnRhbnR9Lm1yLTZ7bWFyZ2luLXJpZ2h0OjQ4cHggIWltcG9ydGFudH0ubXgtNnttYXJnaW4tbGVmdDo0OHB4ICFpbXBvcnRhbnQ7bWFyZ2luLXJpZ2h0OjQ4cHggIWltcG9ydGFudH0ubXktNnttYXJnaW4tdG9wOjQ4cHggIWltcG9ydGFudDttYXJnaW4tYm90dG9tOjQ4cHggIWltcG9ydGFudH0ubWEtbjZ7bWFyZ2luOi00OHB4ICFpbXBvcnRhbnR9Lm10LW42e21hcmdpbi10b3A6LTQ4cHggIWltcG9ydGFudH0ubWItbjZ7bWFyZ2luLWJvdHRvbTotNDhweCAhaW1wb3J0YW50fS5tbC1uNnttYXJnaW4tbGVmdDotNDhweCAhaW1wb3J0YW50fS5tci1uNnttYXJnaW4tcmlnaHQ6LTQ4cHggIWltcG9ydGFudH0ubXgtbjZ7bWFyZ2luLWxlZnQ6LTQ4cHggIWltcG9ydGFudDttYXJnaW4tcmlnaHQ6LTQ4cHggIWltcG9ydGFudH0ubXktbjZ7bWFyZ2luLXRvcDotNDhweCAhaW1wb3J0YW50O21hcmdpbi1ib3R0b206LTQ4cHggIWltcG9ydGFudH0ubWEtc20tNnttYXJnaW46MjRweCAhaW1wb3J0YW50fS5tdC1zbS02e21hcmdpbi10b3A6MjRweCAhaW1wb3J0YW50fS5tdC1zbS1uNnttYXJnaW4tdG9wOi0yNHB4ICFpbXBvcnRhbnR9Lm1iLXNtLTZ7bWFyZ2luLWJvdHRvbToyNHB4ICFpbXBvcnRhbnR9Lm1sLXNtLTZ7bWFyZ2luLWxlZnQ6MjRweCAhaW1wb3J0YW50fS5tci1zbS02e21hcmdpbi1yaWdodDoyNHB4ICFpbXBvcnRhbnR9Lm14LXNtLTZ7bWFyZ2luLWxlZnQ6MjRweCAhaW1wb3J0YW50O21hcmdpbi1yaWdodDoyNHB4ICFpbXBvcnRhbnR9Lm15LXNtLTZ7bWFyZ2luLXRvcDoyNHB4ICFpbXBvcnRhbnQ7bWFyZ2luLWJvdHRvbToyNHB4ICFpbXBvcnRhbnR9LnBhLTZ7cGFkZGluZzo0OHB4ICFpbXBvcnRhbnR9LnB0LTZ7cGFkZGluZy10b3A6NDhweCAhaW1wb3J0YW50fS5wYi02e3BhZGRpbmctYm90dG9tOjQ4cHggIWltcG9ydGFudH0ucGwtNntwYWRkaW5nLWxlZnQ6NDhweCAhaW1wb3J0YW50fS5wci02e3BhZGRpbmctcmlnaHQ6NDhweCAhaW1wb3J0YW50fS5weC02e3BhZGRpbmctbGVmdDo0OHB4ICFpbXBvcnRhbnQ7cGFkZGluZy1yaWdodDo0OHB4ICFpbXBvcnRhbnR9LnB5LTZ7cGFkZGluZy10b3A6NDhweCAhaW1wb3J0YW50O3BhZGRpbmctYm90dG9tOjQ4cHggIWltcG9ydGFudH0ubWEtN3ttYXJnaW46NTZweCAhaW1wb3J0YW50fS5tdC03e21hcmdpbi10b3A6NTZweCAhaW1wb3J0YW50fS5tYi03e21hcmdpbi1ib3R0b206NTZweCAhaW1wb3J0YW50fS5tbC03e21hcmdpbi1sZWZ0OjU2cHggIWltcG9ydGFudH0ubXItN3ttYXJnaW4tcmlnaHQ6NTZweCAhaW1wb3J0YW50fS5teC03e21hcmdpbi1sZWZ0OjU2cHggIWltcG9ydGFudDttYXJnaW4tcmlnaHQ6NTZweCAhaW1wb3J0YW50fS5teS03e21hcmdpbi10b3A6NTZweCAhaW1wb3J0YW50O21hcmdpbi1ib3R0b206NTZweCAhaW1wb3J0YW50fS5tYS1uN3ttYXJnaW46LTU2cHggIWltcG9ydGFudH0ubXQtbjd7bWFyZ2luLXRvcDotNTZweCAhaW1wb3J0YW50fS5tYi1uN3ttYXJnaW4tYm90dG9tOi01NnB4ICFpbXBvcnRhbnR9Lm1sLW43e21hcmdpbi1sZWZ0Oi01NnB4ICFpbXBvcnRhbnR9Lm1yLW43e21hcmdpbi1yaWdodDotNTZweCAhaW1wb3J0YW50fS5teC1uN3ttYXJnaW4tbGVmdDotNTZweCAhaW1wb3J0YW50O21hcmdpbi1yaWdodDotNTZweCAhaW1wb3J0YW50fS5teS1uN3ttYXJnaW4tdG9wOi01NnB4ICFpbXBvcnRhbnQ7bWFyZ2luLWJvdHRvbTotNTZweCAhaW1wb3J0YW50fS5tYS1zbS03e21hcmdpbjoyOHB4ICFpbXBvcnRhbnR9Lm10LXNtLTd7bWFyZ2luLXRvcDoyOHB4ICFpbXBvcnRhbnR9Lm10LXNtLW43e21hcmdpbi10b3A6LTI4cHggIWltcG9ydGFudH0ubWItc20tN3ttYXJnaW4tYm90dG9tOjI4cHggIWltcG9ydGFudH0ubWwtc20tN3ttYXJnaW4tbGVmdDoyOHB4ICFpbXBvcnRhbnR9Lm1yLXNtLTd7bWFyZ2luLXJpZ2h0OjI4cHggIWltcG9ydGFudH0ubXgtc20tN3ttYXJnaW4tbGVmdDoyOHB4ICFpbXBvcnRhbnQ7bWFyZ2luLXJpZ2h0OjI4cHggIWltcG9ydGFudH0ubXktc20tN3ttYXJnaW4tdG9wOjI4cHggIWltcG9ydGFudDttYXJnaW4tYm90dG9tOjI4cHggIWltcG9ydGFudH0ucGEtN3twYWRkaW5nOjU2cHggIWltcG9ydGFudH0ucHQtN3twYWRkaW5nLXRvcDo1NnB4ICFpbXBvcnRhbnR9LnBiLTd7cGFkZGluZy1ib3R0b206NTZweCAhaW1wb3J0YW50fS5wbC03e3BhZGRpbmctbGVmdDo1NnB4ICFpbXBvcnRhbnR9LnByLTd7cGFkZGluZy1yaWdodDo1NnB4ICFpbXBvcnRhbnR9LnB4LTd7cGFkZGluZy1sZWZ0OjU2cHggIWltcG9ydGFudDtwYWRkaW5nLXJpZ2h0OjU2cHggIWltcG9ydGFudH0ucHktN3twYWRkaW5nLXRvcDo1NnB4ICFpbXBvcnRhbnQ7cGFkZGluZy1ib3R0b206NTZweCAhaW1wb3J0YW50fS5tYS04e21hcmdpbjo2NHB4ICFpbXBvcnRhbnR9Lm10LTh7bWFyZ2luLXRvcDo2NHB4ICFpbXBvcnRhbnR9Lm1iLTh7bWFyZ2luLWJvdHRvbTo2NHB4ICFpbXBvcnRhbnR9Lm1sLTh7bWFyZ2luLWxlZnQ6NjRweCAhaW1wb3J0YW50fS5tci04e21hcmdpbi1yaWdodDo2NHB4ICFpbXBvcnRhbnR9Lm14LTh7bWFyZ2luLWxlZnQ6NjRweCAhaW1wb3J0YW50O21hcmdpbi1yaWdodDo2NHB4ICFpbXBvcnRhbnR9Lm15LTh7bWFyZ2luLXRvcDo2NHB4ICFpbXBvcnRhbnQ7bWFyZ2luLWJvdHRvbTo2NHB4ICFpbXBvcnRhbnR9Lm1hLW44e21hcmdpbjotNjRweCAhaW1wb3J0YW50fS5tdC1uOHttYXJnaW4tdG9wOi02NHB4ICFpbXBvcnRhbnR9Lm1iLW44e21hcmdpbi1ib3R0b206LTY0cHggIWltcG9ydGFudH0ubWwtbjh7bWFyZ2luLWxlZnQ6LTY0cHggIWltcG9ydGFudH0ubXItbjh7bWFyZ2luLXJpZ2h0Oi02NHB4ICFpbXBvcnRhbnR9Lm14LW44e21hcmdpbi1sZWZ0Oi02NHB4ICFpbXBvcnRhbnQ7bWFyZ2luLXJpZ2h0Oi02NHB4ICFpbXBvcnRhbnR9Lm15LW44e21hcmdpbi10b3A6LTY0cHggIWltcG9ydGFudDttYXJnaW4tYm90dG9tOi02NHB4ICFpbXBvcnRhbnR9Lm1hLXNtLTh7bWFyZ2luOjMycHggIWltcG9ydGFudH0ubXQtc20tOHttYXJnaW4tdG9wOjMycHggIWltcG9ydGFudH0ubXQtc20tbjh7bWFyZ2luLXRvcDotMzJweCAhaW1wb3J0YW50fS5tYi1zbS04e21hcmdpbi1ib3R0b206MzJweCAhaW1wb3J0YW50fS5tbC1zbS04e21hcmdpbi1sZWZ0OjMycHggIWltcG9ydGFudH0ubXItc20tOHttYXJnaW4tcmlnaHQ6MzJweCAhaW1wb3J0YW50fS5teC1zbS04e21hcmdpbi1sZWZ0OjMycHggIWltcG9ydGFudDttYXJnaW4tcmlnaHQ6MzJweCAhaW1wb3J0YW50fS5teS1zbS04e21hcmdpbi10b3A6MzJweCAhaW1wb3J0YW50O21hcmdpbi1ib3R0b206MzJweCAhaW1wb3J0YW50fS5wYS04e3BhZGRpbmc6NjRweCAhaW1wb3J0YW50fS5wdC04e3BhZGRpbmctdG9wOjY0cHggIWltcG9ydGFudH0ucGItOHtwYWRkaW5nLWJvdHRvbTo2NHB4ICFpbXBvcnRhbnR9LnBsLTh7cGFkZGluZy1sZWZ0OjY0cHggIWltcG9ydGFudH0ucHItOHtwYWRkaW5nLXJpZ2h0OjY0cHggIWltcG9ydGFudH0ucHgtOHtwYWRkaW5nLWxlZnQ6NjRweCAhaW1wb3J0YW50O3BhZGRpbmctcmlnaHQ6NjRweCAhaW1wb3J0YW50fS5weS04e3BhZGRpbmctdG9wOjY0cHggIWltcG9ydGFudDtwYWRkaW5nLWJvdHRvbTo2NHB4ICFpbXBvcnRhbnR9Lm1hLTl7bWFyZ2luOjcycHggIWltcG9ydGFudH0ubXQtOXttYXJnaW4tdG9wOjcycHggIWltcG9ydGFudH0ubWItOXttYXJnaW4tYm90dG9tOjcycHggIWltcG9ydGFudH0ubWwtOXttYXJnaW4tbGVmdDo3MnB4ICFpbXBvcnRhbnR9Lm1yLTl7bWFyZ2luLXJpZ2h0OjcycHggIWltcG9ydGFudH0ubXgtOXttYXJnaW4tbGVmdDo3MnB4ICFpbXBvcnRhbnQ7bWFyZ2luLXJpZ2h0OjcycHggIWltcG9ydGFudH0ubXktOXttYXJnaW4tdG9wOjcycHggIWltcG9ydGFudDttYXJnaW4tYm90dG9tOjcycHggIWltcG9ydGFudH0ubWEtbjl7bWFyZ2luOi03MnB4ICFpbXBvcnRhbnR9Lm10LW45e21hcmdpbi10b3A6LTcycHggIWltcG9ydGFudH0ubWItbjl7bWFyZ2luLWJvdHRvbTotNzJweCAhaW1wb3J0YW50fS5tbC1uOXttYXJnaW4tbGVmdDotNzJweCAhaW1wb3J0YW50fS5tci1uOXttYXJnaW4tcmlnaHQ6LTcycHggIWltcG9ydGFudH0ubXgtbjl7bWFyZ2luLWxlZnQ6LTcycHggIWltcG9ydGFudDttYXJnaW4tcmlnaHQ6LTcycHggIWltcG9ydGFudH0ubXktbjl7bWFyZ2luLXRvcDotNzJweCAhaW1wb3J0YW50O21hcmdpbi1ib3R0b206LTcycHggIWltcG9ydGFudH0ubWEtc20tOXttYXJnaW46MzZweCAhaW1wb3J0YW50fS5tdC1zbS05e21hcmdpbi10b3A6MzZweCAhaW1wb3J0YW50fS5tdC1zbS1uOXttYXJnaW4tdG9wOi0zNnB4ICFpbXBvcnRhbnR9Lm1iLXNtLTl7bWFyZ2luLWJvdHRvbTozNnB4ICFpbXBvcnRhbnR9Lm1sLXNtLTl7bWFyZ2luLWxlZnQ6MzZweCAhaW1wb3J0YW50fS5tci1zbS05e21hcmdpbi1yaWdodDozNnB4ICFpbXBvcnRhbnR9Lm14LXNtLTl7bWFyZ2luLWxlZnQ6MzZweCAhaW1wb3J0YW50O21hcmdpbi1yaWdodDozNnB4ICFpbXBvcnRhbnR9Lm15LXNtLTl7bWFyZ2luLXRvcDozNnB4ICFpbXBvcnRhbnQ7bWFyZ2luLWJvdHRvbTozNnB4ICFpbXBvcnRhbnR9LnBhLTl7cGFkZGluZzo3MnB4ICFpbXBvcnRhbnR9LnB0LTl7cGFkZGluZy10b3A6NzJweCAhaW1wb3J0YW50fS5wYi05e3BhZGRpbmctYm90dG9tOjcycHggIWltcG9ydGFudH0ucGwtOXtwYWRkaW5nLWxlZnQ6NzJweCAhaW1wb3J0YW50fS5wci05e3BhZGRpbmctcmlnaHQ6NzJweCAhaW1wb3J0YW50fS5weC05e3BhZGRpbmctbGVmdDo3MnB4ICFpbXBvcnRhbnQ7cGFkZGluZy1yaWdodDo3MnB4ICFpbXBvcnRhbnR9LnB5LTl7cGFkZGluZy10b3A6NzJweCAhaW1wb3J0YW50O3BhZGRpbmctYm90dG9tOjcycHggIWltcG9ydGFudH0ubWEtMTB7bWFyZ2luOjgwcHggIWltcG9ydGFudH0ubXQtMTB7bWFyZ2luLXRvcDo4MHB4ICFpbXBvcnRhbnR9Lm1iLTEwe21hcmdpbi1ib3R0b206ODBweCAhaW1wb3J0YW50fS5tbC0xMHttYXJnaW4tbGVmdDo4MHB4ICFpbXBvcnRhbnR9Lm1yLTEwe21hcmdpbi1yaWdodDo4MHB4ICFpbXBvcnRhbnR9Lm14LTEwe21hcmdpbi1sZWZ0OjgwcHggIWltcG9ydGFudDttYXJnaW4tcmlnaHQ6ODBweCAhaW1wb3J0YW50fS5teS0xMHttYXJnaW4tdG9wOjgwcHggIWltcG9ydGFudDttYXJnaW4tYm90dG9tOjgwcHggIWltcG9ydGFudH0ubWEtbjEwe21hcmdpbjotODBweCAhaW1wb3J0YW50fS5tdC1uMTB7bWFyZ2luLXRvcDotODBweCAhaW1wb3J0YW50fS5tYi1uMTB7bWFyZ2luLWJvdHRvbTotODBweCAhaW1wb3J0YW50fS5tbC1uMTB7bWFyZ2luLWxlZnQ6LTgwcHggIWltcG9ydGFudH0ubXItbjEwe21hcmdpbi1yaWdodDotODBweCAhaW1wb3J0YW50fS5teC1uMTB7bWFyZ2luLWxlZnQ6LTgwcHggIWltcG9ydGFudDttYXJnaW4tcmlnaHQ6LTgwcHggIWltcG9ydGFudH0ubXktbjEwe21hcmdpbi10b3A6LTgwcHggIWltcG9ydGFudDttYXJnaW4tYm90dG9tOi04MHB4ICFpbXBvcnRhbnR9Lm1hLXNtLTEwe21hcmdpbjo0MHB4ICFpbXBvcnRhbnR9Lm10LXNtLTEwe21hcmdpbi10b3A6NDBweCAhaW1wb3J0YW50fS5tdC1zbS1uMTB7bWFyZ2luLXRvcDotNDBweCAhaW1wb3J0YW50fS5tYi1zbS0xMHttYXJnaW4tYm90dG9tOjQwcHggIWltcG9ydGFudH0ubWwtc20tMTB7bWFyZ2luLWxlZnQ6NDBweCAhaW1wb3J0YW50fS5tci1zbS0xMHttYXJnaW4tcmlnaHQ6NDBweCAhaW1wb3J0YW50fS5teC1zbS0xMHttYXJnaW4tbGVmdDo0MHB4ICFpbXBvcnRhbnQ7bWFyZ2luLXJpZ2h0OjQwcHggIWltcG9ydGFudH0ubXktc20tMTB7bWFyZ2luLXRvcDo0MHB4ICFpbXBvcnRhbnQ7bWFyZ2luLWJvdHRvbTo0MHB4ICFpbXBvcnRhbnR9LnBhLTEwe3BhZGRpbmc6ODBweCAhaW1wb3J0YW50fS5wdC0xMHtwYWRkaW5nLXRvcDo4MHB4ICFpbXBvcnRhbnR9LnBiLTEwe3BhZGRpbmctYm90dG9tOjgwcHggIWltcG9ydGFudH0ucGwtMTB7cGFkZGluZy1sZWZ0OjgwcHggIWltcG9ydGFudH0ucHItMTB7cGFkZGluZy1yaWdodDo4MHB4ICFpbXBvcnRhbnR9LnB4LTEwe3BhZGRpbmctbGVmdDo4MHB4ICFpbXBvcnRhbnQ7cGFkZGluZy1yaWdodDo4MHB4ICFpbXBvcnRhbnR9LnB5LTEwe3BhZGRpbmctdG9wOjgwcHggIWltcG9ydGFudDtwYWRkaW5nLWJvdHRvbTo4MHB4ICFpbXBvcnRhbnR9Lm1hLTExe21hcmdpbjo4OHB4ICFpbXBvcnRhbnR9Lm10LTExe21hcmdpbi10b3A6ODhweCAhaW1wb3J0YW50fS5tYi0xMXttYXJnaW4tYm90dG9tOjg4cHggIWltcG9ydGFudH0ubWwtMTF7bWFyZ2luLWxlZnQ6ODhweCAhaW1wb3J0YW50fS5tci0xMXttYXJnaW4tcmlnaHQ6ODhweCAhaW1wb3J0YW50fS5teC0xMXttYXJnaW4tbGVmdDo4OHB4ICFpbXBvcnRhbnQ7bWFyZ2luLXJpZ2h0Ojg4cHggIWltcG9ydGFudH0ubXktMTF7bWFyZ2luLXRvcDo4OHB4ICFpbXBvcnRhbnQ7bWFyZ2luLWJvdHRvbTo4OHB4ICFpbXBvcnRhbnR9Lm1hLW4xMXttYXJnaW46LTg4cHggIWltcG9ydGFudH0ubXQtbjExe21hcmdpbi10b3A6LTg4cHggIWltcG9ydGFudH0ubWItbjExe21hcmdpbi1ib3R0b206LTg4cHggIWltcG9ydGFudH0ubWwtbjExe21hcmdpbi1sZWZ0Oi04OHB4ICFpbXBvcnRhbnR9Lm1yLW4xMXttYXJnaW4tcmlnaHQ6LTg4cHggIWltcG9ydGFudH0ubXgtbjExe21hcmdpbi1sZWZ0Oi04OHB4ICFpbXBvcnRhbnQ7bWFyZ2luLXJpZ2h0Oi04OHB4ICFpbXBvcnRhbnR9Lm15LW4xMXttYXJnaW4tdG9wOi04OHB4ICFpbXBvcnRhbnQ7bWFyZ2luLWJvdHRvbTotODhweCAhaW1wb3J0YW50fS5tYS1zbS0xMXttYXJnaW46NDRweCAhaW1wb3J0YW50fS5tdC1zbS0xMXttYXJnaW4tdG9wOjQ0cHggIWltcG9ydGFudH0ubXQtc20tbjExe21hcmdpbi10b3A6LTQ0cHggIWltcG9ydGFudH0ubWItc20tMTF7bWFyZ2luLWJvdHRvbTo0NHB4ICFpbXBvcnRhbnR9Lm1sLXNtLTExe21hcmdpbi1sZWZ0OjQ0cHggIWltcG9ydGFudH0ubXItc20tMTF7bWFyZ2luLXJpZ2h0OjQ0cHggIWltcG9ydGFudH0ubXgtc20tMTF7bWFyZ2luLWxlZnQ6NDRweCAhaW1wb3J0YW50O21hcmdpbi1yaWdodDo0NHB4ICFpbXBvcnRhbnR9Lm15LXNtLTExe21hcmdpbi10b3A6NDRweCAhaW1wb3J0YW50O21hcmdpbi1ib3R0b206NDRweCAhaW1wb3J0YW50fS5wYS0xMXtwYWRkaW5nOjg4cHggIWltcG9ydGFudH0ucHQtMTF7cGFkZGluZy10b3A6ODhweCAhaW1wb3J0YW50fS5wYi0xMXtwYWRkaW5nLWJvdHRvbTo4OHB4ICFpbXBvcnRhbnR9LnBsLTExe3BhZGRpbmctbGVmdDo4OHB4ICFpbXBvcnRhbnR9LnByLTExe3BhZGRpbmctcmlnaHQ6ODhweCAhaW1wb3J0YW50fS5weC0xMXtwYWRkaW5nLWxlZnQ6ODhweCAhaW1wb3J0YW50O3BhZGRpbmctcmlnaHQ6ODhweCAhaW1wb3J0YW50fS5weS0xMXtwYWRkaW5nLXRvcDo4OHB4ICFpbXBvcnRhbnQ7cGFkZGluZy1ib3R0b206ODhweCAhaW1wb3J0YW50fS5tYS0xMnttYXJnaW46OTZweCAhaW1wb3J0YW50fS5tdC0xMnttYXJnaW4tdG9wOjk2cHggIWltcG9ydGFudH0ubWItMTJ7bWFyZ2luLWJvdHRvbTo5NnB4ICFpbXBvcnRhbnR9Lm1sLTEye21hcmdpbi1sZWZ0Ojk2cHggIWltcG9ydGFudH0ubXItMTJ7bWFyZ2luLXJpZ2h0Ojk2cHggIWltcG9ydGFudH0ubXgtMTJ7bWFyZ2luLWxlZnQ6OTZweCAhaW1wb3J0YW50O21hcmdpbi1yaWdodDo5NnB4ICFpbXBvcnRhbnR9Lm15LTEye21hcmdpbi10b3A6OTZweCAhaW1wb3J0YW50O21hcmdpbi1ib3R0b206OTZweCAhaW1wb3J0YW50fS5tYS1uMTJ7bWFyZ2luOi05NnB4ICFpbXBvcnRhbnR9Lm10LW4xMnttYXJnaW4tdG9wOi05NnB4ICFpbXBvcnRhbnR9Lm1iLW4xMnttYXJnaW4tYm90dG9tOi05NnB4ICFpbXBvcnRhbnR9Lm1sLW4xMnttYXJnaW4tbGVmdDotOTZweCAhaW1wb3J0YW50fS5tci1uMTJ7bWFyZ2luLXJpZ2h0Oi05NnB4ICFpbXBvcnRhbnR9Lm14LW4xMnttYXJnaW4tbGVmdDotOTZweCAhaW1wb3J0YW50O21hcmdpbi1yaWdodDotOTZweCAhaW1wb3J0YW50fS5teS1uMTJ7bWFyZ2luLXRvcDotOTZweCAhaW1wb3J0YW50O21hcmdpbi1ib3R0b206LTk2cHggIWltcG9ydGFudH0ubWEtc20tMTJ7bWFyZ2luOjQ4cHggIWltcG9ydGFudH0ubXQtc20tMTJ7bWFyZ2luLXRvcDo0OHB4ICFpbXBvcnRhbnR9Lm10LXNtLW4xMnttYXJnaW4tdG9wOi00OHB4ICFpbXBvcnRhbnR9Lm1iLXNtLTEye21hcmdpbi1ib3R0b206NDhweCAhaW1wb3J0YW50fS5tbC1zbS0xMnttYXJnaW4tbGVmdDo0OHB4ICFpbXBvcnRhbnR9Lm1yLXNtLTEye21hcmdpbi1yaWdodDo0OHB4ICFpbXBvcnRhbnR9Lm14LXNtLTEye21hcmdpbi1sZWZ0OjQ4cHggIWltcG9ydGFudDttYXJnaW4tcmlnaHQ6NDhweCAhaW1wb3J0YW50fS5teS1zbS0xMnttYXJnaW4tdG9wOjQ4cHggIWltcG9ydGFudDttYXJnaW4tYm90dG9tOjQ4cHggIWltcG9ydGFudH0ucGEtMTJ7cGFkZGluZzo5NnB4ICFpbXBvcnRhbnR9LnB0LTEye3BhZGRpbmctdG9wOjk2cHggIWltcG9ydGFudH0ucGItMTJ7cGFkZGluZy1ib3R0b206OTZweCAhaW1wb3J0YW50fS5wbC0xMntwYWRkaW5nLWxlZnQ6OTZweCAhaW1wb3J0YW50fS5wci0xMntwYWRkaW5nLXJpZ2h0Ojk2cHggIWltcG9ydGFudH0ucHgtMTJ7cGFkZGluZy1sZWZ0Ojk2cHggIWltcG9ydGFudDtwYWRkaW5nLXJpZ2h0Ojk2cHggIWltcG9ydGFudH0ucHktMTJ7cGFkZGluZy10b3A6OTZweCAhaW1wb3J0YW50O3BhZGRpbmctYm90dG9tOjk2cHggIWltcG9ydGFudH0ubWEtMTN7bWFyZ2luOjEwNHB4ICFpbXBvcnRhbnR9Lm10LTEze21hcmdpbi10b3A6MTA0cHggIWltcG9ydGFudH0ubWItMTN7bWFyZ2luLWJvdHRvbToxMDRweCAhaW1wb3J0YW50fS5tbC0xM3ttYXJnaW4tbGVmdDoxMDRweCAhaW1wb3J0YW50fS5tci0xM3ttYXJnaW4tcmlnaHQ6MTA0cHggIWltcG9ydGFudH0ubXgtMTN7bWFyZ2luLWxlZnQ6MTA0cHggIWltcG9ydGFudDttYXJnaW4tcmlnaHQ6MTA0cHggIWltcG9ydGFudH0ubXktMTN7bWFyZ2luLXRvcDoxMDRweCAhaW1wb3J0YW50O21hcmdpbi1ib3R0b206MTA0cHggIWltcG9ydGFudH0ubWEtbjEze21hcmdpbjotMTA0cHggIWltcG9ydGFudH0ubXQtbjEze21hcmdpbi10b3A6LTEwNHB4ICFpbXBvcnRhbnR9Lm1iLW4xM3ttYXJnaW4tYm90dG9tOi0xMDRweCAhaW1wb3J0YW50fS5tbC1uMTN7bWFyZ2luLWxlZnQ6LTEwNHB4ICFpbXBvcnRhbnR9Lm1yLW4xM3ttYXJnaW4tcmlnaHQ6LTEwNHB4ICFpbXBvcnRhbnR9Lm14LW4xM3ttYXJnaW4tbGVmdDotMTA0cHggIWltcG9ydGFudDttYXJnaW4tcmlnaHQ6LTEwNHB4ICFpbXBvcnRhbnR9Lm15LW4xM3ttYXJnaW4tdG9wOi0xMDRweCAhaW1wb3J0YW50O21hcmdpbi1ib3R0b206LTEwNHB4ICFpbXBvcnRhbnR9Lm1hLXNtLTEze21hcmdpbjo1MnB4ICFpbXBvcnRhbnR9Lm10LXNtLTEze21hcmdpbi10b3A6NTJweCAhaW1wb3J0YW50fS5tdC1zbS1uMTN7bWFyZ2luLXRvcDotNTJweCAhaW1wb3J0YW50fS5tYi1zbS0xM3ttYXJnaW4tYm90dG9tOjUycHggIWltcG9ydGFudH0ubWwtc20tMTN7bWFyZ2luLWxlZnQ6NTJweCAhaW1wb3J0YW50fS5tci1zbS0xM3ttYXJnaW4tcmlnaHQ6NTJweCAhaW1wb3J0YW50fS5teC1zbS0xM3ttYXJnaW4tbGVmdDo1MnB4ICFpbXBvcnRhbnQ7bWFyZ2luLXJpZ2h0OjUycHggIWltcG9ydGFudH0ubXktc20tMTN7bWFyZ2luLXRvcDo1MnB4ICFpbXBvcnRhbnQ7bWFyZ2luLWJvdHRvbTo1MnB4ICFpbXBvcnRhbnR9LnBhLTEze3BhZGRpbmc6MTA0cHggIWltcG9ydGFudH0ucHQtMTN7cGFkZGluZy10b3A6MTA0cHggIWltcG9ydGFudH0ucGItMTN7cGFkZGluZy1ib3R0b206MTA0cHggIWltcG9ydGFudH0ucGwtMTN7cGFkZGluZy1sZWZ0OjEwNHB4ICFpbXBvcnRhbnR9LnByLTEze3BhZGRpbmctcmlnaHQ6MTA0cHggIWltcG9ydGFudH0ucHgtMTN7cGFkZGluZy1sZWZ0OjEwNHB4ICFpbXBvcnRhbnQ7cGFkZGluZy1yaWdodDoxMDRweCAhaW1wb3J0YW50fS5weS0xM3twYWRkaW5nLXRvcDoxMDRweCAhaW1wb3J0YW50O3BhZGRpbmctYm90dG9tOjEwNHB4ICFpbXBvcnRhbnR9Lm1hLTE0e21hcmdpbjoxMTJweCAhaW1wb3J0YW50fS5tdC0xNHttYXJnaW4tdG9wOjExMnB4ICFpbXBvcnRhbnR9Lm1iLTE0e21hcmdpbi1ib3R0b206MTEycHggIWltcG9ydGFudH0ubWwtMTR7bWFyZ2luLWxlZnQ6MTEycHggIWltcG9ydGFudH0ubXItMTR7bWFyZ2luLXJpZ2h0OjExMnB4ICFpbXBvcnRhbnR9Lm14LTE0e21hcmdpbi1sZWZ0OjExMnB4ICFpbXBvcnRhbnQ7bWFyZ2luLXJpZ2h0OjExMnB4ICFpbXBvcnRhbnR9Lm15LTE0e21hcmdpbi10b3A6MTEycHggIWltcG9ydGFudDttYXJnaW4tYm90dG9tOjExMnB4ICFpbXBvcnRhbnR9Lm1hLW4xNHttYXJnaW46LTExMnB4ICFpbXBvcnRhbnR9Lm10LW4xNHttYXJnaW4tdG9wOi0xMTJweCAhaW1wb3J0YW50fS5tYi1uMTR7bWFyZ2luLWJvdHRvbTotMTEycHggIWltcG9ydGFudH0ubWwtbjE0e21hcmdpbi1sZWZ0Oi0xMTJweCAhaW1wb3J0YW50fS5tci1uMTR7bWFyZ2luLXJpZ2h0Oi0xMTJweCAhaW1wb3J0YW50fS5teC1uMTR7bWFyZ2luLWxlZnQ6LTExMnB4ICFpbXBvcnRhbnQ7bWFyZ2luLXJpZ2h0Oi0xMTJweCAhaW1wb3J0YW50fS5teS1uMTR7bWFyZ2luLXRvcDotMTEycHggIWltcG9ydGFudDttYXJnaW4tYm90dG9tOi0xMTJweCAhaW1wb3J0YW50fS5tYS1zbS0xNHttYXJnaW46NTZweCAhaW1wb3J0YW50fS5tdC1zbS0xNHttYXJnaW4tdG9wOjU2cHggIWltcG9ydGFudH0ubXQtc20tbjE0e21hcmdpbi10b3A6LTU2cHggIWltcG9ydGFudH0ubWItc20tMTR7bWFyZ2luLWJvdHRvbTo1NnB4ICFpbXBvcnRhbnR9Lm1sLXNtLTE0e21hcmdpbi1sZWZ0OjU2cHggIWltcG9ydGFudH0ubXItc20tMTR7bWFyZ2luLXJpZ2h0OjU2cHggIWltcG9ydGFudH0ubXgtc20tMTR7bWFyZ2luLWxlZnQ6NTZweCAhaW1wb3J0YW50O21hcmdpbi1yaWdodDo1NnB4ICFpbXBvcnRhbnR9Lm15LXNtLTE0e21hcmdpbi10b3A6NTZweCAhaW1wb3J0YW50O21hcmdpbi1ib3R0b206NTZweCAhaW1wb3J0YW50fS5wYS0xNHtwYWRkaW5nOjExMnB4ICFpbXBvcnRhbnR9LnB0LTE0e3BhZGRpbmctdG9wOjExMnB4ICFpbXBvcnRhbnR9LnBiLTE0e3BhZGRpbmctYm90dG9tOjExMnB4ICFpbXBvcnRhbnR9LnBsLTE0e3BhZGRpbmctbGVmdDoxMTJweCAhaW1wb3J0YW50fS5wci0xNHtwYWRkaW5nLXJpZ2h0OjExMnB4ICFpbXBvcnRhbnR9LnB4LTE0e3BhZGRpbmctbGVmdDoxMTJweCAhaW1wb3J0YW50O3BhZGRpbmctcmlnaHQ6MTEycHggIWltcG9ydGFudH0ucHktMTR7cGFkZGluZy10b3A6MTEycHggIWltcG9ydGFudDtwYWRkaW5nLWJvdHRvbToxMTJweCAhaW1wb3J0YW50fS5tYS0xNXttYXJnaW46MTIwcHggIWltcG9ydGFudH0ubXQtMTV7bWFyZ2luLXRvcDoxMjBweCAhaW1wb3J0YW50fS5tYi0xNXttYXJnaW4tYm90dG9tOjEyMHB4ICFpbXBvcnRhbnR9Lm1sLTE1e21hcmdpbi1sZWZ0OjEyMHB4ICFpbXBvcnRhbnR9Lm1yLTE1e21hcmdpbi1yaWdodDoxMjBweCAhaW1wb3J0YW50fS5teC0xNXttYXJnaW4tbGVmdDoxMjBweCAhaW1wb3J0YW50O21hcmdpbi1yaWdodDoxMjBweCAhaW1wb3J0YW50fS5teS0xNXttYXJnaW4tdG9wOjEyMHB4ICFpbXBvcnRhbnQ7bWFyZ2luLWJvdHRvbToxMjBweCAhaW1wb3J0YW50fS5tYS1uMTV7bWFyZ2luOi0xMjBweCAhaW1wb3J0YW50fS5tdC1uMTV7bWFyZ2luLXRvcDotMTIwcHggIWltcG9ydGFudH0ubWItbjE1e21hcmdpbi1ib3R0b206LTEyMHB4ICFpbXBvcnRhbnR9Lm1sLW4xNXttYXJnaW4tbGVmdDotMTIwcHggIWltcG9ydGFudH0ubXItbjE1e21hcmdpbi1yaWdodDotMTIwcHggIWltcG9ydGFudH0ubXgtbjE1e21hcmdpbi1sZWZ0Oi0xMjBweCAhaW1wb3J0YW50O21hcmdpbi1yaWdodDotMTIwcHggIWltcG9ydGFudH0ubXktbjE1e21hcmdpbi10b3A6LTEyMHB4ICFpbXBvcnRhbnQ7bWFyZ2luLWJvdHRvbTotMTIwcHggIWltcG9ydGFudH0ubWEtc20tMTV7bWFyZ2luOjYwcHggIWltcG9ydGFudH0ubXQtc20tMTV7bWFyZ2luLXRvcDo2MHB4ICFpbXBvcnRhbnR9Lm10LXNtLW4xNXttYXJnaW4tdG9wOi02MHB4ICFpbXBvcnRhbnR9Lm1iLXNtLTE1e21hcmdpbi1ib3R0b206NjBweCAhaW1wb3J0YW50fS5tbC1zbS0xNXttYXJnaW4tbGVmdDo2MHB4ICFpbXBvcnRhbnR9Lm1yLXNtLTE1e21hcmdpbi1yaWdodDo2MHB4ICFpbXBvcnRhbnR9Lm14LXNtLTE1e21hcmdpbi1sZWZ0OjYwcHggIWltcG9ydGFudDttYXJnaW4tcmlnaHQ6NjBweCAhaW1wb3J0YW50fS5teS1zbS0xNXttYXJnaW4tdG9wOjYwcHggIWltcG9ydGFudDttYXJnaW4tYm90dG9tOjYwcHggIWltcG9ydGFudH0ucGEtMTV7cGFkZGluZzoxMjBweCAhaW1wb3J0YW50fS5wdC0xNXtwYWRkaW5nLXRvcDoxMjBweCAhaW1wb3J0YW50fS5wYi0xNXtwYWRkaW5nLWJvdHRvbToxMjBweCAhaW1wb3J0YW50fS5wbC0xNXtwYWRkaW5nLWxlZnQ6MTIwcHggIWltcG9ydGFudH0ucHItMTV7cGFkZGluZy1yaWdodDoxMjBweCAhaW1wb3J0YW50fS5weC0xNXtwYWRkaW5nLWxlZnQ6MTIwcHggIWltcG9ydGFudDtwYWRkaW5nLXJpZ2h0OjEyMHB4ICFpbXBvcnRhbnR9LnB5LTE1e3BhZGRpbmctdG9wOjEyMHB4ICFpbXBvcnRhbnQ7cGFkZGluZy1ib3R0b206MTIwcHggIWltcG9ydGFudH0ubWEtMTZ7bWFyZ2luOjEyOHB4ICFpbXBvcnRhbnR9Lm10LTE2e21hcmdpbi10b3A6MTI4cHggIWltcG9ydGFudH0ubWItMTZ7bWFyZ2luLWJvdHRvbToxMjhweCAhaW1wb3J0YW50fS5tbC0xNnttYXJnaW4tbGVmdDoxMjhweCAhaW1wb3J0YW50fS5tci0xNnttYXJnaW4tcmlnaHQ6MTI4cHggIWltcG9ydGFudH0ubXgtMTZ7bWFyZ2luLWxlZnQ6MTI4cHggIWltcG9ydGFudDttYXJnaW4tcmlnaHQ6MTI4cHggIWltcG9ydGFudH0ubXktMTZ7bWFyZ2luLXRvcDoxMjhweCAhaW1wb3J0YW50O21hcmdpbi1ib3R0b206MTI4cHggIWltcG9ydGFudH0ubWEtbjE2e21hcmdpbjotMTI4cHggIWltcG9ydGFudH0ubXQtbjE2e21hcmdpbi10b3A6LTEyOHB4ICFpbXBvcnRhbnR9Lm1iLW4xNnttYXJnaW4tYm90dG9tOi0xMjhweCAhaW1wb3J0YW50fS5tbC1uMTZ7bWFyZ2luLWxlZnQ6LTEyOHB4ICFpbXBvcnRhbnR9Lm1yLW4xNnttYXJnaW4tcmlnaHQ6LTEyOHB4ICFpbXBvcnRhbnR9Lm14LW4xNnttYXJnaW4tbGVmdDotMTI4cHggIWltcG9ydGFudDttYXJnaW4tcmlnaHQ6LTEyOHB4ICFpbXBvcnRhbnR9Lm15LW4xNnttYXJnaW4tdG9wOi0xMjhweCAhaW1wb3J0YW50O21hcmdpbi1ib3R0b206LTEyOHB4ICFpbXBvcnRhbnR9Lm1hLXNtLTE2e21hcmdpbjo2NHB4ICFpbXBvcnRhbnR9Lm10LXNtLTE2e21hcmdpbi10b3A6NjRweCAhaW1wb3J0YW50fS5tdC1zbS1uMTZ7bWFyZ2luLXRvcDotNjRweCAhaW1wb3J0YW50fS5tYi1zbS0xNnttYXJnaW4tYm90dG9tOjY0cHggIWltcG9ydGFudH0ubWwtc20tMTZ7bWFyZ2luLWxlZnQ6NjRweCAhaW1wb3J0YW50fS5tci1zbS0xNnttYXJnaW4tcmlnaHQ6NjRweCAhaW1wb3J0YW50fS5teC1zbS0xNnttYXJnaW4tbGVmdDo2NHB4ICFpbXBvcnRhbnQ7bWFyZ2luLXJpZ2h0OjY0cHggIWltcG9ydGFudH0ubXktc20tMTZ7bWFyZ2luLXRvcDo2NHB4ICFpbXBvcnRhbnQ7bWFyZ2luLWJvdHRvbTo2NHB4ICFpbXBvcnRhbnR9LnBhLTE2e3BhZGRpbmc6MTI4cHggIWltcG9ydGFudH0ucHQtMTZ7cGFkZGluZy10b3A6MTI4cHggIWltcG9ydGFudH0ucGItMTZ7cGFkZGluZy1ib3R0b206MTI4cHggIWltcG9ydGFudH0ucGwtMTZ7cGFkZGluZy1sZWZ0OjEyOHB4ICFpbXBvcnRhbnR9LnByLTE2e3BhZGRpbmctcmlnaHQ6MTI4cHggIWltcG9ydGFudH0ucHgtMTZ7cGFkZGluZy1sZWZ0OjEyOHB4ICFpbXBvcnRhbnQ7cGFkZGluZy1yaWdodDoxMjhweCAhaW1wb3J0YW50fS5weS0xNntwYWRkaW5nLXRvcDoxMjhweCAhaW1wb3J0YW50O3BhZGRpbmctYm90dG9tOjEyOHB4ICFpbXBvcnRhbnR9Lm1hLTE3e21hcmdpbjoxMzZweCAhaW1wb3J0YW50fS5tdC0xN3ttYXJnaW4tdG9wOjEzNnB4ICFpbXBvcnRhbnR9Lm1iLTE3e21hcmdpbi1ib3R0b206MTM2cHggIWltcG9ydGFudH0ubWwtMTd7bWFyZ2luLWxlZnQ6MTM2cHggIWltcG9ydGFudH0ubXItMTd7bWFyZ2luLXJpZ2h0OjEzNnB4ICFpbXBvcnRhbnR9Lm14LTE3e21hcmdpbi1sZWZ0OjEzNnB4ICFpbXBvcnRhbnQ7bWFyZ2luLXJpZ2h0OjEzNnB4ICFpbXBvcnRhbnR9Lm15LTE3e21hcmdpbi10b3A6MTM2cHggIWltcG9ydGFudDttYXJnaW4tYm90dG9tOjEzNnB4ICFpbXBvcnRhbnR9Lm1hLW4xN3ttYXJnaW46LTEzNnB4ICFpbXBvcnRhbnR9Lm10LW4xN3ttYXJnaW4tdG9wOi0xMzZweCAhaW1wb3J0YW50fS5tYi1uMTd7bWFyZ2luLWJvdHRvbTotMTM2cHggIWltcG9ydGFudH0ubWwtbjE3e21hcmdpbi1sZWZ0Oi0xMzZweCAhaW1wb3J0YW50fS5tci1uMTd7bWFyZ2luLXJpZ2h0Oi0xMzZweCAhaW1wb3J0YW50fS5teC1uMTd7bWFyZ2luLWxlZnQ6LTEzNnB4ICFpbXBvcnRhbnQ7bWFyZ2luLXJpZ2h0Oi0xMzZweCAhaW1wb3J0YW50fS5teS1uMTd7bWFyZ2luLXRvcDotMTM2cHggIWltcG9ydGFudDttYXJnaW4tYm90dG9tOi0xMzZweCAhaW1wb3J0YW50fS5tYS1zbS0xN3ttYXJnaW46NjhweCAhaW1wb3J0YW50fS5tdC1zbS0xN3ttYXJnaW4tdG9wOjY4cHggIWltcG9ydGFudH0ubXQtc20tbjE3e21hcmdpbi10b3A6LTY4cHggIWltcG9ydGFudH0ubWItc20tMTd7bWFyZ2luLWJvdHRvbTo2OHB4ICFpbXBvcnRhbnR9Lm1sLXNtLTE3e21hcmdpbi1sZWZ0OjY4cHggIWltcG9ydGFudH0ubXItc20tMTd7bWFyZ2luLXJpZ2h0OjY4cHggIWltcG9ydGFudH0ubXgtc20tMTd7bWFyZ2luLWxlZnQ6NjhweCAhaW1wb3J0YW50O21hcmdpbi1yaWdodDo2OHB4ICFpbXBvcnRhbnR9Lm15LXNtLTE3e21hcmdpbi10b3A6NjhweCAhaW1wb3J0YW50O21hcmdpbi1ib3R0b206NjhweCAhaW1wb3J0YW50fS5wYS0xN3twYWRkaW5nOjEzNnB4ICFpbXBvcnRhbnR9LnB0LTE3e3BhZGRpbmctdG9wOjEzNnB4ICFpbXBvcnRhbnR9LnBiLTE3e3BhZGRpbmctYm90dG9tOjEzNnB4ICFpbXBvcnRhbnR9LnBsLTE3e3BhZGRpbmctbGVmdDoxMzZweCAhaW1wb3J0YW50fS5wci0xN3twYWRkaW5nLXJpZ2h0OjEzNnB4ICFpbXBvcnRhbnR9LnB4LTE3e3BhZGRpbmctbGVmdDoxMzZweCAhaW1wb3J0YW50O3BhZGRpbmctcmlnaHQ6MTM2cHggIWltcG9ydGFudH0ucHktMTd7cGFkZGluZy10b3A6MTM2cHggIWltcG9ydGFudDtwYWRkaW5nLWJvdHRvbToxMzZweCAhaW1wb3J0YW50fS5tYS0xOHttYXJnaW46MTQ0cHggIWltcG9ydGFudH0ubXQtMTh7bWFyZ2luLXRvcDoxNDRweCAhaW1wb3J0YW50fS5tYi0xOHttYXJnaW4tYm90dG9tOjE0NHB4ICFpbXBvcnRhbnR9Lm1sLTE4e21hcmdpbi1sZWZ0OjE0NHB4ICFpbXBvcnRhbnR9Lm1yLTE4e21hcmdpbi1yaWdodDoxNDRweCAhaW1wb3J0YW50fS5teC0xOHttYXJnaW4tbGVmdDoxNDRweCAhaW1wb3J0YW50O21hcmdpbi1yaWdodDoxNDRweCAhaW1wb3J0YW50fS5teS0xOHttYXJnaW4tdG9wOjE0NHB4ICFpbXBvcnRhbnQ7bWFyZ2luLWJvdHRvbToxNDRweCAhaW1wb3J0YW50fS5tYS1uMTh7bWFyZ2luOi0xNDRweCAhaW1wb3J0YW50fS5tdC1uMTh7bWFyZ2luLXRvcDotMTQ0cHggIWltcG9ydGFudH0ubWItbjE4e21hcmdpbi1ib3R0b206LTE0NHB4ICFpbXBvcnRhbnR9Lm1sLW4xOHttYXJnaW4tbGVmdDotMTQ0cHggIWltcG9ydGFudH0ubXItbjE4e21hcmdpbi1yaWdodDotMTQ0cHggIWltcG9ydGFudH0ubXgtbjE4e21hcmdpbi1sZWZ0Oi0xNDRweCAhaW1wb3J0YW50O21hcmdpbi1yaWdodDotMTQ0cHggIWltcG9ydGFudH0ubXktbjE4e21hcmdpbi10b3A6LTE0NHB4ICFpbXBvcnRhbnQ7bWFyZ2luLWJvdHRvbTotMTQ0cHggIWltcG9ydGFudH0ubWEtc20tMTh7bWFyZ2luOjcycHggIWltcG9ydGFudH0ubXQtc20tMTh7bWFyZ2luLXRvcDo3MnB4ICFpbXBvcnRhbnR9Lm10LXNtLW4xOHttYXJnaW4tdG9wOi03MnB4ICFpbXBvcnRhbnR9Lm1iLXNtLTE4e21hcmdpbi1ib3R0b206NzJweCAhaW1wb3J0YW50fS5tbC1zbS0xOHttYXJnaW4tbGVmdDo3MnB4ICFpbXBvcnRhbnR9Lm1yLXNtLTE4e21hcmdpbi1yaWdodDo3MnB4ICFpbXBvcnRhbnR9Lm14LXNtLTE4e21hcmdpbi1sZWZ0OjcycHggIWltcG9ydGFudDttYXJnaW4tcmlnaHQ6NzJweCAhaW1wb3J0YW50fS5teS1zbS0xOHttYXJnaW4tdG9wOjcycHggIWltcG9ydGFudDttYXJnaW4tYm90dG9tOjcycHggIWltcG9ydGFudH0ucGEtMTh7cGFkZGluZzoxNDRweCAhaW1wb3J0YW50fS5wdC0xOHtwYWRkaW5nLXRvcDoxNDRweCAhaW1wb3J0YW50fS5wYi0xOHtwYWRkaW5nLWJvdHRvbToxNDRweCAhaW1wb3J0YW50fS5wbC0xOHtwYWRkaW5nLWxlZnQ6MTQ0cHggIWltcG9ydGFudH0ucHItMTh7cGFkZGluZy1yaWdodDoxNDRweCAhaW1wb3J0YW50fS5weC0xOHtwYWRkaW5nLWxlZnQ6MTQ0cHggIWltcG9ydGFudDtwYWRkaW5nLXJpZ2h0OjE0NHB4ICFpbXBvcnRhbnR9LnB5LTE4e3BhZGRpbmctdG9wOjE0NHB4ICFpbXBvcnRhbnQ7cGFkZGluZy1ib3R0b206MTQ0cHggIWltcG9ydGFudH0ubWEtMTl7bWFyZ2luOjE1MnB4ICFpbXBvcnRhbnR9Lm10LTE5e21hcmdpbi10b3A6MTUycHggIWltcG9ydGFudH0ubWItMTl7bWFyZ2luLWJvdHRvbToxNTJweCAhaW1wb3J0YW50fS5tbC0xOXttYXJnaW4tbGVmdDoxNTJweCAhaW1wb3J0YW50fS5tci0xOXttYXJnaW4tcmlnaHQ6MTUycHggIWltcG9ydGFudH0ubXgtMTl7bWFyZ2luLWxlZnQ6MTUycHggIWltcG9ydGFudDttYXJnaW4tcmlnaHQ6MTUycHggIWltcG9ydGFudH0ubXktMTl7bWFyZ2luLXRvcDoxNTJweCAhaW1wb3J0YW50O21hcmdpbi1ib3R0b206MTUycHggIWltcG9ydGFudH0ubWEtbjE5e21hcmdpbjotMTUycHggIWltcG9ydGFudH0ubXQtbjE5e21hcmdpbi10b3A6LTE1MnB4ICFpbXBvcnRhbnR9Lm1iLW4xOXttYXJnaW4tYm90dG9tOi0xNTJweCAhaW1wb3J0YW50fS5tbC1uMTl7bWFyZ2luLWxlZnQ6LTE1MnB4ICFpbXBvcnRhbnR9Lm1yLW4xOXttYXJnaW4tcmlnaHQ6LTE1MnB4ICFpbXBvcnRhbnR9Lm14LW4xOXttYXJnaW4tbGVmdDotMTUycHggIWltcG9ydGFudDttYXJnaW4tcmlnaHQ6LTE1MnB4ICFpbXBvcnRhbnR9Lm15LW4xOXttYXJnaW4tdG9wOi0xNTJweCAhaW1wb3J0YW50O21hcmdpbi1ib3R0b206LTE1MnB4ICFpbXBvcnRhbnR9Lm1hLXNtLTE5e21hcmdpbjo3NnB4ICFpbXBvcnRhbnR9Lm10LXNtLTE5e21hcmdpbi10b3A6NzZweCAhaW1wb3J0YW50fS5tdC1zbS1uMTl7bWFyZ2luLXRvcDotNzZweCAhaW1wb3J0YW50fS5tYi1zbS0xOXttYXJnaW4tYm90dG9tOjc2cHggIWltcG9ydGFudH0ubWwtc20tMTl7bWFyZ2luLWxlZnQ6NzZweCAhaW1wb3J0YW50fS5tci1zbS0xOXttYXJnaW4tcmlnaHQ6NzZweCAhaW1wb3J0YW50fS5teC1zbS0xOXttYXJnaW4tbGVmdDo3NnB4ICFpbXBvcnRhbnQ7bWFyZ2luLXJpZ2h0Ojc2cHggIWltcG9ydGFudH0ubXktc20tMTl7bWFyZ2luLXRvcDo3NnB4ICFpbXBvcnRhbnQ7bWFyZ2luLWJvdHRvbTo3NnB4ICFpbXBvcnRhbnR9LnBhLTE5e3BhZGRpbmc6MTUycHggIWltcG9ydGFudH0ucHQtMTl7cGFkZGluZy10b3A6MTUycHggIWltcG9ydGFudH0ucGItMTl7cGFkZGluZy1ib3R0b206MTUycHggIWltcG9ydGFudH0ucGwtMTl7cGFkZGluZy1sZWZ0OjE1MnB4ICFpbXBvcnRhbnR9LnByLTE5e3BhZGRpbmctcmlnaHQ6MTUycHggIWltcG9ydGFudH0ucHgtMTl7cGFkZGluZy1sZWZ0OjE1MnB4ICFpbXBvcnRhbnQ7cGFkZGluZy1yaWdodDoxNTJweCAhaW1wb3J0YW50fS5weS0xOXtwYWRkaW5nLXRvcDoxNTJweCAhaW1wb3J0YW50O3BhZGRpbmctYm90dG9tOjE1MnB4ICFpbXBvcnRhbnR9Lm1hLTIwe21hcmdpbjoxNjBweCAhaW1wb3J0YW50fS5tdC0yMHttYXJnaW4tdG9wOjE2MHB4ICFpbXBvcnRhbnR9Lm1iLTIwe21hcmdpbi1ib3R0b206MTYwcHggIWltcG9ydGFudH0ubWwtMjB7bWFyZ2luLWxlZnQ6MTYwcHggIWltcG9ydGFudH0ubXItMjB7bWFyZ2luLXJpZ2h0OjE2MHB4ICFpbXBvcnRhbnR9Lm14LTIwe21hcmdpbi1sZWZ0OjE2MHB4ICFpbXBvcnRhbnQ7bWFyZ2luLXJpZ2h0OjE2MHB4ICFpbXBvcnRhbnR9Lm15LTIwe21hcmdpbi10b3A6MTYwcHggIWltcG9ydGFudDttYXJnaW4tYm90dG9tOjE2MHB4ICFpbXBvcnRhbnR9Lm1hLW4yMHttYXJnaW46LTE2MHB4ICFpbXBvcnRhbnR9Lm10LW4yMHttYXJnaW4tdG9wOi0xNjBweCAhaW1wb3J0YW50fS5tYi1uMjB7bWFyZ2luLWJvdHRvbTotMTYwcHggIWltcG9ydGFudH0ubWwtbjIwe21hcmdpbi1sZWZ0Oi0xNjBweCAhaW1wb3J0YW50fS5tci1uMjB7bWFyZ2luLXJpZ2h0Oi0xNjBweCAhaW1wb3J0YW50fS5teC1uMjB7bWFyZ2luLWxlZnQ6LTE2MHB4ICFpbXBvcnRhbnQ7bWFyZ2luLXJpZ2h0Oi0xNjBweCAhaW1wb3J0YW50fS5teS1uMjB7bWFyZ2luLXRvcDotMTYwcHggIWltcG9ydGFudDttYXJnaW4tYm90dG9tOi0xNjBweCAhaW1wb3J0YW50fS5tYS1zbS0yMHttYXJnaW46ODBweCAhaW1wb3J0YW50fS5tdC1zbS0yMHttYXJnaW4tdG9wOjgwcHggIWltcG9ydGFudH0ubXQtc20tbjIwe21hcmdpbi10b3A6LTgwcHggIWltcG9ydGFudH0ubWItc20tMjB7bWFyZ2luLWJvdHRvbTo4MHB4ICFpbXBvcnRhbnR9Lm1sLXNtLTIwe21hcmdpbi1sZWZ0OjgwcHggIWltcG9ydGFudH0ubXItc20tMjB7bWFyZ2luLXJpZ2h0OjgwcHggIWltcG9ydGFudH0ubXgtc20tMjB7bWFyZ2luLWxlZnQ6ODBweCAhaW1wb3J0YW50O21hcmdpbi1yaWdodDo4MHB4ICFpbXBvcnRhbnR9Lm15LXNtLTIwe21hcmdpbi10b3A6ODBweCAhaW1wb3J0YW50O21hcmdpbi1ib3R0b206ODBweCAhaW1wb3J0YW50fS5wYS0yMHtwYWRkaW5nOjE2MHB4ICFpbXBvcnRhbnR9LnB0LTIwe3BhZGRpbmctdG9wOjE2MHB4ICFpbXBvcnRhbnR9LnBiLTIwe3BhZGRpbmctYm90dG9tOjE2MHB4ICFpbXBvcnRhbnR9LnBsLTIwe3BhZGRpbmctbGVmdDoxNjBweCAhaW1wb3J0YW50fS5wci0yMHtwYWRkaW5nLXJpZ2h0OjE2MHB4ICFpbXBvcnRhbnR9LnB4LTIwe3BhZGRpbmctbGVmdDoxNjBweCAhaW1wb3J0YW50O3BhZGRpbmctcmlnaHQ6MTYwcHggIWltcG9ydGFudH0ucHktMjB7cGFkZGluZy10b3A6MTYwcHggIWltcG9ydGFudDtwYWRkaW5nLWJvdHRvbToxNjBweCAhaW1wb3J0YW50fS5mbG9hdC1se2Zsb2F0OmxlZnR9LmZsb2F0LXJ7ZmxvYXQ6cmlnaHR9LnRleHQtcnt0ZXh0LWFsaWduOnJpZ2h0fS50ZXh0LWx7dGV4dC1hbGlnbjpsZWZ0fS50ZXh0LWN7dGV4dC1hbGlnbjpjZW50ZXJ9LnRleHQtdXBwZXJjYXNle3RleHQtdHJhbnNmb3JtOnVwcGVyY2FzZX0ud2ItYWxse3dvcmQtYnJlYWs6YnJlYWstYWxsfS5kLWJsb2Nre2Rpc3BsYXk6YmxvY2t9LmQtbm9uZXtkaXNwbGF5Om5vbmV9LmQtaWJsb2Nre2Rpc3BsYXk6aW5saW5lLWJsb2NrfS5kLWlmbGV4e2Rpc3BsYXk6aW5saW5lLWZsZXh9LmQtZmxleHtkaXNwbGF5OmZsZXh9LmQtZmxleC0td3JhcHtmbGV4LXdyYXA6d3JhcH0uZC1ub25le2Rpc3BsYXk6bm9uZX0uYWktZmxleC1zdGFydHthbGlnbi1pdGVtczpmbGV4LXN0YXJ0fS5haS1jZW50ZXJ7YWxpZ24taXRlbXM6Y2VudGVyfS5wb3MtcmVse3Bvc2l0aW9uOnJlbGF0aXZlfS5wb3MtYWJze3Bvc2l0aW9uOmFic29sdXRlfS5mdy1ib2xke2ZvbnQtd2VpZ2h0OmJvbGR9LmZ3LW5vcm1hbHtmb250LXdlaWdodDpub3JtYWx9LmZ3LTQwMHtmb250LXdlaWdodDo0MDB9LmZ3LTUwMHtmb250LXdlaWdodDo1MDB9LmZ3LTYwMHtmb250LXdlaWdodDo2MDB9LmgtMTAwe2hlaWdodDoxMDAlfS53LTEwMHt3aWR0aDoxMDAlfS5vdmVyZmxvdy1oaWRkZW57b3ZlcmZsb3c6aGlkZGVufS5vdmVyZmxvdy12aXNpYmxle292ZXJmbG93OnZpc2libGV9Lm92ZXJmbG93LWF1dG97b3ZlcmZsb3c6YXV0b30ub3ZlcmZsb3ctc2Nyb2xse292ZXJmbG93LXk6YXV0bztvdmVyZmxvdy14OmhpZGRlbn0ub3ZlcmZsb3ctc2Nyb2xsOjotd2Via2l0LXNjcm9sbGJhcnt3aWR0aDoxMHB4fS5vdmVyZmxvdy1zY3JvbGw6Oi13ZWJraXQtc2Nyb2xsYmFyLXRyYWNrey13ZWJraXQtYm94LXNoYWRvdzppbnNldCAwIDAgNnB4IHJnYmEoMCwwLDAsLjMpO2JveC1zaGFkb3c6aW5zZXQgMCAwIDZweCByZ2JhKDAsMCwwLC4zKTstd2Via2l0LWJvcmRlci1yYWRpdXM6MTBweDstbW96LWJvcmRlci1yYWRpdXM6MTBweDtib3JkZXItcmFkaXVzOjEwcHg7YmFja2dyb3VuZC1jbGlwOnBhZGRpbmctYm94O2JhY2tncm91bmQtY29sb3I6I2Y1ZjVmNX0ub3ZlcmZsb3ctc2Nyb2xsOjotd2Via2l0LXNjcm9sbGJhci10aHVtYntiYWNrZ3JvdW5kLWNvbG9yOiM4ODg7LXdlYmtpdC1ib3JkZXItcmFkaXVzOjEwcHg7LW1vei1ib3JkZXItcmFkaXVzOjEwcHg7Ym9yZGVyLXJhZGl1czoxMHB4O2JhY2tncm91bmQtY2xpcDpwYWRkaW5nLWJveDstd2Via2l0LWJveC1zaGFkb3c6aW5zZXQgMCAwIDZweCByZ2JhKDAsMCwwLC4zKTtib3gtc2hhZG93Omluc2V0IDAgMCA2cHggcmdiYSgwLDAsMCwuMyl9Lm92ZXJmbG93LXNjcm9sbDo6LXdlYmtpdC1zY3JvbGxiYXItdGh1bWI6aG92ZXJ7YmFja2dyb3VuZC1jb2xvcjojNTU1fS5vdmVyZmxvdy14e292ZXJmbG93LXg6YXV0byAhaW1wb3J0YW50fS5vdmVyZmxvdy14Ojotd2Via2l0LXNjcm9sbGJhcntoZWlnaHQ6MTBweH0ub3ZlcmZsb3cteDo6LXdlYmtpdC1zY3JvbGxiYXItdHJhY2t7LXdlYmtpdC1ib3gtc2hhZG93Omluc2V0IDAgMCA2cHggcmdiYSgwLDAsMCwuMyk7Ym94LXNoYWRvdzppbnNldCAwIDAgNnB4IHJnYmEoMCwwLDAsLjMpOy13ZWJraXQtYm9yZGVyLXJhZGl1czoxMHB4Oy1tb3otYm9yZGVyLXJhZGl1czoxMHB4O2JvcmRlci1yYWRpdXM6MTBweDtiYWNrZ3JvdW5kLWNsaXA6cGFkZGluZy1ib3g7YmFja2dyb3VuZC1jb2xvcjojZjVmNWY1fS5vdmVyZmxvdy14Ojotd2Via2l0LXNjcm9sbGJhci10aHVtYntiYWNrZ3JvdW5kLWNvbG9yOiM4ODg7LXdlYmtpdC1ib3JkZXItcmFkaXVzOjEwcHg7LW1vei1ib3JkZXItcmFkaXVzOjEwcHg7Ym9yZGVyLXJhZGl1czoxMHB4O2JhY2tncm91bmQtY2xpcDpwYWRkaW5nLWJveDstd2Via2l0LWJveC1zaGFkb3c6aW5zZXQgMCAwIDZweCByZ2JhKDAsMCwwLC4zKTtib3gtc2hhZG93Omluc2V0IDAgMCA2cHggcmdiYSgwLDAsMCwuMyl9Lm92ZXJmbG93LXg6Oi13ZWJraXQtc2Nyb2xsYmFyLXRodW1iOmhvdmVye2JhY2tncm91bmQtY29sb3I6IzU1NX0ucG1pZGRsZXtwb3NpdGlvbjphYnNvbHV0ZTt0b3A6NTAlO3RyYW5zZm9ybTp0cmFuc2xhdGUoLTUwJSwgLTUwJSk7bGVmdDo1MCV9LmN1cnNvci1wb2ludGVye2N1cnNvcjpwb2ludGVyfS5jdXJzb3ItZGVmYXVsdHtjdXJzb3I6ZGVmYXVsdH1cIiwgXCJcIix7XCJ2ZXJzaW9uXCI6MyxcInNvdXJjZXNcIjpbXCJ3ZWJwYWNrOi8vLi9zcmMvc2Nzcy9jb21tb24vX3Jlc2V0LnNjc3NcIixcIndlYnBhY2s6Ly8uL3NyYy9zY3NzL2NvbW1vbi9fdmFyaWFibGVzLnNjc3NcIixcIndlYnBhY2s6Ly8uL3NyYy9zY3NzL2NvbW1vbi9fdHlwb2dyYXBoeS5zY3NzXCIsXCJ3ZWJwYWNrOi8vLi9zcmMvc2Nzcy9jb21wb25lbnRzL19jYXJkLnNjc3NcIixcIndlYnBhY2s6Ly8uL3NyYy9zY3NzL2NvbXBvbmVudHMvX2JyZWFkY3J1bWJzLnNjc3NcIixcIndlYnBhY2s6Ly8uL3NyYy9zY3NzL2NvbXBvbmVudHMvX2xpc3Quc2Nzc1wiLFwid2VicGFjazovLy4vc3JjL3Njc3MvY29tcG9uZW50cy9fYnV0dG9uLnNjc3NcIixcIndlYnBhY2s6Ly8uL3NyYy9zY3NzL2xheW91dC9fbWFpbi5zY3NzXCIsXCJ3ZWJwYWNrOi8vLi9zcmMvc2Nzcy9sYXlvdXQvX2dyaWQuc2Nzc1wiLFwid2VicGFjazovLy4vc3JjL3Njc3MvY29tbW9uL191dGlsaXRpZXMuc2Nzc1wiLFwid2VicGFjazovLy4vc3JjL3Nj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MEJBQUEsQ0FFSixTQUNJLDJCQUFBLENBRUosU0FDSSwwQkFBQSxDQUNBLDJCQUFBLENBRUosU0FDSSx5QkFBQSxDQUNBLDRCQUFBLENBR0osTUFDSSx1QkFBQSxDQUVKLE1BQ0ksMkJBQUEsQ0FFSixNQUNJLDhCQUFBLENBRUosTUFDSSw0QkFBQSxDQUVKLE1BQ0ksNkJBQUEsQ0FFSixNQUNJLDRCQUFBLENBQ0EsNkJBQUEsQ0FFSixNQUNJLDJCQUFBLENBQ0EsOEJBQUEsQ0FoR0osTUFDSSxzQkFBQSxDQUVKLE1BQ0ksMEJBQUEsQ0FFSixNQUNJLDZCQUFBLENBRUosTUFDSSwyQkFBQSxDQUVKLE1BQ0ksNEJBQUEsQ0FFSixNQUNJLDJCQUFBLENBQ0EsNEJBQUEsQ0FFSixNQUNJLDBCQUFBLENBQ0EsNkJBQUEsQ0FHSixPQUNJLHVCQUFBLENBRUosT0FDSSwyQkFBQSxDQUVKLE9BQ0ksOEJBQUEsQ0FFSixPQUNJLDRCQUFBLENBRUosT0FDSSw2QkFBQSxDQUVKLE9BQ0ksNEJBQUEsQ0FDQSw2QkFBQSxDQUVKLE9BQ0ksMkJBQUEsQ0FDQSw4QkFBQSxDQUdKLFNBQ0ksc0JBQUEsQ0FFSixTQUNJLDBCQUFBLENBRUosVUFDSSwyQkFBQSxDQUVKLFNBQ0ksNkJBQUEsQ0FFSixTQUNJLDJCQUFBLENBRUosU0FDSSw0QkFBQSxDQUVKLFNBQ0ksMkJBQUEsQ0FDQSw0QkFBQSxDQUVKLFNBQ0ksMEJBQUEsQ0FDQSw2QkFBQSxDQUdKLE1BQ0ksdUJBQUEsQ0FFSixNQUNJLDJCQUFBLENBRUosTUFDSSw4QkFBQSxDQUVKLE1BQ0ksNEJBQUEsQ0FFSixNQUNJLDZCQUFBLENBRUosTUFDSSw0QkFBQSxDQUNBLDZCQUFBLENBRUosTUFDSSwyQkFBQSxDQUNBLDhCQUFBLENBaEdKLE1BQ0ksc0JBQUEsQ0FFSixNQUNJLDBCQUFBLENBRUosTUFDSSw2QkFBQSxDQUVKLE1BQ0ksMkJBQUEsQ0FFSixNQUNJLDRCQUFBLENBRUosTUFDSSwyQkFBQSxDQUNBLDRCQUFBLENBRUosTUFDSSwwQkFBQSxDQUNBLDZCQUFBLENBR0osT0FDSSx1QkFBQSxDQUVKLE9BQ0ksMkJBQUEsQ0FFSixPQUNJLDhCQUFBLENBRUosT0FDSSw0QkFBQSxDQUVKLE9BQ0ksNkJBQUEsQ0FFSixPQUNJLDRCQUFBLENBQ0EsNkJBQUEsQ0FFSixPQUNJLDJCQUFBLENBQ0EsOEJBQUEsQ0FHSixTQUNJLHNCQUFBLENBRUosU0FDSSwwQkFBQSxDQUVKLFVBQ0ksMkJBQUEsQ0FFSixTQUNJLDZCQUFBLENBRUosU0FDSSwyQkFBQSxDQUVKLFNBQ0ksNEJBQUEsQ0FFSixTQUNJLDJCQUFBLENBQ0EsNEJBQUEsQ0FFSixTQUNJLDBCQUFBLENBQ0EsNkJBQUEsQ0FHSixNQUNJLHVCQUFBLENBRUosTUFDSSwyQkFBQSxDQUVKLE1BQ0ksOEJBQUEsQ0FFSixNQUNJLDRCQUFBLENBRUosTUFDSSw2QkFBQSxDQUVKLE1BQ0ksNEJBQUEsQ0FDQSw2QkFBQSxDQUVKLE1BQ0ksMkJBQUEsQ0FDQSw4QkFBQSxDQWhHSixNQUNJLHNCQUFBLENBRUosTUFDSSwwQkFBQSxDQUVKLE1BQ0ksNkJBQUEsQ0FFSixNQUNJLDJCQUFBLENBRUosTUFDSSw0QkFBQSxDQUVKLE1BQ0ksMkJBQUEsQ0FDQSw0QkFBQSxDQUVKLE1BQ0ksMEJBQUEsQ0FDQSw2QkFBQSxDQUdKLE9BQ0ksdUJBQUEsQ0FFSixPQUNJLDJCQUFBLENBRUosT0FDSSw4QkFBQSxDQUVKLE9BQ0ksNEJBQUEsQ0FFSixPQUNJLDZCQUFBLENBRUosT0FDSSw0QkFBQSxDQUNBLDZCQUFBLENBRUosT0FDSSwyQkFBQSxDQUNBLDhCQUFBLENBR0osU0FDSSxzQkFBQSxDQUVKLFNBQ0ksMEJBQUEsQ0FFSixVQUNJLDJCQUFBLENBRUosU0FDSSw2QkFBQSxDQUVKLFNBQ0ksMkJBQUEsQ0FFSixTQUNJLDRCQUFBLENBRUosU0FDSSwyQkFBQSxDQUNBLDRCQUFBLENBRUosU0FDSSwwQkFBQSxDQUNBLDZCQUFBLENBR0osTUFDSSx1QkFBQSxDQUVKLE1BQ0ksMkJBQUEsQ0FFSixNQUNJLDhCQUFBLENBRUosTUFDSSw0QkFBQSxDQUVKLE1BQ0ksNkJBQUEsQ0FFSixNQUNJLDRCQUFBLENBQ0EsNkJBQUEsQ0FFSixNQUNJLDJCQUFBLENBQ0EsOEJBQUEsQ0FoR0osTUFDSSxzQkFBQSxDQUVKLE1BQ0ksMEJBQUEsQ0FFSixNQUNJLDZCQUFBLENBRUosTUFDSSwyQkFBQSxDQUVKLE1BQ0ksNEJBQUEsQ0FFSixNQUNJLDJCQUFBLENBQ0EsNEJBQUEsQ0FFSixNQUNJLDBCQUFBLENBQ0EsNkJBQUEsQ0FHSixPQUNJLHVCQUFBLENBRUosT0FDSSwyQkFBQSxDQUVKLE9BQ0ksOEJBQUEsQ0FFSixPQUNJLDRCQUFBLENBRUosT0FDSSw2QkFBQSxDQUVKLE9BQ0ksNEJBQUEsQ0FDQSw2QkFBQSxDQUVKLE9BQ0ksMkJBQUEsQ0FDQSw4QkFBQSxDQUdKLFNBQ0ksc0JBQUEsQ0FFSixTQUNJLDBCQUFBLENBRUosVUFDSSwyQkFBQSxDQUVKLFNBQ0ksNkJBQUEsQ0FFSixTQUNJLDJCQUFBLENBRUosU0FDSSw0QkFBQSxDQUVKLFNBQ0ksMkJBQUEsQ0FDQSw0QkFBQSxDQUVKLFNBQ0ksMEJBQUEsQ0FDQSw2QkFBQSxDQUdKLE1BQ0ksdUJBQUEsQ0FFSixNQUNJLDJCQUFBLENBRUosTUFDSSw4QkFBQSxDQUVKLE1BQ0ksNEJBQUEsQ0FFSixNQUNJLDZCQUFBLENBRUosTUFDSSw0QkFBQSxDQUNBLDZCQUFBLENBRUosTUFDSSwyQkFBQSxDQUNBLDhCQUFBLENBaEdKLE1BQ0ksc0JBQUEsQ0FFSixNQUNJLDBCQUFBLENBRUosTUFDSSw2QkFBQSxDQUVKLE1BQ0ksMkJBQUEsQ0FFSixNQUNJLDRCQUFBLENBRUosTUFDSSwyQkFBQSxDQUNBLDRCQUFBLENBRUosTUFDSSwwQkFBQSxDQUNBLDZCQUFBLENBR0osT0FDSSx1QkFBQSxDQUVKLE9BQ0ksMkJBQUEsQ0FFSixPQUNJLDhCQUFBLENBRUosT0FDSSw0QkFBQSxDQUVKLE9BQ0ksNkJBQUEsQ0FFSixPQUNJLDRCQUFBLENBQ0EsNkJBQUEsQ0FFSixPQUNJLDJCQUFBLENBQ0EsOEJBQUEsQ0FHSixTQUNJLHNCQUFBLENBRUosU0FDSSwwQkFBQSxDQUVKLFVBQ0ksMkJBQUEsQ0FFSixTQUNJLDZCQUFBLENBRUosU0FDSSwyQkFBQSxDQUVKLFNBQ0ksNEJBQUEsQ0FFSixTQUNJLDJCQUFBLENBQ0EsNEJBQUEsQ0FFSixTQUNJLDBCQUFBLENBQ0EsNkJBQUEsQ0FHSixNQUNJLHVCQUFBLENBRUosTUFDSSwyQkFBQSxDQUVKLE1BQ0ksOEJBQUEsQ0FFSixNQUNJLDRCQUFBLENBRUosTUFDSSw2QkFBQSxDQUVKLE1BQ0ksNEJBQUEsQ0FDQSw2QkFBQSxDQUVKLE1BQ0ksMkJBQUEsQ0FDQSw4QkFBQSxDQWhHSixNQUNJLHNCQUFBLENBRUosTUFDSSwwQkFBQSxDQUVKLE1BQ0ksNkJBQUEsQ0FFSixNQUNJLDJCQUFBLENBRUosTUFDSSw0QkFBQSxDQUVKLE1BQ0ksMkJBQUEsQ0FDQSw0QkFBQSxDQUVKLE1BQ0ksMEJBQUEsQ0FDQSw2QkFBQSxDQUdKLE9BQ0ksdUJBQUEsQ0FFSixPQUNJLDJCQUFBLENBRUosT0FDSSw4QkFBQSxDQUVKLE9BQ0ksNEJBQUEsQ0FFSixPQUNJLDZCQUFBLENBRUosT0FDSSw0QkFBQSxDQUNBLDZCQUFBLENBRUosT0FDSSwyQkFBQSxDQUNBLDhCQUFBLENBR0osU0FDSSxzQkFBQSxDQUVKLFNBQ0ksMEJBQUEsQ0FFSixVQUNJLDJCQUFBLENBRUosU0FDSSw2QkFBQSxDQUVKLFNBQ0ksMkJBQUEsQ0FFSixTQUNJLDRCQUFBLENBRUosU0FDSSwyQkFBQSxDQUNBLDRCQUFBLENBRUosU0FDSSwwQkFBQSxDQUNBLDZCQUFBLENBR0osTUFDSSx1QkFBQSxDQUVKLE1BQ0ksMkJBQUEsQ0FFSixNQUNJLDhCQUFBLENBRUosTUFDSSw0QkFBQSxDQUVKLE1BQ0ksNkJBQUEsQ0FFSixNQUNJLDRCQUFBLENBQ0EsNkJBQUEsQ0FFSixNQUNJLDJCQUFBLENBQ0EsOEJBQUEsQ0FoR0osTUFDSSxzQkFBQSxDQUVKLE1BQ0ksMEJBQUEsQ0FFSixNQUNJLDZCQUFBLENBRUosTUFDSSwyQkFBQSxDQUVKLE1BQ0ksNEJBQUEsQ0FFSixNQUNJLDJCQUFBLENBQ0EsNEJBQUEsQ0FFSixNQUNJLDBCQUFBLENBQ0EsNkJBQUEsQ0FHSixPQUNJLHVCQUFBLENBRUosT0FDSSwyQkFBQSxDQUVKLE9BQ0ksOEJBQUEsQ0FFSixPQUNJLDRCQUFBLENBRUosT0FDSSw2QkFBQSxDQUVKLE9BQ0ksNEJBQUEsQ0FDQSw2QkFBQSxDQUVKLE9BQ0ksMkJBQUEsQ0FDQSw4QkFBQSxDQUdKLFNBQ0ksc0JBQUEsQ0FFSixTQUNJLDBCQUFBLENBRUosVUFDSSwyQkFBQSxDQUVKLFNBQ0ksNkJBQUEsQ0FFSixTQUNJLDJCQUFBLENBRUosU0FDSSw0QkFBQSxDQUVKLFNBQ0ksMkJBQUEsQ0FDQSw0QkFBQSxDQUVKLFNBQ0ksMEJBQUEsQ0FDQSw2QkFBQSxDQUdKLE1BQ0ksdUJBQUEsQ0FFSixNQUNJLDJCQUFBLENBRUosTUFDSSw4QkFBQSxDQUVKLE1BQ0ksNEJBQUEsQ0FFSixNQUNJLDZCQUFBLENBRUosTUFDSSw0QkFBQSxDQUNBLDZCQUFBLENBRUosTUFDSSwyQkFBQSxDQUNBLDhCQUFBLENBaEdKLE9BQ0ksc0JBQUEsQ0FFSixPQUNJLDBCQUFBLENBRUosT0FDSSw2QkFBQSxDQUVKLE9BQ0ksMkJBQUEsQ0FFSixPQUNJLDRCQUFBLENBRUosT0FDSSwyQkFBQSxDQUNBLDRCQUFBLENBRUosT0FDSSwwQkFBQSxDQUNBLDZCQUFBLENBR0osUUFDSSx1QkFBQSxDQUVKLFFBQ0ksMkJBQUEsQ0FFSixRQUNJLDhCQUFBLENBRUosUUFDSSw0QkFBQSxDQUVKLFFBQ0ksNkJBQUEsQ0FFSixRQUNJLDRCQUFBLENBQ0EsNkJBQUEsQ0FFSixRQUNJLDJCQUFBLENBQ0EsOEJBQUEsQ0FHSixVQUNJLHNCQUFBLENBRUosVUFDSSwwQkFBQSxDQUVKLFdBQ0ksMkJBQUEsQ0FFSixVQUNJLDZCQUFBLENBRUosVUFDSSwyQkFBQSxDQUVKLFVBQ0ksNEJBQUEsQ0FFSixVQUNJLDJCQUFBLENBQ0EsNEJBQUEsQ0FFSixVQUNJLDBCQUFBLENBQ0EsNkJBQUEsQ0FHSixPQUNJLHVCQUFBLENBRUosT0FDSSwyQkFBQSxDQUVKLE9BQ0ksOEJBQUEsQ0FFSixPQUNJLDRCQUFBLENBRUosT0FDSSw2QkFBQSxDQUVKLE9BQ0ksNEJBQUEsQ0FDQSw2QkFBQSxDQUVKLE9BQ0ksMkJBQUEsQ0FDQSw4QkFBQSxDQWhHSixPQUNJLHNCQUFBLENBRUosT0FDSSwwQkFBQSxDQUVKLE9BQ0ksNkJBQUEsQ0FFSixPQUNJLDJCQUFBLENBRUosT0FDSSw0QkFBQSxDQUVKLE9BQ0ksMkJBQUEsQ0FDQSw0QkFBQSxDQUVKLE9BQ0ksMEJBQUEsQ0FDQSw2QkFBQSxDQUdKLFFBQ0ksdUJBQUEsQ0FFSixRQUNJLDJCQUFBLENBRUosUUFDSSw4QkFBQSxDQUVKLFFBQ0ksNEJBQUEsQ0FFSixRQUNJLDZCQUFBLENBRUosUUFDSSw0QkFBQSxDQUNBLDZCQUFBLENBRUosUUFDSSwyQkFBQSxDQUNBLDhCQUFBLENBR0osVUFDSSxzQkFBQSxDQUVKLFVBQ0ksMEJBQUEsQ0FFSixXQUNJLDJCQUFBLENBRUosVUFDSSw2QkFBQSxDQUVKLFVBQ0ksMkJBQUEsQ0FFSixVQUNJLDRCQUFBLENBRUosVUFDSSwyQkFBQSxDQUNBLDRCQUFBLENBRUosVUFDSSwwQkFBQSxDQUNBLDZCQUFBLENBR0osT0FDSSx1QkFBQSxDQUVKLE9BQ0ksMkJBQUEsQ0FFSixPQUNJLDhCQUFBLENBRUosT0FDSSw0QkFBQSxDQUVKLE9BQ0ksNkJBQUEsQ0FFSixPQUNJLDRCQUFBLENBQ0EsNkJBQUEsQ0FFSixPQUNJLDJCQUFBLENBQ0EsOEJBQUEsQ0FoR0osT0FDSSxzQkFBQSxDQUVKLE9BQ0ksMEJBQUEsQ0FFSixPQUNJLDZCQUFBLENBRUosT0FDSSwyQkFBQSxDQUVKLE9BQ0ksNEJBQUEsQ0FFSixPQUNJLDJCQUFBLENBQ0EsNEJBQUEsQ0FFSixPQUNJLDBCQUFBLENBQ0EsNkJBQUEsQ0FHSixRQUNJLHVCQUFBLENBRUosUUFDSSwyQkFBQSxDQUVKLFFBQ0ksOEJBQUEsQ0FFSixRQUNJLDRCQUFBLENBRUosUUFDSSw2QkFBQSxDQUVKLFFBQ0ksNEJBQUEsQ0FDQSw2QkFBQSxDQUVKLFFBQ0ksMkJBQUEsQ0FDQSw4QkFBQSxDQUdKLFVBQ0ksc0JBQUEsQ0FFSixVQUNJLDBCQUFBLENBRUosV0FDSSwyQkFBQSxDQUVKLFVBQ0ksNkJBQUEsQ0FFSixVQUNJLDJCQUFBLENBRUosVUFDSSw0QkFBQSxDQUVKLFVBQ0ksMkJBQUEsQ0FDQSw0QkFBQSxDQUVKLFVBQ0ksMEJBQUEsQ0FDQSw2QkFBQSxDQUdKLE9BQ0ksdUJBQUEsQ0FFSixPQUNJLDJCQUFBLENBRUosT0FDSSw4QkFBQSxDQUVKLE9BQ0ksNEJBQUEsQ0FFSixPQUNJLDZCQUFBLENBRUosT0FDSSw0QkFBQSxDQUNBLDZCQUFBLENBRUosT0FDSSwyQkFBQSxDQUNBLDhCQUFBLENBaEdKLE9BQ0ksdUJBQUEsQ0FFSixPQUNJLDJCQUFBLENBRUosT0FDSSw4QkFBQSxDQUVKLE9BQ0ksNEJBQUEsQ0FFSixPQUNJLDZCQUFBLENBRUosT0FDSSw0QkFBQSxDQUNBLDZCQUFBLENBRUosT0FDSSwyQkFBQSxDQUNBLDhCQUFBLENBR0osUUFDSSx3QkFBQSxDQUVKLFFBQ0ksNEJBQUEsQ0FFSixRQUNJLCtCQUFBLENBRUosUUFDSSw2QkFBQSxDQUVKLFFBQ0ksOEJBQUEsQ0FFSixRQUNJLDZCQUFBLENBQ0EsOEJBQUEsQ0FFSixRQUNJLDRCQUFBLENBQ0EsK0JBQUEsQ0FHSixVQUNJLHNCQUFBLENBRUosVUFDSSwwQkFBQSxDQUVKLFdBQ0ksMkJBQUEsQ0FFSixVQUNJLDZCQUFBLENBRUosVUFDSSwyQkFBQSxDQUVKLFVBQ0ksNEJBQUEsQ0FFSixVQUNJLDJCQUFBLENBQ0EsNEJBQUEsQ0FFSixVQUNJLDBCQUFBLENBQ0EsNkJBQUEsQ0FHSixPQUNJLHdCQUFBLENBRUosT0FDSSw0QkFBQSxDQUVKLE9BQ0ksK0JBQUEsQ0FFSixPQUNJLDZCQUFBLENBRUosT0FDSSw4QkFBQSxDQUVKLE9BQ0ksNkJBQUEsQ0FDQSw4QkFBQSxDQUVKLE9BQ0ksNEJBQUEsQ0FDQSwrQkFBQSxDQWhHSixPQUNJLHVCQUFBLENBRUosT0FDSSwyQkFBQSxDQUVKLE9BQ0ksOEJBQUEsQ0FFSixPQUNJLDRCQUFBLENBRUosT0FDSSw2QkFBQSxDQUVKLE9BQ0ksNEJBQUEsQ0FDQSw2QkFBQSxDQUVKLE9BQ0ksMkJBQUEsQ0FDQSw4QkFBQSxDQUdKLFFBQ0ksd0JBQUEsQ0FFSixRQUNJLDRCQUFBLENBRUosUUFDSSwrQkFBQSxDQUVKLFFBQ0ksNkJBQUEsQ0FFSixRQUNJLDhCQUFBLENBRUosUUFDSSw2QkFBQSxDQUNBLDhCQUFBLENBRUosUUFDSSw0QkFBQSxDQUNBLCtCQUFBLENBR0osVUFDSSxzQkFBQSxDQUVKLFVBQ0ksMEJBQUEsQ0FFSixXQUNJLDJCQUFBLENBRUosVUFDSSw2QkFBQSxDQUVKLFVBQ0ksMkJBQUEsQ0FFSixVQUNJLDRCQUFBLENBRUosVUFDSSwyQkFBQSxDQUNBLDRCQUFBLENBRUosVUFDSSwwQkFBQSxDQUNBLDZCQUFBLENBR0osT0FDSSx3QkFBQSxDQUVKLE9BQ0ksNEJBQUEsQ0FFSixPQUNJLCtCQUFBLENBRUosT0FDSSw2QkFBQSxDQUVKLE9BQ0ksOEJBQUEsQ0FFSixPQUNJLDZCQUFBLENBQ0EsOEJBQUEsQ0FFSixPQUNJLDRCQUFBLENBQ0EsK0JBQUEsQ0FoR0osT0FDSSx1QkFBQSxDQUVKLE9BQ0ksMkJBQUEsQ0FFSixPQUNJLDhCQUFBLENBRUosT0FDSSw0QkFBQSxDQUVKLE9BQ0ksNkJBQUEsQ0FFSixPQUNJLDRCQUFBLENBQ0EsNkJBQUEsQ0FFSixPQUNJLDJCQUFBLENBQ0EsOEJBQUEsQ0FHSixRQUNJLHdCQUFBLENBRUosUUFDSSw0QkFBQSxDQUVKLFFBQ0ksK0JBQUEsQ0FFSixRQUNJLDZCQUFBLENBRUosUUFDSSw4QkFBQSxDQUVKLFFBQ0ksNkJBQUEsQ0FDQSw4QkFBQSxDQUVKLFFBQ0ksNEJBQUEsQ0FDQSwrQkFBQSxDQUdKLFVBQ0ksc0JBQUEsQ0FFSixVQUNJLDBCQUFBLENBRUosV0FDSSwyQkFBQSxDQUVKLFVBQ0ksNkJBQUEsQ0FFSixVQUNJLDJCQUFBLENBRUosVUFDSSw0QkFBQSxDQUVKLFVBQ0ksMkJBQUEsQ0FDQSw0QkFBQSxDQUVKLFVBQ0ksMEJBQUEsQ0FDQSw2QkFBQSxDQUdKLE9BQ0ksd0JBQUEsQ0FFSixPQUNJLDRCQUFBLENBRUosT0FDSSwrQkFBQSxDQUVKLE9BQ0ksNkJBQUEsQ0FFSixPQUNJLDhCQUFBLENBRUosT0FDSSw2QkFBQSxDQUNBLDhCQUFBLENBRUosT0FDSSw0QkFBQSxDQUNBLCtCQUFBLENBaEdKLE9BQ0ksdUJBQUEsQ0FFSixPQUNJLDJCQUFBLENBRUosT0FDSSw4QkFBQSxDQUVKLE9BQ0ksNEJBQUEsQ0FFSixPQUNJLDZCQUFBLENBRUosT0FDSSw0QkFBQSxDQUNBLDZCQUFBLENBRUosT0FDSSwyQkFBQSxDQUNBLDhCQUFBLENBR0osUUFDSSx3QkFBQSxDQUVKLFFBQ0ksNEJBQUEsQ0FFSixRQUNJLCtCQUFBLENBRUosUUFDSSw2QkFBQSxDQUVKLFFBQ0ksOEJBQUEsQ0FFSixRQUNJLDZCQUFBLENBQ0EsOEJBQUEsQ0FFSixRQUNJLDRCQUFBLENBQ0EsK0JBQUEsQ0FHSixVQUNJLHNCQUFBLENBRUosVUFDSSwwQkFBQSxDQUVKLFdBQ0ksMkJBQUEsQ0FFSixVQUNJLDZCQUFBLENBRUosVUFDSSwyQkFBQSxDQUVKLFVBQ0ksNEJBQUEsQ0FFSixVQUNJLDJCQUFBLENBQ0EsNEJBQUEsQ0FFSixVQUNJLDBCQUFBLENBQ0EsNkJBQUEsQ0FHSixPQUNJLHdCQUFBLENBRUosT0FDSSw0QkFBQSxDQUVKLE9BQ0ksK0JBQUEsQ0FFSixPQUNJLDZCQUFBLENBRUosT0FDSSw4QkFBQSxDQUVKLE9BQ0ksNkJBQUEsQ0FDQSw4QkFBQSxDQUVKLE9BQ0ksNEJBQUEsQ0FDQSwrQkFBQSxDQWhHSixPQUNJLHVCQUFBLENBRUosT0FDSSwyQkFBQSxDQUVKLE9BQ0ksOEJBQUEsQ0FFSixPQUNJLDRCQUFBLENBRUosT0FDSSw2QkFBQSxDQUVKLE9BQ0ksNEJBQUEsQ0FDQSw2QkFBQSxDQUVKLE9BQ0ksMkJBQUEsQ0FDQSw4QkFBQSxDQUdKLFFBQ0ksd0JBQUEsQ0FFSixRQUNJLDRCQUFBLENBRUosUUFDSSwrQkFBQSxDQUVKLFFBQ0ksNkJBQUEsQ0FFSixRQUNJLDhCQUFBLENBRUosUUFDSSw2QkFBQSxDQUNBLDhCQUFBLENBRUosUUFDSSw0QkFBQSxDQUNBLCtCQUFBLENBR0osVUFDSSxzQkFBQSxDQUVKLFVBQ0ksMEJBQUEsQ0FFSixXQUNJLDJCQUFBLENBRUosVUFDSSw2QkFBQSxDQUVKLFVBQ0ksMkJBQUEsQ0FFSixVQUNJLDRCQUFBLENBRUosVUFDSSwyQkFBQSxDQUNBLDRCQUFBLENBRUosVUFDSSwwQkFBQSxDQUNBLDZCQUFBLENBR0osT0FDSSx3QkFBQSxDQUVKLE9BQ0ksNEJBQUEsQ0FFSixPQUNJLCtCQUFBLENBRUosT0FDSSw2QkFBQSxDQUVKLE9BQ0ksOEJBQUEsQ0FFSixPQUNJLDZCQUFBLENBQ0EsOEJBQUEsQ0FFSixPQUNJLDRCQUFBLENBQ0EsK0JBQUEsQ0FoR0osT0FDSSx1QkFBQSxDQUVKLE9BQ0ksMkJBQUEsQ0FFSixPQUNJLDhCQUFBLENBRUosT0FDSSw0QkFBQSxDQUVKLE9BQ0ksNkJBQUEsQ0FFSixPQUNJLDRCQUFBLENBQ0EsNkJBQUEsQ0FFSixPQUNJLDJCQUFBLENBQ0EsOEJBQUEsQ0FHSixRQUNJLHdCQUFBLENBRUosUUFDSSw0QkFBQSxDQUVKLFFBQ0ksK0JBQUEsQ0FFSixRQUNJLDZCQUFBLENBRUosUUFDSSw4QkFBQSxDQUVKLFFBQ0ksNkJBQUEsQ0FDQSw4QkFBQSxDQUVKLFFBQ0ksNEJBQUEsQ0FDQSwrQkFBQSxDQUdKLFVBQ0ksc0JBQUEsQ0FFSixVQUNJLDBCQUFBLENBRUosV0FDSSwyQkFBQSxDQUVKLFVBQ0ksNkJBQUEsQ0FFSixVQUNJLDJCQUFBLENBRUosVUFDSSw0QkFBQSxDQUVKLFVBQ0ksMkJBQUEsQ0FDQSw0QkFBQSxDQUVKLFVBQ0ksMEJBQUEsQ0FDQSw2QkFBQSxDQUdKLE9BQ0ksd0JBQUEsQ0FFSixPQUNJLDRCQUFBLENBRUosT0FDSSwrQkFBQSxDQUVKLE9BQ0ksNkJBQUEsQ0FFSixPQUNJLDhCQUFBLENBRUosT0FDSSw2QkFBQSxDQUNBLDhCQUFBLENBRUosT0FDSSw0QkFBQSxDQUNBLCtCQUFBLENBaEdKLE9BQ0ksdUJBQUEsQ0FFSixPQUNJLDJCQUFBLENBRUosT0FDSSw4QkFBQSxDQUVKLE9BQ0ksNEJBQUEsQ0FFSixPQUNJLDZCQUFBLENBRUosT0FDSSw0QkFBQSxDQUNBLDZCQUFBLENBRUosT0FDSSwyQkFBQSxDQUNBLDhCQUFBLENBR0osUUFDSSx3QkFBQSxDQUVKLFFBQ0ksNEJBQUEsQ0FFSixRQUNJLCtCQUFBLENBRUosUUFDSSw2QkFBQSxDQUVKLFFBQ0ksOEJBQUEsQ0FFSixRQUNJLDZCQUFBLENBQ0EsOEJBQUEsQ0FFSixRQUNJLDRCQUFBLENBQ0EsK0JBQUEsQ0FHSixVQUNJLHNCQUFBLENBRUosVUFDSSwwQkFBQSxDQUVKLFdBQ0ksMkJBQUEsQ0FFSixVQUNJLDZCQUFBLENBRUosVUFDSSwyQkFBQSxDQUVKLFVBQ0ksNEJBQUEsQ0FFSixVQUNJLDJCQUFBLENBQ0EsNEJBQUEsQ0FFSixVQUNJLDBCQUFBLENBQ0EsNkJBQUEsQ0FHSixPQUNJLHdCQUFBLENBRUosT0FDSSw0QkFBQSxDQUVKLE9BQ0ksK0JBQUEsQ0FFSixPQUNJLDZCQUFBLENBRUosT0FDSSw4QkFBQSxDQUVKLE9BQ0ksNkJBQUEsQ0FDQSw4QkFBQSxDQUVKLE9BQ0ksNEJBQUEsQ0FDQSwrQkFBQSxDQWhHSixPQUNJLHVCQUFBLENBRUosT0FDSSwyQkFBQSxDQUVKLE9BQ0ksOEJBQUEsQ0FFSixPQUNJLDRCQUFBLENBRUosT0FDSSw2QkFBQSxDQUVKLE9BQ0ksNEJBQUEsQ0FDQSw2QkFBQSxDQUVKLE9BQ0ksMkJBQUEsQ0FDQSw4QkFBQSxDQUdKLFFBQ0ksd0JBQUEsQ0FFSixRQUNJLDRCQUFBLENBRUosUUFDSSwrQkFBQSxDQUVKLFFBQ0ksNkJBQUEsQ0FFSixRQUNJLDhCQUFBLENBRUosUUFDSSw2QkFBQSxDQUNBLDhCQUFBLENBRUosUUFDSSw0QkFBQSxDQUNBLCtCQUFBLENBR0osVUFDSSxzQkFBQSxDQUVKLFVBQ0ksMEJBQUEsQ0FFSixXQUNJLDJCQUFBLENBRUosVUFDSSw2QkFBQSxDQUVKLFVBQ0ksMkJBQUEsQ0FFSixVQUNJLDRCQUFBLENBRUosVUFDSSwyQkFBQSxDQUNBLDRCQUFBLENBRUosVUFDSSwwQkFBQSxDQUNBLDZCQUFBLENBR0osT0FDSSx3QkFBQSxDQUVKLE9BQ0ksNEJBQUEsQ0FFSixPQUNJLCtCQUFBLENBRUosT0FDSSw2QkFBQSxDQUVKLE9BQ0ksOEJBQUEsQ0FFSixPQUNJLDZCQUFBLENBQ0EsOEJBQUEsQ0FFSixPQUNJLDRCQUFBLENBQ0EsK0JBQUEsQ0FLSixTQUNJLFVBQUEsQ0FHSixTQUNJLFdBQUEsQ0FLSixRQUNJLGdCQUFBLENBRUosUUFDSSxlQUFBLENBRUosUUFDSSxpQkFBQSxDQUVKLGdCQUNJLHdCQUFBLENBS0osUUFDSSxvQkFBQSxDQUtKLFNBQ0ksYUFBQSxDQUdKLFFBQ0ksWUFBQSxDQUdKLFVBQ0ksb0JBQUEsQ0FFSixTQUNJLG1CQUFBLENBRUosUUFDSSxZQUFBLENBRUEsY0FDSSxjQUFBLENBR1IsUUFDSSxZQUFBLENBS0osZUFDSSxzQkFBQSxDQUVKLFdBQ0ksa0JBQUEsQ0FLSixTQUNJLGlCQUFBLENBRUosU0FDSSxpQkFBQSxDQUtKLFNBQ0ksZ0JBQUEsQ0FFSixXQUNJLGtCQUFBLENBRUosUUFDSSxlQUFBLENBRUosUUFDSSxlQUFBLENBRUosUUFDSSxlQUFBLENBSVIsT0FDSSxXQUFBLENBR0osT0FDSSxVQUFBLENBSUEsaUJBQ0ksZUFBQSxDQUVKLGtCQUNJLGdCQUFBLENBRUosZUFDSSxhQUFBLENBRUosaUJBQ0ksZUFBQSxDQUNBLGlCQUFBLENBRUEsb0NBQ0ksVUFBQSxDQUdKLDBDQUNJLCtDQUFBLENBQ0EsdUNBQUEsQ0M5TVIsMEJEK00rQixDQzlNL0IsdUJEOE0rQixDQzdNL0Isa0JENk0rQixDQzVNL0IsMkJBQUEsQ0FTQSx3QkRvTTBCLENBR3RCLDBDQ3ZNSixxQkR3TTBCLENDcE4xQiwwQkRxTitCLENDcE4vQix1QkRvTitCLENDbk4vQixrQkRtTitCLENDbE4vQiwyQkFBQSxDRG1OUSwrQ0FBQSxDQUNBLHVDQUFBLENBRUEsZ0RDN01SLHFCRDhNOEIsQ0FJOUIsWUFDSSwwQkFBQSxDQUVBLCtCQUNJLFdBQUEsQ0FHSixxQ0FDSSwrQ0FBQSxDQUNBLHVDQUFBLENDdk9SLDBCRHdPK0IsQ0N2Ty9CLHVCRHVPK0IsQ0N0Ty9CLGtCRHNPK0IsQ0NyTy9CLDJCQUFBLENBU0Esd0JENk4wQixDQUd0QixxQ0NoT0oscUJEaU8wQixDQzdPMUIsMEJEOE8rQixDQzdPL0IsdUJENk8rQixDQzVPL0Isa0JENE8rQixDQzNPL0IsMkJBQUEsQ0Q0T1EsK0NBQUEsQ0FDQSx1Q0FBQSxDQUVBLDJDQ3RPUixxQkR1TzhCLENBTWxDLFNBQ0ksaUJBQUEsQ0FDQSxPQUFBLENBQ0EsK0JBQUEsQ0FDQSxRQUFBLENBSUEsZ0JBQ0ksY0FBQSxDQUVKLGdCQUNJLGNBQUFcIixcInNvdXJjZXNDb250ZW50XCI6W1wiaHRtbCB7XFxyXFxuICAgIGhlaWdodDogMTAwdmg7XFxyXFxuICAgIHdpZHRoOiAxMDB2dztcXHJcXG4gICAgb3ZlcmZsb3c6IGhpZGRlbjtcXHJcXG4gICAgZm9udC1mYW1pbHk6IHN5c3RlbS11aSwgLWFwcGxlLXN5c3RlbSwgQmxpbmtNYWNTeXN0ZW1Gb250LCAnU2Vnb2UgVUknLCBSb2JvdG8sIE94eWdlbiwgVWJ1bnR1LCBDYW50YXJlbGwsICdPcGVuIFNhbnMnLCAnSGVsdmV0aWNhIE5ldWUnLCBzYW5zLXNlcmlmO1xcclxcbn1cXHJcXG5cXHJcXG5ib2R5IHtcXHJcXG4gICAgaGVpZ2h0OiAxMDAlO1xcclxcbiAgICB3aWR0aDogMTAwJTtcXHJcXG59XFxyXFxuXFxyXFxuaHRtbCwgYm9keSB7XFxyXFxuICBtYXJnaW46IDA7XFxyXFxuICBwYWRkaW5nOiAwO1xcclxcbiAgZm9udC1zaXplOiAkZm9udF9zaXplO1xcclxcbn1cXHJcXG5cXHJcXG5jb2RlIHtcXHJcXG4gIGZvbnQtZmFtaWx5OiBzb3VyY2UtY29kZS1wcm8sIE1lbmxvLCBNb25hY28sIENvbnNvbGFzLCAnQ291cmllciBOZXcnLFxcclxcbiAgICBtb25vc3BhY2U7XFxyXFxufVxcclxcblxcclxcbiNyb290IHtcXHJcXG4gICAgaGVpZ2h0OiAxMDAlO1xcclxcbiAgICB3aWR0aDogMTAwJTtcXHJcXG4gICAgbWFyZ2luOiAwO1xcclxcbiAgICBvdmVyZmxvdzogaGlkZGVuO1xcclxcbn1cIixcIiRicmFuZDogJy5lb2cnO1xcclxcbiRzcGFjZXI6IDhweDtcXHJcXG4kc21hbGxfc3BhY2VyOiA0cHg7XFxyXFxuJGZvbnRfc2l6ZTogMTRweDtcXHJcXG4kYmFzZVVuaXQ6IDE0O1wiLFwiLnRpdGxlIHtcXHJcXG4gICAgJi0xIHtcXHJcXG4gICAgICAgIGZvbnQtc2l6ZTogMjRweDtcXHJcXG4gICAgICAgIG1hcmdpbjogMDtcXHJcXG4gICAgfVxcclxcbiAgICAmLTIge1xcclxcbiAgICAgICAgZm9udC1zaXplOiAxOHB4O1xcclxcbiAgICAgICAgY29sb3I6IGJsYWNrO1xcclxcbiAgICAgICAgbWFyZ2luOiAwXFxyXFxuICAgIH1cXHJcXG4gICAgJi0zIHtcXHJcXG4gICAgICAgIGZvbnQtc2l6ZTogMThweDtcXHJcXG4gICAgICAgIGZvbnQtd2VpZ2h0OiA2MDA7XFxyXFxuICAgICAgICBjb2xvcjogYmxhY2s7XFxyXFxuICAgICAgICBtYXJnaW46IDA7XFxyXFxuICAgIH1cXHJcXG4gICAgJi00IHtcXHJcXG4gICAgICAgIGZvbnQtc2l6ZTogMTZweDtcXHJcXG4gICAgICAgIGZvbnQtd2VpZ2h0OiA2MDA7XFxyXFxuICAgICAgICBjb2xvcjogYmxhY2s7XFxyXFxuICAgICAgICBtYXJnaW46IDA7XFxyXFxuICAgIH1cXHJcXG59XCIsXCIjeyRicmFuZH0tY2FyZCB7XFxyXFxuICAgIGN1cnNvcjogcG9pbnRlcjtcXHJcXG4gICAgYmFja2dyb3VuZDogdHJhbnNwYXJlbnQ7XFxyXFxuICAgIGhlaWdodDogMjE4cHg7XFxyXFxuICAgIHdpZHRoOiAxNzdweDtcXHJcXG4gICAgYm94LXNoYWRvdzogMnB4IDJweCA0cHggMnB4ICNjY2M7XFxyXFxuICAgIGJvcmRlci1yYWRpdXM6IDhweDtcXHJcXG5cXHJcXG4gICAgJjpob3ZlciB7XFxyXFxuICAgICAgICBiYWNrZ3JvdW5kOiByZ2JhKDIzOCwgMjM4LCAyMzgsIDAuNik7XFxyXFxuICAgIH1cXHJcXG4gICAgJl9faW1nIHtcXHJcXG4gICAgICAgIGhlaWdodDogMTc3cHg7XFxyXFxuICAgICAgICB3aWR0aDogMTc3cHg7XFxyXFxuICAgICAgICBib3JkZXItcmFkaXVzOiA4cHggOHB4IDAgMDtcXHJcXG4gICAgfVxcclxcbiAgICAmX19jYXB0aW9uIHtcXHJcXG4gICAgICAgIG1hcmdpbi10b3A6IDhweDtcXHJcXG4gICAgICAgIGRpc3BsYXk6IGJsb2NrO1xcclxcbiAgICAgICAgZm9udC1zaXplOiAxNHB4O1xcclxcbiAgICAgICAgY29sb3I6IGJsYWNrO1xcclxcbiAgICAgICAgY3Vyc29yOiBwb2ludGVyO1xcclxcbiAgICAgICAgdGV4dC1hbGlnbjogY2VudGVyO1xcclxcbiAgICB9XFxyXFxuXFxyXFxuICAgICYtaW1nIHtcXHJcXG4gICAgICAgIGN1cnNvcjogcG9pbnRlcjtcXHJcXG4gICAgICAgIGJhY2tncm91bmQ6IHRyYW5zcGFyZW50O1xcclxcbiAgICAgICAgbWFyZ2luOiAyMHB4IDIwcHggMjBweCAwO1xcclxcbiAgICAgICAgaGVpZ2h0OiA1NTBweDtcXHJcXG4gICAgICAgIHdpZHRoOiA0NjBweDtcXHJcXG4gICAgICAgIGJveC1zaGFkb3c6IDJweCAycHggNHB4IDJweCAjY2NjO1xcclxcbiAgICAgICAgYm9yZGVyLXJhZGl1czogOHB4O1xcclxcbiAgICAgICAgdGV4dC1hbGlnbjogY2VudGVyO1xcclxcbiAgICAgICAgJjpub3QoOm50aC1jaGlsZCgzbisxKSkge1xcclxcbiAgICAgICAgICAgIG1hcmdpbi1sZWZ0OiAyMHB4O1xcclxcbiAgICAgICAgfVxcclxcblxcclxcbiAgICAgICAgJl9faW1nIHtcXHJcXG4gICAgICAgICAgICBoZWlnaHQ6IDQwMHB4O1xcclxcbiAgICAgICAgICAgIHdpZHRoOiA0MDBweDtcXHJcXG4gICAgICAgICAgICBib3JkZXItcmFkaXVzOiA4cHggOHB4IDAgMDtcXHJcXG4gICAgICAgIH1cXHJcXG4gICAgICAgICZfX2NhcHRpb24ge1xcclxcbiAgICAgICAgICAgIG1hcmdpbi10b3A6IDhweDtcXHJcXG4gICAgICAgICAgICBkaXNwbGF5OiBibG9jaztcXHJcXG4gICAgICAgICAgICBmb250LXNpemU6IDE0cHg7XFxyXFxuICAgICAgICAgICAgY29sb3I6IGJsYWNrO1xcclxcbiAgICAgICAgICAgIGN1cnNvcjogcG9pbnRlcjtcXHJcXG4gICAgICAgICAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XFxyXFxuICAgICAgICB9XFxyXFxuICAgIH1cXHJcXG59XCIsXCIjeyRicmFuZH0tYnJlYWRjcnVtYnMge1xcclxcbiAgICBkaXNwbGF5OiBmbGV4O1xcclxcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xcclxcbiAgICBoZWlnaHQ6IDMxcHg7XFxyXFxuICAgIHBhZGRpbmc6IDEwcHggMDtcXHJcXG4gICAgbWFyZ2luLXRvcDogMjBweDtcXHJcXG4gICAgcGFkZGluZy1sZWZ0OiAyMHB4O1xcclxcblxcclxcbiAgICAmX19pdGVtIHtcXHJcXG4gICAgICAgIGZvbnQtc2l6ZTogMThweDtcXHJcXG4gICAgICAgIGZvbnQtd2VpZ2h0OiA2MDA7XFxyXFxuICAgICAgICBjb2xvcjogYmxhY2s7XFxyXFxuICAgICAgICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XFxyXFxuXFxyXFxuICAgICAgICAmLmFjdGl2ZSB7XFxyXFxuICAgICAgICAgICAgY29sb3I6IG1hcC1nZXQoJGdyZWVuLCAnMDBCQ0Q0Jyk7XFxyXFxuICAgICAgICB9XFxyXFxuICAgIH1cXHJcXG59XCIsXCIjeyRicmFuZH0tbGlzdCB7XFxyXFxuICAgICYtZGF0YSB7XFxyXFxuICAgICAgICAmX19sYWJlbCB7XFxyXFxuICAgICAgICAgICAgZm9udC13ZWlnaHQ6IDYwMDtcXHJcXG4gICAgICAgICAgICBmb250LXNpemU6IDE0cHg7XFxyXFxuICAgICAgICAgICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xcclxcbiAgICAgICAgfVxcclxcbiAgICAgICAgJl9fdmFsdWUge1xcclxcbiAgICAgICAgICAgIGZvbnQtc2l6ZTogMTRweDtcXHJcXG4gICAgICAgICAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XFxyXFxuICAgICAgICAgICAgbWFyZ2luLWxlZnQ6IDIwcHg7XFxyXFxuICAgICAgICB9XFxyXFxuICAgIH1cXHJcXG59XCIsXCIjeyRicmFuZH0tYnRuIHtcXHJcXG4gICAgaGVpZ2h0OiAzNXB4O1xcclxcbiAgICBib3JkZXI6IG5vbmU7XFxyXFxuICAgIHBhZGRpbmc6IDhweCAxNnB4O1xcclxcbiAgICBib3JkZXItcmFkaXVzOiA1cHg7XFxyXFxuXFxyXFxuICAgICYtcHJpbWFyeSB7XFxyXFxuICAgICAgICBiYWNrZ3JvdW5kOiBtYXAtZ2V0KCRncmVlbiwgJzAwQkNENCcpO1xcclxcbiAgICAgICAgY29sb3I6IHdoaXRlO1xcclxcbiAgICB9XFxyXFxufVwiLFwiI3skYnJhbmR9IHtcXHJcXG4gICAgJi1oZWFkZXIge1xcclxcbiAgICAgICAgaGVpZ2h0OiAyNnB4O1xcclxcbiAgICAgICAgd2lkdGg6IDEwMCU7XFxyXFxuICAgICAgICBiYWNrZ3JvdW5kOiBtYXAtZ2V0KCRncmVlbiwgJzAwQkNENCcpO1xcclxcbiAgICAgICAgcGFkZGluZzogMTNweCAyMHB4O1xcclxcbiAgICAgICAgJl9fdGl0bGUge1xcclxcbiAgICAgICAgICAgIG1hcmdpbjogMDtcXHJcXG4gICAgICAgICAgICBjb2xvcjogd2hpdGU7XFxyXFxuICAgICAgICAgICAgZm9udC13ZWlnaHQ6IGJvbGQ7XFxyXFxuICAgICAgICAgICAgZm9udC1zaXplOiAyMHB4O1xcclxcbiAgICAgICAgfVxcclxcbiAgICB9XFxyXFxuICAgICYtbWFpbiB7XFxyXFxuICAgICAgICBwYWRkaW5nOiAyMHB4O1xcclxcbiAgICAgICAgaGVpZ2h0OiBjYWxjKDEwMCUgLSAxNzNweCk7XFxyXFxuICAgICAgICB3aWR0aDogY2FsYygxMDAlIC0gMjBweCk7XFxyXFxuICAgIH1cXHJcXG59O1wiLFwiI3skYnJhbmR9LWdyaWQge1xcclxcbiAgICBkaXNwbGF5OiBmbGV4O1xcclxcbiAgICBmbGV4LXdyYXA6IHdyYXA7XFxyXFxuICAgIHBhZGRpbmc6IHB4VG9SZW0oMjApIDA7XFxyXFxuICAgIGhlaWdodDogY2FsYygxMDAlIC0gMjBweCk7XFxyXFxuICAgIHdpZHRoOiAxMDAlO1xcclxcbiAgICBvdmVyZmxvdy15OiBhdXRvO1xcclxcbn1cIixcIkBmb3IgJGkgZnJvbSAwIHRocm91Z2ggMjAge1xcclxcbiAgICAubWEtI3skaX0ge1xcclxcbiAgICAgICAgbWFyZ2luOiRpICogJHNwYWNlciAhaW1wb3J0YW50O1xcclxcbiAgICB9XFxyXFxuICAgIC5tdC0jeyRpfSB7XFxyXFxuICAgICAgICBtYXJnaW4tdG9wOiRpICogJHNwYWNlciAhaW1wb3J0YW50O1xcclxcbiAgICB9XFxyXFxuICAgIC5tYi0jeyRpfSB7XFxyXFxuICAgICAgICBtYXJnaW4tYm90dG9tOiRpICogJHNwYWNlciAhaW1wb3J0YW50O1xcclxcbiAgICB9XFxyXFxuICAgIC5tbC0jeyRpfSB7XFxyXFxuICAgICAgICBtYXJnaW4tbGVmdDokaSAqICRzcGFjZXIgIWltcG9ydGFudDtcXHJcXG4gICAgfVxcclxcbiAgICAubXItI3skaX0ge1xcclxcbiAgICAgICAgbWFyZ2luLXJpZ2h0OiRpICogJHNwYWNlciAhaW1wb3J0YW50O1xcclxcbiAgICB9XFxyXFxuICAgIC5teC0jeyRpfSB7XFxyXFxuICAgICAgICBtYXJnaW4tbGVmdDokaSAqICRzcGFjZXIgIWltcG9ydGFudDtcXHJcXG4gICAgICAgIG1hcmdpbi1yaWdodDokaSAqICRzcGFjZXIgIWltcG9ydGFudDtcXHJcXG4gICAgfVxcclxcbiAgICAubXktI3skaX0ge1xcclxcbiAgICAgICAgbWFyZ2luLXRvcDokaSAqICRzcGFjZXIgIWltcG9ydGFudDtcXHJcXG4gICAgICAgIG1hcmdpbi1ib3R0b206JGkgKiAkc3BhY2VyICFpbXBvcnRhbnQ7XFxyXFxuICAgIH1cXHJcXG5cXHJcXG4gICAgLm1hLW4jeyRpfSB7XFxyXFxuICAgICAgICBtYXJnaW46LSRpICogJHNwYWNlciAhaW1wb3J0YW50O1xcclxcbiAgICB9XFxyXFxuICAgIC5tdC1uI3skaX0ge1xcclxcbiAgICAgICAgbWFyZ2luLXRvcDotJGkgKiAkc3BhY2VyICFpbXBvcnRhbnQ7XFxyXFxuICAgIH1cXHJcXG4gICAgLm1iLW4jeyRpfSB7XFxyXFxuICAgICAgICBtYXJnaW4tYm90dG9tOi0kaSAqICRzcGFjZXIgIWltcG9ydGFudDtcXHJcXG4gICAgfVxcclxcbiAgICAubWwtbiN7JGl9IHtcXHJcXG4gICAgICAgIG1hcmdpbi1sZWZ0Oi0kaSAqICRzcGFjZXIgIWltcG9ydGFudDtcXHJcXG4gICAgfVxcclxcbiAgICAubXItbiN7JGl9IHtcXHJcXG4gICAgICAgIG1hcmdpbi1yaWdodDotJGkgKiAkc3BhY2VyICFpbXBvcnRhbnQ7XFxyXFxuICAgIH1cXHJcXG4gICAgLm14LW4jeyRpfSB7XFxyXFxuICAgICAgICBtYXJnaW4tbGVmdDotJGkgKiAkc3BhY2VyICFpbXBvcnRhbnQ7XFxyXFxuICAgICAgICBtYXJnaW4tcmlnaHQ6LSRpICogJHNwYWNlciAhaW1wb3J0YW50O1xcclxcbiAgICB9XFxyXFxuICAgIC5teS1uI3skaX0ge1xcclxcbiAgICAgICAgbWFyZ2luLXRvcDotJGkgKiAkc3BhY2VyICFpbXBvcnRhbnQ7XFxyXFxuICAgICAgICBtYXJnaW4tYm90dG9tOi0kaSAqICRzcGFjZXIgIWltcG9ydGFudDtcXHJcXG4gICAgfVxcclxcbiAgICBcXHJcXG4gICAgLm1hLXNtLSN7JGl9IHtcXHJcXG4gICAgICAgIG1hcmdpbjokaSAqICRzbWFsbF9zcGFjZXIhaW1wb3J0YW50O1xcclxcbiAgICB9XFxyXFxuICAgIC5tdC1zbS0jeyRpfSB7XFxyXFxuICAgICAgICBtYXJnaW4tdG9wOiRpICogJHNtYWxsX3NwYWNlciAhaW1wb3J0YW50O1xcclxcbiAgICB9XFxyXFxuICAgIC5tdC1zbS1uI3skaX0ge1xcclxcbiAgICAgICAgbWFyZ2luLXRvcDotICRpICogJHNtYWxsX3NwYWNlciAhaW1wb3J0YW50O1xcclxcbiAgICB9XFxyXFxuICAgIC5tYi1zbS0jeyRpfSB7XFxyXFxuICAgICAgICBtYXJnaW4tYm90dG9tOiRpICogJHNtYWxsX3NwYWNlciAhaW1wb3J0YW50O1xcclxcbiAgICB9XFxyXFxuICAgIC5tbC1zbS0jeyRpfSB7XFxyXFxuICAgICAgICBtYXJnaW4tbGVmdDokaSAqICRzbWFsbF9zcGFjZXIgIWltcG9ydGFudDtcXHJcXG4gICAgfVxcclxcbiAgICAubXItc20tI3skaX0ge1xcclxcbiAgICAgICAgbWFyZ2luLXJpZ2h0OiRpICogJHNtYWxsX3NwYWNlciAhaW1wb3J0YW50O1xcclxcbiAgICB9XFxyXFxuICAgIC5teC1zbS0jeyRpfSB7XFxyXFxuICAgICAgICBtYXJnaW4tbGVmdDokaSAqICRzbWFsbF9zcGFjZXIgIWltcG9ydGFudDtcXHJcXG4gICAgICAgIG1hcmdpbi1yaWdodDokaSAqICRzbWFsbF9zcGFjZXIgIWltcG9ydGFudDtcXHJcXG4gICAgfVxcclxcbiAgICAubXktc20tI3skaX0ge1xcclxcbiAgICAgICAgbWFyZ2luLXRvcDokaSAqICRzbWFsbF9zcGFjZXIgIWltcG9ydGFudDtcXHJcXG4gICAgICAgIG1hcmdpbi1ib3R0b206JGkgKiAkc21hbGxfc3BhY2VyICFpbXBvcnRhbnQ7XFxyXFxuICAgIH1cXHJcXG4gICAgIFxcclxcbiAgICAucGEtI3skaX0ge1xcclxcbiAgICAgICAgcGFkZGluZzokaSAqICRzcGFjZXIgIWltcG9ydGFudDtcXHJcXG4gICAgfVxcclxcbiAgICAucHQtI3skaX0ge1xcclxcbiAgICAgICAgcGFkZGluZy10b3A6JGkgKiAkc3BhY2VyICFpbXBvcnRhbnQ7XFxyXFxuICAgIH1cXHJcXG4gICAgLnBiLSN7JGl9IHtcXHJcXG4gICAgICAgIHBhZGRpbmctYm90dG9tOiRpICogJHNwYWNlciAhaW1wb3J0YW50O1xcclxcbiAgICB9XFxyXFxuICAgIC5wbC0jeyRpfSB7XFxyXFxuICAgICAgICBwYWRkaW5nLWxlZnQ6JGkgKiAkc3BhY2VyICFpbXBvcnRhbnQ7XFxyXFxuICAgIH1cXHJcXG4gICAgLnByLSN7JGl9IHtcXHJcXG4gICAgICAgIHBhZGRpbmctcmlnaHQ6JGkgKiAkc3BhY2VyICFpbXBvcnRhbnQ7XFxyXFxuICAgIH1cXHJcXG4gICAgLnB4LSN7JGl9IHtcXHJcXG4gICAgICAgIHBhZGRpbmctbGVmdDokaSAqICRzcGFjZXIgIWltcG9ydGFudDtcXHJcXG4gICAgICAgIHBhZGRpbmctcmlnaHQ6JGkgKiAkc3BhY2VyICFpbXBvcnRhbnQ7XFxyXFxuICAgIH1cXHJcXG4gICAgLnB5LSN7JGl9IHtcXHJcXG4gICAgICAgIHBhZGRpbmctdG9wOiRpICogJHNwYWNlciAhaW1wb3J0YW50O1xcclxcbiAgICAgICAgcGFkZGluZy1ib3R0b206JGkgKiAkc3BhY2VyICFpbXBvcnRhbnQ7XFxyXFxuICAgIH1cXHJcXG59XFxyXFxuXFxyXFxuLmZsb2F0IHtcXHJcXG4gICAgJi1se1xcclxcbiAgICAgICAgZmxvYXQ6IGxlZnQ7XFxyXFxuICAgIH1cXHJcXG5cXHJcXG4gICAgJi1ye1xcclxcbiAgICAgICAgZmxvYXQ6IHJpZ2h0O1xcclxcbiAgICB9XFxyXFxufVxcclxcblxcclxcbi50ZXh0IHtcXHJcXG4gICAgJi1yIHtcXHJcXG4gICAgICAgIHRleHQtYWxpZ246IHJpZ2h0O1xcclxcbiAgICB9XFxyXFxuICAgICYtbCB7XFxyXFxuICAgICAgICB0ZXh0LWFsaWduOiBsZWZ0O1xcclxcbiAgICB9XFxyXFxuICAgICYtYyB7XFxyXFxuICAgICAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XFxyXFxuICAgIH1cXHJcXG4gICAgJi11cHBlcmNhc2Uge1xcclxcbiAgICAgICAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTtcXHJcXG4gICAgfVxcclxcbn1cXHJcXG5cXHJcXG4ud2Ige1xcclxcbiAgICAmLWFsbCB7XFxyXFxuICAgICAgICB3b3JkLWJyZWFrOiBicmVhay1hbGw7XFxyXFxuICAgIH1cXHJcXG59XFxyXFxuXFxyXFxuLmQge1xcclxcbiAgICAmLWJsb2NrIHtcXHJcXG4gICAgICAgIGRpc3BsYXk6YmxvY2s7XFxyXFxuICAgIH1cXHJcXG5cXHJcXG4gICAgJi1ub25lIHtcXHJcXG4gICAgICAgIGRpc3BsYXk6IG5vbmU7XFxyXFxuICAgIH1cXHJcXG5cXHJcXG4gICAgJi1pYmxvY2sge1xcclxcbiAgICAgICAgZGlzcGxheTppbmxpbmUtYmxvY2s7XFxyXFxuICAgIH1cXHJcXG4gICAgJi1pZmxleCB7XFxyXFxuICAgICAgICBkaXNwbGF5OiBpbmxpbmUtZmxleDtcXHJcXG4gICAgfVxcclxcbiAgICAmLWZsZXgge1xcclxcbiAgICAgICAgZGlzcGxheTpmbGV4O1xcclxcblxcclxcbiAgICAgICAgJi0td3JhcCB7XFxyXFxuICAgICAgICAgICAgZmxleC13cmFwOiB3cmFwO1xcclxcbiAgICAgICAgfVxcclxcbiAgICB9XFxyXFxuICAgICYtbm9uZSB7XFxyXFxuICAgICAgICBkaXNwbGF5OiBub25lO1xcclxcbiAgICB9XFxyXFxufVxcclxcblxcclxcbi5haSB7XFxyXFxuICAgICYtZmxleC1zdGFydCB7XFxyXFxuICAgICAgICBhbGlnbi1pdGVtczogZmxleC1zdGFydDtcXHJcXG4gICAgfVxcclxcbiAgICAmLWNlbnRlciB7XFxyXFxuICAgICAgICBhbGlnbi1pdGVtczogY2VudGVyO1xcclxcbiAgICB9XFxyXFxufVxcclxcblxcclxcbi5wb3Mge1xcclxcbiAgICAmLXJlbCB7XFxyXFxuICAgICAgICBwb3NpdGlvbjpyZWxhdGl2ZTtcXHJcXG4gICAgfVxcclxcbiAgICAmLWFicyB7XFxyXFxuICAgICAgICBwb3NpdGlvbjphYnNvbHV0ZTtcXHJcXG4gICAgfVxcclxcbn1cXHJcXG5cXHJcXG4uZncge1xcclxcbiAgICAmLWJvbGQge1xcclxcbiAgICAgICAgZm9udC13ZWlnaHQ6IGJvbGQ7XFxyXFxuICAgIH1cXHJcXG4gICAgJi1ub3JtYWwge1xcclxcbiAgICAgICAgZm9udC13ZWlnaHQ6IG5vcm1hbDtcXHJcXG4gICAgfVxcclxcbiAgICAmLTQwMCB7XFxyXFxuICAgICAgICBmb250LXdlaWdodDogNDAwO1xcclxcbiAgICB9XFxyXFxuICAgICYtNTAwIHtcXHJcXG4gICAgICAgIGZvbnQtd2VpZ2h0OiA1MDA7XFxyXFxuICAgIH1cXHJcXG4gICAgJi02MDAge1xcclxcbiAgICAgICAgZm9udC13ZWlnaHQ6IDYwMDtcXHJcXG4gICAgfVxcclxcbn1cXHJcXG5cXHJcXG4uaC0xMDAge1xcclxcbiAgICBoZWlnaHQ6IDEwMCU7XFxyXFxufVxcclxcblxcclxcbi53LTEwMCB7XFxyXFxuICAgIHdpZHRoOiAxMDAlO1xcclxcbn1cXHJcXG5cXHJcXG4ub3ZlcmZsb3cge1xcclxcbiAgICAmLWhpZGRlbiB7XFxyXFxuICAgICAgICBvdmVyZmxvdzogaGlkZGVuO1xcclxcbiAgICB9XFxyXFxuICAgICYtdmlzaWJsZSB7XFxyXFxuICAgICAgICBvdmVyZmxvdzogdmlzaWJsZTtcXHJcXG4gICAgfVxcclxcbiAgICAmLWF1dG8ge1xcclxcbiAgICAgICAgb3ZlcmZsb3c6IGF1dG87XFxyXFxuICAgIH1cXHJcXG4gICAgJi1zY3JvbGwge1xcclxcbiAgICAgICAgb3ZlcmZsb3cteTogYXV0bztcXHJcXG4gICAgICAgIG92ZXJmbG93LXg6IGhpZGRlbjtcXHJcXG5cXHJcXG4gICAgICAgICY6Oi13ZWJraXQtc2Nyb2xsYmFyIHtcXHJcXG4gICAgICAgICAgICB3aWR0aDogJHNwYWNlciArIDI7XFxyXFxuICAgICAgICB9XFxyXFxuXFxyXFxuICAgICAgICAmOjotd2Via2l0LXNjcm9sbGJhci10cmFjayB7XFxyXFxuICAgICAgICAgICAgLXdlYmtpdC1ib3gtc2hhZG93OiBpbnNldCAwIDAgNnB4IHJnYmEoMCwwLDAsMC4zKTtcXHJcXG4gICAgICAgICAgICBib3gtc2hhZG93OiBpbnNldCAwIDAgNnB4IHJnYmEoMCwwLDAsLjMpO1xcclxcbiAgICAgICAgICAgIEBpbmNsdWRlIGJvcmRlci1yYWRpdXMoJHNwYWNlciArIDIpO1xcclxcbiAgICAgICAgICAgIEBpbmNsdWRlIGJnLWNvbG9yKG1hcC1nZXQoJGdyZXksICdGNUY1RjUnKSk7XFxyXFxuICAgICAgICB9XFxyXFxuXFxyXFxuICAgICAgICAmOjotd2Via2l0LXNjcm9sbGJhci10aHVtYiB7XFxyXFxuICAgICAgICAgICAgQGluY2x1ZGUgYmctY29sb3IobWFwLWdldCgkZ3JleSwgJzg4ODg4OCcpKTtcXHJcXG4gICAgICAgICAgICBAaW5jbHVkZSBib3JkZXItcmFkaXVzKCRzcGFjZXIgKyAyKTtcXHJcXG4gICAgICAgICAgICAtd2Via2l0LWJveC1zaGFkb3c6IGluc2V0IDAgMCA2cHggcmdiYSgwLDAsMCwuMyk7XFxyXFxuICAgICAgICAgICAgYm94LXNoYWRvdzogaW5zZXQgMCAwIDZweCByZ2JhKDAsMCwwLC4zKTtcXHJcXG5cXHJcXG4gICAgICAgICAgICAmOmhvdmVyIHtcXHJcXG4gICAgICAgICAgICAgICAgQGluY2x1ZGUgYmctY29sb3IobWFwLWdldCgkZ3JleSwgJzU1NTU1NScpKTtcXHJcXG4gICAgICAgICAgICB9XFxyXFxuICAgICAgICB9XFxyXFxuICAgIH1cXHJcXG4gICAgJi14IHtcXHJcXG4gICAgICAgIG92ZXJmbG93LXg6IGF1dG8gIWltcG9ydGFudDtcXHJcXG5cXHJcXG4gICAgICAgICY6Oi13ZWJraXQtc2Nyb2xsYmFyIHtcXHJcXG4gICAgICAgICAgICBoZWlnaHQ6ICRzcGFjZXIgKyAyO1xcclxcbiAgICAgICAgfVxcclxcblxcclxcbiAgICAgICAgJjo6LXdlYmtpdC1zY3JvbGxiYXItdHJhY2sge1xcclxcbiAgICAgICAgICAgIC13ZWJraXQtYm94LXNoYWRvdzogaW5zZXQgMCAwIDZweCByZ2JhKDAsMCwwLDAuMyk7XFxyXFxuICAgICAgICAgICAgYm94LXNoYWRvdzogaW5zZXQgMCAwIDZweCByZ2JhKDAsMCwwLC4zKTtcXHJcXG4gICAgICAgICAgICBAaW5jbHVkZSBib3JkZXItcmFkaXVzKCRzcGFjZXIgKyAyKTtcXHJcXG4gICAgICAgICAgICBAaW5jbHVkZSBiZy1jb2xvcihtYXAtZ2V0KCRncmV5LCAnRjVGNUY1JykpO1xcclxcbiAgICAgICAgfVxcclxcblxcclxcbiAgICAgICAgJjo6LXdlYmtpdC1zY3JvbGxiYXItdGh1bWIge1xcclxcbiAgICAgICAgICAgIEBpbmNsdWRlIGJnLWNvbG9yKG1hcC1nZXQoJGdyZXksICc4ODg4ODgnKSk7XFxyXFxuICAgICAgICAgICAgQGluY2x1ZGUgYm9yZGVyLXJhZGl1cygkc3BhY2VyICsgMik7XFxyXFxuICAgICAgICAgICAgLXdlYmtpdC1ib3gtc2hhZG93OiBpbnNldCAwIDAgNnB4IHJnYmEoMCwwLDAsLjMpO1xcclxcbiAgICAgICAgICAgIGJveC1zaGFkb3c6IGluc2V0IDAgMCA2cHggcmdiYSgwLDAsMCwuMyk7XFxyXFxuXFxyXFxuICAgICAgICAgICAgJjpob3ZlciB7XFxyXFxuICAgICAgICAgICAgICAgIEBpbmNsdWRlIGJnLWNvbG9yKG1hcC1nZXQoJGdyZXksICc1NTU1NTUnKSk7XFxyXFxuICAgICAgICAgICAgfVxcclxcbiAgICAgICAgfVxcclxcbiAgICB9XFxyXFxufVxcclxcblxcclxcbi5wbWlkZGxlIHtcXHJcXG4gICAgcG9zaXRpb246IGFic29sdXRlO1xcclxcbiAgICB0b3A6IDUwJTtcXHJcXG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGUoLTUwJSwgLTUwJSk7XFxyXFxuICAgIGxlZnQ6IDUwJTtcXHJcXG59XFxyXFxuXFxyXFxuLmN1cnNvciB7XFxyXFxuICAgICYtcG9pbnRlciB7XFxyXFxuICAgICAgICBjdXJzb3I6IHBvaW50ZXI7XFxyXFxuICAgIH1cXHJcXG4gICAgJi1kZWZhdWx0IHtcXHJcXG4gICAgICAgIGN1cnNvcjogZGVmYXVsdDtcXHJcXG4gICAgfVxcclxcbn1cXHJcXG5cIixcIi8qXFxyXFxuKioqXFxyXFxuICAgIFRoZSBtaXhpbiBiZWxvdyBpcyB1c2VkIHRvXFxyXFxuICAgIHdpZHRoIGFuZCBoZWlnaHQgdmFsdWVzXFxyXFxuKioqXFxyXFxuKi9cXHJcXG5AbWl4aW4gc2l6ZSgkd2lkdGgsICRoZWlnaHQ6ICR3aWR0aCkge1xcclxcbiAgICB3aWR0aDogJHdpZHRoO1xcclxcbiAgICBoZWlnaHQ6ICRoZWlnaHQ7XFxyXFxufVxcclxcbi8qXFxyXFxuKioqXFxyXFxuICAgIFRoZSBtaXhpbiBiZWxvdyBpcyB1c2VkIHRvXFxyXFxuICAgIGJvcmRlciByYWRpdXNcXHJcXG4qKipcXHJcXG4qL1xcclxcbkBtaXhpbiBib3JkZXItcmFkaXVzKCRyYWRpdXMpIHtcXHJcXG4gICAgLXdlYmtpdC1ib3JkZXItcmFkaXVzOiAkcmFkaXVzO1xcclxcbiAgICAtbW96LWJvcmRlci1yYWRpdXM6ICRyYWRpdXM7XFxyXFxuICAgIGJvcmRlci1yYWRpdXM6ICRyYWRpdXM7XFxyXFxuICAgIGJhY2tncm91bmQtY2xpcDogcGFkZGluZy1ib3g7XFxyXFxufVxcclxcbi8qXFxyXFxuKioqXFxyXFxuICAgIFRoZSBtaXhpbiBiZWxvdyBpcyB1c2VkIHRvXFxyXFxuICAgIGJhY2tncm91bmQgY29sb3JcXHJcXG4qKipcXHJcXG4qL1xcclxcbkBtaXhpbiBiZy1jb2xvcigkY29sb3IpIHtcXHJcXG4gICAgYmFja2dyb3VuZC1jb2xvcjogJGNvbG9yO1xcclxcbn1cXHJcXG4vKlxcclxcbioqKlxcclxcbiAgICBUaGUgbWl4aW4gYmVsb3cgaXMgdXNlZCB0b1xcclxcbiAgICBwb3NpdGlvbnNcXHJcXG4qKipcXHJcXG4qL1xcclxcbkBtaXhpbiBwb3NpdGlvbigkcG9zaXRpb24sICR0b3A6IG51bGwsICRyaWdodDogbnVsbCwgJGJvdHRvbTogbnVsbCwgJGxlZnQ6IG51bGwpIHtcXHJcXG4gICAgcG9zaXRpb246ICRwb3NpdGlvbjtcXHJcXG4gICAgdG9wOiAkdG9wO1xcclxcbiAgICByaWdodDogJHJpZ2h0O1xcclxcbiAgICBib3R0b206ICRib3R0b207XFxyXFxuICAgIGxlZnQ6ICRsZWZ0O1xcclxcbn1cXHJcXG4vKlxcclxcbioqKlxcclxcbiAgICBUaGUgbWl4aW4gYmVsb3cgaXMgdXNlZCB0b1xcclxcbiAgICBtYXJnaW5zIGFuZCBwYWRpbmdzXFxyXFxuKioqXFxyXFxuKi9cXHJcXG5AbWl4aW4gc3BhY2UoJHR5cGU6IG1hcmdpbiwgJGRpcmVjdGlvbjogYWxsLCAkYW1vdW50OiBudWxsKSB7XFxyXFxuICAgIEBpZiAkdHlwZSA9PSBwYWRkaW5nIHtcXHJcXG4gICAgICAgIEBpZiAkZGlyZWN0aW9uID09IGFsbCB7XFxyXFxuICAgICAgICAgICAgcGFkZGluZzogJGFtb3VudDtcXHJcXG4gICAgICAgIH1cXHJcXG4gICAgICAgIEBlbHNlIGlmICRkaXJlY3Rpb24gPT0gdG9wIHtcXHJcXG4gICAgICAgICAgICBwYWRkaW5nLXRvcDogJGFtb3VudFxcclxcbiAgICAgICAgfVxcclxcbiAgICAgICAgQGVsc2UgaWYgJGRpcmVjdGlvbiA9PSBsZWZ0IHtcXHJcXG4gICAgICAgICAgICBwYWRkaW5nLWxlZnQ6ICRhbW91bnRcXHJcXG4gICAgICAgIH1cXHJcXG4gICAgICAgIEBlbHNlIGlmICRkaXJlY3Rpb24gPT0gcmlnaHQge1xcclxcbiAgICAgICAgICAgIHBhZGRpbmctcmlnaHQ6ICRhbW91bnRcXHJcXG4gICAgICAgIH1cXHJcXG4gICAgICAgIEBlbHNlIGlmICRkaXJlY3Rpb24gPT0geSB7XFxyXFxuICAgICAgICAgICAgcGFkZGluZy10b3A6ICRhbW91bnQ7XFxyXFxuICAgICAgICAgICAgcGFkZGluZy1ib3R0b206ICRhbW91bnQ7XFxyXFxuICAgICAgICB9XFxyXFxuICAgICAgICBAZWxzZSBpZiAkZGlyZWN0aW9uID09IHgge1xcclxcbiAgICAgICAgICAgIHBhZGRpbmctbGVmdDogJGFtb3VudDtcXHJcXG4gICAgICAgICAgICBwYWRkaW5nLXJpZ2h0OiAkYW1vdW50O1xcclxcbiAgICAgICAgfVxcclxcbiAgICAgICAgQGVsc2Uge1xcclxcbiAgICAgICAgICAgIHBhZGRpbmctYm90dG9tOiAkYW1vdW50XFxyXFxuICAgICAgICB9XFxyXFxuICAgIH1cXHJcXG4gICAgQGVsc2Uge1xcclxcbiAgICAgICAgQGlmICRkaXJlY3Rpb24gPT0gYWxsIHtcXHJcXG4gICAgICAgICAgICBtYXJnaW46ICRhbW91bnQ7XFxyXFxuICAgICAgICB9XFxyXFxuICAgICAgICBAZWxzZSBpZiAkZGlyZWN0aW9uID09IHRvcCB7XFxyXFxuICAgICAgICAgICAgbWFyZ2luLXRvcDogJGFtb3VudFxcclxcbiAgICAgICAgfVxcclxcbiAgICAgICAgQGVsc2UgaWYgJGRpcmVjdGlvbiA9PSBsZWZ0IHtcXHJcXG4gICAgICAgICAgICBtYXJnaW4tbGVmdDogJGFtb3VudFxcclxcbiAgICAgICAgfVxcclxcbiAgICAgICAgQGVsc2UgaWYgJGRpcmVjdGlvbiA9PSByaWdodCB7XFxyXFxuICAgICAgICAgICAgbWFyZ2luLXJpZ2h0OiAkYW1vdW50XFxyXFxuICAgICAgICB9XFxyXFxuICAgICAgICBAZWxzZSBpZiAkZGlyZWN0aW9uID09IGxlZnRyaWdodCB7XFxyXFxuICAgICAgICAgICAgbWFyZ2luLWxlZnQ6ICRhbW91bnQ7XFxyXFxuICAgICAgICAgICAgbWFyZ2luLXJpZ2h0OiAkYW1vdW50XFxyXFxuICAgICAgICB9XFxyXFxuICAgICAgICBAZWxzZSB7XFxyXFxuICAgICAgICAgICAgbWFyZ2luLWJvdHRvbTogJGFtb3VudFxcclxcbiAgICAgICAgfVxcclxcbiAgICB9XFxyXFxufVxcclxcbi8qXFxyXFxuKioqXFxyXFxuICAgIFRoZSBtaXhpbiBiZWxvdyBpcyB1c2VkIHRvXFxyXFxuICAgIGJvcmRlciBmb3IgYWxsIHNpZGVzXFxyXFxuKioqXFxyXFxuKi9cXHJcXG5AbWl4aW4gYm9yZGVyLWFsbCggJHdpZHRoLCAkc3R5bGUsICRjb2xvcikge1xcclxcbiAgICBib3JkZXI6ICR3aWR0aCAkc3R5bGUgJGNvbG9yO1xcclxcbn1cXHJcXG4vKlxcclxcbioqKlxcclxcbiAgICBUaGUgbWl4aW4gYmVsb3cgaXMgdXNlZCB0b1xcclxcbiAgICBzcGVjaWZpdCBib3JkZXJzXFxyXFxuKioqXFxyXFxuKi9cXHJcXG5AbWl4aW4gYm9yZGVyKCRkaXJlY3Rpb24sICR3aWR0aCwgJHN0eWxlLCAkY29sb3IpIHtcXHJcXG4gICAgYm9yZGVyLSN7JGRpcmVjdGlvbn06ICR3aWR0aCAkc3R5bGUgJGNvbG9yO1xcclxcbn1cXHJcXG5cXHJcXG5AbWl4aW4gZWxsaXBzaXMoKSB7XFxyXFxuICAgIHRleHQtb3ZlcmZsb3c6IGVsbGlwc2lzO1xcclxcbiAgICBvdmVyZmxvdzogaGlkZGVuO1xcclxcbiAgICB3aGl0ZS1zcGFjZTogbm93cmFwO1xcclxcbn1cIl0sXCJzb3VyY2VSb290XCI6XCJcIn1dKTtcbi8vIEV4cG9ydHNcbmV4cG9ydCBkZWZhdWx0IF9fX0NTU19MT0FERVJfRVhQT1JUX19fO1xuIiwiXCJ1c2Ugc3RyaWN0XCI7XG5cbi8qXG4gIE1JVCBMaWNlbnNlIGh0dHA6Ly93d3cub3BlbnNvdXJjZS5vcmcvbGljZW5zZXMvbWl0LWxpY2Vuc2UucGhwXG4gIEF1dGhvciBUb2JpYXMgS29wcGVycyBAc29rcmFcbiovXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChjc3NXaXRoTWFwcGluZ1RvU3RyaW5nKSB7XG4gIHZhciBsaXN0ID0gW107IC8vIHJldHVybiB0aGUgbGlzdCBvZiBtb2R1bGVzIGFzIGNzcyBzdHJpbmdcblxuICBsaXN0LnRvU3RyaW5nID0gZnVuY3Rpb24gdG9TdHJpbmcoKSB7XG4gICAgcmV0dXJuIHRoaXMubWFwKGZ1bmN0aW9uIChpdGVtKSB7XG4gICAgICB2YXIgY29udGVudCA9IFwiXCI7XG4gICAgICB2YXIgbmVlZExheWVyID0gdHlwZW9mIGl0ZW1bNV0gIT09IFwidW5kZWZpbmVkXCI7XG5cbiAgICAgIGlmIChpdGVtWzRdKSB7XG4gICAgICAgIGNvbnRlbnQgKz0gXCJAc3VwcG9ydHMgKFwiLmNvbmNhdChpdGVtWzRdLCBcIikge1wiKTtcbiAgICAgIH1cblxuICAgICAgaWYgKGl0ZW1bMl0pIHtcbiAgICAgICAgY29udGVudCArPSBcIkBtZWRpYSBcIi5jb25jYXQoaXRlbVsyXSwgXCIge1wiKTtcbiAgICAgIH1cblxuICAgICAgaWYgKG5lZWRMYXllcikge1xuICAgICAgICBjb250ZW50ICs9IFwiQGxheWVyXCIuY29uY2F0KGl0ZW1bNV0ubGVuZ3RoID4gMCA/IFwiIFwiLmNvbmNhdChpdGVtWzVdKSA6IFwiXCIsIFwiIHtcIik7XG4gICAgICB9XG5cbiAgICAgIGNvbnRlbnQgKz0gY3NzV2l0aE1hcHBpbmdUb1N0cmluZyhpdGVtKTtcblxuICAgICAgaWYgKG5lZWRMYXllcikge1xuICAgICAgICBjb250ZW50ICs9IFwifVwiO1xuICAgICAgfVxuXG4gICAgICBpZiAoaXRlbVsyXSkge1xuICAgICAgICBjb250ZW50ICs9IFwifVwiO1xuICAgICAgfVxuXG4gICAgICBpZiAoaXRlbVs0XSkge1xuICAgICAgICBjb250ZW50ICs9IFwifVwiO1xuICAgICAgfVxuXG4gICAgICByZXR1cm4gY29udGVudDtcbiAgICB9KS5qb2luKFwiXCIpO1xuICB9OyAvLyBpbXBvcnQgYSBsaXN0IG9mIG1vZHVsZXMgaW50byB0aGUgbGlzdFxuXG5cbiAgbGlzdC5pID0gZnVuY3Rpb24gaShtb2R1bGVzLCBtZWRpYSwgZGVkdXBlLCBzdXBwb3J0cywgbGF5ZXIpIHtcbiAgICBpZiAodHlwZW9mIG1vZHVsZXMgPT09IFwic3RyaW5nXCIpIHtcbiAgICAgIG1vZHVsZXMgPSBbW251bGwsIG1vZHVsZXMsIHVuZGVmaW5lZF1dO1xuICAgIH1cblxuICAgIHZhciBhbHJlYWR5SW1wb3J0ZWRNb2R1bGVzID0ge307XG5cbiAgICBpZiAoZGVkdXBlKSB7XG4gICAgICBmb3IgKHZhciBrID0gMDsgayA8IHRoaXMubGVuZ3RoOyBrKyspIHtcbiAgICAgICAgdmFyIGlkID0gdGhpc1trXVswXTtcblxuICAgICAgICBpZiAoaWQgIT0gbnVsbCkge1xuICAgICAgICAgIGFscmVhZHlJbXBvcnRlZE1vZHVsZXNbaWRdID0gdHJ1ZTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH1cblxuICAgIGZvciAodmFyIF9rID0gMDsgX2sgPCBtb2R1bGVzLmxlbmd0aDsgX2srKykge1xuICAgICAgdmFyIGl0ZW0gPSBbXS5jb25jYXQobW9kdWxlc1tfa10pO1xuXG4gICAgICBpZiAoZGVkdXBlICYmIGFscmVhZHlJbXBvcnRlZE1vZHVsZXNbaXRlbVswXV0pIHtcbiAgICAgICAgY29udGludWU7XG4gICAgICB9XG5cbiAgICAgIGlmICh0eXBlb2YgbGF5ZXIgIT09IFwidW5kZWZpbmVkXCIpIHtcbiAgICAgICAgaWYgKHR5cGVvZiBpdGVtWzVdID09PSBcInVuZGVmaW5lZFwiKSB7XG4gICAgICAgICAgaXRlbVs1XSA9IGxheWVyO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIGl0ZW1bMV0gPSBcIkBsYXllclwiLmNvbmNhdChpdGVtWzVdLmxlbmd0aCA+IDAgPyBcIiBcIi5jb25jYXQoaXRlbVs1XSkgOiBcIlwiLCBcIiB7XCIpLmNvbmNhdChpdGVtWzFdLCBcIn1cIik7XG4gICAgICAgICAgaXRlbVs1XSA9IGxheWVyO1xuICAgICAgICB9XG4gICAgICB9XG5cbiAgICAgIGlmIChtZWRpYSkge1xuICAgICAgICBpZiAoIWl0ZW1bMl0pIHtcbiAgICAgICAgICBpdGVtWzJdID0gbWVkaWE7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgaXRlbVsxXSA9IFwiQG1lZGlhIFwiLmNvbmNhdChpdGVtWzJdLCBcIiB7XCIpLmNvbmNhdChpdGVtWzFdLCBcIn1cIik7XG4gICAgICAgICAgaXRlbVsyXSA9IG1lZGlhO1xuICAgICAgICB9XG4gICAgICB9XG5cbiAgICAgIGlmIChzdXBwb3J0cykge1xuICAgICAgICBpZiAoIWl0ZW1bNF0pIHtcbiAgICAgICAgICBpdGVtWzRdID0gXCJcIi5jb25jYXQoc3VwcG9ydHMpO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIGl0ZW1bMV0gPSBcIkBzdXBwb3J0cyAoXCIuY29uY2F0KGl0ZW1bNF0sIFwiKSB7XCIpLmNvbmNhdChpdGVtWzFdLCBcIn1cIik7XG4gICAgICAgICAgaXRlbVs0XSA9IHN1cHBvcnRzO1xuICAgICAgICB9XG4gICAgICB9XG5cbiAgICAgIGxpc3QucHVzaChpdGVtKTtcbiAgICB9XG4gIH07XG5cbiAgcmV0dXJuIGxpc3Q7XG59OyIsIlwidXNlIHN0cmljdFwiO1xuXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChpdGVtKSB7XG4gIHZhciBjb250ZW50ID0gaXRlbVsxXTtcbiAgdmFyIGNzc01hcHBpbmcgPSBpdGVtWzNdO1xuXG4gIGlmICghY3NzTWFwcGluZykge1xuICAgIHJldHVybiBjb250ZW50O1xuICB9XG5cbiAgaWYgKHR5cGVvZiBidG9hID09PSBcImZ1bmN0aW9uXCIpIHtcbiAgICB2YXIgYmFzZTY0ID0gYnRvYSh1bmVzY2FwZShlbmNvZGVVUklDb21wb25lbnQoSlNPTi5zdHJpbmdpZnkoY3NzTWFwcGluZykpKSk7XG4gICAgdmFyIGRhdGEgPSBcInNvdXJjZU1hcHBpbmdVUkw9ZGF0YTphcHBsaWNhdGlvbi9qc29uO2NoYXJzZXQ9dXRmLTg7YmFzZTY0LFwiLmNvbmNhdChiYXNlNjQpO1xuICAgIHZhciBzb3VyY2VNYXBwaW5nID0gXCIvKiMgXCIuY29uY2F0KGRhdGEsIFwiICovXCIpO1xuICAgIHZhciBzb3VyY2VVUkxzID0gY3NzTWFwcGluZy5zb3VyY2VzLm1hcChmdW5jdGlvbiAoc291cmNlKSB7XG4gICAgICByZXR1cm4gXCIvKiMgc291cmNlVVJMPVwiLmNvbmNhdChjc3NNYXBwaW5nLnNvdXJjZVJvb3QgfHwgXCJcIikuY29uY2F0KHNvdXJjZSwgXCIgKi9cIik7XG4gICAgfSk7XG4gICAgcmV0dXJuIFtjb250ZW50XS5jb25jYXQoc291cmNlVVJMcykuY29uY2F0KFtzb3VyY2VNYXBwaW5nXSkuam9pbihcIlxcblwiKTtcbiAgfVxuXG4gIHJldHVybiBbY29udGVudF0uam9pbihcIlxcblwiKTtcbn07IiwiJ3VzZSBzdHJpY3QnO1xuXG52YXIga2V5cyA9IHJlcXVpcmUoJ29iamVjdC1rZXlzJyk7XG52YXIgaGFzU3ltYm9scyA9IHR5cGVvZiBTeW1ib2wgPT09ICdmdW5jdGlvbicgJiYgdHlwZW9mIFN5bWJvbCgnZm9vJykgPT09ICdzeW1ib2wnO1xuXG52YXIgdG9TdHIgPSBPYmplY3QucHJvdG90eXBlLnRvU3RyaW5nO1xudmFyIGNvbmNhdCA9IEFycmF5LnByb3RvdHlwZS5jb25jYXQ7XG52YXIgb3JpZ0RlZmluZVByb3BlcnR5ID0gT2JqZWN0LmRlZmluZVByb3BlcnR5O1xuXG52YXIgaXNGdW5jdGlvbiA9IGZ1bmN0aW9uIChmbikge1xuXHRyZXR1cm4gdHlwZW9mIGZuID09PSAnZnVuY3Rpb24nICYmIHRvU3RyLmNhbGwoZm4pID09PSAnW29iamVjdCBGdW5jdGlvbl0nO1xufTtcblxudmFyIGhhc1Byb3BlcnR5RGVzY3JpcHRvcnMgPSByZXF1aXJlKCdoYXMtcHJvcGVydHktZGVzY3JpcHRvcnMnKSgpO1xuXG52YXIgc3VwcG9ydHNEZXNjcmlwdG9ycyA9IG9yaWdEZWZpbmVQcm9wZXJ0eSAmJiBoYXNQcm9wZXJ0eURlc2NyaXB0b3JzO1xuXG52YXIgZGVmaW5lUHJvcGVydHkgPSBmdW5jdGlvbiAob2JqZWN0LCBuYW1lLCB2YWx1ZSwgcHJlZGljYXRlKSB7XG5cdGlmIChuYW1lIGluIG9iamVjdCAmJiAoIWlzRnVuY3Rpb24ocHJlZGljYXRlKSB8fCAhcHJlZGljYXRlKCkpKSB7XG5cdFx0cmV0dXJuO1xuXHR9XG5cdGlmIChzdXBwb3J0c0Rlc2NyaXB0b3JzKSB7XG5cdFx0b3JpZ0RlZmluZVByb3BlcnR5KG9iamVjdCwgbmFtZSwge1xuXHRcdFx0Y29uZmlndXJhYmxlOiB0cnVlLFxuXHRcdFx0ZW51bWVyYWJsZTogZmFsc2UsXG5cdFx0XHR2YWx1ZTogdmFsdWUsXG5cdFx0XHR3cml0YWJsZTogdHJ1ZVxuXHRcdH0pO1xuXHR9IGVsc2Uge1xuXHRcdG9iamVjdFtuYW1lXSA9IHZhbHVlOyAvLyBlc2xpbnQtZGlzYWJsZS1saW5lIG5vLXBhcmFtLXJlYXNzaWduXG5cdH1cbn07XG5cbnZhciBkZWZpbmVQcm9wZXJ0aWVzID0gZnVuY3Rpb24gKG9iamVjdCwgbWFwKSB7XG5cdHZhciBwcmVkaWNhdGVzID0gYXJndW1lbnRzLmxlbmd0aCA+IDIgPyBhcmd1bWVudHNbMl0gOiB7fTtcblx0dmFyIHByb3BzID0ga2V5cyhtYXApO1xuXHRpZiAoaGFzU3ltYm9scykge1xuXHRcdHByb3BzID0gY29uY2F0LmNhbGwocHJvcHMsIE9iamVjdC5nZXRPd25Qcm9wZXJ0eVN5bWJvbHMobWFwKSk7XG5cdH1cblx0Zm9yICh2YXIgaSA9IDA7IGkgPCBwcm9wcy5sZW5ndGg7IGkgKz0gMSkge1xuXHRcdGRlZmluZVByb3BlcnR5KG9iamVjdCwgcHJvcHNbaV0sIG1hcFtwcm9wc1tpXV0sIHByZWRpY2F0ZXNbcHJvcHNbaV1dKTtcblx0fVxufTtcblxuZGVmaW5lUHJvcGVydGllcy5zdXBwb3J0c0Rlc2NyaXB0b3JzID0gISFzdXBwb3J0c0Rlc2NyaXB0b3JzO1xuXG5tb2R1bGUuZXhwb3J0cyA9IGRlZmluZVByb3BlcnRpZXM7XG4iLCIvKipcbiAqIENvZGUgcmVmYWN0b3JlZCBmcm9tIE1vemlsbGEgRGV2ZWxvcGVyIE5ldHdvcms6XG4gKiBodHRwczovL2RldmVsb3Blci5tb3ppbGxhLm9yZy9lbi1VUy9kb2NzL1dlYi9KYXZhU2NyaXB0L1JlZmVyZW5jZS9HbG9iYWxfT2JqZWN0cy9PYmplY3QvYXNzaWduXG4gKi9cblxuJ3VzZSBzdHJpY3QnO1xuXG5mdW5jdGlvbiBhc3NpZ24odGFyZ2V0LCBmaXJzdFNvdXJjZSkge1xuICBpZiAodGFyZ2V0ID09PSB1bmRlZmluZWQgfHwgdGFyZ2V0ID09PSBudWxsKSB7XG4gICAgdGhyb3cgbmV3IFR5cGVFcnJvcignQ2Fubm90IGNvbnZlcnQgZmlyc3QgYXJndW1lbnQgdG8gb2JqZWN0Jyk7XG4gIH1cblxuICB2YXIgdG8gPSBPYmplY3QodGFyZ2V0KTtcbiAgZm9yICh2YXIgaSA9IDE7IGkgPCBhcmd1bWVudHMubGVuZ3RoOyBpKyspIHtcbiAgICB2YXIgbmV4dFNvdXJjZSA9IGFyZ3VtZW50c1tpXTtcbiAgICBpZiAobmV4dFNvdXJjZSA9PT0gdW5kZWZpbmVkIHx8IG5leHRTb3VyY2UgPT09IG51bGwpIHtcbiAgICAgIGNvbnRpbnVlO1xuICAgIH1cblxuICAgIHZhciBrZXlzQXJyYXkgPSBPYmplY3Qua2V5cyhPYmplY3QobmV4dFNvdXJjZSkpO1xuICAgIGZvciAodmFyIG5leHRJbmRleCA9IDAsIGxlbiA9IGtleXNBcnJheS5sZW5ndGg7IG5leHRJbmRleCA8IGxlbjsgbmV4dEluZGV4KyspIHtcbiAgICAgIHZhciBuZXh0S2V5ID0ga2V5c0FycmF5W25leHRJbmRleF07XG4gICAgICB2YXIgZGVzYyA9IE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IobmV4dFNvdXJjZSwgbmV4dEtleSk7XG4gICAgICBpZiAoZGVzYyAhPT0gdW5kZWZpbmVkICYmIGRlc2MuZW51bWVyYWJsZSkge1xuICAgICAgICB0b1tuZXh0S2V5XSA9IG5leHRTb3VyY2VbbmV4dEtleV07XG4gICAgICB9XG4gICAgfVxuICB9XG4gIHJldHVybiB0bztcbn1cblxuZnVuY3Rpb24gcG9seWZpbGwoKSB7XG4gIGlmICghT2JqZWN0LmFzc2lnbikge1xuICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShPYmplY3QsICdhc3NpZ24nLCB7XG4gICAgICBlbnVtZXJhYmxlOiBmYWxzZSxcbiAgICAgIGNvbmZpZ3VyYWJsZTogdHJ1ZSxcbiAgICAgIHdyaXRhYmxlOiB0cnVlLFxuICAgICAgdmFsdWU6IGFzc2lnblxuICAgIH0pO1xuICB9XG59XG5cbm1vZHVsZS5leHBvcnRzID0ge1xuICBhc3NpZ246IGFzc2lnbixcbiAgcG9seWZpbGw6IHBvbHlmaWxsXG59O1xuIiwiJ3VzZSBzdHJpY3QnO1xuXG52YXIgaXNDYWxsYWJsZSA9IHJlcXVpcmUoJ2lzLWNhbGxhYmxlJyk7XG5cbnZhciB0b1N0ciA9IE9iamVjdC5wcm90b3R5cGUudG9TdHJpbmc7XG52YXIgaGFzT3duUHJvcGVydHkgPSBPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5O1xuXG52YXIgZm9yRWFjaEFycmF5ID0gZnVuY3Rpb24gZm9yRWFjaEFycmF5KGFycmF5LCBpdGVyYXRvciwgcmVjZWl2ZXIpIHtcbiAgICBmb3IgKHZhciBpID0gMCwgbGVuID0gYXJyYXkubGVuZ3RoOyBpIDwgbGVuOyBpKyspIHtcbiAgICAgICAgaWYgKGhhc093blByb3BlcnR5LmNhbGwoYXJyYXksIGkpKSB7XG4gICAgICAgICAgICBpZiAocmVjZWl2ZXIgPT0gbnVsbCkge1xuICAgICAgICAgICAgICAgIGl0ZXJhdG9yKGFycmF5W2ldLCBpLCBhcnJheSk7XG4gICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgIGl0ZXJhdG9yLmNhbGwocmVjZWl2ZXIsIGFycmF5W2ldLCBpLCBhcnJheSk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9XG59O1xuXG52YXIgZm9yRWFjaFN0cmluZyA9IGZ1bmN0aW9uIGZvckVhY2hTdHJpbmcoc3RyaW5nLCBpdGVyYXRvciwgcmVjZWl2ZXIpIHtcbiAgICBmb3IgKHZhciBpID0gMCwgbGVuID0gc3RyaW5nLmxlbmd0aDsgaSA8IGxlbjsgaSsrKSB7XG4gICAgICAgIC8vIG5vIHN1Y2ggdGhpbmcgYXMgYSBzcGFyc2Ugc3RyaW5nLlxuICAgICAgICBpZiAocmVjZWl2ZXIgPT0gbnVsbCkge1xuICAgICAgICAgICAgaXRlcmF0b3Ioc3RyaW5nLmNoYXJBdChpKSwgaSwgc3RyaW5nKTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIGl0ZXJhdG9yLmNhbGwocmVjZWl2ZXIsIHN0cmluZy5jaGFyQXQoaSksIGksIHN0cmluZyk7XG4gICAgICAgIH1cbiAgICB9XG59O1xuXG52YXIgZm9yRWFjaE9iamVjdCA9IGZ1bmN0aW9uIGZvckVhY2hPYmplY3Qob2JqZWN0LCBpdGVyYXRvciwgcmVjZWl2ZXIpIHtcbiAgICBmb3IgKHZhciBrIGluIG9iamVjdCkge1xuICAgICAgICBpZiAoaGFzT3duUHJvcGVydHkuY2FsbChvYmplY3QsIGspKSB7XG4gICAgICAgICAgICBpZiAocmVjZWl2ZXIgPT0gbnVsbCkge1xuICAgICAgICAgICAgICAgIGl0ZXJhdG9yKG9iamVjdFtrXSwgaywgb2JqZWN0KTtcbiAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgaXRlcmF0b3IuY2FsbChyZWNlaXZlciwgb2JqZWN0W2tdLCBrLCBvYmplY3QpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfVxufTtcblxudmFyIGZvckVhY2ggPSBmdW5jdGlvbiBmb3JFYWNoKGxpc3QsIGl0ZXJhdG9yLCB0aGlzQXJnKSB7XG4gICAgaWYgKCFpc0NhbGxhYmxlKGl0ZXJhdG9yKSkge1xuICAgICAgICB0aHJvdyBuZXcgVHlwZUVycm9yKCdpdGVyYXRvciBtdXN0IGJlIGEgZnVuY3Rpb24nKTtcbiAgICB9XG5cbiAgICB2YXIgcmVjZWl2ZXI7XG4gICAgaWYgKGFyZ3VtZW50cy5sZW5ndGggPj0gMykge1xuICAgICAgICByZWNlaXZlciA9IHRoaXNBcmc7XG4gICAgfVxuXG4gICAgaWYgKHRvU3RyLmNhbGwobGlzdCkgPT09ICdbb2JqZWN0IEFycmF5XScpIHtcbiAgICAgICAgZm9yRWFjaEFycmF5KGxpc3QsIGl0ZXJhdG9yLCByZWNlaXZlcik7XG4gICAgfSBlbHNlIGlmICh0eXBlb2YgbGlzdCA9PT0gJ3N0cmluZycpIHtcbiAgICAgICAgZm9yRWFjaFN0cmluZyhsaXN0LCBpdGVyYXRvciwgcmVjZWl2ZXIpO1xuICAgIH0gZWxzZSB7XG4gICAgICAgIGZvckVhY2hPYmplY3QobGlzdCwgaXRlcmF0b3IsIHJlY2VpdmVyKTtcbiAgICB9XG59O1xuXG5tb2R1bGUuZXhwb3J0cyA9IGZvckVhY2g7XG4iLCIndXNlIHN0cmljdCc7XG5cbi8qIGVzbGludCBuby1pbnZhbGlkLXRoaXM6IDEgKi9cblxudmFyIEVSUk9SX01FU1NBR0UgPSAnRnVuY3Rpb24ucHJvdG90eXBlLmJpbmQgY2FsbGVkIG9uIGluY29tcGF0aWJsZSAnO1xudmFyIHNsaWNlID0gQXJyYXkucHJvdG90eXBlLnNsaWNlO1xudmFyIHRvU3RyID0gT2JqZWN0LnByb3RvdHlwZS50b1N0cmluZztcbnZhciBmdW5jVHlwZSA9ICdbb2JqZWN0IEZ1bmN0aW9uXSc7XG5cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gYmluZCh0aGF0KSB7XG4gICAgdmFyIHRhcmdldCA9IHRoaXM7XG4gICAgaWYgKHR5cGVvZiB0YXJnZXQgIT09ICdmdW5jdGlvbicgfHwgdG9TdHIuY2FsbCh0YXJnZXQpICE9PSBmdW5jVHlwZSkge1xuICAgICAgICB0aHJvdyBuZXcgVHlwZUVycm9yKEVSUk9SX01FU1NBR0UgKyB0YXJnZXQpO1xuICAgIH1cbiAgICB2YXIgYXJncyA9IHNsaWNlLmNhbGwoYXJndW1lbnRzLCAxKTtcblxuICAgIHZhciBib3VuZDtcbiAgICB2YXIgYmluZGVyID0gZnVuY3Rpb24gKCkge1xuICAgICAgICBpZiAodGhpcyBpbnN0YW5jZW9mIGJvdW5kKSB7XG4gICAgICAgICAgICB2YXIgcmVzdWx0ID0gdGFyZ2V0LmFwcGx5KFxuICAgICAgICAgICAgICAgIHRoaXMsXG4gICAgICAgICAgICAgICAgYXJncy5jb25jYXQoc2xpY2UuY2FsbChhcmd1bWVudHMpKVxuICAgICAgICAgICAgKTtcbiAgICAgICAgICAgIGlmIChPYmplY3QocmVzdWx0KSA9PT0gcmVzdWx0KSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIHJlc3VsdDtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHJldHVybiB0aGlzO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgcmV0dXJuIHRhcmdldC5hcHBseShcbiAgICAgICAgICAgICAgICB0aGF0LFxuICAgICAgICAgICAgICAgIGFyZ3MuY29uY2F0KHNsaWNlLmNhbGwoYXJndW1lbnRzKSlcbiAgICAgICAgICAgICk7XG4gICAgICAgIH1cbiAgICB9O1xuXG4gICAgdmFyIGJvdW5kTGVuZ3RoID0gTWF0aC5tYXgoMCwgdGFyZ2V0Lmxlbmd0aCAtIGFyZ3MubGVuZ3RoKTtcbiAgICB2YXIgYm91bmRBcmdzID0gW107XG4gICAgZm9yICh2YXIgaSA9IDA7IGkgPCBib3VuZExlbmd0aDsgaSsrKSB7XG4gICAgICAgIGJvdW5kQXJncy5wdXNoKCckJyArIGkpO1xuICAgIH1cblxuICAgIGJvdW5kID0gRnVuY3Rpb24oJ2JpbmRlcicsICdyZXR1cm4gZnVuY3Rpb24gKCcgKyBib3VuZEFyZ3Muam9pbignLCcpICsgJyl7IHJldHVybiBiaW5kZXIuYXBwbHkodGhpcyxhcmd1bWVudHMpOyB9JykoYmluZGVyKTtcblxuICAgIGlmICh0YXJnZXQucHJvdG90eXBlKSB7XG4gICAgICAgIHZhciBFbXB0eSA9IGZ1bmN0aW9uIEVtcHR5KCkge307XG4gICAgICAgIEVtcHR5LnByb3RvdHlwZSA9IHRhcmdldC5wcm90b3R5cGU7XG4gICAgICAgIGJvdW5kLnByb3RvdHlwZSA9IG5ldyBFbXB0eSgpO1xuICAgICAgICBFbXB0eS5wcm90b3R5cGUgPSBudWxsO1xuICAgIH1cblxuICAgIHJldHVybiBib3VuZDtcbn07XG4iLCIndXNlIHN0cmljdCc7XG5cbnZhciBpbXBsZW1lbnRhdGlvbiA9IHJlcXVpcmUoJy4vaW1wbGVtZW50YXRpb24nKTtcblxubW9kdWxlLmV4cG9ydHMgPSBGdW5jdGlvbi5wcm90b3R5cGUuYmluZCB8fCBpbXBsZW1lbnRhdGlvbjtcbiIsIid1c2Ugc3RyaWN0JztcblxudmFyIHVuZGVmaW5lZDtcblxudmFyICRTeW50YXhFcnJvciA9IFN5bnRheEVycm9yO1xudmFyICRGdW5jdGlvbiA9IEZ1bmN0aW9uO1xudmFyICRUeXBlRXJyb3IgPSBUeXBlRXJyb3I7XG5cbi8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBjb25zaXN0ZW50LXJldHVyblxudmFyIGdldEV2YWxsZWRDb25zdHJ1Y3RvciA9IGZ1bmN0aW9uIChleHByZXNzaW9uU3ludGF4KSB7XG5cdHRyeSB7XG5cdFx0cmV0dXJuICRGdW5jdGlvbignXCJ1c2Ugc3RyaWN0XCI7IHJldHVybiAoJyArIGV4cHJlc3Npb25TeW50YXggKyAnKS5jb25zdHJ1Y3RvcjsnKSgpO1xuXHR9IGNhdGNoIChlKSB7fVxufTtcblxudmFyICRnT1BEID0gT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcjtcbmlmICgkZ09QRCkge1xuXHR0cnkge1xuXHRcdCRnT1BEKHt9LCAnJyk7XG5cdH0gY2F0Y2ggKGUpIHtcblx0XHQkZ09QRCA9IG51bGw7IC8vIHRoaXMgaXMgSUUgOCwgd2hpY2ggaGFzIGEgYnJva2VuIGdPUERcblx0fVxufVxuXG52YXIgdGhyb3dUeXBlRXJyb3IgPSBmdW5jdGlvbiAoKSB7XG5cdHRocm93IG5ldyAkVHlwZUVycm9yKCk7XG59O1xudmFyIFRocm93VHlwZUVycm9yID0gJGdPUERcblx0PyAoZnVuY3Rpb24gKCkge1xuXHRcdHRyeSB7XG5cdFx0XHQvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbm8tdW51c2VkLWV4cHJlc3Npb25zLCBuby1jYWxsZXIsIG5vLXJlc3RyaWN0ZWQtcHJvcGVydGllc1xuXHRcdFx0YXJndW1lbnRzLmNhbGxlZTsgLy8gSUUgOCBkb2VzIG5vdCB0aHJvdyBoZXJlXG5cdFx0XHRyZXR1cm4gdGhyb3dUeXBlRXJyb3I7XG5cdFx0fSBjYXRjaCAoY2FsbGVlVGhyb3dzKSB7XG5cdFx0XHR0cnkge1xuXHRcdFx0XHQvLyBJRSA4IHRocm93cyBvbiBPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKGFyZ3VtZW50cywgJycpXG5cdFx0XHRcdHJldHVybiAkZ09QRChhcmd1bWVudHMsICdjYWxsZWUnKS5nZXQ7XG5cdFx0XHR9IGNhdGNoIChnT1BEdGhyb3dzKSB7XG5cdFx0XHRcdHJldHVybiB0aHJvd1R5cGVFcnJvcjtcblx0XHRcdH1cblx0XHR9XG5cdH0oKSlcblx0OiB0aHJvd1R5cGVFcnJvcjtcblxudmFyIGhhc1N5bWJvbHMgPSByZXF1aXJlKCdoYXMtc3ltYm9scycpKCk7XG5cbnZhciBnZXRQcm90byA9IE9iamVjdC5nZXRQcm90b3R5cGVPZiB8fCBmdW5jdGlvbiAoeCkgeyByZXR1cm4geC5fX3Byb3RvX187IH07IC8vIGVzbGludC1kaXNhYmxlLWxpbmUgbm8tcHJvdG9cblxudmFyIG5lZWRzRXZhbCA9IHt9O1xuXG52YXIgVHlwZWRBcnJheSA9IHR5cGVvZiBVaW50OEFycmF5ID09PSAndW5kZWZpbmVkJyA/IHVuZGVmaW5lZCA6IGdldFByb3RvKFVpbnQ4QXJyYXkpO1xuXG52YXIgSU5UUklOU0lDUyA9IHtcblx0JyVBZ2dyZWdhdGVFcnJvciUnOiB0eXBlb2YgQWdncmVnYXRlRXJyb3IgPT09ICd1bmRlZmluZWQnID8gdW5kZWZpbmVkIDogQWdncmVnYXRlRXJyb3IsXG5cdCclQXJyYXklJzogQXJyYXksXG5cdCclQXJyYXlCdWZmZXIlJzogdHlwZW9mIEFycmF5QnVmZmVyID09PSAndW5kZWZpbmVkJyA/IHVuZGVmaW5lZCA6IEFycmF5QnVmZmVyLFxuXHQnJUFycmF5SXRlcmF0b3JQcm90b3R5cGUlJzogaGFzU3ltYm9scyA/IGdldFByb3RvKFtdW1N5bWJvbC5pdGVyYXRvcl0oKSkgOiB1bmRlZmluZWQsXG5cdCclQXN5bmNGcm9tU3luY0l0ZXJhdG9yUHJvdG90eXBlJSc6IHVuZGVmaW5lZCxcblx0JyVBc3luY0Z1bmN0aW9uJSc6IG5lZWRzRXZhbCxcblx0JyVBc3luY0dlbmVyYXRvciUnOiBuZWVkc0V2YWwsXG5cdCclQXN5bmNHZW5lcmF0b3JGdW5jdGlvbiUnOiBuZWVkc0V2YWwsXG5cdCclQXN5bmNJdGVyYXRvclByb3RvdHlwZSUnOiBuZWVkc0V2YWwsXG5cdCclQXRvbWljcyUnOiB0eXBlb2YgQXRvbWljcyA9PT0gJ3VuZGVmaW5lZCcgPyB1bmRlZmluZWQgOiBBdG9taWNzLFxuXHQnJUJpZ0ludCUnOiB0eXBlb2YgQmlnSW50ID09PSAndW5kZWZpbmVkJyA/IHVuZGVmaW5lZCA6IEJpZ0ludCxcblx0JyVCb29sZWFuJSc6IEJvb2xlYW4sXG5cdCclRGF0YVZpZXclJzogdHlwZW9mIERhdGFWaWV3ID09PSAndW5kZWZpbmVkJyA/IHVuZGVmaW5lZCA6IERhdGFWaWV3LFxuXHQnJURhdGUlJzogRGF0ZSxcblx0JyVkZWNvZGVVUkklJzogZGVjb2RlVVJJLFxuXHQnJWRlY29kZVVSSUNvbXBvbmVudCUnOiBkZWNvZGVVUklDb21wb25lbnQsXG5cdCclZW5jb2RlVVJJJSc6IGVuY29kZVVSSSxcblx0JyVlbmNvZGVVUklDb21wb25lbnQlJzogZW5jb2RlVVJJQ29tcG9uZW50LFxuXHQnJUVycm9yJSc6IEVycm9yLFxuXHQnJWV2YWwlJzogZXZhbCwgLy8gZXNsaW50LWRpc2FibGUtbGluZSBuby1ldmFsXG5cdCclRXZhbEVycm9yJSc6IEV2YWxFcnJvcixcblx0JyVGbG9hdDMyQXJyYXklJzogdHlwZW9mIEZsb2F0MzJBcnJheSA9PT0gJ3VuZGVmaW5lZCcgPyB1bmRlZmluZWQgOiBGbG9hdDMyQXJyYXksXG5cdCclRmxvYXQ2NEFycmF5JSc6IHR5cGVvZiBGbG9hdDY0QXJyYXkgPT09ICd1bmRlZmluZWQnID8gdW5kZWZpbmVkIDogRmxvYXQ2NEFycmF5LFxuXHQnJUZpbmFsaXphdGlvblJlZ2lzdHJ5JSc6IHR5cGVvZiBGaW5hbGl6YXRpb25SZWdpc3RyeSA9PT0gJ3VuZGVmaW5lZCcgPyB1bmRlZmluZWQgOiBGaW5hbGl6YXRpb25SZWdpc3RyeSxcblx0JyVGdW5jdGlvbiUnOiAkRnVuY3Rpb24sXG5cdCclR2VuZXJhdG9yRnVuY3Rpb24lJzogbmVlZHNFdmFsLFxuXHQnJUludDhBcnJheSUnOiB0eXBlb2YgSW50OEFycmF5ID09PSAndW5kZWZpbmVkJyA/IHVuZGVmaW5lZCA6IEludDhBcnJheSxcblx0JyVJbnQxNkFycmF5JSc6IHR5cGVvZiBJbnQxNkFycmF5ID09PSAndW5kZWZpbmVkJyA/IHVuZGVmaW5lZCA6IEludDE2QXJyYXksXG5cdCclSW50MzJBcnJheSUnOiB0eXBlb2YgSW50MzJBcnJheSA9PT0gJ3VuZGVmaW5lZCcgPyB1bmRlZmluZWQgOiBJbnQzMkFycmF5LFxuXHQnJWlzRmluaXRlJSc6IGlzRmluaXRlLFxuXHQnJWlzTmFOJSc6IGlzTmFOLFxuXHQnJUl0ZXJhdG9yUHJvdG90eXBlJSc6IGhhc1N5bWJvbHMgPyBnZXRQcm90byhnZXRQcm90byhbXVtTeW1ib2wuaXRlcmF0b3JdKCkpKSA6IHVuZGVmaW5lZCxcblx0JyVKU09OJSc6IHR5cGVvZiBKU09OID09PSAnb2JqZWN0JyA/IEpTT04gOiB1bmRlZmluZWQsXG5cdCclTWFwJSc6IHR5cGVvZiBNYXAgPT09ICd1bmRlZmluZWQnID8gdW5kZWZpbmVkIDogTWFwLFxuXHQnJU1hcEl0ZXJhdG9yUHJvdG90eXBlJSc6IHR5cGVvZiBNYXAgPT09ICd1bmRlZmluZWQnIHx8ICFoYXNTeW1ib2xzID8gdW5kZWZpbmVkIDogZ2V0UHJvdG8obmV3IE1hcCgpW1N5bWJvbC5pdGVyYXRvcl0oKSksXG5cdCclTWF0aCUnOiBNYXRoLFxuXHQnJU51bWJlciUnOiBOdW1iZXIsXG5cdCclT2JqZWN0JSc6IE9iamVjdCxcblx0JyVwYXJzZUZsb2F0JSc6IHBhcnNlRmxvYXQsXG5cdCclcGFyc2VJbnQlJzogcGFyc2VJbnQsXG5cdCclUHJvbWlzZSUnOiB0eXBlb2YgUHJvbWlzZSA9PT0gJ3VuZGVmaW5lZCcgPyB1bmRlZmluZWQgOiBQcm9taXNlLFxuXHQnJVByb3h5JSc6IHR5cGVvZiBQcm94eSA9PT0gJ3VuZGVmaW5lZCcgPyB1bmRlZmluZWQgOiBQcm94eSxcblx0JyVSYW5nZUVycm9yJSc6IFJhbmdlRXJyb3IsXG5cdCclUmVmZXJlbmNlRXJyb3IlJzogUmVmZXJlbmNlRXJyb3IsXG5cdCclUmVmbGVjdCUnOiB0eXBlb2YgUmVmbGVjdCA9PT0gJ3VuZGVmaW5lZCcgPyB1bmRlZmluZWQgOiBSZWZsZWN0LFxuXHQnJVJlZ0V4cCUnOiBSZWdFeHAsXG5cdCclU2V0JSc6IHR5cGVvZiBTZXQgPT09ICd1bmRlZmluZWQnID8gdW5kZWZpbmVkIDogU2V0LFxuXHQnJVNldEl0ZXJhdG9yUHJvdG90eXBlJSc6IHR5cGVvZiBTZXQgPT09ICd1bmRlZmluZWQnIHx8ICFoYXNTeW1ib2xzID8gdW5kZWZpbmVkIDogZ2V0UHJvdG8obmV3IFNldCgpW1N5bWJvbC5pdGVyYXRvcl0oKSksXG5cdCclU2hhcmVkQXJyYXlCdWZmZXIlJzogdHlwZW9mIFNoYXJlZEFycmF5QnVmZmVyID09PSAndW5kZWZpbmVkJyA/IHVuZGVmaW5lZCA6IFNoYXJlZEFycmF5QnVmZmVyLFxuXHQnJVN0cmluZyUnOiBTdHJpbmcsXG5cdCclU3RyaW5nSXRlcmF0b3JQcm90b3R5cGUlJzogaGFzU3ltYm9scyA/IGdldFByb3RvKCcnW1N5bWJvbC5pdGVyYXRvcl0oKSkgOiB1bmRlZmluZWQsXG5cdCclU3ltYm9sJSc6IGhhc1N5bWJvbHMgPyBTeW1ib2wgOiB1bmRlZmluZWQsXG5cdCclU3ludGF4RXJyb3IlJzogJFN5bnRheEVycm9yLFxuXHQnJVRocm93VHlwZUVycm9yJSc6IFRocm93VHlwZUVycm9yLFxuXHQnJVR5cGVkQXJyYXklJzogVHlwZWRBcnJheSxcblx0JyVUeXBlRXJyb3IlJzogJFR5cGVFcnJvcixcblx0JyVVaW50OEFycmF5JSc6IHR5cGVvZiBVaW50OEFycmF5ID09PSAndW5kZWZpbmVkJyA/IHVuZGVmaW5lZCA6IFVpbnQ4QXJyYXksXG5cdCclVWludDhDbGFtcGVkQXJyYXklJzogdHlwZW9mIFVpbnQ4Q2xhbXBlZEFycmF5ID09PSAndW5kZWZpbmVkJyA/IHVuZGVmaW5lZCA6IFVpbnQ4Q2xhbXBlZEFycmF5LFxuXHQnJVVpbnQxNkFycmF5JSc6IHR5cGVvZiBVaW50MTZBcnJheSA9PT0gJ3VuZGVmaW5lZCcgPyB1bmRlZmluZWQgOiBVaW50MTZBcnJheSxcblx0JyVVaW50MzJBcnJheSUnOiB0eXBlb2YgVWludDMyQXJyYXkgPT09ICd1bmRlZmluZWQnID8gdW5kZWZpbmVkIDogVWludDMyQXJyYXksXG5cdCclVVJJRXJyb3IlJzogVVJJRXJyb3IsXG5cdCclV2Vha01hcCUnOiB0eXBlb2YgV2Vha01hcCA9PT0gJ3VuZGVmaW5lZCcgPyB1bmRlZmluZWQgOiBXZWFrTWFwLFxuXHQnJVdlYWtSZWYlJzogdHlwZW9mIFdlYWtSZWYgPT09ICd1bmRlZmluZWQnID8gdW5kZWZpbmVkIDogV2Vha1JlZixcblx0JyVXZWFrU2V0JSc6IHR5cGVvZiBXZWFrU2V0ID09PSAndW5kZWZpbmVkJyA/IHVuZGVmaW5lZCA6IFdlYWtTZXRcbn07XG5cbnZhciBkb0V2YWwgPSBmdW5jdGlvbiBkb0V2YWwobmFtZSkge1xuXHR2YXIgdmFsdWU7XG5cdGlmIChuYW1lID09PSAnJUFzeW5jRnVuY3Rpb24lJykge1xuXHRcdHZhbHVlID0gZ2V0RXZhbGxlZENvbnN0cnVjdG9yKCdhc3luYyBmdW5jdGlvbiAoKSB7fScpO1xuXHR9IGVsc2UgaWYgKG5hbWUgPT09ICclR2VuZXJhdG9yRnVuY3Rpb24lJykge1xuXHRcdHZhbHVlID0gZ2V0RXZhbGxlZENvbnN0cnVjdG9yKCdmdW5jdGlvbiogKCkge30nKTtcblx0fSBlbHNlIGlmIChuYW1lID09PSAnJUFzeW5jR2VuZXJhdG9yRnVuY3Rpb24lJykge1xuXHRcdHZhbHVlID0gZ2V0RXZhbGxlZENvbnN0cnVjdG9yKCdhc3luYyBmdW5jdGlvbiogKCkge30nKTtcblx0fSBlbHNlIGlmIChuYW1lID09PSAnJUFzeW5jR2VuZXJhdG9yJScpIHtcblx0XHR2YXIgZm4gPSBkb0V2YWwoJyVBc3luY0dlbmVyYXRvckZ1bmN0aW9uJScpO1xuXHRcdGlmIChmbikge1xuXHRcdFx0dmFsdWUgPSBmbi5wcm90b3R5cGU7XG5cdFx0fVxuXHR9IGVsc2UgaWYgKG5hbWUgPT09ICclQXN5bmNJdGVyYXRvclByb3RvdHlwZSUnKSB7XG5cdFx0dmFyIGdlbiA9IGRvRXZhbCgnJUFzeW5jR2VuZXJhdG9yJScpO1xuXHRcdGlmIChnZW4pIHtcblx0XHRcdHZhbHVlID0gZ2V0UHJvdG8oZ2VuLnByb3RvdHlwZSk7XG5cdFx0fVxuXHR9XG5cblx0SU5UUklOU0lDU1tuYW1lXSA9IHZhbHVlO1xuXG5cdHJldHVybiB2YWx1ZTtcbn07XG5cbnZhciBMRUdBQ1lfQUxJQVNFUyA9IHtcblx0JyVBcnJheUJ1ZmZlclByb3RvdHlwZSUnOiBbJ0FycmF5QnVmZmVyJywgJ3Byb3RvdHlwZSddLFxuXHQnJUFycmF5UHJvdG90eXBlJSc6IFsnQXJyYXknLCAncHJvdG90eXBlJ10sXG5cdCclQXJyYXlQcm90b19lbnRyaWVzJSc6IFsnQXJyYXknLCAncHJvdG90eXBlJywgJ2VudHJpZXMnXSxcblx0JyVBcnJheVByb3RvX2ZvckVhY2glJzogWydBcnJheScsICdwcm90b3R5cGUnLCAnZm9yRWFjaCddLFxuXHQnJUFycmF5UHJvdG9fa2V5cyUnOiBbJ0FycmF5JywgJ3Byb3RvdHlwZScsICdrZXlzJ10sXG5cdCclQXJyYXlQcm90b192YWx1ZXMlJzogWydBcnJheScsICdwcm90b3R5cGUnLCAndmFsdWVzJ10sXG5cdCclQXN5bmNGdW5jdGlvblByb3RvdHlwZSUnOiBbJ0FzeW5jRnVuY3Rpb24nLCAncHJvdG90eXBlJ10sXG5cdCclQXN5bmNHZW5lcmF0b3IlJzogWydBc3luY0dlbmVyYXRvckZ1bmN0aW9uJywgJ3Byb3RvdHlwZSddLFxuXHQnJUFzeW5jR2VuZXJhdG9yUHJvdG90eXBlJSc6IFsnQXN5bmNHZW5lcmF0b3JGdW5jdGlvbicsICdwcm90b3R5cGUnLCAncHJvdG90eXBlJ10sXG5cdCclQm9vbGVhblByb3RvdHlwZSUnOiBbJ0Jvb2xlYW4nLCAncHJvdG90eXBlJ10sXG5cdCclRGF0YVZpZXdQcm90b3R5cGUlJzogWydEYXRhVmlldycsICdwcm90b3R5cGUnXSxcblx0JyVEYXRlUHJvdG90eXBlJSc6IFsnRGF0ZScsICdwcm90b3R5cGUnXSxcblx0JyVFcnJvclByb3RvdHlwZSUnOiBbJ0Vycm9yJywgJ3Byb3RvdHlwZSddLFxuXHQnJUV2YWxFcnJvclByb3RvdHlwZSUnOiBbJ0V2YWxFcnJvcicsICdwcm90b3R5cGUnXSxcblx0JyVGbG9hdDMyQXJyYXlQcm90b3R5cGUlJzogWydGbG9hdDMyQXJyYXknLCAncHJvdG90eXBlJ10sXG5cdCclRmxvYXQ2NEFycmF5UHJvdG90eXBlJSc6IFsnRmxvYXQ2NEFycmF5JywgJ3Byb3RvdHlwZSddLFxuXHQnJUZ1bmN0aW9uUHJvdG90eXBlJSc6IFsnRnVuY3Rpb24nLCAncHJvdG90eXBlJ10sXG5cdCclR2VuZXJhdG9yJSc6IFsnR2VuZXJhdG9yRnVuY3Rpb24nLCAncHJvdG90eXBlJ10sXG5cdCclR2VuZXJhdG9yUHJvdG90eXBlJSc6IFsnR2VuZXJhdG9yRnVuY3Rpb24nLCAncHJvdG90eXBlJywgJ3Byb3RvdHlwZSddLFxuXHQnJUludDhBcnJheVByb3RvdHlwZSUnOiBbJ0ludDhBcnJheScsICdwcm90b3R5cGUnXSxcblx0JyVJbnQxNkFycmF5UHJvdG90eXBlJSc6IFsnSW50MTZBcnJheScsICdwcm90b3R5cGUnXSxcblx0JyVJbnQzMkFycmF5UHJvdG90eXBlJSc6IFsnSW50MzJBcnJheScsICdwcm90b3R5cGUnXSxcblx0JyVKU09OUGFyc2UlJzogWydKU09OJywgJ3BhcnNlJ10sXG5cdCclSlNPTlN0cmluZ2lmeSUnOiBbJ0pTT04nLCAnc3RyaW5naWZ5J10sXG5cdCclTWFwUHJvdG90eXBlJSc6IFsnTWFwJywgJ3Byb3RvdHlwZSddLFxuXHQnJU51bWJlclByb3RvdHlwZSUnOiBbJ051bWJlcicsICdwcm90b3R5cGUnXSxcblx0JyVPYmplY3RQcm90b3R5cGUlJzogWydPYmplY3QnLCAncHJvdG90eXBlJ10sXG5cdCclT2JqUHJvdG9fdG9TdHJpbmclJzogWydPYmplY3QnLCAncHJvdG90eXBlJywgJ3RvU3RyaW5nJ10sXG5cdCclT2JqUHJvdG9fdmFsdWVPZiUnOiBbJ09iamVjdCcsICdwcm90b3R5cGUnLCAndmFsdWVPZiddLFxuXHQnJVByb21pc2VQcm90b3R5cGUlJzogWydQcm9taXNlJywgJ3Byb3RvdHlwZSddLFxuXHQnJVByb21pc2VQcm90b190aGVuJSc6IFsnUHJvbWlzZScsICdwcm90b3R5cGUnLCAndGhlbiddLFxuXHQnJVByb21pc2VfYWxsJSc6IFsnUHJvbWlzZScsICdhbGwnXSxcblx0JyVQcm9taXNlX3JlamVjdCUnOiBbJ1Byb21pc2UnLCAncmVqZWN0J10sXG5cdCclUHJvbWlzZV9yZXNvbHZlJSc6IFsnUHJvbWlzZScsICdyZXNvbHZlJ10sXG5cdCclUmFuZ2VFcnJvclByb3RvdHlwZSUnOiBbJ1JhbmdlRXJyb3InLCAncHJvdG90eXBlJ10sXG5cdCclUmVmZXJlbmNlRXJyb3JQcm90b3R5cGUlJzogWydSZWZlcmVuY2VFcnJvcicsICdwcm90b3R5cGUnXSxcblx0JyVSZWdFeHBQcm90b3R5cGUlJzogWydSZWdFeHAnLCAncHJvdG90eXBlJ10sXG5cdCclU2V0UHJvdG90eXBlJSc6IFsnU2V0JywgJ3Byb3RvdHlwZSddLFxuXHQnJVNoYXJlZEFycmF5QnVmZmVyUHJvdG90eXBlJSc6IFsnU2hhcmVkQXJyYXlCdWZmZXInLCAncHJvdG90eXBlJ10sXG5cdCclU3RyaW5nUHJvdG90eXBlJSc6IFsnU3RyaW5nJywgJ3Byb3RvdHlwZSddLFxuXHQnJVN5bWJvbFByb3RvdHlwZSUnOiBbJ1N5bWJvbCcsICdwcm90b3R5cGUnXSxcblx0JyVTeW50YXhFcnJvclByb3RvdHlwZSUnOiBbJ1N5bnRheEVycm9yJywgJ3Byb3RvdHlwZSddLFxuXHQnJVR5cGVkQXJyYXlQcm90b3R5cGUlJzogWydUeXBlZEFycmF5JywgJ3Byb3RvdHlwZSddLFxuXHQnJVR5cGVFcnJvclByb3RvdHlwZSUnOiBbJ1R5cGVFcnJvcicsICdwcm90b3R5cGUnXSxcblx0JyVVaW50OEFycmF5UHJvdG90eXBlJSc6IFsnVWludDhBcnJheScsICdwcm90b3R5cGUnXSxcblx0JyVVaW50OENsYW1wZWRBcnJheVByb3RvdHlwZSUnOiBbJ1VpbnQ4Q2xhbXBlZEFycmF5JywgJ3Byb3RvdHlwZSddLFxuXHQnJVVpbnQxNkFycmF5UHJvdG90eXBlJSc6IFsnVWludDE2QXJyYXknLCAncHJvdG90eXBlJ10sXG5cdCclVWludDMyQXJyYXlQcm90b3R5cGUlJzogWydVaW50MzJBcnJheScsICdwcm90b3R5cGUnXSxcblx0JyVVUklFcnJvclByb3RvdHlwZSUnOiBbJ1VSSUVycm9yJywgJ3Byb3RvdHlwZSddLFxuXHQnJVdlYWtNYXBQcm90b3R5cGUlJzogWydXZWFrTWFwJywgJ3Byb3RvdHlwZSddLFxuXHQnJVdlYWtTZXRQcm90b3R5cGUlJzogWydXZWFrU2V0JywgJ3Byb3RvdHlwZSddXG59O1xuXG52YXIgYmluZCA9IHJlcXVpcmUoJ2Z1bmN0aW9uLWJpbmQnKTtcbnZhciBoYXNPd24gPSByZXF1aXJlKCdoYXMnKTtcbnZhciAkY29uY2F0ID0gYmluZC5jYWxsKEZ1bmN0aW9uLmNhbGwsIEFycmF5LnByb3RvdHlwZS5jb25jYXQpO1xudmFyICRzcGxpY2VBcHBseSA9IGJpbmQuY2FsbChGdW5jdGlvbi5hcHBseSwgQXJyYXkucHJvdG90eXBlLnNwbGljZSk7XG52YXIgJHJlcGxhY2UgPSBiaW5kLmNhbGwoRnVuY3Rpb24uY2FsbCwgU3RyaW5nLnByb3RvdHlwZS5yZXBsYWNlKTtcbnZhciAkc3RyU2xpY2UgPSBiaW5kLmNhbGwoRnVuY3Rpb24uY2FsbCwgU3RyaW5nLnByb3RvdHlwZS5zbGljZSk7XG52YXIgJGV4ZWMgPSBiaW5kLmNhbGwoRnVuY3Rpb24uY2FsbCwgUmVnRXhwLnByb3RvdHlwZS5leGVjKTtcblxuLyogYWRhcHRlZCBmcm9tIGh0dHBzOi8vZ2l0aHViLmNvbS9sb2Rhc2gvbG9kYXNoL2Jsb2IvNC4xNy4xNS9kaXN0L2xvZGFzaC5qcyNMNjczNS1MNjc0NCAqL1xudmFyIHJlUHJvcE5hbWUgPSAvW14lLltcXF1dK3xcXFsoPzooLT9cXGQrKD86XFwuXFxkKyk/KXwoW1wiJ10pKCg/Oig/IVxcMilbXlxcXFxdfFxcXFwuKSo/KVxcMilcXF18KD89KD86XFwufFxcW1xcXSkoPzpcXC58XFxbXFxdfCUkKSkvZztcbnZhciByZUVzY2FwZUNoYXIgPSAvXFxcXChcXFxcKT8vZzsgLyoqIFVzZWQgdG8gbWF0Y2ggYmFja3NsYXNoZXMgaW4gcHJvcGVydHkgcGF0aHMuICovXG52YXIgc3RyaW5nVG9QYXRoID0gZnVuY3Rpb24gc3RyaW5nVG9QYXRoKHN0cmluZykge1xuXHR2YXIgZmlyc3QgPSAkc3RyU2xpY2Uoc3RyaW5nLCAwLCAxKTtcblx0dmFyIGxhc3QgPSAkc3RyU2xpY2Uoc3RyaW5nLCAtMSk7XG5cdGlmIChmaXJzdCA9PT0gJyUnICYmIGxhc3QgIT09ICclJykge1xuXHRcdHRocm93IG5ldyAkU3ludGF4RXJyb3IoJ2ludmFsaWQgaW50cmluc2ljIHN5bnRheCwgZXhwZWN0ZWQgY2xvc2luZyBgJWAnKTtcblx0fSBlbHNlIGlmIChsYXN0ID09PSAnJScgJiYgZmlyc3QgIT09ICclJykge1xuXHRcdHRocm93IG5ldyAkU3ludGF4RXJyb3IoJ2ludmFsaWQgaW50cmluc2ljIHN5bnRheCwgZXhwZWN0ZWQgb3BlbmluZyBgJWAnKTtcblx0fVxuXHR2YXIgcmVzdWx0ID0gW107XG5cdCRyZXBsYWNlKHN0cmluZywgcmVQcm9wTmFtZSwgZnVuY3Rpb24gKG1hdGNoLCBudW1iZXIsIHF1b3RlLCBzdWJTdHJpbmcpIHtcblx0XHRyZXN1bHRbcmVzdWx0Lmxlbmd0aF0gPSBxdW90ZSA/ICRyZXBsYWNlKHN1YlN0cmluZywgcmVFc2NhcGVDaGFyLCAnJDEnKSA6IG51bWJlciB8fCBtYXRjaDtcblx0fSk7XG5cdHJldHVybiByZXN1bHQ7XG59O1xuLyogZW5kIGFkYXB0YXRpb24gKi9cblxudmFyIGdldEJhc2VJbnRyaW5zaWMgPSBmdW5jdGlvbiBnZXRCYXNlSW50cmluc2ljKG5hbWUsIGFsbG93TWlzc2luZykge1xuXHR2YXIgaW50cmluc2ljTmFtZSA9IG5hbWU7XG5cdHZhciBhbGlhcztcblx0aWYgKGhhc093bihMRUdBQ1lfQUxJQVNFUywgaW50cmluc2ljTmFtZSkpIHtcblx0XHRhbGlhcyA9IExFR0FDWV9BTElBU0VTW2ludHJpbnNpY05hbWVdO1xuXHRcdGludHJpbnNpY05hbWUgPSAnJScgKyBhbGlhc1swXSArICclJztcblx0fVxuXG5cdGlmIChoYXNPd24oSU5UUklOU0lDUywgaW50cmluc2ljTmFtZSkpIHtcblx0XHR2YXIgdmFsdWUgPSBJTlRSSU5TSUNTW2ludHJpbnNpY05hbWVdO1xuXHRcdGlmICh2YWx1ZSA9PT0gbmVlZHNFdmFsKSB7XG5cdFx0XHR2YWx1ZSA9IGRvRXZhbChpbnRyaW5zaWNOYW1lKTtcblx0XHR9XG5cdFx0aWYgKHR5cGVvZiB2YWx1ZSA9PT0gJ3VuZGVmaW5lZCcgJiYgIWFsbG93TWlzc2luZykge1xuXHRcdFx0dGhyb3cgbmV3ICRUeXBlRXJyb3IoJ2ludHJpbnNpYyAnICsgbmFtZSArICcgZXhpc3RzLCBidXQgaXMgbm90IGF2YWlsYWJsZS4gUGxlYXNlIGZpbGUgYW4gaXNzdWUhJyk7XG5cdFx0fVxuXG5cdFx0cmV0dXJuIHtcblx0XHRcdGFsaWFzOiBhbGlhcyxcblx0XHRcdG5hbWU6IGludHJpbnNpY05hbWUsXG5cdFx0XHR2YWx1ZTogdmFsdWVcblx0XHR9O1xuXHR9XG5cblx0dGhyb3cgbmV3ICRTeW50YXhFcnJvcignaW50cmluc2ljICcgKyBuYW1lICsgJyBkb2VzIG5vdCBleGlzdCEnKTtcbn07XG5cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gR2V0SW50cmluc2ljKG5hbWUsIGFsbG93TWlzc2luZykge1xuXHRpZiAodHlwZW9mIG5hbWUgIT09ICdzdHJpbmcnIHx8IG5hbWUubGVuZ3RoID09PSAwKSB7XG5cdFx0dGhyb3cgbmV3ICRUeXBlRXJyb3IoJ2ludHJpbnNpYyBuYW1lIG11c3QgYmUgYSBub24tZW1wdHkgc3RyaW5nJyk7XG5cdH1cblx0aWYgKGFyZ3VtZW50cy5sZW5ndGggPiAxICYmIHR5cGVvZiBhbGxvd01pc3NpbmcgIT09ICdib29sZWFuJykge1xuXHRcdHRocm93IG5ldyAkVHlwZUVycm9yKCdcImFsbG93TWlzc2luZ1wiIGFyZ3VtZW50IG11c3QgYmUgYSBib29sZWFuJyk7XG5cdH1cblxuXHRpZiAoJGV4ZWMoL14lP1teJV0qJT8kL2csIG5hbWUpID09PSBudWxsKSB7XG5cdFx0dGhyb3cgbmV3ICRTeW50YXhFcnJvcignYCVgIG1heSBub3QgYmUgcHJlc2VudCBhbnl3aGVyZSBidXQgYXQgdGhlIGJlZ2lubmluZyBhbmQgZW5kIG9mIHRoZSBpbnRyaW5zaWMgbmFtZScpO1xuXHR9XG5cdHZhciBwYXJ0cyA9IHN0cmluZ1RvUGF0aChuYW1lKTtcblx0dmFyIGludHJpbnNpY0Jhc2VOYW1lID0gcGFydHMubGVuZ3RoID4gMCA/IHBhcnRzWzBdIDogJyc7XG5cblx0dmFyIGludHJpbnNpYyA9IGdldEJhc2VJbnRyaW5zaWMoJyUnICsgaW50cmluc2ljQmFzZU5hbWUgKyAnJScsIGFsbG93TWlzc2luZyk7XG5cdHZhciBpbnRyaW5zaWNSZWFsTmFtZSA9IGludHJpbnNpYy5uYW1lO1xuXHR2YXIgdmFsdWUgPSBpbnRyaW5zaWMudmFsdWU7XG5cdHZhciBza2lwRnVydGhlckNhY2hpbmcgPSBmYWxzZTtcblxuXHR2YXIgYWxpYXMgPSBpbnRyaW5zaWMuYWxpYXM7XG5cdGlmIChhbGlhcykge1xuXHRcdGludHJpbnNpY0Jhc2VOYW1lID0gYWxpYXNbMF07XG5cdFx0JHNwbGljZUFwcGx5KHBhcnRzLCAkY29uY2F0KFswLCAxXSwgYWxpYXMpKTtcblx0fVxuXG5cdGZvciAodmFyIGkgPSAxLCBpc093biA9IHRydWU7IGkgPCBwYXJ0cy5sZW5ndGg7IGkgKz0gMSkge1xuXHRcdHZhciBwYXJ0ID0gcGFydHNbaV07XG5cdFx0dmFyIGZpcnN0ID0gJHN0clNsaWNlKHBhcnQsIDAsIDEpO1xuXHRcdHZhciBsYXN0ID0gJHN0clNsaWNlKHBhcnQsIC0xKTtcblx0XHRpZiAoXG5cdFx0XHQoXG5cdFx0XHRcdChmaXJzdCA9PT0gJ1wiJyB8fCBmaXJzdCA9PT0gXCInXCIgfHwgZmlyc3QgPT09ICdgJylcblx0XHRcdFx0fHwgKGxhc3QgPT09ICdcIicgfHwgbGFzdCA9PT0gXCInXCIgfHwgbGFzdCA9PT0gJ2AnKVxuXHRcdFx0KVxuXHRcdFx0JiYgZmlyc3QgIT09IGxhc3Rcblx0XHQpIHtcblx0XHRcdHRocm93IG5ldyAkU3ludGF4RXJyb3IoJ3Byb3BlcnR5IG5hbWVzIHdpdGggcXVvdGVzIG11c3QgaGF2ZSBtYXRjaGluZyBxdW90ZXMnKTtcblx0XHR9XG5cdFx0aWYgKHBhcnQgPT09ICdjb25zdHJ1Y3RvcicgfHwgIWlzT3duKSB7XG5cdFx0XHRza2lwRnVydGhlckNhY2hpbmcgPSB0cnVlO1xuXHRcdH1cblxuXHRcdGludHJpbnNpY0Jhc2VOYW1lICs9ICcuJyArIHBhcnQ7XG5cdFx0aW50cmluc2ljUmVhbE5hbWUgPSAnJScgKyBpbnRyaW5zaWNCYXNlTmFtZSArICclJztcblxuXHRcdGlmIChoYXNPd24oSU5UUklOU0lDUywgaW50cmluc2ljUmVhbE5hbWUpKSB7XG5cdFx0XHR2YWx1ZSA9IElOVFJJTlNJQ1NbaW50cmluc2ljUmVhbE5hbWVdO1xuXHRcdH0gZWxzZSBpZiAodmFsdWUgIT0gbnVsbCkge1xuXHRcdFx0aWYgKCEocGFydCBpbiB2YWx1ZSkpIHtcblx0XHRcdFx0aWYgKCFhbGxvd01pc3NpbmcpIHtcblx0XHRcdFx0XHR0aHJvdyBuZXcgJFR5cGVFcnJvcignYmFzZSBpbnRyaW5zaWMgZm9yICcgKyBuYW1lICsgJyBleGlzdHMsIGJ1dCB0aGUgcHJvcGVydHkgaXMgbm90IGF2YWlsYWJsZS4nKTtcblx0XHRcdFx0fVxuXHRcdFx0XHRyZXR1cm4gdm9pZCB1bmRlZmluZWQ7XG5cdFx0XHR9XG5cdFx0XHRpZiAoJGdPUEQgJiYgKGkgKyAxKSA+PSBwYXJ0cy5sZW5ndGgpIHtcblx0XHRcdFx0dmFyIGRlc2MgPSAkZ09QRCh2YWx1ZSwgcGFydCk7XG5cdFx0XHRcdGlzT3duID0gISFkZXNjO1xuXG5cdFx0XHRcdC8vIEJ5IGNvbnZlbnRpb24sIHdoZW4gYSBkYXRhIHByb3BlcnR5IGlzIGNvbnZlcnRlZCB0byBhbiBhY2Nlc3NvclxuXHRcdFx0XHQvLyBwcm9wZXJ0eSB0byBlbXVsYXRlIGEgZGF0YSBwcm9wZXJ0eSB0aGF0IGRvZXMgbm90IHN1ZmZlciBmcm9tXG5cdFx0XHRcdC8vIHRoZSBvdmVycmlkZSBtaXN0YWtlLCB0aGF0IGFjY2Vzc29yJ3MgZ2V0dGVyIGlzIG1hcmtlZCB3aXRoXG5cdFx0XHRcdC8vIGFuIGBvcmlnaW5hbFZhbHVlYCBwcm9wZXJ0eS4gSGVyZSwgd2hlbiB3ZSBkZXRlY3QgdGhpcywgd2Vcblx0XHRcdFx0Ly8gdXBob2xkIHRoZSBpbGx1c2lvbiBieSBwcmV0ZW5kaW5nIHRvIHNlZSB0aGF0IG9yaWdpbmFsIGRhdGFcblx0XHRcdFx0Ly8gcHJvcGVydHksIGkuZS4sIHJldHVybmluZyB0aGUgdmFsdWUgcmF0aGVyIHRoYW4gdGhlIGdldHRlclxuXHRcdFx0XHQvLyBpdHNlbGYuXG5cdFx0XHRcdGlmIChpc093biAmJiAnZ2V0JyBpbiBkZXNjICYmICEoJ29yaWdpbmFsVmFsdWUnIGluIGRlc2MuZ2V0KSkge1xuXHRcdFx0XHRcdHZhbHVlID0gZGVzYy5nZXQ7XG5cdFx0XHRcdH0gZWxzZSB7XG5cdFx0XHRcdFx0dmFsdWUgPSB2YWx1ZVtwYXJ0XTtcblx0XHRcdFx0fVxuXHRcdFx0fSBlbHNlIHtcblx0XHRcdFx0aXNPd24gPSBoYXNPd24odmFsdWUsIHBhcnQpO1xuXHRcdFx0XHR2YWx1ZSA9IHZhbHVlW3BhcnRdO1xuXHRcdFx0fVxuXG5cdFx0XHRpZiAoaXNPd24gJiYgIXNraXBGdXJ0aGVyQ2FjaGluZykge1xuXHRcdFx0XHRJTlRSSU5TSUNTW2ludHJpbnNpY1JlYWxOYW1lXSA9IHZhbHVlO1xuXHRcdFx0fVxuXHRcdH1cblx0fVxuXHRyZXR1cm4gdmFsdWU7XG59O1xuIiwiJ3VzZSBzdHJpY3QnO1xuXG52YXIgR2V0SW50cmluc2ljID0gcmVxdWlyZSgnZ2V0LWludHJpbnNpYycpO1xuXG52YXIgJGRlZmluZVByb3BlcnR5ID0gR2V0SW50cmluc2ljKCclT2JqZWN0LmRlZmluZVByb3BlcnR5JScsIHRydWUpO1xuXG52YXIgaGFzUHJvcGVydHlEZXNjcmlwdG9ycyA9IGZ1bmN0aW9uIGhhc1Byb3BlcnR5RGVzY3JpcHRvcnMoKSB7XG5cdGlmICgkZGVmaW5lUHJvcGVydHkpIHtcblx0XHR0cnkge1xuXHRcdFx0JGRlZmluZVByb3BlcnR5KHt9LCAnYScsIHsgdmFsdWU6IDEgfSk7XG5cdFx0XHRyZXR1cm4gdHJ1ZTtcblx0XHR9IGNhdGNoIChlKSB7XG5cdFx0XHQvLyBJRSA4IGhhcyBhIGJyb2tlbiBkZWZpbmVQcm9wZXJ0eVxuXHRcdFx0cmV0dXJuIGZhbHNlO1xuXHRcdH1cblx0fVxuXHRyZXR1cm4gZmFsc2U7XG59O1xuXG5oYXNQcm9wZXJ0eURlc2NyaXB0b3JzLmhhc0FycmF5TGVuZ3RoRGVmaW5lQnVnID0gZnVuY3Rpb24gaGFzQXJyYXlMZW5ndGhEZWZpbmVCdWcoKSB7XG5cdC8vIG5vZGUgdjAuNiBoYXMgYSBidWcgd2hlcmUgYXJyYXkgbGVuZ3RocyBjYW4gYmUgU2V0IGJ1dCBub3QgRGVmaW5lZFxuXHRpZiAoIWhhc1Byb3BlcnR5RGVzY3JpcHRvcnMoKSkge1xuXHRcdHJldHVybiBudWxsO1xuXHR9XG5cdHRyeSB7XG5cdFx0cmV0dXJuICRkZWZpbmVQcm9wZXJ0eShbXSwgJ2xlbmd0aCcsIHsgdmFsdWU6IDEgfSkubGVuZ3RoICE9PSAxO1xuXHR9IGNhdGNoIChlKSB7XG5cdFx0Ly8gSW4gRmlyZWZveCA0LTIyLCBkZWZpbmluZyBsZW5ndGggb24gYW4gYXJyYXkgdGhyb3dzIGFuIGV4Y2VwdGlvbi5cblx0XHRyZXR1cm4gdHJ1ZTtcblx0fVxufTtcblxubW9kdWxlLmV4cG9ydHMgPSBoYXNQcm9wZXJ0eURlc2NyaXB0b3JzO1xuIiwiJ3VzZSBzdHJpY3QnO1xuXG52YXIgb3JpZ1N5bWJvbCA9IHR5cGVvZiBTeW1ib2wgIT09ICd1bmRlZmluZWQnICYmIFN5bWJvbDtcbnZhciBoYXNTeW1ib2xTaGFtID0gcmVxdWlyZSgnLi9zaGFtcycpO1xuXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIGhhc05hdGl2ZVN5bWJvbHMoKSB7XG5cdGlmICh0eXBlb2Ygb3JpZ1N5bWJvbCAhPT0gJ2Z1bmN0aW9uJykgeyByZXR1cm4gZmFsc2U7IH1cblx0aWYgKHR5cGVvZiBTeW1ib2wgIT09ICdmdW5jdGlvbicpIHsgcmV0dXJuIGZhbHNlOyB9XG5cdGlmICh0eXBlb2Ygb3JpZ1N5bWJvbCgnZm9vJykgIT09ICdzeW1ib2wnKSB7IHJldHVybiBmYWxzZTsgfVxuXHRpZiAodHlwZW9mIFN5bWJvbCgnYmFyJykgIT09ICdzeW1ib2wnKSB7IHJldHVybiBmYWxzZTsgfVxuXG5cdHJldHVybiBoYXNTeW1ib2xTaGFtKCk7XG59O1xuIiwiJ3VzZSBzdHJpY3QnO1xuXG4vKiBlc2xpbnQgY29tcGxleGl0eTogWzIsIDE4XSwgbWF4LXN0YXRlbWVudHM6IFsyLCAzM10gKi9cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gaGFzU3ltYm9scygpIHtcblx0aWYgKHR5cGVvZiBTeW1ib2wgIT09ICdmdW5jdGlvbicgfHwgdHlwZW9mIE9iamVjdC5nZXRPd25Qcm9wZXJ0eVN5bWJvbHMgIT09ICdmdW5jdGlvbicpIHsgcmV0dXJuIGZhbHNlOyB9XG5cdGlmICh0eXBlb2YgU3ltYm9sLml0ZXJhdG9yID09PSAnc3ltYm9sJykgeyByZXR1cm4gdHJ1ZTsgfVxuXG5cdHZhciBvYmogPSB7fTtcblx0dmFyIHN5bSA9IFN5bWJvbCgndGVzdCcpO1xuXHR2YXIgc3ltT2JqID0gT2JqZWN0KHN5bSk7XG5cdGlmICh0eXBlb2Ygc3ltID09PSAnc3RyaW5nJykgeyByZXR1cm4gZmFsc2U7IH1cblxuXHRpZiAoT2JqZWN0LnByb3RvdHlwZS50b1N0cmluZy5jYWxsKHN5bSkgIT09ICdbb2JqZWN0IFN5bWJvbF0nKSB7IHJldHVybiBmYWxzZTsgfVxuXHRpZiAoT2JqZWN0LnByb3RvdHlwZS50b1N0cmluZy5jYWxsKHN5bU9iaikgIT09ICdbb2JqZWN0IFN5bWJvbF0nKSB7IHJldHVybiBmYWxzZTsgfVxuXG5cdC8vIHRlbXAgZGlzYWJsZWQgcGVyIGh0dHBzOi8vZ2l0aHViLmNvbS9samhhcmIvb2JqZWN0LmFzc2lnbi9pc3N1ZXMvMTdcblx0Ly8gaWYgKHN5bSBpbnN0YW5jZW9mIFN5bWJvbCkgeyByZXR1cm4gZmFsc2U7IH1cblx0Ly8gdGVtcCBkaXNhYmxlZCBwZXIgaHR0cHM6Ly9naXRodWIuY29tL1dlYlJlZmxlY3Rpb24vZ2V0LW93bi1wcm9wZXJ0eS1zeW1ib2xzL2lzc3Vlcy80XG5cdC8vIGlmICghKHN5bU9iaiBpbnN0YW5jZW9mIFN5bWJvbCkpIHsgcmV0dXJuIGZhbHNlOyB9XG5cblx0Ly8gaWYgKHR5cGVvZiBTeW1ib2wucHJvdG90eXBlLnRvU3RyaW5nICE9PSAnZnVuY3Rpb24nKSB7IHJldHVybiBmYWxzZTsgfVxuXHQvLyBpZiAoU3RyaW5nKHN5bSkgIT09IFN5bWJvbC5wcm90b3R5cGUudG9TdHJpbmcuY2FsbChzeW0pKSB7IHJldHVybiBmYWxzZTsgfVxuXG5cdHZhciBzeW1WYWwgPSA0Mjtcblx0b2JqW3N5bV0gPSBzeW1WYWw7XG5cdGZvciAoc3ltIGluIG9iaikgeyByZXR1cm4gZmFsc2U7IH0gLy8gZXNsaW50LWRpc2FibGUtbGluZSBuby1yZXN0cmljdGVkLXN5bnRheCwgbm8tdW5yZWFjaGFibGUtbG9vcFxuXHRpZiAodHlwZW9mIE9iamVjdC5rZXlzID09PSAnZnVuY3Rpb24nICYmIE9iamVjdC5rZXlzKG9iaikubGVuZ3RoICE9PSAwKSB7IHJldHVybiBmYWxzZTsgfVxuXG5cdGlmICh0eXBlb2YgT2JqZWN0LmdldE93blByb3BlcnR5TmFtZXMgPT09ICdmdW5jdGlvbicgJiYgT2JqZWN0LmdldE93blByb3BlcnR5TmFtZXMob2JqKS5sZW5ndGggIT09IDApIHsgcmV0dXJuIGZhbHNlOyB9XG5cblx0dmFyIHN5bXMgPSBPYmplY3QuZ2V0T3duUHJvcGVydHlTeW1ib2xzKG9iaik7XG5cdGlmIChzeW1zLmxlbmd0aCAhPT0gMSB8fCBzeW1zWzBdICE9PSBzeW0pIHsgcmV0dXJuIGZhbHNlOyB9XG5cblx0aWYgKCFPYmplY3QucHJvdG90eXBlLnByb3BlcnR5SXNFbnVtZXJhYmxlLmNhbGwob2JqLCBzeW0pKSB7IHJldHVybiBmYWxzZTsgfVxuXG5cdGlmICh0eXBlb2YgT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvciA9PT0gJ2Z1bmN0aW9uJykge1xuXHRcdHZhciBkZXNjcmlwdG9yID0gT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcihvYmosIHN5bSk7XG5cdFx0aWYgKGRlc2NyaXB0b3IudmFsdWUgIT09IHN5bVZhbCB8fCBkZXNjcmlwdG9yLmVudW1lcmFibGUgIT09IHRydWUpIHsgcmV0dXJuIGZhbHNlOyB9XG5cdH1cblxuXHRyZXR1cm4gdHJ1ZTtcbn07XG4iLCIndXNlIHN0cmljdCc7XG5cbnZhciBoYXNTeW1ib2xzID0gcmVxdWlyZSgnaGFzLXN5bWJvbHMvc2hhbXMnKTtcblxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiBoYXNUb1N0cmluZ1RhZ1NoYW1zKCkge1xuXHRyZXR1cm4gaGFzU3ltYm9scygpICYmICEhU3ltYm9sLnRvU3RyaW5nVGFnO1xufTtcbiIsIid1c2Ugc3RyaWN0JztcblxudmFyIGJpbmQgPSByZXF1aXJlKCdmdW5jdGlvbi1iaW5kJyk7XG5cbm1vZHVsZS5leHBvcnRzID0gYmluZC5jYWxsKEZ1bmN0aW9uLmNhbGwsIE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkpO1xuIiwiaWYgKHR5cGVvZiBPYmplY3QuY3JlYXRlID09PSAnZnVuY3Rpb24nKSB7XG4gIC8vIGltcGxlbWVudGF0aW9uIGZyb20gc3RhbmRhcmQgbm9kZS5qcyAndXRpbCcgbW9kdWxlXG4gIG1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gaW5oZXJpdHMoY3Rvciwgc3VwZXJDdG9yKSB7XG4gICAgaWYgKHN1cGVyQ3Rvcikge1xuICAgICAgY3Rvci5zdXBlcl8gPSBzdXBlckN0b3JcbiAgICAgIGN0b3IucHJvdG90eXBlID0gT2JqZWN0LmNyZWF0ZShzdXBlckN0b3IucHJvdG90eXBlLCB7XG4gICAgICAgIGNvbnN0cnVjdG9yOiB7XG4gICAgICAgICAgdmFsdWU6IGN0b3IsXG4gICAgICAgICAgZW51bWVyYWJsZTogZmFsc2UsXG4gICAgICAgICAgd3JpdGFibGU6IHRydWUsXG4gICAgICAgICAgY29uZmlndXJhYmxlOiB0cnVlXG4gICAgICAgIH1cbiAgICAgIH0pXG4gICAgfVxuICB9O1xufSBlbHNlIHtcbiAgLy8gb2xkIHNjaG9vbCBzaGltIGZvciBvbGQgYnJvd3NlcnNcbiAgbW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiBpbmhlcml0cyhjdG9yLCBzdXBlckN0b3IpIHtcbiAgICBpZiAoc3VwZXJDdG9yKSB7XG4gICAgICBjdG9yLnN1cGVyXyA9IHN1cGVyQ3RvclxuICAgICAgdmFyIFRlbXBDdG9yID0gZnVuY3Rpb24gKCkge31cbiAgICAgIFRlbXBDdG9yLnByb3RvdHlwZSA9IHN1cGVyQ3Rvci5wcm90b3R5cGVcbiAgICAgIGN0b3IucHJvdG90eXBlID0gbmV3IFRlbXBDdG9yKClcbiAgICAgIGN0b3IucHJvdG90eXBlLmNvbnN0cnVjdG9yID0gY3RvclxuICAgIH1cbiAgfVxufVxuIiwiJ3VzZSBzdHJpY3QnO1xuXG52YXIgaGFzVG9TdHJpbmdUYWcgPSByZXF1aXJlKCdoYXMtdG9zdHJpbmd0YWcvc2hhbXMnKSgpO1xudmFyIGNhbGxCb3VuZCA9IHJlcXVpcmUoJ2NhbGwtYmluZC9jYWxsQm91bmQnKTtcblxudmFyICR0b1N0cmluZyA9IGNhbGxCb3VuZCgnT2JqZWN0LnByb3RvdHlwZS50b1N0cmluZycpO1xuXG52YXIgaXNTdGFuZGFyZEFyZ3VtZW50cyA9IGZ1bmN0aW9uIGlzQXJndW1lbnRzKHZhbHVlKSB7XG5cdGlmIChoYXNUb1N0cmluZ1RhZyAmJiB2YWx1ZSAmJiB0eXBlb2YgdmFsdWUgPT09ICdvYmplY3QnICYmIFN5bWJvbC50b1N0cmluZ1RhZyBpbiB2YWx1ZSkge1xuXHRcdHJldHVybiBmYWxzZTtcblx0fVxuXHRyZXR1cm4gJHRvU3RyaW5nKHZhbHVlKSA9PT0gJ1tvYmplY3QgQXJndW1lbnRzXSc7XG59O1xuXG52YXIgaXNMZWdhY3lBcmd1bWVudHMgPSBmdW5jdGlvbiBpc0FyZ3VtZW50cyh2YWx1ZSkge1xuXHRpZiAoaXNTdGFuZGFyZEFyZ3VtZW50cyh2YWx1ZSkpIHtcblx0XHRyZXR1cm4gdHJ1ZTtcblx0fVxuXHRyZXR1cm4gdmFsdWUgIT09IG51bGwgJiZcblx0XHR0eXBlb2YgdmFsdWUgPT09ICdvYmplY3QnICYmXG5cdFx0dHlwZW9mIHZhbHVlLmxlbmd0aCA9PT0gJ251bWJlcicgJiZcblx0XHR2YWx1ZS5sZW5ndGggPj0gMCAmJlxuXHRcdCR0b1N0cmluZyh2YWx1ZSkgIT09ICdbb2JqZWN0IEFycmF5XScgJiZcblx0XHQkdG9TdHJpbmcodmFsdWUuY2FsbGVlKSA9PT0gJ1tvYmplY3QgRnVuY3Rpb25dJztcbn07XG5cbnZhciBzdXBwb3J0c1N0YW5kYXJkQXJndW1lbnRzID0gKGZ1bmN0aW9uICgpIHtcblx0cmV0dXJuIGlzU3RhbmRhcmRBcmd1bWVudHMoYXJndW1lbnRzKTtcbn0oKSk7XG5cbmlzU3RhbmRhcmRBcmd1bWVudHMuaXNMZWdhY3lBcmd1bWVudHMgPSBpc0xlZ2FjeUFyZ3VtZW50czsgLy8gZm9yIHRlc3RzXG5cbm1vZHVsZS5leHBvcnRzID0gc3VwcG9ydHNTdGFuZGFyZEFyZ3VtZW50cyA/IGlzU3RhbmRhcmRBcmd1bWVudHMgOiBpc0xlZ2FjeUFyZ3VtZW50cztcbiIsIid1c2Ugc3RyaWN0JztcblxudmFyIGZuVG9TdHIgPSBGdW5jdGlvbi5wcm90b3R5cGUudG9TdHJpbmc7XG52YXIgcmVmbGVjdEFwcGx5ID0gdHlwZW9mIFJlZmxlY3QgPT09ICdvYmplY3QnICYmIFJlZmxlY3QgIT09IG51bGwgJiYgUmVmbGVjdC5hcHBseTtcbnZhciBiYWRBcnJheUxpa2U7XG52YXIgaXNDYWxsYWJsZU1hcmtlcjtcbmlmICh0eXBlb2YgcmVmbGVjdEFwcGx5ID09PSAnZnVuY3Rpb24nICYmIHR5cGVvZiBPYmplY3QuZGVmaW5lUHJvcGVydHkgPT09ICdmdW5jdGlvbicpIHtcblx0dHJ5IHtcblx0XHRiYWRBcnJheUxpa2UgPSBPYmplY3QuZGVmaW5lUHJvcGVydHkoe30sICdsZW5ndGgnLCB7XG5cdFx0XHRnZXQ6IGZ1bmN0aW9uICgpIHtcblx0XHRcdFx0dGhyb3cgaXNDYWxsYWJsZU1hcmtlcjtcblx0XHRcdH1cblx0XHR9KTtcblx0XHRpc0NhbGxhYmxlTWFya2VyID0ge307XG5cdFx0Ly8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLXRocm93LWxpdGVyYWxcblx0XHRyZWZsZWN0QXBwbHkoZnVuY3Rpb24gKCkgeyB0aHJvdyA0MjsgfSwgbnVsbCwgYmFkQXJyYXlMaWtlKTtcblx0fSBjYXRjaCAoXykge1xuXHRcdGlmIChfICE9PSBpc0NhbGxhYmxlTWFya2VyKSB7XG5cdFx0XHRyZWZsZWN0QXBwbHkgPSBudWxsO1xuXHRcdH1cblx0fVxufSBlbHNlIHtcblx0cmVmbGVjdEFwcGx5ID0gbnVsbDtcbn1cblxudmFyIGNvbnN0cnVjdG9yUmVnZXggPSAvXlxccypjbGFzc1xcYi87XG52YXIgaXNFUzZDbGFzc0ZuID0gZnVuY3Rpb24gaXNFUzZDbGFzc0Z1bmN0aW9uKHZhbHVlKSB7XG5cdHRyeSB7XG5cdFx0dmFyIGZuU3RyID0gZm5Ub1N0ci5jYWxsKHZhbHVlKTtcblx0XHRyZXR1cm4gY29uc3RydWN0b3JSZWdleC50ZXN0KGZuU3RyKTtcblx0fSBjYXRjaCAoZSkge1xuXHRcdHJldHVybiBmYWxzZTsgLy8gbm90IGEgZnVuY3Rpb25cblx0fVxufTtcblxudmFyIHRyeUZ1bmN0aW9uT2JqZWN0ID0gZnVuY3Rpb24gdHJ5RnVuY3Rpb25Ub1N0cih2YWx1ZSkge1xuXHR0cnkge1xuXHRcdGlmIChpc0VTNkNsYXNzRm4odmFsdWUpKSB7IHJldHVybiBmYWxzZTsgfVxuXHRcdGZuVG9TdHIuY2FsbCh2YWx1ZSk7XG5cdFx0cmV0dXJuIHRydWU7XG5cdH0gY2F0Y2ggKGUpIHtcblx0XHRyZXR1cm4gZmFsc2U7XG5cdH1cbn07XG52YXIgdG9TdHIgPSBPYmplY3QucHJvdG90eXBlLnRvU3RyaW5nO1xudmFyIGZuQ2xhc3MgPSAnW29iamVjdCBGdW5jdGlvbl0nO1xudmFyIGdlbkNsYXNzID0gJ1tvYmplY3QgR2VuZXJhdG9yRnVuY3Rpb25dJztcbnZhciBoYXNUb1N0cmluZ1RhZyA9IHR5cGVvZiBTeW1ib2wgPT09ICdmdW5jdGlvbicgJiYgISFTeW1ib2wudG9TdHJpbmdUYWc7IC8vIGJldHRlcjogdXNlIGBoYXMtdG9zdHJpbmd0YWdgXG4vKiBnbG9iYWxzIGRvY3VtZW50OiBmYWxzZSAqL1xudmFyIGRvY3VtZW50RG90QWxsID0gdHlwZW9mIGRvY3VtZW50ID09PSAnb2JqZWN0JyAmJiB0eXBlb2YgZG9jdW1lbnQuYWxsID09PSAndW5kZWZpbmVkJyAmJiBkb2N1bWVudC5hbGwgIT09IHVuZGVmaW5lZCA/IGRvY3VtZW50LmFsbCA6IHt9O1xuXG5tb2R1bGUuZXhwb3J0cyA9IHJlZmxlY3RBcHBseVxuXHQ/IGZ1bmN0aW9uIGlzQ2FsbGFibGUodmFsdWUpIHtcblx0XHRpZiAodmFsdWUgPT09IGRvY3VtZW50RG90QWxsKSB7IHJldHVybiB0cnVlOyB9XG5cdFx0aWYgKCF2YWx1ZSkgeyByZXR1cm4gZmFsc2U7IH1cblx0XHRpZiAodHlwZW9mIHZhbHVlICE9PSAnZnVuY3Rpb24nICYmIHR5cGVvZiB2YWx1ZSAhPT0gJ29iamVjdCcpIHsgcmV0dXJuIGZhbHNlOyB9XG5cdFx0aWYgKHR5cGVvZiB2YWx1ZSA9PT0gJ2Z1bmN0aW9uJyAmJiAhdmFsdWUucHJvdG90eXBlKSB7IHJldHVybiB0cnVlOyB9XG5cdFx0dHJ5IHtcblx0XHRcdHJlZmxlY3RBcHBseSh2YWx1ZSwgbnVsbCwgYmFkQXJyYXlMaWtlKTtcblx0XHR9IGNhdGNoIChlKSB7XG5cdFx0XHRpZiAoZSAhPT0gaXNDYWxsYWJsZU1hcmtlcikgeyByZXR1cm4gZmFsc2U7IH1cblx0XHR9XG5cdFx0cmV0dXJuICFpc0VTNkNsYXNzRm4odmFsdWUpO1xuXHR9XG5cdDogZnVuY3Rpb24gaXNDYWxsYWJsZSh2YWx1ZSkge1xuXHRcdGlmICh2YWx1ZSA9PT0gZG9jdW1lbnREb3RBbGwpIHsgcmV0dXJuIHRydWU7IH1cblx0XHRpZiAoIXZhbHVlKSB7IHJldHVybiBmYWxzZTsgfVxuXHRcdGlmICh0eXBlb2YgdmFsdWUgIT09ICdmdW5jdGlvbicgJiYgdHlwZW9mIHZhbHVlICE9PSAnb2JqZWN0JykgeyByZXR1cm4gZmFsc2U7IH1cblx0XHRpZiAodHlwZW9mIHZhbHVlID09PSAnZnVuY3Rpb24nICYmICF2YWx1ZS5wcm90b3R5cGUpIHsgcmV0dXJuIHRydWU7IH1cblx0XHRpZiAoaGFzVG9TdHJpbmdUYWcpIHsgcmV0dXJuIHRyeUZ1bmN0aW9uT2JqZWN0KHZhbHVlKTsgfVxuXHRcdGlmIChpc0VTNkNsYXNzRm4odmFsdWUpKSB7IHJldHVybiBmYWxzZTsgfVxuXHRcdHZhciBzdHJDbGFzcyA9IHRvU3RyLmNhbGwodmFsdWUpO1xuXHRcdHJldHVybiBzdHJDbGFzcyA9PT0gZm5DbGFzcyB8fCBzdHJDbGFzcyA9PT0gZ2VuQ2xhc3M7XG5cdH07XG4iLCIndXNlIHN0cmljdCc7XG5cbnZhciB0b1N0ciA9IE9iamVjdC5wcm90b3R5cGUudG9TdHJpbmc7XG52YXIgZm5Ub1N0ciA9IEZ1bmN0aW9uLnByb3RvdHlwZS50b1N0cmluZztcbnZhciBpc0ZuUmVnZXggPSAvXlxccyooPzpmdW5jdGlvbik/XFwqLztcbnZhciBoYXNUb1N0cmluZ1RhZyA9IHJlcXVpcmUoJ2hhcy10b3N0cmluZ3RhZy9zaGFtcycpKCk7XG52YXIgZ2V0UHJvdG8gPSBPYmplY3QuZ2V0UHJvdG90eXBlT2Y7XG52YXIgZ2V0R2VuZXJhdG9yRnVuYyA9IGZ1bmN0aW9uICgpIHsgLy8gZXNsaW50LWRpc2FibGUtbGluZSBjb25zaXN0ZW50LXJldHVyblxuXHRpZiAoIWhhc1RvU3RyaW5nVGFnKSB7XG5cdFx0cmV0dXJuIGZhbHNlO1xuXHR9XG5cdHRyeSB7XG5cdFx0cmV0dXJuIEZ1bmN0aW9uKCdyZXR1cm4gZnVuY3Rpb24qKCkge30nKSgpO1xuXHR9IGNhdGNoIChlKSB7XG5cdH1cbn07XG52YXIgR2VuZXJhdG9yRnVuY3Rpb247XG5cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gaXNHZW5lcmF0b3JGdW5jdGlvbihmbikge1xuXHRpZiAodHlwZW9mIGZuICE9PSAnZnVuY3Rpb24nKSB7XG5cdFx0cmV0dXJuIGZhbHNlO1xuXHR9XG5cdGlmIChpc0ZuUmVnZXgudGVzdChmblRvU3RyLmNhbGwoZm4pKSkge1xuXHRcdHJldHVybiB0cnVlO1xuXHR9XG5cdGlmICghaGFzVG9TdHJpbmdUYWcpIHtcblx0XHR2YXIgc3RyID0gdG9TdHIuY2FsbChmbik7XG5cdFx0cmV0dXJuIHN0ciA9PT0gJ1tvYmplY3QgR2VuZXJhdG9yRnVuY3Rpb25dJztcblx0fVxuXHRpZiAoIWdldFByb3RvKSB7XG5cdFx0cmV0dXJuIGZhbHNlO1xuXHR9XG5cdGlmICh0eXBlb2YgR2VuZXJhdG9yRnVuY3Rpb24gPT09ICd1bmRlZmluZWQnKSB7XG5cdFx0dmFyIGdlbmVyYXRvckZ1bmMgPSBnZXRHZW5lcmF0b3JGdW5jKCk7XG5cdFx0R2VuZXJhdG9yRnVuY3Rpb24gPSBnZW5lcmF0b3JGdW5jID8gZ2V0UHJvdG8oZ2VuZXJhdG9yRnVuYykgOiBmYWxzZTtcblx0fVxuXHRyZXR1cm4gZ2V0UHJvdG8oZm4pID09PSBHZW5lcmF0b3JGdW5jdGlvbjtcbn07XG4iLCIndXNlIHN0cmljdCc7XG5cbi8qIGh0dHA6Ly93d3cuZWNtYS1pbnRlcm5hdGlvbmFsLm9yZy9lY21hLTI2Mi82LjAvI3NlYy1udW1iZXIuaXNuYW4gKi9cblxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiBpc05hTih2YWx1ZSkge1xuXHRyZXR1cm4gdmFsdWUgIT09IHZhbHVlO1xufTtcbiIsIid1c2Ugc3RyaWN0JztcblxudmFyIGNhbGxCaW5kID0gcmVxdWlyZSgnY2FsbC1iaW5kJyk7XG52YXIgZGVmaW5lID0gcmVxdWlyZSgnZGVmaW5lLXByb3BlcnRpZXMnKTtcblxudmFyIGltcGxlbWVudGF0aW9uID0gcmVxdWlyZSgnLi9pbXBsZW1lbnRhdGlvbicpO1xudmFyIGdldFBvbHlmaWxsID0gcmVxdWlyZSgnLi9wb2x5ZmlsbCcpO1xudmFyIHNoaW0gPSByZXF1aXJlKCcuL3NoaW0nKTtcblxudmFyIHBvbHlmaWxsID0gY2FsbEJpbmQoZ2V0UG9seWZpbGwoKSwgTnVtYmVyKTtcblxuLyogaHR0cDovL3d3dy5lY21hLWludGVybmF0aW9uYWwub3JnL2VjbWEtMjYyLzYuMC8jc2VjLW51bWJlci5pc25hbiAqL1xuXG5kZWZpbmUocG9seWZpbGwsIHtcblx0Z2V0UG9seWZpbGw6IGdldFBvbHlmaWxsLFxuXHRpbXBsZW1lbnRhdGlvbjogaW1wbGVtZW50YXRpb24sXG5cdHNoaW06IHNoaW1cbn0pO1xuXG5tb2R1bGUuZXhwb3J0cyA9IHBvbHlmaWxsO1xuIiwiJ3VzZSBzdHJpY3QnO1xuXG52YXIgaW1wbGVtZW50YXRpb24gPSByZXF1aXJlKCcuL2ltcGxlbWVudGF0aW9uJyk7XG5cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gZ2V0UG9seWZpbGwoKSB7XG5cdGlmIChOdW1iZXIuaXNOYU4gJiYgTnVtYmVyLmlzTmFOKE5hTikgJiYgIU51bWJlci5pc05hTignYScpKSB7XG5cdFx0cmV0dXJuIE51bWJlci5pc05hTjtcblx0fVxuXHRyZXR1cm4gaW1wbGVtZW50YXRpb247XG59O1xuIiwiJ3VzZSBzdHJpY3QnO1xuXG52YXIgZGVmaW5lID0gcmVxdWlyZSgnZGVmaW5lLXByb3BlcnRpZXMnKTtcbnZhciBnZXRQb2x5ZmlsbCA9IHJlcXVpcmUoJy4vcG9seWZpbGwnKTtcblxuLyogaHR0cDovL3d3dy5lY21hLWludGVybmF0aW9uYWwub3JnL2VjbWEtMjYyLzYuMC8jc2VjLW51bWJlci5pc25hbiAqL1xuXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIHNoaW1OdW1iZXJJc05hTigpIHtcblx0dmFyIHBvbHlmaWxsID0gZ2V0UG9seWZpbGwoKTtcblx0ZGVmaW5lKE51bWJlciwgeyBpc05hTjogcG9seWZpbGwgfSwge1xuXHRcdGlzTmFOOiBmdW5jdGlvbiB0ZXN0SXNOYU4oKSB7XG5cdFx0XHRyZXR1cm4gTnVtYmVyLmlzTmFOICE9PSBwb2x5ZmlsbDtcblx0XHR9XG5cdH0pO1xuXHRyZXR1cm4gcG9seWZpbGw7XG59O1xuIiwiJ3VzZSBzdHJpY3QnO1xuXG52YXIgZm9yRWFjaCA9IHJlcXVpcmUoJ2Zvci1lYWNoJyk7XG52YXIgYXZhaWxhYmxlVHlwZWRBcnJheXMgPSByZXF1aXJlKCdhdmFpbGFibGUtdHlwZWQtYXJyYXlzJyk7XG52YXIgY2FsbEJvdW5kID0gcmVxdWlyZSgnY2FsbC1iaW5kL2NhbGxCb3VuZCcpO1xuXG52YXIgJHRvU3RyaW5nID0gY2FsbEJvdW5kKCdPYmplY3QucHJvdG90eXBlLnRvU3RyaW5nJyk7XG52YXIgaGFzVG9TdHJpbmdUYWcgPSByZXF1aXJlKCdoYXMtdG9zdHJpbmd0YWcvc2hhbXMnKSgpO1xuXG52YXIgZyA9IHR5cGVvZiBnbG9iYWxUaGlzID09PSAndW5kZWZpbmVkJyA/IGdsb2JhbCA6IGdsb2JhbFRoaXM7XG52YXIgdHlwZWRBcnJheXMgPSBhdmFpbGFibGVUeXBlZEFycmF5cygpO1xuXG52YXIgJGluZGV4T2YgPSBjYWxsQm91bmQoJ0FycmF5LnByb3RvdHlwZS5pbmRleE9mJywgdHJ1ZSkgfHwgZnVuY3Rpb24gaW5kZXhPZihhcnJheSwgdmFsdWUpIHtcblx0Zm9yICh2YXIgaSA9IDA7IGkgPCBhcnJheS5sZW5ndGg7IGkgKz0gMSkge1xuXHRcdGlmIChhcnJheVtpXSA9PT0gdmFsdWUpIHtcblx0XHRcdHJldHVybiBpO1xuXHRcdH1cblx0fVxuXHRyZXR1cm4gLTE7XG59O1xudmFyICRzbGljZSA9IGNhbGxCb3VuZCgnU3RyaW5nLnByb3RvdHlwZS5zbGljZScpO1xudmFyIHRvU3RyVGFncyA9IHt9O1xudmFyIGdPUEQgPSByZXF1aXJlKCdlcy1hYnN0cmFjdC9oZWxwZXJzL2dldE93blByb3BlcnR5RGVzY3JpcHRvcicpO1xudmFyIGdldFByb3RvdHlwZU9mID0gT2JqZWN0LmdldFByb3RvdHlwZU9mOyAvLyByZXF1aXJlKCdnZXRwcm90b3R5cGVvZicpO1xuaWYgKGhhc1RvU3RyaW5nVGFnICYmIGdPUEQgJiYgZ2V0UHJvdG90eXBlT2YpIHtcblx0Zm9yRWFjaCh0eXBlZEFycmF5cywgZnVuY3Rpb24gKHR5cGVkQXJyYXkpIHtcblx0XHR2YXIgYXJyID0gbmV3IGdbdHlwZWRBcnJheV0oKTtcblx0XHRpZiAoU3ltYm9sLnRvU3RyaW5nVGFnIGluIGFycikge1xuXHRcdFx0dmFyIHByb3RvID0gZ2V0UHJvdG90eXBlT2YoYXJyKTtcblx0XHRcdHZhciBkZXNjcmlwdG9yID0gZ09QRChwcm90bywgU3ltYm9sLnRvU3RyaW5nVGFnKTtcblx0XHRcdGlmICghZGVzY3JpcHRvcikge1xuXHRcdFx0XHR2YXIgc3VwZXJQcm90byA9IGdldFByb3RvdHlwZU9mKHByb3RvKTtcblx0XHRcdFx0ZGVzY3JpcHRvciA9IGdPUEQoc3VwZXJQcm90bywgU3ltYm9sLnRvU3RyaW5nVGFnKTtcblx0XHRcdH1cblx0XHRcdHRvU3RyVGFnc1t0eXBlZEFycmF5XSA9IGRlc2NyaXB0b3IuZ2V0O1xuXHRcdH1cblx0fSk7XG59XG5cbnZhciB0cnlUeXBlZEFycmF5cyA9IGZ1bmN0aW9uIHRyeUFsbFR5cGVkQXJyYXlzKHZhbHVlKSB7XG5cdHZhciBhbnlUcnVlID0gZmFsc2U7XG5cdGZvckVhY2godG9TdHJUYWdzLCBmdW5jdGlvbiAoZ2V0dGVyLCB0eXBlZEFycmF5KSB7XG5cdFx0aWYgKCFhbnlUcnVlKSB7XG5cdFx0XHR0cnkge1xuXHRcdFx0XHRhbnlUcnVlID0gZ2V0dGVyLmNhbGwodmFsdWUpID09PSB0eXBlZEFycmF5O1xuXHRcdFx0fSBjYXRjaCAoZSkgeyAvKiovIH1cblx0XHR9XG5cdH0pO1xuXHRyZXR1cm4gYW55VHJ1ZTtcbn07XG5cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gaXNUeXBlZEFycmF5KHZhbHVlKSB7XG5cdGlmICghdmFsdWUgfHwgdHlwZW9mIHZhbHVlICE9PSAnb2JqZWN0JykgeyByZXR1cm4gZmFsc2U7IH1cblx0aWYgKCFoYXNUb1N0cmluZ1RhZyB8fCAhKFN5bWJvbC50b1N0cmluZ1RhZyBpbiB2YWx1ZSkpIHtcblx0XHR2YXIgdGFnID0gJHNsaWNlKCR0b1N0cmluZyh2YWx1ZSksIDgsIC0xKTtcblx0XHRyZXR1cm4gJGluZGV4T2YodHlwZWRBcnJheXMsIHRhZykgPiAtMTtcblx0fVxuXHRpZiAoIWdPUEQpIHsgcmV0dXJuIGZhbHNlOyB9XG5cdHJldHVybiB0cnlUeXBlZEFycmF5cyh2YWx1ZSk7XG59O1xuIiwiJ3VzZSBzdHJpY3QnO1xuXG52YXIgbnVtYmVySXNOYU4gPSBmdW5jdGlvbiAodmFsdWUpIHtcblx0cmV0dXJuIHZhbHVlICE9PSB2YWx1ZTtcbn07XG5cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gaXMoYSwgYikge1xuXHRpZiAoYSA9PT0gMCAmJiBiID09PSAwKSB7XG5cdFx0cmV0dXJuIDEgLyBhID09PSAxIC8gYjtcblx0fVxuXHRpZiAoYSA9PT0gYikge1xuXHRcdHJldHVybiB0cnVlO1xuXHR9XG5cdGlmIChudW1iZXJJc05hTihhKSAmJiBudW1iZXJJc05hTihiKSkge1xuXHRcdHJldHVybiB0cnVlO1xuXHR9XG5cdHJldHVybiBmYWxzZTtcbn07XG5cbiIsIid1c2Ugc3RyaWN0JztcblxudmFyIGRlZmluZSA9IHJlcXVpcmUoJ2RlZmluZS1wcm9wZXJ0aWVzJyk7XG52YXIgY2FsbEJpbmQgPSByZXF1aXJlKCdjYWxsLWJpbmQnKTtcblxudmFyIGltcGxlbWVudGF0aW9uID0gcmVxdWlyZSgnLi9pbXBsZW1lbnRhdGlvbicpO1xudmFyIGdldFBvbHlmaWxsID0gcmVxdWlyZSgnLi9wb2x5ZmlsbCcpO1xudmFyIHNoaW0gPSByZXF1aXJlKCcuL3NoaW0nKTtcblxudmFyIHBvbHlmaWxsID0gY2FsbEJpbmQoZ2V0UG9seWZpbGwoKSwgT2JqZWN0KTtcblxuZGVmaW5lKHBvbHlmaWxsLCB7XG5cdGdldFBvbHlmaWxsOiBnZXRQb2x5ZmlsbCxcblx0aW1wbGVtZW50YXRpb246IGltcGxlbWVudGF0aW9uLFxuXHRzaGltOiBzaGltXG59KTtcblxubW9kdWxlLmV4cG9ydHMgPSBwb2x5ZmlsbDtcbiIsIid1c2Ugc3RyaWN0JztcblxudmFyIGltcGxlbWVudGF0aW9uID0gcmVxdWlyZSgnLi9pbXBsZW1lbnRhdGlvbicpO1xuXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIGdldFBvbHlmaWxsKCkge1xuXHRyZXR1cm4gdHlwZW9mIE9iamVjdC5pcyA9PT0gJ2Z1bmN0aW9uJyA/IE9iamVjdC5pcyA6IGltcGxlbWVudGF0aW9uO1xufTtcbiIsIid1c2Ugc3RyaWN0JztcblxudmFyIGdldFBvbHlmaWxsID0gcmVxdWlyZSgnLi9wb2x5ZmlsbCcpO1xudmFyIGRlZmluZSA9IHJlcXVpcmUoJ2RlZmluZS1wcm9wZXJ0aWVzJyk7XG5cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gc2hpbU9iamVjdElzKCkge1xuXHR2YXIgcG9seWZpbGwgPSBnZXRQb2x5ZmlsbCgpO1xuXHRkZWZpbmUoT2JqZWN0LCB7IGlzOiBwb2x5ZmlsbCB9LCB7XG5cdFx0aXM6IGZ1bmN0aW9uIHRlc3RPYmplY3RJcygpIHtcblx0XHRcdHJldHVybiBPYmplY3QuaXMgIT09IHBvbHlmaWxsO1xuXHRcdH1cblx0fSk7XG5cdHJldHVybiBwb2x5ZmlsbDtcbn07XG4iLCIndXNlIHN0cmljdCc7XG5cbnZhciBrZXlzU2hpbTtcbmlmICghT2JqZWN0LmtleXMpIHtcblx0Ly8gbW9kaWZpZWQgZnJvbSBodHRwczovL2dpdGh1Yi5jb20vZXMtc2hpbXMvZXM1LXNoaW1cblx0dmFyIGhhcyA9IE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHk7XG5cdHZhciB0b1N0ciA9IE9iamVjdC5wcm90b3R5cGUudG9TdHJpbmc7XG5cdHZhciBpc0FyZ3MgPSByZXF1aXJlKCcuL2lzQXJndW1lbnRzJyk7IC8vIGVzbGludC1kaXNhYmxlLWxpbmUgZ2xvYmFsLXJlcXVpcmVcblx0dmFyIGlzRW51bWVyYWJsZSA9IE9iamVjdC5wcm90b3R5cGUucHJvcGVydHlJc0VudW1lcmFibGU7XG5cdHZhciBoYXNEb250RW51bUJ1ZyA9ICFpc0VudW1lcmFibGUuY2FsbCh7IHRvU3RyaW5nOiBudWxsIH0sICd0b1N0cmluZycpO1xuXHR2YXIgaGFzUHJvdG9FbnVtQnVnID0gaXNFbnVtZXJhYmxlLmNhbGwoZnVuY3Rpb24gKCkge30sICdwcm90b3R5cGUnKTtcblx0dmFyIGRvbnRFbnVtcyA9IFtcblx0XHQndG9TdHJpbmcnLFxuXHRcdCd0b0xvY2FsZVN0cmluZycsXG5cdFx0J3ZhbHVlT2YnLFxuXHRcdCdoYXNPd25Qcm9wZXJ0eScsXG5cdFx0J2lzUHJvdG90eXBlT2YnLFxuXHRcdCdwcm9wZXJ0eUlzRW51bWVyYWJsZScsXG5cdFx0J2NvbnN0cnVjdG9yJ1xuXHRdO1xuXHR2YXIgZXF1YWxzQ29uc3RydWN0b3JQcm90b3R5cGUgPSBmdW5jdGlvbiAobykge1xuXHRcdHZhciBjdG9yID0gby5jb25zdHJ1Y3Rvcjtcblx0XHRyZXR1cm4gY3RvciAmJiBjdG9yLnByb3RvdHlwZSA9PT0gbztcblx0fTtcblx0dmFyIGV4Y2x1ZGVkS2V5cyA9IHtcblx0XHQkYXBwbGljYXRpb25DYWNoZTogdHJ1ZSxcblx0XHQkY29uc29sZTogdHJ1ZSxcblx0XHQkZXh0ZXJuYWw6IHRydWUsXG5cdFx0JGZyYW1lOiB0cnVlLFxuXHRcdCRmcmFtZUVsZW1lbnQ6IHRydWUsXG5cdFx0JGZyYW1lczogdHJ1ZSxcblx0XHQkaW5uZXJIZWlnaHQ6IHRydWUsXG5cdFx0JGlubmVyV2lkdGg6IHRydWUsXG5cdFx0JG9ubW96ZnVsbHNjcmVlbmNoYW5nZTogdHJ1ZSxcblx0XHQkb25tb3pmdWxsc2NyZWVuZXJyb3I6IHRydWUsXG5cdFx0JG91dGVySGVpZ2h0OiB0cnVlLFxuXHRcdCRvdXRlcldpZHRoOiB0cnVlLFxuXHRcdCRwYWdlWE9mZnNldDogdHJ1ZSxcblx0XHQkcGFnZVlPZmZzZXQ6IHRydWUsXG5cdFx0JHBhcmVudDogdHJ1ZSxcblx0XHQkc2Nyb2xsTGVmdDogdHJ1ZSxcblx0XHQkc2Nyb2xsVG9wOiB0cnVlLFxuXHRcdCRzY3JvbGxYOiB0cnVlLFxuXHRcdCRzY3JvbGxZOiB0cnVlLFxuXHRcdCRzZWxmOiB0cnVlLFxuXHRcdCR3ZWJraXRJbmRleGVkREI6IHRydWUsXG5cdFx0JHdlYmtpdFN0b3JhZ2VJbmZvOiB0cnVlLFxuXHRcdCR3aW5kb3c6IHRydWVcblx0fTtcblx0dmFyIGhhc0F1dG9tYXRpb25FcXVhbGl0eUJ1ZyA9IChmdW5jdGlvbiAoKSB7XG5cdFx0LyogZ2xvYmFsIHdpbmRvdyAqL1xuXHRcdGlmICh0eXBlb2Ygd2luZG93ID09PSAndW5kZWZpbmVkJykgeyByZXR1cm4gZmFsc2U7IH1cblx0XHRmb3IgKHZhciBrIGluIHdpbmRvdykge1xuXHRcdFx0dHJ5IHtcblx0XHRcdFx0aWYgKCFleGNsdWRlZEtleXNbJyQnICsga10gJiYgaGFzLmNhbGwod2luZG93LCBrKSAmJiB3aW5kb3dba10gIT09IG51bGwgJiYgdHlwZW9mIHdpbmRvd1trXSA9PT0gJ29iamVjdCcpIHtcblx0XHRcdFx0XHR0cnkge1xuXHRcdFx0XHRcdFx0ZXF1YWxzQ29uc3RydWN0b3JQcm90b3R5cGUod2luZG93W2tdKTtcblx0XHRcdFx0XHR9IGNhdGNoIChlKSB7XG5cdFx0XHRcdFx0XHRyZXR1cm4gdHJ1ZTtcblx0XHRcdFx0XHR9XG5cdFx0XHRcdH1cblx0XHRcdH0gY2F0Y2ggKGUpIHtcblx0XHRcdFx0cmV0dXJuIHRydWU7XG5cdFx0XHR9XG5cdFx0fVxuXHRcdHJldHVybiBmYWxzZTtcblx0fSgpKTtcblx0dmFyIGVxdWFsc0NvbnN0cnVjdG9yUHJvdG90eXBlSWZOb3RCdWdneSA9IGZ1bmN0aW9uIChvKSB7XG5cdFx0LyogZ2xvYmFsIHdpbmRvdyAqL1xuXHRcdGlmICh0eXBlb2Ygd2luZG93ID09PSAndW5kZWZpbmVkJyB8fCAhaGFzQXV0b21hdGlvbkVxdWFsaXR5QnVnKSB7XG5cdFx0XHRyZXR1cm4gZXF1YWxzQ29uc3RydWN0b3JQcm90b3R5cGUobyk7XG5cdFx0fVxuXHRcdHRyeSB7XG5cdFx0XHRyZXR1cm4gZXF1YWxzQ29uc3RydWN0b3JQcm90b3R5cGUobyk7XG5cdFx0fSBjYXRjaCAoZSkge1xuXHRcdFx0cmV0dXJuIGZhbHNlO1xuXHRcdH1cblx0fTtcblxuXHRrZXlzU2hpbSA9IGZ1bmN0aW9uIGtleXMob2JqZWN0KSB7XG5cdFx0dmFyIGlzT2JqZWN0ID0gb2JqZWN0ICE9PSBudWxsICYmIHR5cGVvZiBvYmplY3QgPT09ICdvYmplY3QnO1xuXHRcdHZhciBpc0Z1bmN0aW9uID0gdG9TdHIuY2FsbChvYmplY3QpID09PSAnW29iamVjdCBGdW5jdGlvbl0nO1xuXHRcdHZhciBpc0FyZ3VtZW50cyA9IGlzQXJncyhvYmplY3QpO1xuXHRcdHZhciBpc1N0cmluZyA9IGlzT2JqZWN0ICYmIHRvU3RyLmNhbGwob2JqZWN0KSA9PT0gJ1tvYmplY3QgU3RyaW5nXSc7XG5cdFx0dmFyIHRoZUtleXMgPSBbXTtcblxuXHRcdGlmICghaXNPYmplY3QgJiYgIWlzRnVuY3Rpb24gJiYgIWlzQXJndW1lbnRzKSB7XG5cdFx0XHR0aHJvdyBuZXcgVHlwZUVycm9yKCdPYmplY3Qua2V5cyBjYWxsZWQgb24gYSBub24tb2JqZWN0Jyk7XG5cdFx0fVxuXG5cdFx0dmFyIHNraXBQcm90byA9IGhhc1Byb3RvRW51bUJ1ZyAmJiBpc0Z1bmN0aW9uO1xuXHRcdGlmIChpc1N0cmluZyAmJiBvYmplY3QubGVuZ3RoID4gMCAmJiAhaGFzLmNhbGwob2JqZWN0LCAwKSkge1xuXHRcdFx0Zm9yICh2YXIgaSA9IDA7IGkgPCBvYmplY3QubGVuZ3RoOyArK2kpIHtcblx0XHRcdFx0dGhlS2V5cy5wdXNoKFN0cmluZyhpKSk7XG5cdFx0XHR9XG5cdFx0fVxuXG5cdFx0aWYgKGlzQXJndW1lbnRzICYmIG9iamVjdC5sZW5ndGggPiAwKSB7XG5cdFx0XHRmb3IgKHZhciBqID0gMDsgaiA8IG9iamVjdC5sZW5ndGg7ICsraikge1xuXHRcdFx0XHR0aGVLZXlzLnB1c2goU3RyaW5nKGopKTtcblx0XHRcdH1cblx0XHR9IGVsc2Uge1xuXHRcdFx0Zm9yICh2YXIgbmFtZSBpbiBvYmplY3QpIHtcblx0XHRcdFx0aWYgKCEoc2tpcFByb3RvICYmIG5hbWUgPT09ICdwcm90b3R5cGUnKSAmJiBoYXMuY2FsbChvYmplY3QsIG5hbWUpKSB7XG5cdFx0XHRcdFx0dGhlS2V5cy5wdXNoKFN0cmluZyhuYW1lKSk7XG5cdFx0XHRcdH1cblx0XHRcdH1cblx0XHR9XG5cblx0XHRpZiAoaGFzRG9udEVudW1CdWcpIHtcblx0XHRcdHZhciBza2lwQ29uc3RydWN0b3IgPSBlcXVhbHNDb25zdHJ1Y3RvclByb3RvdHlwZUlmTm90QnVnZ3kob2JqZWN0KTtcblxuXHRcdFx0Zm9yICh2YXIgayA9IDA7IGsgPCBkb250RW51bXMubGVuZ3RoOyArK2spIHtcblx0XHRcdFx0aWYgKCEoc2tpcENvbnN0cnVjdG9yICYmIGRvbnRFbnVtc1trXSA9PT0gJ2NvbnN0cnVjdG9yJykgJiYgaGFzLmNhbGwob2JqZWN0LCBkb250RW51bXNba10pKSB7XG5cdFx0XHRcdFx0dGhlS2V5cy5wdXNoKGRvbnRFbnVtc1trXSk7XG5cdFx0XHRcdH1cblx0XHRcdH1cblx0XHR9XG5cdFx0cmV0dXJuIHRoZUtleXM7XG5cdH07XG59XG5tb2R1bGUuZXhwb3J0cyA9IGtleXNTaGltO1xuIiwiJ3VzZSBzdHJpY3QnO1xuXG52YXIgc2xpY2UgPSBBcnJheS5wcm90b3R5cGUuc2xpY2U7XG52YXIgaXNBcmdzID0gcmVxdWlyZSgnLi9pc0FyZ3VtZW50cycpO1xuXG52YXIgb3JpZ0tleXMgPSBPYmplY3Qua2V5cztcbnZhciBrZXlzU2hpbSA9IG9yaWdLZXlzID8gZnVuY3Rpb24ga2V5cyhvKSB7IHJldHVybiBvcmlnS2V5cyhvKTsgfSA6IHJlcXVpcmUoJy4vaW1wbGVtZW50YXRpb24nKTtcblxudmFyIG9yaWdpbmFsS2V5cyA9IE9iamVjdC5rZXlzO1xuXG5rZXlzU2hpbS5zaGltID0gZnVuY3Rpb24gc2hpbU9iamVjdEtleXMoKSB7XG5cdGlmIChPYmplY3Qua2V5cykge1xuXHRcdHZhciBrZXlzV29ya3NXaXRoQXJndW1lbnRzID0gKGZ1bmN0aW9uICgpIHtcblx0XHRcdC8vIFNhZmFyaSA1LjAgYnVnXG5cdFx0XHR2YXIgYXJncyA9IE9iamVjdC5rZXlzKGFyZ3VtZW50cyk7XG5cdFx0XHRyZXR1cm4gYXJncyAmJiBhcmdzLmxlbmd0aCA9PT0gYXJndW1lbnRzLmxlbmd0aDtcblx0XHR9KDEsIDIpKTtcblx0XHRpZiAoIWtleXNXb3Jrc1dpdGhBcmd1bWVudHMpIHtcblx0XHRcdE9iamVjdC5rZXlzID0gZnVuY3Rpb24ga2V5cyhvYmplY3QpIHsgLy8gZXNsaW50LWRpc2FibGUtbGluZSBmdW5jLW5hbWUtbWF0Y2hpbmdcblx0XHRcdFx0aWYgKGlzQXJncyhvYmplY3QpKSB7XG5cdFx0XHRcdFx0cmV0dXJuIG9yaWdpbmFsS2V5cyhzbGljZS5jYWxsKG9iamVjdCkpO1xuXHRcdFx0XHR9XG5cdFx0XHRcdHJldHVybiBvcmlnaW5hbEtleXMob2JqZWN0KTtcblx0XHRcdH07XG5cdFx0fVxuXHR9IGVsc2Uge1xuXHRcdE9iamVjdC5rZXlzID0ga2V5c1NoaW07XG5cdH1cblx0cmV0dXJuIE9iamVjdC5rZXlzIHx8IGtleXNTaGltO1xufTtcblxubW9kdWxlLmV4cG9ydHMgPSBrZXlzU2hpbTtcbiIsIid1c2Ugc3RyaWN0JztcblxudmFyIHRvU3RyID0gT2JqZWN0LnByb3RvdHlwZS50b1N0cmluZztcblxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiBpc0FyZ3VtZW50cyh2YWx1ZSkge1xuXHR2YXIgc3RyID0gdG9TdHIuY2FsbCh2YWx1ZSk7XG5cdHZhciBpc0FyZ3MgPSBzdHIgPT09ICdbb2JqZWN0IEFyZ3VtZW50c10nO1xuXHRpZiAoIWlzQXJncykge1xuXHRcdGlzQXJncyA9IHN0ciAhPT0gJ1tvYmplY3QgQXJyYXldJyAmJlxuXHRcdFx0dmFsdWUgIT09IG51bGwgJiZcblx0XHRcdHR5cGVvZiB2YWx1ZSA9PT0gJ29iamVjdCcgJiZcblx0XHRcdHR5cGVvZiB2YWx1ZS5sZW5ndGggPT09ICdudW1iZXInICYmXG5cdFx0XHR2YWx1ZS5sZW5ndGggPj0gMCAmJlxuXHRcdFx0dG9TdHIuY2FsbCh2YWx1ZS5jYWxsZWUpID09PSAnW29iamVjdCBGdW5jdGlvbl0nO1xuXHR9XG5cdHJldHVybiBpc0FyZ3M7XG59O1xuIiwiLy8gc2hpbSBmb3IgdXNpbmcgcHJvY2VzcyBpbiBicm93c2VyXG52YXIgcHJvY2VzcyA9IG1vZHVsZS5leHBvcnRzID0ge307XG5cbi8vIGNhY2hlZCBmcm9tIHdoYXRldmVyIGdsb2JhbCBpcyBwcmVzZW50IHNvIHRoYXQgdGVzdCBydW5uZXJzIHRoYXQgc3R1YiBpdFxuLy8gZG9uJ3QgYnJlYWsgdGhpbmdzLiAgQnV0IHdlIG5lZWQgdG8gd3JhcCBpdCBpbiBhIHRyeSBjYXRjaCBpbiBjYXNlIGl0IGlzXG4vLyB3cmFwcGVkIGluIHN0cmljdCBtb2RlIGNvZGUgd2hpY2ggZG9lc24ndCBkZWZpbmUgYW55IGdsb2JhbHMuICBJdCdzIGluc2lkZSBhXG4vLyBmdW5jdGlvbiBiZWNhdXNlIHRyeS9jYXRjaGVzIGRlb3B0aW1pemUgaW4gY2VydGFpbiBlbmdpbmVzLlxuXG52YXIgY2FjaGVkU2V0VGltZW91dDtcbnZhciBjYWNoZWRDbGVhclRpbWVvdXQ7XG5cbmZ1bmN0aW9uIGRlZmF1bHRTZXRUaW1vdXQoKSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKCdzZXRUaW1lb3V0IGhhcyBub3QgYmVlbiBkZWZpbmVkJyk7XG59XG5mdW5jdGlvbiBkZWZhdWx0Q2xlYXJUaW1lb3V0ICgpIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoJ2NsZWFyVGltZW91dCBoYXMgbm90IGJlZW4gZGVmaW5lZCcpO1xufVxuKGZ1bmN0aW9uICgpIHtcbiAgICB0cnkge1xuICAgICAgICBpZiAodHlwZW9mIHNldFRpbWVvdXQgPT09ICdmdW5jdGlvbicpIHtcbiAgICAgICAgICAgIGNhY2hlZFNldFRpbWVvdXQgPSBzZXRUaW1lb3V0O1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgY2FjaGVkU2V0VGltZW91dCA9IGRlZmF1bHRTZXRUaW1vdXQ7XG4gICAgICAgIH1cbiAgICB9IGNhdGNoIChlKSB7XG4gICAgICAgIGNhY2hlZFNldFRpbWVvdXQgPSBkZWZhdWx0U2V0VGltb3V0O1xuICAgIH1cbiAgICB0cnkge1xuICAgICAgICBpZiAodHlwZW9mIGNsZWFyVGltZW91dCA9PT0gJ2Z1bmN0aW9uJykge1xuICAgICAgICAgICAgY2FjaGVkQ2xlYXJUaW1lb3V0ID0gY2xlYXJUaW1lb3V0O1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgY2FjaGVkQ2xlYXJUaW1lb3V0ID0gZGVmYXVsdENsZWFyVGltZW91dDtcbiAgICAgICAgfVxuICAgIH0gY2F0Y2ggKGUpIHtcbiAgICAgICAgY2FjaGVkQ2xlYXJUaW1lb3V0ID0gZGVmYXVsdENsZWFyVGltZW91dDtcbiAgICB9XG59ICgpKVxuZnVuY3Rpb24gcnVuVGltZW91dChmdW4pIHtcbiAgICBpZiAoY2FjaGVkU2V0VGltZW91dCA9PT0gc2V0VGltZW91dCkge1xuICAgICAgICAvL25vcm1hbCBlbnZpcm9tZW50cyBpbiBzYW5lIHNpdHVhdGlvbnNcbiAgICAgICAgcmV0dXJuIHNldFRpbWVvdXQoZnVuLCAwKTtcbiAgICB9XG4gICAgLy8gaWYgc2V0VGltZW91dCB3YXNuJ3QgYXZhaWxhYmxlIGJ1dCB3YXMgbGF0dGVyIGRlZmluZWRcbiAgICBpZiAoKGNhY2hlZFNldFRpbWVvdXQgPT09IGRlZmF1bHRTZXRUaW1vdXQgfHwgIWNhY2hlZFNldFRpbWVvdXQpICYmIHNldFRpbWVvdXQpIHtcbiAgICAgICAgY2FjaGVkU2V0VGltZW91dCA9IHNldFRpbWVvdXQ7XG4gICAgICAgIHJldHVybiBzZXRUaW1lb3V0KGZ1biwgMCk7XG4gICAgfVxuICAgIHRyeSB7XG4gICAgICAgIC8vIHdoZW4gd2hlbiBzb21lYm9keSBoYXMgc2NyZXdlZCB3aXRoIHNldFRpbWVvdXQgYnV0IG5vIEkuRS4gbWFkZG5lc3NcbiAgICAgICAgcmV0dXJuIGNhY2hlZFNldFRpbWVvdXQoZnVuLCAwKTtcbiAgICB9IGNhdGNoKGUpe1xuICAgICAgICB0cnkge1xuICAgICAgICAgICAgLy8gV2hlbiB3ZSBhcmUgaW4gSS5FLiBidXQgdGhlIHNjcmlwdCBoYXMgYmVlbiBldmFsZWQgc28gSS5FLiBkb2Vzbid0IHRydXN0IHRoZSBnbG9iYWwgb2JqZWN0IHdoZW4gY2FsbGVkIG5vcm1hbGx5XG4gICAgICAgICAgICByZXR1cm4gY2FjaGVkU2V0VGltZW91dC5jYWxsKG51bGwsIGZ1biwgMCk7XG4gICAgICAgIH0gY2F0Y2goZSl7XG4gICAgICAgICAgICAvLyBzYW1lIGFzIGFib3ZlIGJ1dCB3aGVuIGl0J3MgYSB2ZXJzaW9uIG9mIEkuRS4gdGhhdCBtdXN0IGhhdmUgdGhlIGdsb2JhbCBvYmplY3QgZm9yICd0aGlzJywgaG9wZnVsbHkgb3VyIGNvbnRleHQgY29ycmVjdCBvdGhlcndpc2UgaXQgd2lsbCB0aHJvdyBhIGdsb2JhbCBlcnJvclxuICAgICAgICAgICAgcmV0dXJuIGNhY2hlZFNldFRpbWVvdXQuY2FsbCh0aGlzLCBmdW4sIDApO1xuICAgICAgICB9XG4gICAgfVxuXG5cbn1cbmZ1bmN0aW9uIHJ1bkNsZWFyVGltZW91dChtYXJrZXIpIHtcbiAgICBpZiAoY2FjaGVkQ2xlYXJUaW1lb3V0ID09PSBjbGVhclRpbWVvdXQpIHtcbiAgICAgICAgLy9ub3JtYWwgZW52aXJvbWVudHMgaW4gc2FuZSBzaXR1YXRpb25zXG4gICAgICAgIHJldHVybiBjbGVhclRpbWVvdXQobWFya2VyKTtcbiAgICB9XG4gICAgLy8gaWYgY2xlYXJUaW1lb3V0IHdhc24ndCBhdmFpbGFibGUgYnV0IHdhcyBsYXR0ZXIgZGVmaW5lZFxuICAgIGlmICgoY2FjaGVkQ2xlYXJUaW1lb3V0ID09PSBkZWZhdWx0Q2xlYXJUaW1lb3V0IHx8ICFjYWNoZWRDbGVhclRpbWVvdXQpICYmIGNsZWFyVGltZW91dCkge1xuICAgICAgICBjYWNoZWRDbGVhclRpbWVvdXQgPSBjbGVhclRpbWVvdXQ7XG4gICAgICAgIHJldHVybiBjbGVhclRpbWVvdXQobWFya2VyKTtcbiAgICB9XG4gICAgdHJ5IHtcbiAgICAgICAgLy8gd2hlbiB3aGVuIHNvbWVib2R5IGhhcyBzY3Jld2VkIHdpdGggc2V0VGltZW91dCBidXQgbm8gSS5FLiBtYWRkbmVzc1xuICAgICAgICByZXR1cm4gY2FjaGVkQ2xlYXJUaW1lb3V0KG1hcmtlcik7XG4gICAgfSBjYXRjaCAoZSl7XG4gICAgICAgIHRyeSB7XG4gICAgICAgICAgICAvLyBXaGVuIHdlIGFyZSBpbiBJLkUuIGJ1dCB0aGUgc2NyaXB0IGhhcyBiZWVuIGV2YWxlZCBzbyBJLkUuIGRvZXNuJ3QgIHRydXN0IHRoZSBnbG9iYWwgb2JqZWN0IHdoZW4gY2FsbGVkIG5vcm1hbGx5XG4gICAgICAgICAgICByZXR1cm4gY2FjaGVkQ2xlYXJUaW1lb3V0LmNhbGwobnVsbCwgbWFya2VyKTtcbiAgICAgICAgfSBjYXRjaCAoZSl7XG4gICAgICAgICAgICAvLyBzYW1lIGFzIGFib3ZlIGJ1dCB3aGVuIGl0J3MgYSB2ZXJzaW9uIG9mIEkuRS4gdGhhdCBtdXN0IGhhdmUgdGhlIGdsb2JhbCBvYmplY3QgZm9yICd0aGlzJywgaG9wZnVsbHkgb3VyIGNvbnRleHQgY29ycmVjdCBvdGhlcndpc2UgaXQgd2lsbCB0aHJvdyBhIGdsb2JhbCBlcnJvci5cbiAgICAgICAgICAgIC8vIFNvbWUgdmVyc2lvbnMgb2YgSS5FLiBoYXZlIGRpZmZlcmVudCBydWxlcyBmb3IgY2xlYXJUaW1lb3V0IHZzIHNldFRpbWVvdXRcbiAgICAgICAgICAgIHJldHVybiBjYWNoZWRDbGVhclRpbWVvdXQuY2FsbCh0aGlzLCBtYXJrZXIpO1xuICAgICAgICB9XG4gICAgfVxuXG5cblxufVxudmFyIHF1ZXVlID0gW107XG52YXIgZHJhaW5pbmcgPSBmYWxzZTtcbnZhciBjdXJyZW50UXVldWU7XG52YXIgcXVldWVJbmRleCA9IC0xO1xuXG5mdW5jdGlvbiBjbGVhblVwTmV4dFRpY2soKSB7XG4gICAgaWYgKCFkcmFpbmluZyB8fCAhY3VycmVudFF1ZXVlKSB7XG4gICAgICAgIHJldHVybjtcbiAgICB9XG4gICAgZHJhaW5pbmcgPSBmYWxzZTtcbiAgICBpZiAoY3VycmVudFF1ZXVlLmxlbmd0aCkge1xuICAgICAgICBxdWV1ZSA9IGN1cnJlbnRRdWV1ZS5jb25jYXQocXVldWUpO1xuICAgIH0gZWxzZSB7XG4gICAgICAgIHF1ZXVlSW5kZXggPSAtMTtcbiAgICB9XG4gICAgaWYgKHF1ZXVlLmxlbmd0aCkge1xuICAgICAgICBkcmFpblF1ZXVlKCk7XG4gICAgfVxufVxuXG5mdW5jdGlvbiBkcmFpblF1ZXVlKCkge1xuICAgIGlmIChkcmFpbmluZykge1xuICAgICAgICByZXR1cm47XG4gICAgfVxuICAgIHZhciB0aW1lb3V0ID0gcnVuVGltZW91dChjbGVhblVwTmV4dFRpY2spO1xuICAgIGRyYWluaW5nID0gdHJ1ZTtcblxuICAgIHZhciBsZW4gPSBxdWV1ZS5sZW5ndGg7XG4gICAgd2hpbGUobGVuKSB7XG4gICAgICAgIGN1cnJlbnRRdWV1ZSA9IHF1ZXVlO1xuICAgICAgICBxdWV1ZSA9IFtdO1xuICAgICAgICB3aGlsZSAoKytxdWV1ZUluZGV4IDwgbGVuKSB7XG4gICAgICAgICAgICBpZiAoY3VycmVudFF1ZXVlKSB7XG4gICAgICAgICAgICAgICAgY3VycmVudFF1ZXVlW3F1ZXVlSW5kZXhdLnJ1bigpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIHF1ZXVlSW5kZXggPSAtMTtcbiAgICAgICAgbGVuID0gcXVldWUubGVuZ3RoO1xuICAgIH1cbiAgICBjdXJyZW50UXVldWUgPSBudWxsO1xuICAgIGRyYWluaW5nID0gZmFsc2U7XG4gICAgcnVuQ2xlYXJUaW1lb3V0KHRpbWVvdXQpO1xufVxuXG5wcm9jZXNzLm5leHRUaWNrID0gZnVuY3Rpb24gKGZ1bikge1xuICAgIHZhciBhcmdzID0gbmV3IEFycmF5KGFyZ3VtZW50cy5sZW5ndGggLSAxKTtcbiAgICBpZiAoYXJndW1lbnRzLmxlbmd0aCA+IDEpIHtcbiAgICAgICAgZm9yICh2YXIgaSA9IDE7IGkgPCBhcmd1bWVudHMubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgICAgIGFyZ3NbaSAtIDFdID0gYXJndW1lbnRzW2ldO1xuICAgICAgICB9XG4gICAgfVxuICAgIHF1ZXVlLnB1c2gobmV3IEl0ZW0oZnVuLCBhcmdzKSk7XG4gICAgaWYgKHF1ZXVlLmxlbmd0aCA9PT0gMSAmJiAhZHJhaW5pbmcpIHtcbiAgICAgICAgcnVuVGltZW91dChkcmFpblF1ZXVlKTtcbiAgICB9XG59O1xuXG4vLyB2OCBsaWtlcyBwcmVkaWN0aWJsZSBvYmplY3RzXG5mdW5jdGlvbiBJdGVtKGZ1biwgYXJyYXkpIHtcbiAgICB0aGlzLmZ1biA9IGZ1bjtcbiAgICB0aGlzLmFycmF5ID0gYXJyYXk7XG59XG5JdGVtLnByb3RvdHlwZS5ydW4gPSBmdW5jdGlvbiAoKSB7XG4gICAgdGhpcy5mdW4uYXBwbHkobnVsbCwgdGhpcy5hcnJheSk7XG59O1xucHJvY2Vzcy50aXRsZSA9ICdicm93c2VyJztcbnByb2Nlc3MuYnJvd3NlciA9IHRydWU7XG5wcm9jZXNzLmVudiA9IHt9O1xucHJvY2Vzcy5hcmd2ID0gW107XG5wcm9jZXNzLnZlcnNpb24gPSAnJzsgLy8gZW1wdHkgc3RyaW5nIHRvIGF2b2lkIHJlZ2V4cCBpc3N1ZXNcbnByb2Nlc3MudmVyc2lvbnMgPSB7fTtcblxuZnVuY3Rpb24gbm9vcCgpIHt9XG5cbnByb2Nlc3Mub24gPSBub29wO1xucHJvY2Vzcy5hZGRMaXN0ZW5lciA9IG5vb3A7XG5wcm9jZXNzLm9uY2UgPSBub29wO1xucHJvY2Vzcy5vZmYgPSBub29wO1xucHJvY2Vzcy5yZW1vdmVMaXN0ZW5lciA9IG5vb3A7XG5wcm9jZXNzLnJlbW92ZUFsbExpc3RlbmVycyA9IG5vb3A7XG5wcm9jZXNzLmVtaXQgPSBub29wO1xucHJvY2Vzcy5wcmVwZW5kTGlzdGVuZXIgPSBub29wO1xucHJvY2Vzcy5wcmVwZW5kT25jZUxpc3RlbmVyID0gbm9vcDtcblxucHJvY2Vzcy5saXN0ZW5lcnMgPSBmdW5jdGlvbiAobmFtZSkgeyByZXR1cm4gW10gfVxuXG5wcm9jZXNzLmJpbmRpbmcgPSBmdW5jdGlvbiAobmFtZSkge1xuICAgIHRocm93IG5ldyBFcnJvcigncHJvY2Vzcy5iaW5kaW5nIGlzIG5vdCBzdXBwb3J0ZWQnKTtcbn07XG5cbnByb2Nlc3MuY3dkID0gZnVuY3Rpb24gKCkgeyByZXR1cm4gJy8nIH07XG5wcm9jZXNzLmNoZGlyID0gZnVuY3Rpb24gKGRpcikge1xuICAgIHRocm93IG5ldyBFcnJvcigncHJvY2Vzcy5jaGRpciBpcyBub3Qgc3VwcG9ydGVkJyk7XG59O1xucHJvY2Vzcy51bWFzayA9IGZ1bmN0aW9uKCkgeyByZXR1cm4gMDsgfTtcbiIsIi8qKlxuICogQGxpY2Vuc2UgUmVhY3RcbiAqIHJlYWN0LWRvbS5wcm9kdWN0aW9uLm1pbi5qc1xuICpcbiAqIENvcHlyaWdodCAoYykgRmFjZWJvb2ssIEluYy4gYW5kIGl0cyBhZmZpbGlhdGVzLlxuICpcbiAqIFRoaXMgc291cmNlIGNvZGUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlIGZvdW5kIGluIHRoZVxuICogTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLlxuICovXG4vKlxuIE1vZGVybml6ciAzLjAuMHByZSAoQ3VzdG9tIEJ1aWxkKSB8IE1JVFxuKi9cbid1c2Ugc3RyaWN0Jzt2YXIgYWE9cmVxdWlyZShcInJlYWN0XCIpLGNhPXJlcXVpcmUoXCJzY2hlZHVsZXJcIik7ZnVuY3Rpb24gcChhKXtmb3IodmFyIGI9XCJodHRwczovL3JlYWN0anMub3JnL2RvY3MvZXJyb3ItZGVjb2Rlci5odG1sP2ludmFyaWFudD1cIithLGM9MTtjPGFyZ3VtZW50cy5sZW5ndGg7YysrKWIrPVwiJmFyZ3NbXT1cIitlbmNvZGVVUklDb21wb25lbnQoYXJndW1lbnRzW2NdKTtyZXR1cm5cIk1pbmlmaWVkIFJlYWN0IGVycm9yICNcIithK1wiOyB2aXNpdCBcIitiK1wiIGZvciB0aGUgZnVsbCBtZXNzYWdlIG9yIHVzZSB0aGUgbm9uLW1pbmlmaWVkIGRldiBlbnZpcm9ubWVudCBmb3IgZnVsbCBlcnJvcnMgYW5kIGFkZGl0aW9uYWwgaGVscGZ1bCB3YXJuaW5ncy5cIn12YXIgZGE9bmV3IFNldCxlYT17fTtmdW5jdGlvbiBmYShhLGIpe2hhKGEsYik7aGEoYStcIkNhcHR1cmVcIixiKX1cbmZ1bmN0aW9uIGhhKGEsYil7ZWFbYV09Yjtmb3IoYT0wO2E8Yi5sZW5ndGg7YSsrKWRhLmFkZChiW2FdKX1cbnZhciBpYT0hKFwidW5kZWZpbmVkXCI9PT10eXBlb2Ygd2luZG93fHxcInVuZGVmaW5lZFwiPT09dHlwZW9mIHdpbmRvdy5kb2N1bWVudHx8XCJ1bmRlZmluZWRcIj09PXR5cGVvZiB3aW5kb3cuZG9jdW1lbnQuY3JlYXRlRWxlbWVudCksamE9T2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eSxrYT0vXls6QS1aX2EtelxcdTAwQzAtXFx1MDBENlxcdTAwRDgtXFx1MDBGNlxcdTAwRjgtXFx1MDJGRlxcdTAzNzAtXFx1MDM3RFxcdTAzN0YtXFx1MUZGRlxcdTIwMEMtXFx1MjAwRFxcdTIwNzAtXFx1MjE4RlxcdTJDMDAtXFx1MkZFRlxcdTMwMDEtXFx1RDdGRlxcdUY5MDAtXFx1RkRDRlxcdUZERjAtXFx1RkZGRF1bOkEtWl9hLXpcXHUwMEMwLVxcdTAwRDZcXHUwMEQ4LVxcdTAwRjZcXHUwMEY4LVxcdTAyRkZcXHUwMzcwLVxcdTAzN0RcXHUwMzdGLVxcdTFGRkZcXHUyMDBDLVxcdTIwMERcXHUyMDcwLVxcdTIxOEZcXHUyQzAwLVxcdTJGRUZcXHUzMDAxLVxcdUQ3RkZcXHVGOTAwLVxcdUZEQ0ZcXHVGREYwLVxcdUZGRkRcXC0uMC05XFx1MDBCN1xcdTAzMDAtXFx1MDM2RlxcdTIwM0YtXFx1MjA0MF0qJC8sbGE9XG57fSxtYT17fTtmdW5jdGlvbiBvYShhKXtpZihqYS5jYWxsKG1hLGEpKXJldHVybiEwO2lmKGphLmNhbGwobGEsYSkpcmV0dXJuITE7aWYoa2EudGVzdChhKSlyZXR1cm4gbWFbYV09ITA7bGFbYV09ITA7cmV0dXJuITF9ZnVuY3Rpb24gcGEoYSxiLGMsZCl7aWYobnVsbCE9PWMmJjA9PT1jLnR5cGUpcmV0dXJuITE7c3dpdGNoKHR5cGVvZiBiKXtjYXNlIFwiZnVuY3Rpb25cIjpjYXNlIFwic3ltYm9sXCI6cmV0dXJuITA7Y2FzZSBcImJvb2xlYW5cIjppZihkKXJldHVybiExO2lmKG51bGwhPT1jKXJldHVybiFjLmFjY2VwdHNCb29sZWFuczthPWEudG9Mb3dlckNhc2UoKS5zbGljZSgwLDUpO3JldHVyblwiZGF0YS1cIiE9PWEmJlwiYXJpYS1cIiE9PWE7ZGVmYXVsdDpyZXR1cm4hMX19XG5mdW5jdGlvbiBxYShhLGIsYyxkKXtpZihudWxsPT09Ynx8XCJ1bmRlZmluZWRcIj09PXR5cGVvZiBifHxwYShhLGIsYyxkKSlyZXR1cm4hMDtpZihkKXJldHVybiExO2lmKG51bGwhPT1jKXN3aXRjaChjLnR5cGUpe2Nhc2UgMzpyZXR1cm4hYjtjYXNlIDQ6cmV0dXJuITE9PT1iO2Nhc2UgNTpyZXR1cm4gaXNOYU4oYik7Y2FzZSA2OnJldHVybiBpc05hTihiKXx8MT5ifXJldHVybiExfWZ1bmN0aW9uIHYoYSxiLGMsZCxlLGYsZyl7dGhpcy5hY2NlcHRzQm9vbGVhbnM9Mj09PWJ8fDM9PT1ifHw0PT09Yjt0aGlzLmF0dHJpYnV0ZU5hbWU9ZDt0aGlzLmF0dHJpYnV0ZU5hbWVzcGFjZT1lO3RoaXMubXVzdFVzZVByb3BlcnR5PWM7dGhpcy5wcm9wZXJ0eU5hbWU9YTt0aGlzLnR5cGU9Yjt0aGlzLnNhbml0aXplVVJMPWY7dGhpcy5yZW1vdmVFbXB0eVN0cmluZz1nfXZhciB6PXt9O1xuXCJjaGlsZHJlbiBkYW5nZXJvdXNseVNldElubmVySFRNTCBkZWZhdWx0VmFsdWUgZGVmYXVsdENoZWNrZWQgaW5uZXJIVE1MIHN1cHByZXNzQ29udGVudEVkaXRhYmxlV2FybmluZyBzdXBwcmVzc0h5ZHJhdGlvbldhcm5pbmcgc3R5bGVcIi5zcGxpdChcIiBcIikuZm9yRWFjaChmdW5jdGlvbihhKXt6W2FdPW5ldyB2KGEsMCwhMSxhLG51bGwsITEsITEpfSk7W1tcImFjY2VwdENoYXJzZXRcIixcImFjY2VwdC1jaGFyc2V0XCJdLFtcImNsYXNzTmFtZVwiLFwiY2xhc3NcIl0sW1wiaHRtbEZvclwiLFwiZm9yXCJdLFtcImh0dHBFcXVpdlwiLFwiaHR0cC1lcXVpdlwiXV0uZm9yRWFjaChmdW5jdGlvbihhKXt2YXIgYj1hWzBdO3pbYl09bmV3IHYoYiwxLCExLGFbMV0sbnVsbCwhMSwhMSl9KTtbXCJjb250ZW50RWRpdGFibGVcIixcImRyYWdnYWJsZVwiLFwic3BlbGxDaGVja1wiLFwidmFsdWVcIl0uZm9yRWFjaChmdW5jdGlvbihhKXt6W2FdPW5ldyB2KGEsMiwhMSxhLnRvTG93ZXJDYXNlKCksbnVsbCwhMSwhMSl9KTtcbltcImF1dG9SZXZlcnNlXCIsXCJleHRlcm5hbFJlc291cmNlc1JlcXVpcmVkXCIsXCJmb2N1c2FibGVcIixcInByZXNlcnZlQWxwaGFcIl0uZm9yRWFjaChmdW5jdGlvbihhKXt6W2FdPW5ldyB2KGEsMiwhMSxhLG51bGwsITEsITEpfSk7XCJhbGxvd0Z1bGxTY3JlZW4gYXN5bmMgYXV0b0ZvY3VzIGF1dG9QbGF5IGNvbnRyb2xzIGRlZmF1bHQgZGVmZXIgZGlzYWJsZWQgZGlzYWJsZVBpY3R1cmVJblBpY3R1cmUgZGlzYWJsZVJlbW90ZVBsYXliYWNrIGZvcm1Ob1ZhbGlkYXRlIGhpZGRlbiBsb29wIG5vTW9kdWxlIG5vVmFsaWRhdGUgb3BlbiBwbGF5c0lubGluZSByZWFkT25seSByZXF1aXJlZCByZXZlcnNlZCBzY29wZWQgc2VhbWxlc3MgaXRlbVNjb3BlXCIuc3BsaXQoXCIgXCIpLmZvckVhY2goZnVuY3Rpb24oYSl7elthXT1uZXcgdihhLDMsITEsYS50b0xvd2VyQ2FzZSgpLG51bGwsITEsITEpfSk7XG5bXCJjaGVja2VkXCIsXCJtdWx0aXBsZVwiLFwibXV0ZWRcIixcInNlbGVjdGVkXCJdLmZvckVhY2goZnVuY3Rpb24oYSl7elthXT1uZXcgdihhLDMsITAsYSxudWxsLCExLCExKX0pO1tcImNhcHR1cmVcIixcImRvd25sb2FkXCJdLmZvckVhY2goZnVuY3Rpb24oYSl7elthXT1uZXcgdihhLDQsITEsYSxudWxsLCExLCExKX0pO1tcImNvbHNcIixcInJvd3NcIixcInNpemVcIixcInNwYW5cIl0uZm9yRWFjaChmdW5jdGlvbihhKXt6W2FdPW5ldyB2KGEsNiwhMSxhLG51bGwsITEsITEpfSk7W1wicm93U3BhblwiLFwic3RhcnRcIl0uZm9yRWFjaChmdW5jdGlvbihhKXt6W2FdPW5ldyB2KGEsNSwhMSxhLnRvTG93ZXJDYXNlKCksbnVsbCwhMSwhMSl9KTt2YXIgcmE9L1tcXC06XShbYS16XSkvZztmdW5jdGlvbiBzYShhKXtyZXR1cm4gYVsxXS50b1VwcGVyQ2FzZSgpfVxuXCJhY2NlbnQtaGVpZ2h0IGFsaWdubWVudC1iYXNlbGluZSBhcmFiaWMtZm9ybSBiYXNlbGluZS1zaGlmdCBjYXAtaGVpZ2h0IGNsaXAtcGF0aCBjbGlwLXJ1bGUgY29sb3ItaW50ZXJwb2xhdGlvbiBjb2xvci1pbnRlcnBvbGF0aW9uLWZpbHRlcnMgY29sb3ItcHJvZmlsZSBjb2xvci1yZW5kZXJpbmcgZG9taW5hbnQtYmFzZWxpbmUgZW5hYmxlLWJhY2tncm91bmQgZmlsbC1vcGFjaXR5IGZpbGwtcnVsZSBmbG9vZC1jb2xvciBmbG9vZC1vcGFjaXR5IGZvbnQtZmFtaWx5IGZvbnQtc2l6ZSBmb250LXNpemUtYWRqdXN0IGZvbnQtc3RyZXRjaCBmb250LXN0eWxlIGZvbnQtdmFyaWFudCBmb250LXdlaWdodCBnbHlwaC1uYW1lIGdseXBoLW9yaWVudGF0aW9uLWhvcml6b250YWwgZ2x5cGgtb3JpZW50YXRpb24tdmVydGljYWwgaG9yaXotYWR2LXggaG9yaXotb3JpZ2luLXggaW1hZ2UtcmVuZGVyaW5nIGxldHRlci1zcGFjaW5nIGxpZ2h0aW5nLWNvbG9yIG1hcmtlci1lbmQgbWFya2VyLW1pZCBtYXJrZXItc3RhcnQgb3ZlcmxpbmUtcG9zaXRpb24gb3ZlcmxpbmUtdGhpY2tuZXNzIHBhaW50LW9yZGVyIHBhbm9zZS0xIHBvaW50ZXItZXZlbnRzIHJlbmRlcmluZy1pbnRlbnQgc2hhcGUtcmVuZGVyaW5nIHN0b3AtY29sb3Igc3RvcC1vcGFjaXR5IHN0cmlrZXRocm91Z2gtcG9zaXRpb24gc3RyaWtldGhyb3VnaC10aGlja25lc3Mgc3Ryb2tlLWRhc2hhcnJheSBzdHJva2UtZGFzaG9mZnNldCBzdHJva2UtbGluZWNhcCBzdHJva2UtbGluZWpvaW4gc3Ryb2tlLW1pdGVybGltaXQgc3Ryb2tlLW9wYWNpdHkgc3Ryb2tlLXdpZHRoIHRleHQtYW5jaG9yIHRleHQtZGVjb3JhdGlvbiB0ZXh0LXJlbmRlcmluZyB1bmRlcmxpbmUtcG9zaXRpb24gdW5kZXJsaW5lLXRoaWNrbmVzcyB1bmljb2RlLWJpZGkgdW5pY29kZS1yYW5nZSB1bml0cy1wZXItZW0gdi1hbHBoYWJldGljIHYtaGFuZ2luZyB2LWlkZW9ncmFwaGljIHYtbWF0aGVtYXRpY2FsIHZlY3Rvci1lZmZlY3QgdmVydC1hZHYteSB2ZXJ0LW9yaWdpbi14IHZlcnQtb3JpZ2luLXkgd29yZC1zcGFjaW5nIHdyaXRpbmctbW9kZSB4bWxuczp4bGluayB4LWhlaWdodFwiLnNwbGl0KFwiIFwiKS5mb3JFYWNoKGZ1bmN0aW9uKGEpe3ZhciBiPWEucmVwbGFjZShyYSxcbnNhKTt6W2JdPW5ldyB2KGIsMSwhMSxhLG51bGwsITEsITEpfSk7XCJ4bGluazphY3R1YXRlIHhsaW5rOmFyY3JvbGUgeGxpbms6cm9sZSB4bGluazpzaG93IHhsaW5rOnRpdGxlIHhsaW5rOnR5cGVcIi5zcGxpdChcIiBcIikuZm9yRWFjaChmdW5jdGlvbihhKXt2YXIgYj1hLnJlcGxhY2UocmEsc2EpO3pbYl09bmV3IHYoYiwxLCExLGEsXCJodHRwOi8vd3d3LnczLm9yZy8xOTk5L3hsaW5rXCIsITEsITEpfSk7W1wieG1sOmJhc2VcIixcInhtbDpsYW5nXCIsXCJ4bWw6c3BhY2VcIl0uZm9yRWFjaChmdW5jdGlvbihhKXt2YXIgYj1hLnJlcGxhY2UocmEsc2EpO3pbYl09bmV3IHYoYiwxLCExLGEsXCJodHRwOi8vd3d3LnczLm9yZy9YTUwvMTk5OC9uYW1lc3BhY2VcIiwhMSwhMSl9KTtbXCJ0YWJJbmRleFwiLFwiY3Jvc3NPcmlnaW5cIl0uZm9yRWFjaChmdW5jdGlvbihhKXt6W2FdPW5ldyB2KGEsMSwhMSxhLnRvTG93ZXJDYXNlKCksbnVsbCwhMSwhMSl9KTtcbnoueGxpbmtIcmVmPW5ldyB2KFwieGxpbmtIcmVmXCIsMSwhMSxcInhsaW5rOmhyZWZcIixcImh0dHA6Ly93d3cudzMub3JnLzE5OTkveGxpbmtcIiwhMCwhMSk7W1wic3JjXCIsXCJocmVmXCIsXCJhY3Rpb25cIixcImZvcm1BY3Rpb25cIl0uZm9yRWFjaChmdW5jdGlvbihhKXt6W2FdPW5ldyB2KGEsMSwhMSxhLnRvTG93ZXJDYXNlKCksbnVsbCwhMCwhMCl9KTtcbmZ1bmN0aW9uIHRhKGEsYixjLGQpe3ZhciBlPXouaGFzT3duUHJvcGVydHkoYik/eltiXTpudWxsO2lmKG51bGwhPT1lPzAhPT1lLnR5cGU6ZHx8ISgyPGIubGVuZ3RoKXx8XCJvXCIhPT1iWzBdJiZcIk9cIiE9PWJbMF18fFwiblwiIT09YlsxXSYmXCJOXCIhPT1iWzFdKXFhKGIsYyxlLGQpJiYoYz1udWxsKSxkfHxudWxsPT09ZT9vYShiKSYmKG51bGw9PT1jP2EucmVtb3ZlQXR0cmlidXRlKGIpOmEuc2V0QXR0cmlidXRlKGIsXCJcIitjKSk6ZS5tdXN0VXNlUHJvcGVydHk/YVtlLnByb3BlcnR5TmFtZV09bnVsbD09PWM/Mz09PWUudHlwZT8hMTpcIlwiOmM6KGI9ZS5hdHRyaWJ1dGVOYW1lLGQ9ZS5hdHRyaWJ1dGVOYW1lc3BhY2UsbnVsbD09PWM/YS5yZW1vdmVBdHRyaWJ1dGUoYik6KGU9ZS50eXBlLGM9Mz09PWV8fDQ9PT1lJiYhMD09PWM/XCJcIjpcIlwiK2MsZD9hLnNldEF0dHJpYnV0ZU5TKGQsYixjKTphLnNldEF0dHJpYnV0ZShiLGMpKSl9XG52YXIgdWE9YWEuX19TRUNSRVRfSU5URVJOQUxTX0RPX05PVF9VU0VfT1JfWU9VX1dJTExfQkVfRklSRUQsdmE9U3ltYm9sLmZvcihcInJlYWN0LmVsZW1lbnRcIiksd2E9U3ltYm9sLmZvcihcInJlYWN0LnBvcnRhbFwiKSx5YT1TeW1ib2wuZm9yKFwicmVhY3QuZnJhZ21lbnRcIiksemE9U3ltYm9sLmZvcihcInJlYWN0LnN0cmljdF9tb2RlXCIpLEFhPVN5bWJvbC5mb3IoXCJyZWFjdC5wcm9maWxlclwiKSxCYT1TeW1ib2wuZm9yKFwicmVhY3QucHJvdmlkZXJcIiksQ2E9U3ltYm9sLmZvcihcInJlYWN0LmNvbnRleHRcIiksRGE9U3ltYm9sLmZvcihcInJlYWN0LmZvcndhcmRfcmVmXCIpLEVhPVN5bWJvbC5mb3IoXCJyZWFjdC5zdXNwZW5zZVwiKSxGYT1TeW1ib2wuZm9yKFwicmVhY3Quc3VzcGVuc2VfbGlzdFwiKSxHYT1TeW1ib2wuZm9yKFwicmVhY3QubWVtb1wiKSxIYT1TeW1ib2wuZm9yKFwicmVhY3QubGF6eVwiKTtTeW1ib2wuZm9yKFwicmVhY3Quc2NvcGVcIik7U3ltYm9sLmZvcihcInJlYWN0LmRlYnVnX3RyYWNlX21vZGVcIik7XG52YXIgSWE9U3ltYm9sLmZvcihcInJlYWN0Lm9mZnNjcmVlblwiKTtTeW1ib2wuZm9yKFwicmVhY3QubGVnYWN5X2hpZGRlblwiKTtTeW1ib2wuZm9yKFwicmVhY3QuY2FjaGVcIik7U3ltYm9sLmZvcihcInJlYWN0LnRyYWNpbmdfbWFya2VyXCIpO3ZhciBKYT1TeW1ib2wuaXRlcmF0b3I7ZnVuY3Rpb24gS2EoYSl7aWYobnVsbD09PWF8fFwib2JqZWN0XCIhPT10eXBlb2YgYSlyZXR1cm4gbnVsbDthPUphJiZhW0phXXx8YVtcIkBAaXRlcmF0b3JcIl07cmV0dXJuXCJmdW5jdGlvblwiPT09dHlwZW9mIGE/YTpudWxsfXZhciBBPU9iamVjdC5hc3NpZ24sTGE7ZnVuY3Rpb24gTWEoYSl7aWYodm9pZCAwPT09TGEpdHJ5e3Rocm93IEVycm9yKCk7fWNhdGNoKGMpe3ZhciBiPWMuc3RhY2sudHJpbSgpLm1hdGNoKC9cXG4oICooYXQgKT8pLyk7TGE9YiYmYlsxXXx8XCJcIn1yZXR1cm5cIlxcblwiK0xhK2F9dmFyIE5hPSExO1xuZnVuY3Rpb24gT2EoYSxiKXtpZighYXx8TmEpcmV0dXJuXCJcIjtOYT0hMDt2YXIgYz1FcnJvci5wcmVwYXJlU3RhY2tUcmFjZTtFcnJvci5wcmVwYXJlU3RhY2tUcmFjZT12b2lkIDA7dHJ5e2lmKGIpaWYoYj1mdW5jdGlvbigpe3Rocm93IEVycm9yKCk7fSxPYmplY3QuZGVmaW5lUHJvcGVydHkoYi5wcm90b3R5cGUsXCJwcm9wc1wiLHtzZXQ6ZnVuY3Rpb24oKXt0aHJvdyBFcnJvcigpO319KSxcIm9iamVjdFwiPT09dHlwZW9mIFJlZmxlY3QmJlJlZmxlY3QuY29uc3RydWN0KXt0cnl7UmVmbGVjdC5jb25zdHJ1Y3QoYixbXSl9Y2F0Y2gobCl7dmFyIGQ9bH1SZWZsZWN0LmNvbnN0cnVjdChhLFtdLGIpfWVsc2V7dHJ5e2IuY2FsbCgpfWNhdGNoKGwpe2Q9bH1hLmNhbGwoYi5wcm90b3R5cGUpfWVsc2V7dHJ5e3Rocm93IEVycm9yKCk7fWNhdGNoKGwpe2Q9bH1hKCl9fWNhdGNoKGwpe2lmKGwmJmQmJlwic3RyaW5nXCI9PT10eXBlb2YgbC5zdGFjayl7Zm9yKHZhciBlPWwuc3RhY2suc3BsaXQoXCJcXG5cIiksXG5mPWQuc3RhY2suc3BsaXQoXCJcXG5cIiksZz1lLmxlbmd0aC0xLGg9Zi5sZW5ndGgtMTsxPD1nJiYwPD1oJiZlW2ddIT09ZltoXTspaC0tO2Zvcig7MTw9ZyYmMDw9aDtnLS0saC0tKWlmKGVbZ10hPT1mW2hdKXtpZigxIT09Z3x8MSE9PWgpe2RvIGlmKGctLSxoLS0sMD5ofHxlW2ddIT09ZltoXSl7dmFyIGs9XCJcXG5cIitlW2ddLnJlcGxhY2UoXCIgYXQgbmV3IFwiLFwiIGF0IFwiKTthLmRpc3BsYXlOYW1lJiZrLmluY2x1ZGVzKFwiPGFub255bW91cz5cIikmJihrPWsucmVwbGFjZShcIjxhbm9ueW1vdXM+XCIsYS5kaXNwbGF5TmFtZSkpO3JldHVybiBrfXdoaWxlKDE8PWcmJjA8PWgpfWJyZWFrfX19ZmluYWxseXtOYT0hMSxFcnJvci5wcmVwYXJlU3RhY2tUcmFjZT1jfXJldHVybihhPWE/YS5kaXNwbGF5TmFtZXx8YS5uYW1lOlwiXCIpP01hKGEpOlwiXCJ9XG5mdW5jdGlvbiBQYShhKXtzd2l0Y2goYS50YWcpe2Nhc2UgNTpyZXR1cm4gTWEoYS50eXBlKTtjYXNlIDE2OnJldHVybiBNYShcIkxhenlcIik7Y2FzZSAxMzpyZXR1cm4gTWEoXCJTdXNwZW5zZVwiKTtjYXNlIDE5OnJldHVybiBNYShcIlN1c3BlbnNlTGlzdFwiKTtjYXNlIDA6Y2FzZSAyOmNhc2UgMTU6cmV0dXJuIGE9T2EoYS50eXBlLCExKSxhO2Nhc2UgMTE6cmV0dXJuIGE9T2EoYS50eXBlLnJlbmRlciwhMSksYTtjYXNlIDE6cmV0dXJuIGE9T2EoYS50eXBlLCEwKSxhO2RlZmF1bHQ6cmV0dXJuXCJcIn19XG5mdW5jdGlvbiBRYShhKXtpZihudWxsPT1hKXJldHVybiBudWxsO2lmKFwiZnVuY3Rpb25cIj09PXR5cGVvZiBhKXJldHVybiBhLmRpc3BsYXlOYW1lfHxhLm5hbWV8fG51bGw7aWYoXCJzdHJpbmdcIj09PXR5cGVvZiBhKXJldHVybiBhO3N3aXRjaChhKXtjYXNlIHlhOnJldHVyblwiRnJhZ21lbnRcIjtjYXNlIHdhOnJldHVyblwiUG9ydGFsXCI7Y2FzZSBBYTpyZXR1cm5cIlByb2ZpbGVyXCI7Y2FzZSB6YTpyZXR1cm5cIlN0cmljdE1vZGVcIjtjYXNlIEVhOnJldHVyblwiU3VzcGVuc2VcIjtjYXNlIEZhOnJldHVyblwiU3VzcGVuc2VMaXN0XCJ9aWYoXCJvYmplY3RcIj09PXR5cGVvZiBhKXN3aXRjaChhLiQkdHlwZW9mKXtjYXNlIENhOnJldHVybihhLmRpc3BsYXlOYW1lfHxcIkNvbnRleHRcIikrXCIuQ29uc3VtZXJcIjtjYXNlIEJhOnJldHVybihhLl9jb250ZXh0LmRpc3BsYXlOYW1lfHxcIkNvbnRleHRcIikrXCIuUHJvdmlkZXJcIjtjYXNlIERhOnZhciBiPWEucmVuZGVyO2E9YS5kaXNwbGF5TmFtZTthfHwoYT1iLmRpc3BsYXlOYW1lfHxcbmIubmFtZXx8XCJcIixhPVwiXCIhPT1hP1wiRm9yd2FyZFJlZihcIithK1wiKVwiOlwiRm9yd2FyZFJlZlwiKTtyZXR1cm4gYTtjYXNlIEdhOnJldHVybiBiPWEuZGlzcGxheU5hbWV8fG51bGwsbnVsbCE9PWI/YjpRYShhLnR5cGUpfHxcIk1lbW9cIjtjYXNlIEhhOmI9YS5fcGF5bG9hZDthPWEuX2luaXQ7dHJ5e3JldHVybiBRYShhKGIpKX1jYXRjaChjKXt9fXJldHVybiBudWxsfVxuZnVuY3Rpb24gUmEoYSl7dmFyIGI9YS50eXBlO3N3aXRjaChhLnRhZyl7Y2FzZSAyNDpyZXR1cm5cIkNhY2hlXCI7Y2FzZSA5OnJldHVybihiLmRpc3BsYXlOYW1lfHxcIkNvbnRleHRcIikrXCIuQ29uc3VtZXJcIjtjYXNlIDEwOnJldHVybihiLl9jb250ZXh0LmRpc3BsYXlOYW1lfHxcIkNvbnRleHRcIikrXCIuUHJvdmlkZXJcIjtjYXNlIDE4OnJldHVyblwiRGVoeWRyYXRlZEZyYWdtZW50XCI7Y2FzZSAxMTpyZXR1cm4gYT1iLnJlbmRlcixhPWEuZGlzcGxheU5hbWV8fGEubmFtZXx8XCJcIixiLmRpc3BsYXlOYW1lfHwoXCJcIiE9PWE/XCJGb3J3YXJkUmVmKFwiK2ErXCIpXCI6XCJGb3J3YXJkUmVmXCIpO2Nhc2UgNzpyZXR1cm5cIkZyYWdtZW50XCI7Y2FzZSA1OnJldHVybiBiO2Nhc2UgNDpyZXR1cm5cIlBvcnRhbFwiO2Nhc2UgMzpyZXR1cm5cIlJvb3RcIjtjYXNlIDY6cmV0dXJuXCJUZXh0XCI7Y2FzZSAxNjpyZXR1cm4gUWEoYik7Y2FzZSA4OnJldHVybiBiPT09emE/XCJTdHJpY3RNb2RlXCI6XCJNb2RlXCI7Y2FzZSAyMjpyZXR1cm5cIk9mZnNjcmVlblwiO1xuY2FzZSAxMjpyZXR1cm5cIlByb2ZpbGVyXCI7Y2FzZSAyMTpyZXR1cm5cIlNjb3BlXCI7Y2FzZSAxMzpyZXR1cm5cIlN1c3BlbnNlXCI7Y2FzZSAxOTpyZXR1cm5cIlN1c3BlbnNlTGlzdFwiO2Nhc2UgMjU6cmV0dXJuXCJUcmFjaW5nTWFya2VyXCI7Y2FzZSAxOmNhc2UgMDpjYXNlIDE3OmNhc2UgMjpjYXNlIDE0OmNhc2UgMTU6aWYoXCJmdW5jdGlvblwiPT09dHlwZW9mIGIpcmV0dXJuIGIuZGlzcGxheU5hbWV8fGIubmFtZXx8bnVsbDtpZihcInN0cmluZ1wiPT09dHlwZW9mIGIpcmV0dXJuIGJ9cmV0dXJuIG51bGx9ZnVuY3Rpb24gU2EoYSl7c3dpdGNoKHR5cGVvZiBhKXtjYXNlIFwiYm9vbGVhblwiOmNhc2UgXCJudW1iZXJcIjpjYXNlIFwic3RyaW5nXCI6Y2FzZSBcInVuZGVmaW5lZFwiOnJldHVybiBhO2Nhc2UgXCJvYmplY3RcIjpyZXR1cm4gYTtkZWZhdWx0OnJldHVyblwiXCJ9fVxuZnVuY3Rpb24gVGEoYSl7dmFyIGI9YS50eXBlO3JldHVybihhPWEubm9kZU5hbWUpJiZcImlucHV0XCI9PT1hLnRvTG93ZXJDYXNlKCkmJihcImNoZWNrYm94XCI9PT1ifHxcInJhZGlvXCI9PT1iKX1cbmZ1bmN0aW9uIFVhKGEpe3ZhciBiPVRhKGEpP1wiY2hlY2tlZFwiOlwidmFsdWVcIixjPU9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IoYS5jb25zdHJ1Y3Rvci5wcm90b3R5cGUsYiksZD1cIlwiK2FbYl07aWYoIWEuaGFzT3duUHJvcGVydHkoYikmJlwidW5kZWZpbmVkXCIhPT10eXBlb2YgYyYmXCJmdW5jdGlvblwiPT09dHlwZW9mIGMuZ2V0JiZcImZ1bmN0aW9uXCI9PT10eXBlb2YgYy5zZXQpe3ZhciBlPWMuZ2V0LGY9Yy5zZXQ7T2JqZWN0LmRlZmluZVByb3BlcnR5KGEsYix7Y29uZmlndXJhYmxlOiEwLGdldDpmdW5jdGlvbigpe3JldHVybiBlLmNhbGwodGhpcyl9LHNldDpmdW5jdGlvbihhKXtkPVwiXCIrYTtmLmNhbGwodGhpcyxhKX19KTtPYmplY3QuZGVmaW5lUHJvcGVydHkoYSxiLHtlbnVtZXJhYmxlOmMuZW51bWVyYWJsZX0pO3JldHVybntnZXRWYWx1ZTpmdW5jdGlvbigpe3JldHVybiBkfSxzZXRWYWx1ZTpmdW5jdGlvbihhKXtkPVwiXCIrYX0sc3RvcFRyYWNraW5nOmZ1bmN0aW9uKCl7YS5fdmFsdWVUcmFja2VyPVxubnVsbDtkZWxldGUgYVtiXX19fX1mdW5jdGlvbiBWYShhKXthLl92YWx1ZVRyYWNrZXJ8fChhLl92YWx1ZVRyYWNrZXI9VWEoYSkpfWZ1bmN0aW9uIFdhKGEpe2lmKCFhKXJldHVybiExO3ZhciBiPWEuX3ZhbHVlVHJhY2tlcjtpZighYilyZXR1cm4hMDt2YXIgYz1iLmdldFZhbHVlKCk7dmFyIGQ9XCJcIjthJiYoZD1UYShhKT9hLmNoZWNrZWQ/XCJ0cnVlXCI6XCJmYWxzZVwiOmEudmFsdWUpO2E9ZDtyZXR1cm4gYSE9PWM/KGIuc2V0VmFsdWUoYSksITApOiExfWZ1bmN0aW9uIFhhKGEpe2E9YXx8KFwidW5kZWZpbmVkXCIhPT10eXBlb2YgZG9jdW1lbnQ/ZG9jdW1lbnQ6dm9pZCAwKTtpZihcInVuZGVmaW5lZFwiPT09dHlwZW9mIGEpcmV0dXJuIG51bGw7dHJ5e3JldHVybiBhLmFjdGl2ZUVsZW1lbnR8fGEuYm9keX1jYXRjaChiKXtyZXR1cm4gYS5ib2R5fX1cbmZ1bmN0aW9uIFlhKGEsYil7dmFyIGM9Yi5jaGVja2VkO3JldHVybiBBKHt9LGIse2RlZmF1bHRDaGVja2VkOnZvaWQgMCxkZWZhdWx0VmFsdWU6dm9pZCAwLHZhbHVlOnZvaWQgMCxjaGVja2VkOm51bGwhPWM/YzphLl93cmFwcGVyU3RhdGUuaW5pdGlhbENoZWNrZWR9KX1mdW5jdGlvbiBaYShhLGIpe3ZhciBjPW51bGw9PWIuZGVmYXVsdFZhbHVlP1wiXCI6Yi5kZWZhdWx0VmFsdWUsZD1udWxsIT1iLmNoZWNrZWQ/Yi5jaGVja2VkOmIuZGVmYXVsdENoZWNrZWQ7Yz1TYShudWxsIT1iLnZhbHVlP2IudmFsdWU6Yyk7YS5fd3JhcHBlclN0YXRlPXtpbml0aWFsQ2hlY2tlZDpkLGluaXRpYWxWYWx1ZTpjLGNvbnRyb2xsZWQ6XCJjaGVja2JveFwiPT09Yi50eXBlfHxcInJhZGlvXCI9PT1iLnR5cGU/bnVsbCE9Yi5jaGVja2VkOm51bGwhPWIudmFsdWV9fWZ1bmN0aW9uIGFiKGEsYil7Yj1iLmNoZWNrZWQ7bnVsbCE9YiYmdGEoYSxcImNoZWNrZWRcIixiLCExKX1cbmZ1bmN0aW9uIGJiKGEsYil7YWIoYSxiKTt2YXIgYz1TYShiLnZhbHVlKSxkPWIudHlwZTtpZihudWxsIT1jKWlmKFwibnVtYmVyXCI9PT1kKXtpZigwPT09YyYmXCJcIj09PWEudmFsdWV8fGEudmFsdWUhPWMpYS52YWx1ZT1cIlwiK2N9ZWxzZSBhLnZhbHVlIT09XCJcIitjJiYoYS52YWx1ZT1cIlwiK2MpO2Vsc2UgaWYoXCJzdWJtaXRcIj09PWR8fFwicmVzZXRcIj09PWQpe2EucmVtb3ZlQXR0cmlidXRlKFwidmFsdWVcIik7cmV0dXJufWIuaGFzT3duUHJvcGVydHkoXCJ2YWx1ZVwiKT9jYihhLGIudHlwZSxjKTpiLmhhc093blByb3BlcnR5KFwiZGVmYXVsdFZhbHVlXCIpJiZjYihhLGIudHlwZSxTYShiLmRlZmF1bHRWYWx1ZSkpO251bGw9PWIuY2hlY2tlZCYmbnVsbCE9Yi5kZWZhdWx0Q2hlY2tlZCYmKGEuZGVmYXVsdENoZWNrZWQ9ISFiLmRlZmF1bHRDaGVja2VkKX1cbmZ1bmN0aW9uIGRiKGEsYixjKXtpZihiLmhhc093blByb3BlcnR5KFwidmFsdWVcIil8fGIuaGFzT3duUHJvcGVydHkoXCJkZWZhdWx0VmFsdWVcIikpe3ZhciBkPWIudHlwZTtpZighKFwic3VibWl0XCIhPT1kJiZcInJlc2V0XCIhPT1kfHx2b2lkIDAhPT1iLnZhbHVlJiZudWxsIT09Yi52YWx1ZSkpcmV0dXJuO2I9XCJcIithLl93cmFwcGVyU3RhdGUuaW5pdGlhbFZhbHVlO2N8fGI9PT1hLnZhbHVlfHwoYS52YWx1ZT1iKTthLmRlZmF1bHRWYWx1ZT1ifWM9YS5uYW1lO1wiXCIhPT1jJiYoYS5uYW1lPVwiXCIpO2EuZGVmYXVsdENoZWNrZWQ9ISFhLl93cmFwcGVyU3RhdGUuaW5pdGlhbENoZWNrZWQ7XCJcIiE9PWMmJihhLm5hbWU9Yyl9XG5mdW5jdGlvbiBjYihhLGIsYyl7aWYoXCJudW1iZXJcIiE9PWJ8fFhhKGEub3duZXJEb2N1bWVudCkhPT1hKW51bGw9PWM/YS5kZWZhdWx0VmFsdWU9XCJcIithLl93cmFwcGVyU3RhdGUuaW5pdGlhbFZhbHVlOmEuZGVmYXVsdFZhbHVlIT09XCJcIitjJiYoYS5kZWZhdWx0VmFsdWU9XCJcIitjKX12YXIgZWI9QXJyYXkuaXNBcnJheTtcbmZ1bmN0aW9uIGZiKGEsYixjLGQpe2E9YS5vcHRpb25zO2lmKGIpe2I9e307Zm9yKHZhciBlPTA7ZTxjLmxlbmd0aDtlKyspYltcIiRcIitjW2VdXT0hMDtmb3IoYz0wO2M8YS5sZW5ndGg7YysrKWU9Yi5oYXNPd25Qcm9wZXJ0eShcIiRcIithW2NdLnZhbHVlKSxhW2NdLnNlbGVjdGVkIT09ZSYmKGFbY10uc2VsZWN0ZWQ9ZSksZSYmZCYmKGFbY10uZGVmYXVsdFNlbGVjdGVkPSEwKX1lbHNle2M9XCJcIitTYShjKTtiPW51bGw7Zm9yKGU9MDtlPGEubGVuZ3RoO2UrKyl7aWYoYVtlXS52YWx1ZT09PWMpe2FbZV0uc2VsZWN0ZWQ9ITA7ZCYmKGFbZV0uZGVmYXVsdFNlbGVjdGVkPSEwKTtyZXR1cm59bnVsbCE9PWJ8fGFbZV0uZGlzYWJsZWR8fChiPWFbZV0pfW51bGwhPT1iJiYoYi5zZWxlY3RlZD0hMCl9fVxuZnVuY3Rpb24gZ2IoYSxiKXtpZihudWxsIT1iLmRhbmdlcm91c2x5U2V0SW5uZXJIVE1MKXRocm93IEVycm9yKHAoOTEpKTtyZXR1cm4gQSh7fSxiLHt2YWx1ZTp2b2lkIDAsZGVmYXVsdFZhbHVlOnZvaWQgMCxjaGlsZHJlbjpcIlwiK2EuX3dyYXBwZXJTdGF0ZS5pbml0aWFsVmFsdWV9KX1mdW5jdGlvbiBoYihhLGIpe3ZhciBjPWIudmFsdWU7aWYobnVsbD09Yyl7Yz1iLmNoaWxkcmVuO2I9Yi5kZWZhdWx0VmFsdWU7aWYobnVsbCE9Yyl7aWYobnVsbCE9Yil0aHJvdyBFcnJvcihwKDkyKSk7aWYoZWIoYykpe2lmKDE8Yy5sZW5ndGgpdGhyb3cgRXJyb3IocCg5MykpO2M9Y1swXX1iPWN9bnVsbD09YiYmKGI9XCJcIik7Yz1ifWEuX3dyYXBwZXJTdGF0ZT17aW5pdGlhbFZhbHVlOlNhKGMpfX1cbmZ1bmN0aW9uIGliKGEsYil7dmFyIGM9U2EoYi52YWx1ZSksZD1TYShiLmRlZmF1bHRWYWx1ZSk7bnVsbCE9YyYmKGM9XCJcIitjLGMhPT1hLnZhbHVlJiYoYS52YWx1ZT1jKSxudWxsPT1iLmRlZmF1bHRWYWx1ZSYmYS5kZWZhdWx0VmFsdWUhPT1jJiYoYS5kZWZhdWx0VmFsdWU9YykpO251bGwhPWQmJihhLmRlZmF1bHRWYWx1ZT1cIlwiK2QpfWZ1bmN0aW9uIGpiKGEpe3ZhciBiPWEudGV4dENvbnRlbnQ7Yj09PWEuX3dyYXBwZXJTdGF0ZS5pbml0aWFsVmFsdWUmJlwiXCIhPT1iJiZudWxsIT09YiYmKGEudmFsdWU9Yil9ZnVuY3Rpb24ga2IoYSl7c3dpdGNoKGEpe2Nhc2UgXCJzdmdcIjpyZXR1cm5cImh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnXCI7Y2FzZSBcIm1hdGhcIjpyZXR1cm5cImh0dHA6Ly93d3cudzMub3JnLzE5OTgvTWF0aC9NYXRoTUxcIjtkZWZhdWx0OnJldHVyblwiaHR0cDovL3d3dy53My5vcmcvMTk5OS94aHRtbFwifX1cbmZ1bmN0aW9uIGxiKGEsYil7cmV0dXJuIG51bGw9PWF8fFwiaHR0cDovL3d3dy53My5vcmcvMTk5OS94aHRtbFwiPT09YT9rYihiKTpcImh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnXCI9PT1hJiZcImZvcmVpZ25PYmplY3RcIj09PWI/XCJodHRwOi8vd3d3LnczLm9yZy8xOTk5L3hodG1sXCI6YX1cbnZhciBtYixuYj1mdW5jdGlvbihhKXtyZXR1cm5cInVuZGVmaW5lZFwiIT09dHlwZW9mIE1TQXBwJiZNU0FwcC5leGVjVW5zYWZlTG9jYWxGdW5jdGlvbj9mdW5jdGlvbihiLGMsZCxlKXtNU0FwcC5leGVjVW5zYWZlTG9jYWxGdW5jdGlvbihmdW5jdGlvbigpe3JldHVybiBhKGIsYyxkLGUpfSl9OmF9KGZ1bmN0aW9uKGEsYil7aWYoXCJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2Z1wiIT09YS5uYW1lc3BhY2VVUkl8fFwiaW5uZXJIVE1MXCJpbiBhKWEuaW5uZXJIVE1MPWI7ZWxzZXttYj1tYnx8ZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImRpdlwiKTttYi5pbm5lckhUTUw9XCI8c3ZnPlwiK2IudmFsdWVPZigpLnRvU3RyaW5nKCkrXCI8L3N2Zz5cIjtmb3IoYj1tYi5maXJzdENoaWxkO2EuZmlyc3RDaGlsZDspYS5yZW1vdmVDaGlsZChhLmZpcnN0Q2hpbGQpO2Zvcig7Yi5maXJzdENoaWxkOylhLmFwcGVuZENoaWxkKGIuZmlyc3RDaGlsZCl9fSk7XG5mdW5jdGlvbiBvYihhLGIpe2lmKGIpe3ZhciBjPWEuZmlyc3RDaGlsZDtpZihjJiZjPT09YS5sYXN0Q2hpbGQmJjM9PT1jLm5vZGVUeXBlKXtjLm5vZGVWYWx1ZT1iO3JldHVybn19YS50ZXh0Q29udGVudD1ifVxudmFyIHBiPXthbmltYXRpb25JdGVyYXRpb25Db3VudDohMCxhc3BlY3RSYXRpbzohMCxib3JkZXJJbWFnZU91dHNldDohMCxib3JkZXJJbWFnZVNsaWNlOiEwLGJvcmRlckltYWdlV2lkdGg6ITAsYm94RmxleDohMCxib3hGbGV4R3JvdXA6ITAsYm94T3JkaW5hbEdyb3VwOiEwLGNvbHVtbkNvdW50OiEwLGNvbHVtbnM6ITAsZmxleDohMCxmbGV4R3JvdzohMCxmbGV4UG9zaXRpdmU6ITAsZmxleFNocmluazohMCxmbGV4TmVnYXRpdmU6ITAsZmxleE9yZGVyOiEwLGdyaWRBcmVhOiEwLGdyaWRSb3c6ITAsZ3JpZFJvd0VuZDohMCxncmlkUm93U3BhbjohMCxncmlkUm93U3RhcnQ6ITAsZ3JpZENvbHVtbjohMCxncmlkQ29sdW1uRW5kOiEwLGdyaWRDb2x1bW5TcGFuOiEwLGdyaWRDb2x1bW5TdGFydDohMCxmb250V2VpZ2h0OiEwLGxpbmVDbGFtcDohMCxsaW5lSGVpZ2h0OiEwLG9wYWNpdHk6ITAsb3JkZXI6ITAsb3JwaGFuczohMCx0YWJTaXplOiEwLHdpZG93czohMCx6SW5kZXg6ITAsXG56b29tOiEwLGZpbGxPcGFjaXR5OiEwLGZsb29kT3BhY2l0eTohMCxzdG9wT3BhY2l0eTohMCxzdHJva2VEYXNoYXJyYXk6ITAsc3Ryb2tlRGFzaG9mZnNldDohMCxzdHJva2VNaXRlcmxpbWl0OiEwLHN0cm9rZU9wYWNpdHk6ITAsc3Ryb2tlV2lkdGg6ITB9LHFiPVtcIldlYmtpdFwiLFwibXNcIixcIk1velwiLFwiT1wiXTtPYmplY3Qua2V5cyhwYikuZm9yRWFjaChmdW5jdGlvbihhKXtxYi5mb3JFYWNoKGZ1bmN0aW9uKGIpe2I9YithLmNoYXJBdCgwKS50b1VwcGVyQ2FzZSgpK2Euc3Vic3RyaW5nKDEpO3BiW2JdPXBiW2FdfSl9KTtmdW5jdGlvbiByYihhLGIsYyl7cmV0dXJuIG51bGw9PWJ8fFwiYm9vbGVhblwiPT09dHlwZW9mIGJ8fFwiXCI9PT1iP1wiXCI6Y3x8XCJudW1iZXJcIiE9PXR5cGVvZiBifHwwPT09Ynx8cGIuaGFzT3duUHJvcGVydHkoYSkmJnBiW2FdPyhcIlwiK2IpLnRyaW0oKTpiK1wicHhcIn1cbmZ1bmN0aW9uIHNiKGEsYil7YT1hLnN0eWxlO2Zvcih2YXIgYyBpbiBiKWlmKGIuaGFzT3duUHJvcGVydHkoYykpe3ZhciBkPTA9PT1jLmluZGV4T2YoXCItLVwiKSxlPXJiKGMsYltjXSxkKTtcImZsb2F0XCI9PT1jJiYoYz1cImNzc0Zsb2F0XCIpO2Q/YS5zZXRQcm9wZXJ0eShjLGUpOmFbY109ZX19dmFyIHRiPUEoe21lbnVpdGVtOiEwfSx7YXJlYTohMCxiYXNlOiEwLGJyOiEwLGNvbDohMCxlbWJlZDohMCxocjohMCxpbWc6ITAsaW5wdXQ6ITAsa2V5Z2VuOiEwLGxpbms6ITAsbWV0YTohMCxwYXJhbTohMCxzb3VyY2U6ITAsdHJhY2s6ITAsd2JyOiEwfSk7XG5mdW5jdGlvbiB1YihhLGIpe2lmKGIpe2lmKHRiW2FdJiYobnVsbCE9Yi5jaGlsZHJlbnx8bnVsbCE9Yi5kYW5nZXJvdXNseVNldElubmVySFRNTCkpdGhyb3cgRXJyb3IocCgxMzcsYSkpO2lmKG51bGwhPWIuZGFuZ2Vyb3VzbHlTZXRJbm5lckhUTUwpe2lmKG51bGwhPWIuY2hpbGRyZW4pdGhyb3cgRXJyb3IocCg2MCkpO2lmKFwib2JqZWN0XCIhPT10eXBlb2YgYi5kYW5nZXJvdXNseVNldElubmVySFRNTHx8IShcIl9faHRtbFwiaW4gYi5kYW5nZXJvdXNseVNldElubmVySFRNTCkpdGhyb3cgRXJyb3IocCg2MSkpO31pZihudWxsIT1iLnN0eWxlJiZcIm9iamVjdFwiIT09dHlwZW9mIGIuc3R5bGUpdGhyb3cgRXJyb3IocCg2MikpO319XG5mdW5jdGlvbiB2YihhLGIpe2lmKC0xPT09YS5pbmRleE9mKFwiLVwiKSlyZXR1cm5cInN0cmluZ1wiPT09dHlwZW9mIGIuaXM7c3dpdGNoKGEpe2Nhc2UgXCJhbm5vdGF0aW9uLXhtbFwiOmNhc2UgXCJjb2xvci1wcm9maWxlXCI6Y2FzZSBcImZvbnQtZmFjZVwiOmNhc2UgXCJmb250LWZhY2Utc3JjXCI6Y2FzZSBcImZvbnQtZmFjZS11cmlcIjpjYXNlIFwiZm9udC1mYWNlLWZvcm1hdFwiOmNhc2UgXCJmb250LWZhY2UtbmFtZVwiOmNhc2UgXCJtaXNzaW5nLWdseXBoXCI6cmV0dXJuITE7ZGVmYXVsdDpyZXR1cm4hMH19dmFyIHdiPW51bGw7ZnVuY3Rpb24geGIoYSl7YT1hLnRhcmdldHx8YS5zcmNFbGVtZW50fHx3aW5kb3c7YS5jb3JyZXNwb25kaW5nVXNlRWxlbWVudCYmKGE9YS5jb3JyZXNwb25kaW5nVXNlRWxlbWVudCk7cmV0dXJuIDM9PT1hLm5vZGVUeXBlP2EucGFyZW50Tm9kZTphfXZhciB5Yj1udWxsLHpiPW51bGwsQWI9bnVsbDtcbmZ1bmN0aW9uIEJiKGEpe2lmKGE9Q2IoYSkpe2lmKFwiZnVuY3Rpb25cIiE9PXR5cGVvZiB5Yil0aHJvdyBFcnJvcihwKDI4MCkpO3ZhciBiPWEuc3RhdGVOb2RlO2ImJihiPURiKGIpLHliKGEuc3RhdGVOb2RlLGEudHlwZSxiKSl9fWZ1bmN0aW9uIEViKGEpe3piP0FiP0FiLnB1c2goYSk6QWI9W2FdOnpiPWF9ZnVuY3Rpb24gRmIoKXtpZih6Yil7dmFyIGE9emIsYj1BYjtBYj16Yj1udWxsO0JiKGEpO2lmKGIpZm9yKGE9MDthPGIubGVuZ3RoO2ErKylCYihiW2FdKX19ZnVuY3Rpb24gR2IoYSxiKXtyZXR1cm4gYShiKX1mdW5jdGlvbiBIYigpe312YXIgSWI9ITE7ZnVuY3Rpb24gSmIoYSxiLGMpe2lmKEliKXJldHVybiBhKGIsYyk7SWI9ITA7dHJ5e3JldHVybiBHYihhLGIsYyl9ZmluYWxseXtpZihJYj0hMSxudWxsIT09emJ8fG51bGwhPT1BYilIYigpLEZiKCl9fVxuZnVuY3Rpb24gS2IoYSxiKXt2YXIgYz1hLnN0YXRlTm9kZTtpZihudWxsPT09YylyZXR1cm4gbnVsbDt2YXIgZD1EYihjKTtpZihudWxsPT09ZClyZXR1cm4gbnVsbDtjPWRbYl07YTpzd2l0Y2goYil7Y2FzZSBcIm9uQ2xpY2tcIjpjYXNlIFwib25DbGlja0NhcHR1cmVcIjpjYXNlIFwib25Eb3VibGVDbGlja1wiOmNhc2UgXCJvbkRvdWJsZUNsaWNrQ2FwdHVyZVwiOmNhc2UgXCJvbk1vdXNlRG93blwiOmNhc2UgXCJvbk1vdXNlRG93bkNhcHR1cmVcIjpjYXNlIFwib25Nb3VzZU1vdmVcIjpjYXNlIFwib25Nb3VzZU1vdmVDYXB0dXJlXCI6Y2FzZSBcIm9uTW91c2VVcFwiOmNhc2UgXCJvbk1vdXNlVXBDYXB0dXJlXCI6Y2FzZSBcIm9uTW91c2VFbnRlclwiOihkPSFkLmRpc2FibGVkKXx8KGE9YS50eXBlLGQ9IShcImJ1dHRvblwiPT09YXx8XCJpbnB1dFwiPT09YXx8XCJzZWxlY3RcIj09PWF8fFwidGV4dGFyZWFcIj09PWEpKTthPSFkO2JyZWFrIGE7ZGVmYXVsdDphPSExfWlmKGEpcmV0dXJuIG51bGw7aWYoYyYmXCJmdW5jdGlvblwiIT09XG50eXBlb2YgYyl0aHJvdyBFcnJvcihwKDIzMSxiLHR5cGVvZiBjKSk7cmV0dXJuIGN9dmFyIExiPSExO2lmKGlhKXRyeXt2YXIgTWI9e307T2JqZWN0LmRlZmluZVByb3BlcnR5KE1iLFwicGFzc2l2ZVwiLHtnZXQ6ZnVuY3Rpb24oKXtMYj0hMH19KTt3aW5kb3cuYWRkRXZlbnRMaXN0ZW5lcihcInRlc3RcIixNYixNYik7d2luZG93LnJlbW92ZUV2ZW50TGlzdGVuZXIoXCJ0ZXN0XCIsTWIsTWIpfWNhdGNoKGEpe0xiPSExfWZ1bmN0aW9uIE5iKGEsYixjLGQsZSxmLGcsaCxrKXt2YXIgbD1BcnJheS5wcm90b3R5cGUuc2xpY2UuY2FsbChhcmd1bWVudHMsMyk7dHJ5e2IuYXBwbHkoYyxsKX1jYXRjaChtKXt0aGlzLm9uRXJyb3IobSl9fXZhciBPYj0hMSxQYj1udWxsLFFiPSExLFJiPW51bGwsU2I9e29uRXJyb3I6ZnVuY3Rpb24oYSl7T2I9ITA7UGI9YX19O2Z1bmN0aW9uIFRiKGEsYixjLGQsZSxmLGcsaCxrKXtPYj0hMTtQYj1udWxsO05iLmFwcGx5KFNiLGFyZ3VtZW50cyl9XG5mdW5jdGlvbiBVYihhLGIsYyxkLGUsZixnLGgsayl7VGIuYXBwbHkodGhpcyxhcmd1bWVudHMpO2lmKE9iKXtpZihPYil7dmFyIGw9UGI7T2I9ITE7UGI9bnVsbH1lbHNlIHRocm93IEVycm9yKHAoMTk4KSk7UWJ8fChRYj0hMCxSYj1sKX19ZnVuY3Rpb24gVmIoYSl7dmFyIGI9YSxjPWE7aWYoYS5hbHRlcm5hdGUpZm9yKDtiLnJldHVybjspYj1iLnJldHVybjtlbHNle2E9YjtkbyBiPWEsMCE9PShiLmZsYWdzJjQwOTgpJiYoYz1iLnJldHVybiksYT1iLnJldHVybjt3aGlsZShhKX1yZXR1cm4gMz09PWIudGFnP2M6bnVsbH1mdW5jdGlvbiBXYihhKXtpZigxMz09PWEudGFnKXt2YXIgYj1hLm1lbW9pemVkU3RhdGU7bnVsbD09PWImJihhPWEuYWx0ZXJuYXRlLG51bGwhPT1hJiYoYj1hLm1lbW9pemVkU3RhdGUpKTtpZihudWxsIT09YilyZXR1cm4gYi5kZWh5ZHJhdGVkfXJldHVybiBudWxsfWZ1bmN0aW9uIFhiKGEpe2lmKFZiKGEpIT09YSl0aHJvdyBFcnJvcihwKDE4OCkpO31cbmZ1bmN0aW9uIFliKGEpe3ZhciBiPWEuYWx0ZXJuYXRlO2lmKCFiKXtiPVZiKGEpO2lmKG51bGw9PT1iKXRocm93IEVycm9yKHAoMTg4KSk7cmV0dXJuIGIhPT1hP251bGw6YX1mb3IodmFyIGM9YSxkPWI7Oyl7dmFyIGU9Yy5yZXR1cm47aWYobnVsbD09PWUpYnJlYWs7dmFyIGY9ZS5hbHRlcm5hdGU7aWYobnVsbD09PWYpe2Q9ZS5yZXR1cm47aWYobnVsbCE9PWQpe2M9ZDtjb250aW51ZX1icmVha31pZihlLmNoaWxkPT09Zi5jaGlsZCl7Zm9yKGY9ZS5jaGlsZDtmOyl7aWYoZj09PWMpcmV0dXJuIFhiKGUpLGE7aWYoZj09PWQpcmV0dXJuIFhiKGUpLGI7Zj1mLnNpYmxpbmd9dGhyb3cgRXJyb3IocCgxODgpKTt9aWYoYy5yZXR1cm4hPT1kLnJldHVybiljPWUsZD1mO2Vsc2V7Zm9yKHZhciBnPSExLGg9ZS5jaGlsZDtoOyl7aWYoaD09PWMpe2c9ITA7Yz1lO2Q9ZjticmVha31pZihoPT09ZCl7Zz0hMDtkPWU7Yz1mO2JyZWFrfWg9aC5zaWJsaW5nfWlmKCFnKXtmb3IoaD1mLmNoaWxkO2g7KXtpZihoPT09XG5jKXtnPSEwO2M9ZjtkPWU7YnJlYWt9aWYoaD09PWQpe2c9ITA7ZD1mO2M9ZTticmVha31oPWguc2libGluZ31pZighZyl0aHJvdyBFcnJvcihwKDE4OSkpO319aWYoYy5hbHRlcm5hdGUhPT1kKXRocm93IEVycm9yKHAoMTkwKSk7fWlmKDMhPT1jLnRhZyl0aHJvdyBFcnJvcihwKDE4OCkpO3JldHVybiBjLnN0YXRlTm9kZS5jdXJyZW50PT09Yz9hOmJ9ZnVuY3Rpb24gWmIoYSl7YT1ZYihhKTtyZXR1cm4gbnVsbCE9PWE/JGIoYSk6bnVsbH1mdW5jdGlvbiAkYihhKXtpZig1PT09YS50YWd8fDY9PT1hLnRhZylyZXR1cm4gYTtmb3IoYT1hLmNoaWxkO251bGwhPT1hOyl7dmFyIGI9JGIoYSk7aWYobnVsbCE9PWIpcmV0dXJuIGI7YT1hLnNpYmxpbmd9cmV0dXJuIG51bGx9XG52YXIgYWM9Y2EudW5zdGFibGVfc2NoZWR1bGVDYWxsYmFjayxiYz1jYS51bnN0YWJsZV9jYW5jZWxDYWxsYmFjayxjYz1jYS51bnN0YWJsZV9zaG91bGRZaWVsZCxkYz1jYS51bnN0YWJsZV9yZXF1ZXN0UGFpbnQsQj1jYS51bnN0YWJsZV9ub3csZWM9Y2EudW5zdGFibGVfZ2V0Q3VycmVudFByaW9yaXR5TGV2ZWwsZmM9Y2EudW5zdGFibGVfSW1tZWRpYXRlUHJpb3JpdHksZ2M9Y2EudW5zdGFibGVfVXNlckJsb2NraW5nUHJpb3JpdHksaGM9Y2EudW5zdGFibGVfTm9ybWFsUHJpb3JpdHksaWM9Y2EudW5zdGFibGVfTG93UHJpb3JpdHksamM9Y2EudW5zdGFibGVfSWRsZVByaW9yaXR5LGtjPW51bGwsbGM9bnVsbDtmdW5jdGlvbiBtYyhhKXtpZihsYyYmXCJmdW5jdGlvblwiPT09dHlwZW9mIGxjLm9uQ29tbWl0RmliZXJSb290KXRyeXtsYy5vbkNvbW1pdEZpYmVyUm9vdChrYyxhLHZvaWQgMCwxMjg9PT0oYS5jdXJyZW50LmZsYWdzJjEyOCkpfWNhdGNoKGIpe319XG52YXIgb2M9TWF0aC5jbHozMj9NYXRoLmNsejMyOm5jLHBjPU1hdGgubG9nLHFjPU1hdGguTE4yO2Z1bmN0aW9uIG5jKGEpe2E+Pj49MDtyZXR1cm4gMD09PWE/MzI6MzEtKHBjKGEpL3FjfDApfDB9dmFyIHJjPTY0LHNjPTQxOTQzMDQ7XG5mdW5jdGlvbiB0YyhhKXtzd2l0Y2goYSYtYSl7Y2FzZSAxOnJldHVybiAxO2Nhc2UgMjpyZXR1cm4gMjtjYXNlIDQ6cmV0dXJuIDQ7Y2FzZSA4OnJldHVybiA4O2Nhc2UgMTY6cmV0dXJuIDE2O2Nhc2UgMzI6cmV0dXJuIDMyO2Nhc2UgNjQ6Y2FzZSAxMjg6Y2FzZSAyNTY6Y2FzZSA1MTI6Y2FzZSAxMDI0OmNhc2UgMjA0ODpjYXNlIDQwOTY6Y2FzZSA4MTkyOmNhc2UgMTYzODQ6Y2FzZSAzMjc2ODpjYXNlIDY1NTM2OmNhc2UgMTMxMDcyOmNhc2UgMjYyMTQ0OmNhc2UgNTI0Mjg4OmNhc2UgMTA0ODU3NjpjYXNlIDIwOTcxNTI6cmV0dXJuIGEmNDE5NDI0MDtjYXNlIDQxOTQzMDQ6Y2FzZSA4Mzg4NjA4OmNhc2UgMTY3NzcyMTY6Y2FzZSAzMzU1NDQzMjpjYXNlIDY3MTA4ODY0OnJldHVybiBhJjEzMDAyMzQyNDtjYXNlIDEzNDIxNzcyODpyZXR1cm4gMTM0MjE3NzI4O2Nhc2UgMjY4NDM1NDU2OnJldHVybiAyNjg0MzU0NTY7Y2FzZSA1MzY4NzA5MTI6cmV0dXJuIDUzNjg3MDkxMjtjYXNlIDEwNzM3NDE4MjQ6cmV0dXJuIDEwNzM3NDE4MjQ7XG5kZWZhdWx0OnJldHVybiBhfX1mdW5jdGlvbiB1YyhhLGIpe3ZhciBjPWEucGVuZGluZ0xhbmVzO2lmKDA9PT1jKXJldHVybiAwO3ZhciBkPTAsZT1hLnN1c3BlbmRlZExhbmVzLGY9YS5waW5nZWRMYW5lcyxnPWMmMjY4NDM1NDU1O2lmKDAhPT1nKXt2YXIgaD1nJn5lOzAhPT1oP2Q9dGMoaCk6KGYmPWcsMCE9PWYmJihkPXRjKGYpKSl9ZWxzZSBnPWMmfmUsMCE9PWc/ZD10YyhnKTowIT09ZiYmKGQ9dGMoZikpO2lmKDA9PT1kKXJldHVybiAwO2lmKDAhPT1iJiZiIT09ZCYmMD09PShiJmUpJiYoZT1kJi1kLGY9YiYtYixlPj1mfHwxNj09PWUmJjAhPT0oZiY0MTk0MjQwKSkpcmV0dXJuIGI7MCE9PShkJjQpJiYoZHw9YyYxNik7Yj1hLmVudGFuZ2xlZExhbmVzO2lmKDAhPT1iKWZvcihhPWEuZW50YW5nbGVtZW50cyxiJj1kOzA8YjspYz0zMS1vYyhiKSxlPTE8PGMsZHw9YVtjXSxiJj1+ZTtyZXR1cm4gZH1cbmZ1bmN0aW9uIHZjKGEsYil7c3dpdGNoKGEpe2Nhc2UgMTpjYXNlIDI6Y2FzZSA0OnJldHVybiBiKzI1MDtjYXNlIDg6Y2FzZSAxNjpjYXNlIDMyOmNhc2UgNjQ6Y2FzZSAxMjg6Y2FzZSAyNTY6Y2FzZSA1MTI6Y2FzZSAxMDI0OmNhc2UgMjA0ODpjYXNlIDQwOTY6Y2FzZSA4MTkyOmNhc2UgMTYzODQ6Y2FzZSAzMjc2ODpjYXNlIDY1NTM2OmNhc2UgMTMxMDcyOmNhc2UgMjYyMTQ0OmNhc2UgNTI0Mjg4OmNhc2UgMTA0ODU3NjpjYXNlIDIwOTcxNTI6cmV0dXJuIGIrNUUzO2Nhc2UgNDE5NDMwNDpjYXNlIDgzODg2MDg6Y2FzZSAxNjc3NzIxNjpjYXNlIDMzNTU0NDMyOmNhc2UgNjcxMDg4NjQ6cmV0dXJuLTE7Y2FzZSAxMzQyMTc3Mjg6Y2FzZSAyNjg0MzU0NTY6Y2FzZSA1MzY4NzA5MTI6Y2FzZSAxMDczNzQxODI0OnJldHVybi0xO2RlZmF1bHQ6cmV0dXJuLTF9fVxuZnVuY3Rpb24gd2MoYSxiKXtmb3IodmFyIGM9YS5zdXNwZW5kZWRMYW5lcyxkPWEucGluZ2VkTGFuZXMsZT1hLmV4cGlyYXRpb25UaW1lcyxmPWEucGVuZGluZ0xhbmVzOzA8Zjspe3ZhciBnPTMxLW9jKGYpLGg9MTw8ZyxrPWVbZ107aWYoLTE9PT1rKXtpZigwPT09KGgmYyl8fDAhPT0oaCZkKSllW2ddPXZjKGgsYil9ZWxzZSBrPD1iJiYoYS5leHBpcmVkTGFuZXN8PWgpO2YmPX5ofX1mdW5jdGlvbiB4YyhhKXthPWEucGVuZGluZ0xhbmVzJi0xMDczNzQxODI1O3JldHVybiAwIT09YT9hOmEmMTA3Mzc0MTgyND8xMDczNzQxODI0OjB9ZnVuY3Rpb24geWMoKXt2YXIgYT1yYztyYzw8PTE7MD09PShyYyY0MTk0MjQwKSYmKHJjPTY0KTtyZXR1cm4gYX1mdW5jdGlvbiB6YyhhKXtmb3IodmFyIGI9W10sYz0wOzMxPmM7YysrKWIucHVzaChhKTtyZXR1cm4gYn1cbmZ1bmN0aW9uIEFjKGEsYixjKXthLnBlbmRpbmdMYW5lc3w9Yjs1MzY4NzA5MTIhPT1iJiYoYS5zdXNwZW5kZWRMYW5lcz0wLGEucGluZ2VkTGFuZXM9MCk7YT1hLmV2ZW50VGltZXM7Yj0zMS1vYyhiKTthW2JdPWN9ZnVuY3Rpb24gQmMoYSxiKXt2YXIgYz1hLnBlbmRpbmdMYW5lcyZ+YjthLnBlbmRpbmdMYW5lcz1iO2Euc3VzcGVuZGVkTGFuZXM9MDthLnBpbmdlZExhbmVzPTA7YS5leHBpcmVkTGFuZXMmPWI7YS5tdXRhYmxlUmVhZExhbmVzJj1iO2EuZW50YW5nbGVkTGFuZXMmPWI7Yj1hLmVudGFuZ2xlbWVudHM7dmFyIGQ9YS5ldmVudFRpbWVzO2ZvcihhPWEuZXhwaXJhdGlvblRpbWVzOzA8Yzspe3ZhciBlPTMxLW9jKGMpLGY9MTw8ZTtiW2VdPTA7ZFtlXT0tMTthW2VdPS0xO2MmPX5mfX1cbmZ1bmN0aW9uIENjKGEsYil7dmFyIGM9YS5lbnRhbmdsZWRMYW5lc3w9Yjtmb3IoYT1hLmVudGFuZ2xlbWVudHM7Yzspe3ZhciBkPTMxLW9jKGMpLGU9MTw8ZDtlJmJ8YVtkXSZiJiYoYVtkXXw9Yik7YyY9fmV9fXZhciBDPTA7ZnVuY3Rpb24gRGMoYSl7YSY9LWE7cmV0dXJuIDE8YT80PGE/MCE9PShhJjI2ODQzNTQ1NSk/MTY6NTM2ODcwOTEyOjQ6MX12YXIgRWMsRmMsR2MsSGMsSWMsSmM9ITEsS2M9W10sTGM9bnVsbCxNYz1udWxsLE5jPW51bGwsT2M9bmV3IE1hcCxQYz1uZXcgTWFwLFFjPVtdLFJjPVwibW91c2Vkb3duIG1vdXNldXAgdG91Y2hjYW5jZWwgdG91Y2hlbmQgdG91Y2hzdGFydCBhdXhjbGljayBkYmxjbGljayBwb2ludGVyY2FuY2VsIHBvaW50ZXJkb3duIHBvaW50ZXJ1cCBkcmFnZW5kIGRyYWdzdGFydCBkcm9wIGNvbXBvc2l0aW9uZW5kIGNvbXBvc2l0aW9uc3RhcnQga2V5ZG93biBrZXlwcmVzcyBrZXl1cCBpbnB1dCB0ZXh0SW5wdXQgY29weSBjdXQgcGFzdGUgY2xpY2sgY2hhbmdlIGNvbnRleHRtZW51IHJlc2V0IHN1Ym1pdFwiLnNwbGl0KFwiIFwiKTtcbmZ1bmN0aW9uIFNjKGEsYil7c3dpdGNoKGEpe2Nhc2UgXCJmb2N1c2luXCI6Y2FzZSBcImZvY3Vzb3V0XCI6TGM9bnVsbDticmVhaztjYXNlIFwiZHJhZ2VudGVyXCI6Y2FzZSBcImRyYWdsZWF2ZVwiOk1jPW51bGw7YnJlYWs7Y2FzZSBcIm1vdXNlb3ZlclwiOmNhc2UgXCJtb3VzZW91dFwiOk5jPW51bGw7YnJlYWs7Y2FzZSBcInBvaW50ZXJvdmVyXCI6Y2FzZSBcInBvaW50ZXJvdXRcIjpPYy5kZWxldGUoYi5wb2ludGVySWQpO2JyZWFrO2Nhc2UgXCJnb3Rwb2ludGVyY2FwdHVyZVwiOmNhc2UgXCJsb3N0cG9pbnRlcmNhcHR1cmVcIjpQYy5kZWxldGUoYi5wb2ludGVySWQpfX1cbmZ1bmN0aW9uIFRjKGEsYixjLGQsZSxmKXtpZihudWxsPT09YXx8YS5uYXRpdmVFdmVudCE9PWYpcmV0dXJuIGE9e2Jsb2NrZWRPbjpiLGRvbUV2ZW50TmFtZTpjLGV2ZW50U3lzdGVtRmxhZ3M6ZCxuYXRpdmVFdmVudDpmLHRhcmdldENvbnRhaW5lcnM6W2VdfSxudWxsIT09YiYmKGI9Q2IoYiksbnVsbCE9PWImJkZjKGIpKSxhO2EuZXZlbnRTeXN0ZW1GbGFnc3w9ZDtiPWEudGFyZ2V0Q29udGFpbmVycztudWxsIT09ZSYmLTE9PT1iLmluZGV4T2YoZSkmJmIucHVzaChlKTtyZXR1cm4gYX1cbmZ1bmN0aW9uIFVjKGEsYixjLGQsZSl7c3dpdGNoKGIpe2Nhc2UgXCJmb2N1c2luXCI6cmV0dXJuIExjPVRjKExjLGEsYixjLGQsZSksITA7Y2FzZSBcImRyYWdlbnRlclwiOnJldHVybiBNYz1UYyhNYyxhLGIsYyxkLGUpLCEwO2Nhc2UgXCJtb3VzZW92ZXJcIjpyZXR1cm4gTmM9VGMoTmMsYSxiLGMsZCxlKSwhMDtjYXNlIFwicG9pbnRlcm92ZXJcIjp2YXIgZj1lLnBvaW50ZXJJZDtPYy5zZXQoZixUYyhPYy5nZXQoZil8fG51bGwsYSxiLGMsZCxlKSk7cmV0dXJuITA7Y2FzZSBcImdvdHBvaW50ZXJjYXB0dXJlXCI6cmV0dXJuIGY9ZS5wb2ludGVySWQsUGMuc2V0KGYsVGMoUGMuZ2V0KGYpfHxudWxsLGEsYixjLGQsZSkpLCEwfXJldHVybiExfVxuZnVuY3Rpb24gVmMoYSl7dmFyIGI9V2MoYS50YXJnZXQpO2lmKG51bGwhPT1iKXt2YXIgYz1WYihiKTtpZihudWxsIT09YylpZihiPWMudGFnLDEzPT09Yil7aWYoYj1XYihjKSxudWxsIT09Yil7YS5ibG9ja2VkT249YjtJYyhhLnByaW9yaXR5LGZ1bmN0aW9uKCl7R2MoYyl9KTtyZXR1cm59fWVsc2UgaWYoMz09PWImJmMuc3RhdGVOb2RlLmN1cnJlbnQubWVtb2l6ZWRTdGF0ZS5pc0RlaHlkcmF0ZWQpe2EuYmxvY2tlZE9uPTM9PT1jLnRhZz9jLnN0YXRlTm9kZS5jb250YWluZXJJbmZvOm51bGw7cmV0dXJufX1hLmJsb2NrZWRPbj1udWxsfVxuZnVuY3Rpb24gWGMoYSl7aWYobnVsbCE9PWEuYmxvY2tlZE9uKXJldHVybiExO2Zvcih2YXIgYj1hLnRhcmdldENvbnRhaW5lcnM7MDxiLmxlbmd0aDspe3ZhciBjPVljKGEuZG9tRXZlbnROYW1lLGEuZXZlbnRTeXN0ZW1GbGFncyxiWzBdLGEubmF0aXZlRXZlbnQpO2lmKG51bGw9PT1jKXtjPWEubmF0aXZlRXZlbnQ7dmFyIGQ9bmV3IGMuY29uc3RydWN0b3IoYy50eXBlLGMpO3diPWQ7Yy50YXJnZXQuZGlzcGF0Y2hFdmVudChkKTt3Yj1udWxsfWVsc2UgcmV0dXJuIGI9Q2IoYyksbnVsbCE9PWImJkZjKGIpLGEuYmxvY2tlZE9uPWMsITE7Yi5zaGlmdCgpfXJldHVybiEwfWZ1bmN0aW9uIFpjKGEsYixjKXtYYyhhKSYmYy5kZWxldGUoYil9ZnVuY3Rpb24gJGMoKXtKYz0hMTtudWxsIT09TGMmJlhjKExjKSYmKExjPW51bGwpO251bGwhPT1NYyYmWGMoTWMpJiYoTWM9bnVsbCk7bnVsbCE9PU5jJiZYYyhOYykmJihOYz1udWxsKTtPYy5mb3JFYWNoKFpjKTtQYy5mb3JFYWNoKFpjKX1cbmZ1bmN0aW9uIGFkKGEsYil7YS5ibG9ja2VkT249PT1iJiYoYS5ibG9ja2VkT249bnVsbCxKY3x8KEpjPSEwLGNhLnVuc3RhYmxlX3NjaGVkdWxlQ2FsbGJhY2soY2EudW5zdGFibGVfTm9ybWFsUHJpb3JpdHksJGMpKSl9XG5mdW5jdGlvbiBiZChhKXtmdW5jdGlvbiBiKGIpe3JldHVybiBhZChiLGEpfWlmKDA8S2MubGVuZ3RoKXthZChLY1swXSxhKTtmb3IodmFyIGM9MTtjPEtjLmxlbmd0aDtjKyspe3ZhciBkPUtjW2NdO2QuYmxvY2tlZE9uPT09YSYmKGQuYmxvY2tlZE9uPW51bGwpfX1udWxsIT09TGMmJmFkKExjLGEpO251bGwhPT1NYyYmYWQoTWMsYSk7bnVsbCE9PU5jJiZhZChOYyxhKTtPYy5mb3JFYWNoKGIpO1BjLmZvckVhY2goYik7Zm9yKGM9MDtjPFFjLmxlbmd0aDtjKyspZD1RY1tjXSxkLmJsb2NrZWRPbj09PWEmJihkLmJsb2NrZWRPbj1udWxsKTtmb3IoOzA8UWMubGVuZ3RoJiYoYz1RY1swXSxudWxsPT09Yy5ibG9ja2VkT24pOylWYyhjKSxudWxsPT09Yy5ibG9ja2VkT24mJlFjLnNoaWZ0KCl9dmFyIGNkPXVhLlJlYWN0Q3VycmVudEJhdGNoQ29uZmlnLGRkPSEwO1xuZnVuY3Rpb24gZWQoYSxiLGMsZCl7dmFyIGU9QyxmPWNkLnRyYW5zaXRpb247Y2QudHJhbnNpdGlvbj1udWxsO3RyeXtDPTEsZmQoYSxiLGMsZCl9ZmluYWxseXtDPWUsY2QudHJhbnNpdGlvbj1mfX1mdW5jdGlvbiBnZChhLGIsYyxkKXt2YXIgZT1DLGY9Y2QudHJhbnNpdGlvbjtjZC50cmFuc2l0aW9uPW51bGw7dHJ5e0M9NCxmZChhLGIsYyxkKX1maW5hbGx5e0M9ZSxjZC50cmFuc2l0aW9uPWZ9fVxuZnVuY3Rpb24gZmQoYSxiLGMsZCl7aWYoZGQpe3ZhciBlPVljKGEsYixjLGQpO2lmKG51bGw9PT1lKWhkKGEsYixkLGlkLGMpLFNjKGEsZCk7ZWxzZSBpZihVYyhlLGEsYixjLGQpKWQuc3RvcFByb3BhZ2F0aW9uKCk7ZWxzZSBpZihTYyhhLGQpLGImNCYmLTE8UmMuaW5kZXhPZihhKSl7Zm9yKDtudWxsIT09ZTspe3ZhciBmPUNiKGUpO251bGwhPT1mJiZFYyhmKTtmPVljKGEsYixjLGQpO251bGw9PT1mJiZoZChhLGIsZCxpZCxjKTtpZihmPT09ZSlicmVhaztlPWZ9bnVsbCE9PWUmJmQuc3RvcFByb3BhZ2F0aW9uKCl9ZWxzZSBoZChhLGIsZCxudWxsLGMpfX12YXIgaWQ9bnVsbDtcbmZ1bmN0aW9uIFljKGEsYixjLGQpe2lkPW51bGw7YT14YihkKTthPVdjKGEpO2lmKG51bGwhPT1hKWlmKGI9VmIoYSksbnVsbD09PWIpYT1udWxsO2Vsc2UgaWYoYz1iLnRhZywxMz09PWMpe2E9V2IoYik7aWYobnVsbCE9PWEpcmV0dXJuIGE7YT1udWxsfWVsc2UgaWYoMz09PWMpe2lmKGIuc3RhdGVOb2RlLmN1cnJlbnQubWVtb2l6ZWRTdGF0ZS5pc0RlaHlkcmF0ZWQpcmV0dXJuIDM9PT1iLnRhZz9iLnN0YXRlTm9kZS5jb250YWluZXJJbmZvOm51bGw7YT1udWxsfWVsc2UgYiE9PWEmJihhPW51bGwpO2lkPWE7cmV0dXJuIG51bGx9XG5mdW5jdGlvbiBqZChhKXtzd2l0Y2goYSl7Y2FzZSBcImNhbmNlbFwiOmNhc2UgXCJjbGlja1wiOmNhc2UgXCJjbG9zZVwiOmNhc2UgXCJjb250ZXh0bWVudVwiOmNhc2UgXCJjb3B5XCI6Y2FzZSBcImN1dFwiOmNhc2UgXCJhdXhjbGlja1wiOmNhc2UgXCJkYmxjbGlja1wiOmNhc2UgXCJkcmFnZW5kXCI6Y2FzZSBcImRyYWdzdGFydFwiOmNhc2UgXCJkcm9wXCI6Y2FzZSBcImZvY3VzaW5cIjpjYXNlIFwiZm9jdXNvdXRcIjpjYXNlIFwiaW5wdXRcIjpjYXNlIFwiaW52YWxpZFwiOmNhc2UgXCJrZXlkb3duXCI6Y2FzZSBcImtleXByZXNzXCI6Y2FzZSBcImtleXVwXCI6Y2FzZSBcIm1vdXNlZG93blwiOmNhc2UgXCJtb3VzZXVwXCI6Y2FzZSBcInBhc3RlXCI6Y2FzZSBcInBhdXNlXCI6Y2FzZSBcInBsYXlcIjpjYXNlIFwicG9pbnRlcmNhbmNlbFwiOmNhc2UgXCJwb2ludGVyZG93blwiOmNhc2UgXCJwb2ludGVydXBcIjpjYXNlIFwicmF0ZWNoYW5nZVwiOmNhc2UgXCJyZXNldFwiOmNhc2UgXCJyZXNpemVcIjpjYXNlIFwic2Vla2VkXCI6Y2FzZSBcInN1Ym1pdFwiOmNhc2UgXCJ0b3VjaGNhbmNlbFwiOmNhc2UgXCJ0b3VjaGVuZFwiOmNhc2UgXCJ0b3VjaHN0YXJ0XCI6Y2FzZSBcInZvbHVtZWNoYW5nZVwiOmNhc2UgXCJjaGFuZ2VcIjpjYXNlIFwic2VsZWN0aW9uY2hhbmdlXCI6Y2FzZSBcInRleHRJbnB1dFwiOmNhc2UgXCJjb21wb3NpdGlvbnN0YXJ0XCI6Y2FzZSBcImNvbXBvc2l0aW9uZW5kXCI6Y2FzZSBcImNvbXBvc2l0aW9udXBkYXRlXCI6Y2FzZSBcImJlZm9yZWJsdXJcIjpjYXNlIFwiYWZ0ZXJibHVyXCI6Y2FzZSBcImJlZm9yZWlucHV0XCI6Y2FzZSBcImJsdXJcIjpjYXNlIFwiZnVsbHNjcmVlbmNoYW5nZVwiOmNhc2UgXCJmb2N1c1wiOmNhc2UgXCJoYXNoY2hhbmdlXCI6Y2FzZSBcInBvcHN0YXRlXCI6Y2FzZSBcInNlbGVjdFwiOmNhc2UgXCJzZWxlY3RzdGFydFwiOnJldHVybiAxO2Nhc2UgXCJkcmFnXCI6Y2FzZSBcImRyYWdlbnRlclwiOmNhc2UgXCJkcmFnZXhpdFwiOmNhc2UgXCJkcmFnbGVhdmVcIjpjYXNlIFwiZHJhZ292ZXJcIjpjYXNlIFwibW91c2Vtb3ZlXCI6Y2FzZSBcIm1vdXNlb3V0XCI6Y2FzZSBcIm1vdXNlb3ZlclwiOmNhc2UgXCJwb2ludGVybW92ZVwiOmNhc2UgXCJwb2ludGVyb3V0XCI6Y2FzZSBcInBvaW50ZXJvdmVyXCI6Y2FzZSBcInNjcm9sbFwiOmNhc2UgXCJ0b2dnbGVcIjpjYXNlIFwidG91Y2htb3ZlXCI6Y2FzZSBcIndoZWVsXCI6Y2FzZSBcIm1vdXNlZW50ZXJcIjpjYXNlIFwibW91c2VsZWF2ZVwiOmNhc2UgXCJwb2ludGVyZW50ZXJcIjpjYXNlIFwicG9pbnRlcmxlYXZlXCI6cmV0dXJuIDQ7XG5jYXNlIFwibWVzc2FnZVwiOnN3aXRjaChlYygpKXtjYXNlIGZjOnJldHVybiAxO2Nhc2UgZ2M6cmV0dXJuIDQ7Y2FzZSBoYzpjYXNlIGljOnJldHVybiAxNjtjYXNlIGpjOnJldHVybiA1MzY4NzA5MTI7ZGVmYXVsdDpyZXR1cm4gMTZ9ZGVmYXVsdDpyZXR1cm4gMTZ9fXZhciBrZD1udWxsLGxkPW51bGwsbWQ9bnVsbDtmdW5jdGlvbiBuZCgpe2lmKG1kKXJldHVybiBtZDt2YXIgYSxiPWxkLGM9Yi5sZW5ndGgsZCxlPVwidmFsdWVcImluIGtkP2tkLnZhbHVlOmtkLnRleHRDb250ZW50LGY9ZS5sZW5ndGg7Zm9yKGE9MDthPGMmJmJbYV09PT1lW2FdO2ErKyk7dmFyIGc9Yy1hO2ZvcihkPTE7ZDw9ZyYmYltjLWRdPT09ZVtmLWRdO2QrKyk7cmV0dXJuIG1kPWUuc2xpY2UoYSwxPGQ/MS1kOnZvaWQgMCl9XG5mdW5jdGlvbiBvZChhKXt2YXIgYj1hLmtleUNvZGU7XCJjaGFyQ29kZVwiaW4gYT8oYT1hLmNoYXJDb2RlLDA9PT1hJiYxMz09PWImJihhPTEzKSk6YT1iOzEwPT09YSYmKGE9MTMpO3JldHVybiAzMjw9YXx8MTM9PT1hP2E6MH1mdW5jdGlvbiBwZCgpe3JldHVybiEwfWZ1bmN0aW9uIHFkKCl7cmV0dXJuITF9XG5mdW5jdGlvbiByZChhKXtmdW5jdGlvbiBiKGIsZCxlLGYsZyl7dGhpcy5fcmVhY3ROYW1lPWI7dGhpcy5fdGFyZ2V0SW5zdD1lO3RoaXMudHlwZT1kO3RoaXMubmF0aXZlRXZlbnQ9Zjt0aGlzLnRhcmdldD1nO3RoaXMuY3VycmVudFRhcmdldD1udWxsO2Zvcih2YXIgYyBpbiBhKWEuaGFzT3duUHJvcGVydHkoYykmJihiPWFbY10sdGhpc1tjXT1iP2IoZik6ZltjXSk7dGhpcy5pc0RlZmF1bHRQcmV2ZW50ZWQ9KG51bGwhPWYuZGVmYXVsdFByZXZlbnRlZD9mLmRlZmF1bHRQcmV2ZW50ZWQ6ITE9PT1mLnJldHVyblZhbHVlKT9wZDpxZDt0aGlzLmlzUHJvcGFnYXRpb25TdG9wcGVkPXFkO3JldHVybiB0aGlzfUEoYi5wcm90b3R5cGUse3ByZXZlbnREZWZhdWx0OmZ1bmN0aW9uKCl7dGhpcy5kZWZhdWx0UHJldmVudGVkPSEwO3ZhciBhPXRoaXMubmF0aXZlRXZlbnQ7YSYmKGEucHJldmVudERlZmF1bHQ/YS5wcmV2ZW50RGVmYXVsdCgpOlwidW5rbm93blwiIT09dHlwZW9mIGEucmV0dXJuVmFsdWUmJlxuKGEucmV0dXJuVmFsdWU9ITEpLHRoaXMuaXNEZWZhdWx0UHJldmVudGVkPXBkKX0sc3RvcFByb3BhZ2F0aW9uOmZ1bmN0aW9uKCl7dmFyIGE9dGhpcy5uYXRpdmVFdmVudDthJiYoYS5zdG9wUHJvcGFnYXRpb24/YS5zdG9wUHJvcGFnYXRpb24oKTpcInVua25vd25cIiE9PXR5cGVvZiBhLmNhbmNlbEJ1YmJsZSYmKGEuY2FuY2VsQnViYmxlPSEwKSx0aGlzLmlzUHJvcGFnYXRpb25TdG9wcGVkPXBkKX0scGVyc2lzdDpmdW5jdGlvbigpe30saXNQZXJzaXN0ZW50OnBkfSk7cmV0dXJuIGJ9XG52YXIgc2Q9e2V2ZW50UGhhc2U6MCxidWJibGVzOjAsY2FuY2VsYWJsZTowLHRpbWVTdGFtcDpmdW5jdGlvbihhKXtyZXR1cm4gYS50aW1lU3RhbXB8fERhdGUubm93KCl9LGRlZmF1bHRQcmV2ZW50ZWQ6MCxpc1RydXN0ZWQ6MH0sdGQ9cmQoc2QpLHVkPUEoe30sc2Qse3ZpZXc6MCxkZXRhaWw6MH0pLHZkPXJkKHVkKSx3ZCx4ZCx5ZCxBZD1BKHt9LHVkLHtzY3JlZW5YOjAsc2NyZWVuWTowLGNsaWVudFg6MCxjbGllbnRZOjAscGFnZVg6MCxwYWdlWTowLGN0cmxLZXk6MCxzaGlmdEtleTowLGFsdEtleTowLG1ldGFLZXk6MCxnZXRNb2RpZmllclN0YXRlOnpkLGJ1dHRvbjowLGJ1dHRvbnM6MCxyZWxhdGVkVGFyZ2V0OmZ1bmN0aW9uKGEpe3JldHVybiB2b2lkIDA9PT1hLnJlbGF0ZWRUYXJnZXQ/YS5mcm9tRWxlbWVudD09PWEuc3JjRWxlbWVudD9hLnRvRWxlbWVudDphLmZyb21FbGVtZW50OmEucmVsYXRlZFRhcmdldH0sbW92ZW1lbnRYOmZ1bmN0aW9uKGEpe2lmKFwibW92ZW1lbnRYXCJpblxuYSlyZXR1cm4gYS5tb3ZlbWVudFg7YSE9PXlkJiYoeWQmJlwibW91c2Vtb3ZlXCI9PT1hLnR5cGU/KHdkPWEuc2NyZWVuWC15ZC5zY3JlZW5YLHhkPWEuc2NyZWVuWS15ZC5zY3JlZW5ZKTp4ZD13ZD0wLHlkPWEpO3JldHVybiB3ZH0sbW92ZW1lbnRZOmZ1bmN0aW9uKGEpe3JldHVyblwibW92ZW1lbnRZXCJpbiBhP2EubW92ZW1lbnRZOnhkfX0pLEJkPXJkKEFkKSxDZD1BKHt9LEFkLHtkYXRhVHJhbnNmZXI6MH0pLERkPXJkKENkKSxFZD1BKHt9LHVkLHtyZWxhdGVkVGFyZ2V0OjB9KSxGZD1yZChFZCksR2Q9QSh7fSxzZCx7YW5pbWF0aW9uTmFtZTowLGVsYXBzZWRUaW1lOjAscHNldWRvRWxlbWVudDowfSksSGQ9cmQoR2QpLElkPUEoe30sc2Qse2NsaXBib2FyZERhdGE6ZnVuY3Rpb24oYSl7cmV0dXJuXCJjbGlwYm9hcmREYXRhXCJpbiBhP2EuY2xpcGJvYXJkRGF0YTp3aW5kb3cuY2xpcGJvYXJkRGF0YX19KSxKZD1yZChJZCksS2Q9QSh7fSxzZCx7ZGF0YTowfSksTGQ9cmQoS2QpLE1kPXtFc2M6XCJFc2NhcGVcIixcblNwYWNlYmFyOlwiIFwiLExlZnQ6XCJBcnJvd0xlZnRcIixVcDpcIkFycm93VXBcIixSaWdodDpcIkFycm93UmlnaHRcIixEb3duOlwiQXJyb3dEb3duXCIsRGVsOlwiRGVsZXRlXCIsV2luOlwiT1NcIixNZW51OlwiQ29udGV4dE1lbnVcIixBcHBzOlwiQ29udGV4dE1lbnVcIixTY3JvbGw6XCJTY3JvbGxMb2NrXCIsTW96UHJpbnRhYmxlS2V5OlwiVW5pZGVudGlmaWVkXCJ9LE5kPXs4OlwiQmFja3NwYWNlXCIsOTpcIlRhYlwiLDEyOlwiQ2xlYXJcIiwxMzpcIkVudGVyXCIsMTY6XCJTaGlmdFwiLDE3OlwiQ29udHJvbFwiLDE4OlwiQWx0XCIsMTk6XCJQYXVzZVwiLDIwOlwiQ2Fwc0xvY2tcIiwyNzpcIkVzY2FwZVwiLDMyOlwiIFwiLDMzOlwiUGFnZVVwXCIsMzQ6XCJQYWdlRG93blwiLDM1OlwiRW5kXCIsMzY6XCJIb21lXCIsMzc6XCJBcnJvd0xlZnRcIiwzODpcIkFycm93VXBcIiwzOTpcIkFycm93UmlnaHRcIiw0MDpcIkFycm93RG93blwiLDQ1OlwiSW5zZXJ0XCIsNDY6XCJEZWxldGVcIiwxMTI6XCJGMVwiLDExMzpcIkYyXCIsMTE0OlwiRjNcIiwxMTU6XCJGNFwiLDExNjpcIkY1XCIsMTE3OlwiRjZcIiwxMTg6XCJGN1wiLFxuMTE5OlwiRjhcIiwxMjA6XCJGOVwiLDEyMTpcIkYxMFwiLDEyMjpcIkYxMVwiLDEyMzpcIkYxMlwiLDE0NDpcIk51bUxvY2tcIiwxNDU6XCJTY3JvbGxMb2NrXCIsMjI0OlwiTWV0YVwifSxPZD17QWx0OlwiYWx0S2V5XCIsQ29udHJvbDpcImN0cmxLZXlcIixNZXRhOlwibWV0YUtleVwiLFNoaWZ0Olwic2hpZnRLZXlcIn07ZnVuY3Rpb24gUGQoYSl7dmFyIGI9dGhpcy5uYXRpdmVFdmVudDtyZXR1cm4gYi5nZXRNb2RpZmllclN0YXRlP2IuZ2V0TW9kaWZpZXJTdGF0ZShhKTooYT1PZFthXSk/ISFiW2FdOiExfWZ1bmN0aW9uIHpkKCl7cmV0dXJuIFBkfVxudmFyIFFkPUEoe30sdWQse2tleTpmdW5jdGlvbihhKXtpZihhLmtleSl7dmFyIGI9TWRbYS5rZXldfHxhLmtleTtpZihcIlVuaWRlbnRpZmllZFwiIT09YilyZXR1cm4gYn1yZXR1cm5cImtleXByZXNzXCI9PT1hLnR5cGU/KGE9b2QoYSksMTM9PT1hP1wiRW50ZXJcIjpTdHJpbmcuZnJvbUNoYXJDb2RlKGEpKTpcImtleWRvd25cIj09PWEudHlwZXx8XCJrZXl1cFwiPT09YS50eXBlP05kW2Eua2V5Q29kZV18fFwiVW5pZGVudGlmaWVkXCI6XCJcIn0sY29kZTowLGxvY2F0aW9uOjAsY3RybEtleTowLHNoaWZ0S2V5OjAsYWx0S2V5OjAsbWV0YUtleTowLHJlcGVhdDowLGxvY2FsZTowLGdldE1vZGlmaWVyU3RhdGU6emQsY2hhckNvZGU6ZnVuY3Rpb24oYSl7cmV0dXJuXCJrZXlwcmVzc1wiPT09YS50eXBlP29kKGEpOjB9LGtleUNvZGU6ZnVuY3Rpb24oYSl7cmV0dXJuXCJrZXlkb3duXCI9PT1hLnR5cGV8fFwia2V5dXBcIj09PWEudHlwZT9hLmtleUNvZGU6MH0sd2hpY2g6ZnVuY3Rpb24oYSl7cmV0dXJuXCJrZXlwcmVzc1wiPT09XG5hLnR5cGU/b2QoYSk6XCJrZXlkb3duXCI9PT1hLnR5cGV8fFwia2V5dXBcIj09PWEudHlwZT9hLmtleUNvZGU6MH19KSxSZD1yZChRZCksU2Q9QSh7fSxBZCx7cG9pbnRlcklkOjAsd2lkdGg6MCxoZWlnaHQ6MCxwcmVzc3VyZTowLHRhbmdlbnRpYWxQcmVzc3VyZTowLHRpbHRYOjAsdGlsdFk6MCx0d2lzdDowLHBvaW50ZXJUeXBlOjAsaXNQcmltYXJ5OjB9KSxUZD1yZChTZCksVWQ9QSh7fSx1ZCx7dG91Y2hlczowLHRhcmdldFRvdWNoZXM6MCxjaGFuZ2VkVG91Y2hlczowLGFsdEtleTowLG1ldGFLZXk6MCxjdHJsS2V5OjAsc2hpZnRLZXk6MCxnZXRNb2RpZmllclN0YXRlOnpkfSksVmQ9cmQoVWQpLFdkPUEoe30sc2Qse3Byb3BlcnR5TmFtZTowLGVsYXBzZWRUaW1lOjAscHNldWRvRWxlbWVudDowfSksWGQ9cmQoV2QpLFlkPUEoe30sQWQse2RlbHRhWDpmdW5jdGlvbihhKXtyZXR1cm5cImRlbHRhWFwiaW4gYT9hLmRlbHRhWDpcIndoZWVsRGVsdGFYXCJpbiBhPy1hLndoZWVsRGVsdGFYOjB9LFxuZGVsdGFZOmZ1bmN0aW9uKGEpe3JldHVyblwiZGVsdGFZXCJpbiBhP2EuZGVsdGFZOlwid2hlZWxEZWx0YVlcImluIGE/LWEud2hlZWxEZWx0YVk6XCJ3aGVlbERlbHRhXCJpbiBhPy1hLndoZWVsRGVsdGE6MH0sZGVsdGFaOjAsZGVsdGFNb2RlOjB9KSxaZD1yZChZZCksJGQ9WzksMTMsMjcsMzJdLGFlPWlhJiZcIkNvbXBvc2l0aW9uRXZlbnRcImluIHdpbmRvdyxiZT1udWxsO2lhJiZcImRvY3VtZW50TW9kZVwiaW4gZG9jdW1lbnQmJihiZT1kb2N1bWVudC5kb2N1bWVudE1vZGUpO3ZhciBjZT1pYSYmXCJUZXh0RXZlbnRcImluIHdpbmRvdyYmIWJlLGRlPWlhJiYoIWFlfHxiZSYmODxiZSYmMTE+PWJlKSxlZT1TdHJpbmcuZnJvbUNoYXJDb2RlKDMyKSxmZT0hMTtcbmZ1bmN0aW9uIGdlKGEsYil7c3dpdGNoKGEpe2Nhc2UgXCJrZXl1cFwiOnJldHVybi0xIT09JGQuaW5kZXhPZihiLmtleUNvZGUpO2Nhc2UgXCJrZXlkb3duXCI6cmV0dXJuIDIyOSE9PWIua2V5Q29kZTtjYXNlIFwia2V5cHJlc3NcIjpjYXNlIFwibW91c2Vkb3duXCI6Y2FzZSBcImZvY3Vzb3V0XCI6cmV0dXJuITA7ZGVmYXVsdDpyZXR1cm4hMX19ZnVuY3Rpb24gaGUoYSl7YT1hLmRldGFpbDtyZXR1cm5cIm9iamVjdFwiPT09dHlwZW9mIGEmJlwiZGF0YVwiaW4gYT9hLmRhdGE6bnVsbH12YXIgaWU9ITE7ZnVuY3Rpb24gamUoYSxiKXtzd2l0Y2goYSl7Y2FzZSBcImNvbXBvc2l0aW9uZW5kXCI6cmV0dXJuIGhlKGIpO2Nhc2UgXCJrZXlwcmVzc1wiOmlmKDMyIT09Yi53aGljaClyZXR1cm4gbnVsbDtmZT0hMDtyZXR1cm4gZWU7Y2FzZSBcInRleHRJbnB1dFwiOnJldHVybiBhPWIuZGF0YSxhPT09ZWUmJmZlP251bGw6YTtkZWZhdWx0OnJldHVybiBudWxsfX1cbmZ1bmN0aW9uIGtlKGEsYil7aWYoaWUpcmV0dXJuXCJjb21wb3NpdGlvbmVuZFwiPT09YXx8IWFlJiZnZShhLGIpPyhhPW5kKCksbWQ9bGQ9a2Q9bnVsbCxpZT0hMSxhKTpudWxsO3N3aXRjaChhKXtjYXNlIFwicGFzdGVcIjpyZXR1cm4gbnVsbDtjYXNlIFwia2V5cHJlc3NcIjppZighKGIuY3RybEtleXx8Yi5hbHRLZXl8fGIubWV0YUtleSl8fGIuY3RybEtleSYmYi5hbHRLZXkpe2lmKGIuY2hhciYmMTxiLmNoYXIubGVuZ3RoKXJldHVybiBiLmNoYXI7aWYoYi53aGljaClyZXR1cm4gU3RyaW5nLmZyb21DaGFyQ29kZShiLndoaWNoKX1yZXR1cm4gbnVsbDtjYXNlIFwiY29tcG9zaXRpb25lbmRcIjpyZXR1cm4gZGUmJlwia29cIiE9PWIubG9jYWxlP251bGw6Yi5kYXRhO2RlZmF1bHQ6cmV0dXJuIG51bGx9fVxudmFyIGxlPXtjb2xvcjohMCxkYXRlOiEwLGRhdGV0aW1lOiEwLFwiZGF0ZXRpbWUtbG9jYWxcIjohMCxlbWFpbDohMCxtb250aDohMCxudW1iZXI6ITAscGFzc3dvcmQ6ITAscmFuZ2U6ITAsc2VhcmNoOiEwLHRlbDohMCx0ZXh0OiEwLHRpbWU6ITAsdXJsOiEwLHdlZWs6ITB9O2Z1bmN0aW9uIG1lKGEpe3ZhciBiPWEmJmEubm9kZU5hbWUmJmEubm9kZU5hbWUudG9Mb3dlckNhc2UoKTtyZXR1cm5cImlucHV0XCI9PT1iPyEhbGVbYS50eXBlXTpcInRleHRhcmVhXCI9PT1iPyEwOiExfWZ1bmN0aW9uIG5lKGEsYixjLGQpe0ViKGQpO2I9b2UoYixcIm9uQ2hhbmdlXCIpOzA8Yi5sZW5ndGgmJihjPW5ldyB0ZChcIm9uQ2hhbmdlXCIsXCJjaGFuZ2VcIixudWxsLGMsZCksYS5wdXNoKHtldmVudDpjLGxpc3RlbmVyczpifSkpfXZhciBwZT1udWxsLHFlPW51bGw7ZnVuY3Rpb24gcmUoYSl7c2UoYSwwKX1mdW5jdGlvbiB0ZShhKXt2YXIgYj11ZShhKTtpZihXYShiKSlyZXR1cm4gYX1cbmZ1bmN0aW9uIHZlKGEsYil7aWYoXCJjaGFuZ2VcIj09PWEpcmV0dXJuIGJ9dmFyIHdlPSExO2lmKGlhKXt2YXIgeGU7aWYoaWEpe3ZhciB5ZT1cIm9uaW5wdXRcImluIGRvY3VtZW50O2lmKCF5ZSl7dmFyIHplPWRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIik7emUuc2V0QXR0cmlidXRlKFwib25pbnB1dFwiLFwicmV0dXJuO1wiKTt5ZT1cImZ1bmN0aW9uXCI9PT10eXBlb2YgemUub25pbnB1dH14ZT15ZX1lbHNlIHhlPSExO3dlPXhlJiYoIWRvY3VtZW50LmRvY3VtZW50TW9kZXx8OTxkb2N1bWVudC5kb2N1bWVudE1vZGUpfWZ1bmN0aW9uIEFlKCl7cGUmJihwZS5kZXRhY2hFdmVudChcIm9ucHJvcGVydHljaGFuZ2VcIixCZSkscWU9cGU9bnVsbCl9ZnVuY3Rpb24gQmUoYSl7aWYoXCJ2YWx1ZVwiPT09YS5wcm9wZXJ0eU5hbWUmJnRlKHFlKSl7dmFyIGI9W107bmUoYixxZSxhLHhiKGEpKTtKYihyZSxiKX19XG5mdW5jdGlvbiBDZShhLGIsYyl7XCJmb2N1c2luXCI9PT1hPyhBZSgpLHBlPWIscWU9YyxwZS5hdHRhY2hFdmVudChcIm9ucHJvcGVydHljaGFuZ2VcIixCZSkpOlwiZm9jdXNvdXRcIj09PWEmJkFlKCl9ZnVuY3Rpb24gRGUoYSl7aWYoXCJzZWxlY3Rpb25jaGFuZ2VcIj09PWF8fFwia2V5dXBcIj09PWF8fFwia2V5ZG93blwiPT09YSlyZXR1cm4gdGUocWUpfWZ1bmN0aW9uIEVlKGEsYil7aWYoXCJjbGlja1wiPT09YSlyZXR1cm4gdGUoYil9ZnVuY3Rpb24gRmUoYSxiKXtpZihcImlucHV0XCI9PT1hfHxcImNoYW5nZVwiPT09YSlyZXR1cm4gdGUoYil9ZnVuY3Rpb24gR2UoYSxiKXtyZXR1cm4gYT09PWImJigwIT09YXx8MS9hPT09MS9iKXx8YSE9PWEmJmIhPT1ifXZhciBIZT1cImZ1bmN0aW9uXCI9PT10eXBlb2YgT2JqZWN0LmlzP09iamVjdC5pczpHZTtcbmZ1bmN0aW9uIEllKGEsYil7aWYoSGUoYSxiKSlyZXR1cm4hMDtpZihcIm9iamVjdFwiIT09dHlwZW9mIGF8fG51bGw9PT1hfHxcIm9iamVjdFwiIT09dHlwZW9mIGJ8fG51bGw9PT1iKXJldHVybiExO3ZhciBjPU9iamVjdC5rZXlzKGEpLGQ9T2JqZWN0LmtleXMoYik7aWYoYy5sZW5ndGghPT1kLmxlbmd0aClyZXR1cm4hMTtmb3IoZD0wO2Q8Yy5sZW5ndGg7ZCsrKXt2YXIgZT1jW2RdO2lmKCFqYS5jYWxsKGIsZSl8fCFIZShhW2VdLGJbZV0pKXJldHVybiExfXJldHVybiEwfWZ1bmN0aW9uIEplKGEpe2Zvcig7YSYmYS5maXJzdENoaWxkOylhPWEuZmlyc3RDaGlsZDtyZXR1cm4gYX1cbmZ1bmN0aW9uIEtlKGEsYil7dmFyIGM9SmUoYSk7YT0wO2Zvcih2YXIgZDtjOyl7aWYoMz09PWMubm9kZVR5cGUpe2Q9YStjLnRleHRDb250ZW50Lmxlbmd0aDtpZihhPD1iJiZkPj1iKXJldHVybntub2RlOmMsb2Zmc2V0OmItYX07YT1kfWE6e2Zvcig7Yzspe2lmKGMubmV4dFNpYmxpbmcpe2M9Yy5uZXh0U2libGluZzticmVhayBhfWM9Yy5wYXJlbnROb2RlfWM9dm9pZCAwfWM9SmUoYyl9fWZ1bmN0aW9uIExlKGEsYil7cmV0dXJuIGEmJmI/YT09PWI/ITA6YSYmMz09PWEubm9kZVR5cGU/ITE6YiYmMz09PWIubm9kZVR5cGU/TGUoYSxiLnBhcmVudE5vZGUpOlwiY29udGFpbnNcImluIGE/YS5jb250YWlucyhiKTphLmNvbXBhcmVEb2N1bWVudFBvc2l0aW9uPyEhKGEuY29tcGFyZURvY3VtZW50UG9zaXRpb24oYikmMTYpOiExOiExfVxuZnVuY3Rpb24gTWUoKXtmb3IodmFyIGE9d2luZG93LGI9WGEoKTtiIGluc3RhbmNlb2YgYS5IVE1MSUZyYW1lRWxlbWVudDspe3RyeXt2YXIgYz1cInN0cmluZ1wiPT09dHlwZW9mIGIuY29udGVudFdpbmRvdy5sb2NhdGlvbi5ocmVmfWNhdGNoKGQpe2M9ITF9aWYoYylhPWIuY29udGVudFdpbmRvdztlbHNlIGJyZWFrO2I9WGEoYS5kb2N1bWVudCl9cmV0dXJuIGJ9ZnVuY3Rpb24gTmUoYSl7dmFyIGI9YSYmYS5ub2RlTmFtZSYmYS5ub2RlTmFtZS50b0xvd2VyQ2FzZSgpO3JldHVybiBiJiYoXCJpbnB1dFwiPT09YiYmKFwidGV4dFwiPT09YS50eXBlfHxcInNlYXJjaFwiPT09YS50eXBlfHxcInRlbFwiPT09YS50eXBlfHxcInVybFwiPT09YS50eXBlfHxcInBhc3N3b3JkXCI9PT1hLnR5cGUpfHxcInRleHRhcmVhXCI9PT1ifHxcInRydWVcIj09PWEuY29udGVudEVkaXRhYmxlKX1cbmZ1bmN0aW9uIE9lKGEpe3ZhciBiPU1lKCksYz1hLmZvY3VzZWRFbGVtLGQ9YS5zZWxlY3Rpb25SYW5nZTtpZihiIT09YyYmYyYmYy5vd25lckRvY3VtZW50JiZMZShjLm93bmVyRG9jdW1lbnQuZG9jdW1lbnRFbGVtZW50LGMpKXtpZihudWxsIT09ZCYmTmUoYykpaWYoYj1kLnN0YXJ0LGE9ZC5lbmQsdm9pZCAwPT09YSYmKGE9YiksXCJzZWxlY3Rpb25TdGFydFwiaW4gYyljLnNlbGVjdGlvblN0YXJ0PWIsYy5zZWxlY3Rpb25FbmQ9TWF0aC5taW4oYSxjLnZhbHVlLmxlbmd0aCk7ZWxzZSBpZihhPShiPWMub3duZXJEb2N1bWVudHx8ZG9jdW1lbnQpJiZiLmRlZmF1bHRWaWV3fHx3aW5kb3csYS5nZXRTZWxlY3Rpb24pe2E9YS5nZXRTZWxlY3Rpb24oKTt2YXIgZT1jLnRleHRDb250ZW50Lmxlbmd0aCxmPU1hdGgubWluKGQuc3RhcnQsZSk7ZD12b2lkIDA9PT1kLmVuZD9mOk1hdGgubWluKGQuZW5kLGUpOyFhLmV4dGVuZCYmZj5kJiYoZT1kLGQ9ZixmPWUpO2U9S2UoYyxmKTt2YXIgZz1LZShjLFxuZCk7ZSYmZyYmKDEhPT1hLnJhbmdlQ291bnR8fGEuYW5jaG9yTm9kZSE9PWUubm9kZXx8YS5hbmNob3JPZmZzZXQhPT1lLm9mZnNldHx8YS5mb2N1c05vZGUhPT1nLm5vZGV8fGEuZm9jdXNPZmZzZXQhPT1nLm9mZnNldCkmJihiPWIuY3JlYXRlUmFuZ2UoKSxiLnNldFN0YXJ0KGUubm9kZSxlLm9mZnNldCksYS5yZW1vdmVBbGxSYW5nZXMoKSxmPmQ/KGEuYWRkUmFuZ2UoYiksYS5leHRlbmQoZy5ub2RlLGcub2Zmc2V0KSk6KGIuc2V0RW5kKGcubm9kZSxnLm9mZnNldCksYS5hZGRSYW5nZShiKSkpfWI9W107Zm9yKGE9YzthPWEucGFyZW50Tm9kZTspMT09PWEubm9kZVR5cGUmJmIucHVzaCh7ZWxlbWVudDphLGxlZnQ6YS5zY3JvbGxMZWZ0LHRvcDphLnNjcm9sbFRvcH0pO1wiZnVuY3Rpb25cIj09PXR5cGVvZiBjLmZvY3VzJiZjLmZvY3VzKCk7Zm9yKGM9MDtjPGIubGVuZ3RoO2MrKylhPWJbY10sYS5lbGVtZW50LnNjcm9sbExlZnQ9YS5sZWZ0LGEuZWxlbWVudC5zY3JvbGxUb3A9YS50b3B9fVxudmFyIFBlPWlhJiZcImRvY3VtZW50TW9kZVwiaW4gZG9jdW1lbnQmJjExPj1kb2N1bWVudC5kb2N1bWVudE1vZGUsUWU9bnVsbCxSZT1udWxsLFNlPW51bGwsVGU9ITE7XG5mdW5jdGlvbiBVZShhLGIsYyl7dmFyIGQ9Yy53aW5kb3c9PT1jP2MuZG9jdW1lbnQ6OT09PWMubm9kZVR5cGU/YzpjLm93bmVyRG9jdW1lbnQ7VGV8fG51bGw9PVFlfHxRZSE9PVhhKGQpfHwoZD1RZSxcInNlbGVjdGlvblN0YXJ0XCJpbiBkJiZOZShkKT9kPXtzdGFydDpkLnNlbGVjdGlvblN0YXJ0LGVuZDpkLnNlbGVjdGlvbkVuZH06KGQ9KGQub3duZXJEb2N1bWVudCYmZC5vd25lckRvY3VtZW50LmRlZmF1bHRWaWV3fHx3aW5kb3cpLmdldFNlbGVjdGlvbigpLGQ9e2FuY2hvck5vZGU6ZC5hbmNob3JOb2RlLGFuY2hvck9mZnNldDpkLmFuY2hvck9mZnNldCxmb2N1c05vZGU6ZC5mb2N1c05vZGUsZm9jdXNPZmZzZXQ6ZC5mb2N1c09mZnNldH0pLFNlJiZJZShTZSxkKXx8KFNlPWQsZD1vZShSZSxcIm9uU2VsZWN0XCIpLDA8ZC5sZW5ndGgmJihiPW5ldyB0ZChcIm9uU2VsZWN0XCIsXCJzZWxlY3RcIixudWxsLGIsYyksYS5wdXNoKHtldmVudDpiLGxpc3RlbmVyczpkfSksYi50YXJnZXQ9UWUpKSl9XG5mdW5jdGlvbiBWZShhLGIpe3ZhciBjPXt9O2NbYS50b0xvd2VyQ2FzZSgpXT1iLnRvTG93ZXJDYXNlKCk7Y1tcIldlYmtpdFwiK2FdPVwid2Via2l0XCIrYjtjW1wiTW96XCIrYV09XCJtb3pcIitiO3JldHVybiBjfXZhciBXZT17YW5pbWF0aW9uZW5kOlZlKFwiQW5pbWF0aW9uXCIsXCJBbmltYXRpb25FbmRcIiksYW5pbWF0aW9uaXRlcmF0aW9uOlZlKFwiQW5pbWF0aW9uXCIsXCJBbmltYXRpb25JdGVyYXRpb25cIiksYW5pbWF0aW9uc3RhcnQ6VmUoXCJBbmltYXRpb25cIixcIkFuaW1hdGlvblN0YXJ0XCIpLHRyYW5zaXRpb25lbmQ6VmUoXCJUcmFuc2l0aW9uXCIsXCJUcmFuc2l0aW9uRW5kXCIpfSxYZT17fSxZZT17fTtcbmlhJiYoWWU9ZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImRpdlwiKS5zdHlsZSxcIkFuaW1hdGlvbkV2ZW50XCJpbiB3aW5kb3d8fChkZWxldGUgV2UuYW5pbWF0aW9uZW5kLmFuaW1hdGlvbixkZWxldGUgV2UuYW5pbWF0aW9uaXRlcmF0aW9uLmFuaW1hdGlvbixkZWxldGUgV2UuYW5pbWF0aW9uc3RhcnQuYW5pbWF0aW9uKSxcIlRyYW5zaXRpb25FdmVudFwiaW4gd2luZG93fHxkZWxldGUgV2UudHJhbnNpdGlvbmVuZC50cmFuc2l0aW9uKTtmdW5jdGlvbiBaZShhKXtpZihYZVthXSlyZXR1cm4gWGVbYV07aWYoIVdlW2FdKXJldHVybiBhO3ZhciBiPVdlW2FdLGM7Zm9yKGMgaW4gYilpZihiLmhhc093blByb3BlcnR5KGMpJiZjIGluIFllKXJldHVybiBYZVthXT1iW2NdO3JldHVybiBhfXZhciAkZT1aZShcImFuaW1hdGlvbmVuZFwiKSxhZj1aZShcImFuaW1hdGlvbml0ZXJhdGlvblwiKSxiZj1aZShcImFuaW1hdGlvbnN0YXJ0XCIpLGNmPVplKFwidHJhbnNpdGlvbmVuZFwiKSxkZj1uZXcgTWFwLGVmPVwiYWJvcnQgYXV4Q2xpY2sgY2FuY2VsIGNhblBsYXkgY2FuUGxheVRocm91Z2ggY2xpY2sgY2xvc2UgY29udGV4dE1lbnUgY29weSBjdXQgZHJhZyBkcmFnRW5kIGRyYWdFbnRlciBkcmFnRXhpdCBkcmFnTGVhdmUgZHJhZ092ZXIgZHJhZ1N0YXJ0IGRyb3AgZHVyYXRpb25DaGFuZ2UgZW1wdGllZCBlbmNyeXB0ZWQgZW5kZWQgZXJyb3IgZ290UG9pbnRlckNhcHR1cmUgaW5wdXQgaW52YWxpZCBrZXlEb3duIGtleVByZXNzIGtleVVwIGxvYWQgbG9hZGVkRGF0YSBsb2FkZWRNZXRhZGF0YSBsb2FkU3RhcnQgbG9zdFBvaW50ZXJDYXB0dXJlIG1vdXNlRG93biBtb3VzZU1vdmUgbW91c2VPdXQgbW91c2VPdmVyIG1vdXNlVXAgcGFzdGUgcGF1c2UgcGxheSBwbGF5aW5nIHBvaW50ZXJDYW5jZWwgcG9pbnRlckRvd24gcG9pbnRlck1vdmUgcG9pbnRlck91dCBwb2ludGVyT3ZlciBwb2ludGVyVXAgcHJvZ3Jlc3MgcmF0ZUNoYW5nZSByZXNldCByZXNpemUgc2Vla2VkIHNlZWtpbmcgc3RhbGxlZCBzdWJtaXQgc3VzcGVuZCB0aW1lVXBkYXRlIHRvdWNoQ2FuY2VsIHRvdWNoRW5kIHRvdWNoU3RhcnQgdm9sdW1lQ2hhbmdlIHNjcm9sbCB0b2dnbGUgdG91Y2hNb3ZlIHdhaXRpbmcgd2hlZWxcIi5zcGxpdChcIiBcIik7XG5mdW5jdGlvbiBmZihhLGIpe2RmLnNldChhLGIpO2ZhKGIsW2FdKX1mb3IodmFyIGdmPTA7Z2Y8ZWYubGVuZ3RoO2dmKyspe3ZhciBoZj1lZltnZl0samY9aGYudG9Mb3dlckNhc2UoKSxrZj1oZlswXS50b1VwcGVyQ2FzZSgpK2hmLnNsaWNlKDEpO2ZmKGpmLFwib25cIitrZil9ZmYoJGUsXCJvbkFuaW1hdGlvbkVuZFwiKTtmZihhZixcIm9uQW5pbWF0aW9uSXRlcmF0aW9uXCIpO2ZmKGJmLFwib25BbmltYXRpb25TdGFydFwiKTtmZihcImRibGNsaWNrXCIsXCJvbkRvdWJsZUNsaWNrXCIpO2ZmKFwiZm9jdXNpblwiLFwib25Gb2N1c1wiKTtmZihcImZvY3Vzb3V0XCIsXCJvbkJsdXJcIik7ZmYoY2YsXCJvblRyYW5zaXRpb25FbmRcIik7aGEoXCJvbk1vdXNlRW50ZXJcIixbXCJtb3VzZW91dFwiLFwibW91c2VvdmVyXCJdKTtoYShcIm9uTW91c2VMZWF2ZVwiLFtcIm1vdXNlb3V0XCIsXCJtb3VzZW92ZXJcIl0pO2hhKFwib25Qb2ludGVyRW50ZXJcIixbXCJwb2ludGVyb3V0XCIsXCJwb2ludGVyb3ZlclwiXSk7XG5oYShcIm9uUG9pbnRlckxlYXZlXCIsW1wicG9pbnRlcm91dFwiLFwicG9pbnRlcm92ZXJcIl0pO2ZhKFwib25DaGFuZ2VcIixcImNoYW5nZSBjbGljayBmb2N1c2luIGZvY3Vzb3V0IGlucHV0IGtleWRvd24ga2V5dXAgc2VsZWN0aW9uY2hhbmdlXCIuc3BsaXQoXCIgXCIpKTtmYShcIm9uU2VsZWN0XCIsXCJmb2N1c291dCBjb250ZXh0bWVudSBkcmFnZW5kIGZvY3VzaW4ga2V5ZG93biBrZXl1cCBtb3VzZWRvd24gbW91c2V1cCBzZWxlY3Rpb25jaGFuZ2VcIi5zcGxpdChcIiBcIikpO2ZhKFwib25CZWZvcmVJbnB1dFwiLFtcImNvbXBvc2l0aW9uZW5kXCIsXCJrZXlwcmVzc1wiLFwidGV4dElucHV0XCIsXCJwYXN0ZVwiXSk7ZmEoXCJvbkNvbXBvc2l0aW9uRW5kXCIsXCJjb21wb3NpdGlvbmVuZCBmb2N1c291dCBrZXlkb3duIGtleXByZXNzIGtleXVwIG1vdXNlZG93blwiLnNwbGl0KFwiIFwiKSk7ZmEoXCJvbkNvbXBvc2l0aW9uU3RhcnRcIixcImNvbXBvc2l0aW9uc3RhcnQgZm9jdXNvdXQga2V5ZG93biBrZXlwcmVzcyBrZXl1cCBtb3VzZWRvd25cIi5zcGxpdChcIiBcIikpO1xuZmEoXCJvbkNvbXBvc2l0aW9uVXBkYXRlXCIsXCJjb21wb3NpdGlvbnVwZGF0ZSBmb2N1c291dCBrZXlkb3duIGtleXByZXNzIGtleXVwIG1vdXNlZG93blwiLnNwbGl0KFwiIFwiKSk7dmFyIGxmPVwiYWJvcnQgY2FucGxheSBjYW5wbGF5dGhyb3VnaCBkdXJhdGlvbmNoYW5nZSBlbXB0aWVkIGVuY3J5cHRlZCBlbmRlZCBlcnJvciBsb2FkZWRkYXRhIGxvYWRlZG1ldGFkYXRhIGxvYWRzdGFydCBwYXVzZSBwbGF5IHBsYXlpbmcgcHJvZ3Jlc3MgcmF0ZWNoYW5nZSByZXNpemUgc2Vla2VkIHNlZWtpbmcgc3RhbGxlZCBzdXNwZW5kIHRpbWV1cGRhdGUgdm9sdW1lY2hhbmdlIHdhaXRpbmdcIi5zcGxpdChcIiBcIiksbWY9bmV3IFNldChcImNhbmNlbCBjbG9zZSBpbnZhbGlkIGxvYWQgc2Nyb2xsIHRvZ2dsZVwiLnNwbGl0KFwiIFwiKS5jb25jYXQobGYpKTtcbmZ1bmN0aW9uIG5mKGEsYixjKXt2YXIgZD1hLnR5cGV8fFwidW5rbm93bi1ldmVudFwiO2EuY3VycmVudFRhcmdldD1jO1ViKGQsYix2b2lkIDAsYSk7YS5jdXJyZW50VGFyZ2V0PW51bGx9XG5mdW5jdGlvbiBzZShhLGIpe2I9MCE9PShiJjQpO2Zvcih2YXIgYz0wO2M8YS5sZW5ndGg7YysrKXt2YXIgZD1hW2NdLGU9ZC5ldmVudDtkPWQubGlzdGVuZXJzO2E6e3ZhciBmPXZvaWQgMDtpZihiKWZvcih2YXIgZz1kLmxlbmd0aC0xOzA8PWc7Zy0tKXt2YXIgaD1kW2ddLGs9aC5pbnN0YW5jZSxsPWguY3VycmVudFRhcmdldDtoPWgubGlzdGVuZXI7aWYoayE9PWYmJmUuaXNQcm9wYWdhdGlvblN0b3BwZWQoKSlicmVhayBhO25mKGUsaCxsKTtmPWt9ZWxzZSBmb3IoZz0wO2c8ZC5sZW5ndGg7ZysrKXtoPWRbZ107az1oLmluc3RhbmNlO2w9aC5jdXJyZW50VGFyZ2V0O2g9aC5saXN0ZW5lcjtpZihrIT09ZiYmZS5pc1Byb3BhZ2F0aW9uU3RvcHBlZCgpKWJyZWFrIGE7bmYoZSxoLGwpO2Y9a319fWlmKFFiKXRocm93IGE9UmIsUWI9ITEsUmI9bnVsbCxhO31cbmZ1bmN0aW9uIEQoYSxiKXt2YXIgYz1iW29mXTt2b2lkIDA9PT1jJiYoYz1iW29mXT1uZXcgU2V0KTt2YXIgZD1hK1wiX19idWJibGVcIjtjLmhhcyhkKXx8KHBmKGIsYSwyLCExKSxjLmFkZChkKSl9ZnVuY3Rpb24gcWYoYSxiLGMpe3ZhciBkPTA7YiYmKGR8PTQpO3BmKGMsYSxkLGIpfXZhciByZj1cIl9yZWFjdExpc3RlbmluZ1wiK01hdGgucmFuZG9tKCkudG9TdHJpbmcoMzYpLnNsaWNlKDIpO2Z1bmN0aW9uIHNmKGEpe2lmKCFhW3JmXSl7YVtyZl09ITA7ZGEuZm9yRWFjaChmdW5jdGlvbihiKXtcInNlbGVjdGlvbmNoYW5nZVwiIT09YiYmKG1mLmhhcyhiKXx8cWYoYiwhMSxhKSxxZihiLCEwLGEpKX0pO3ZhciBiPTk9PT1hLm5vZGVUeXBlP2E6YS5vd25lckRvY3VtZW50O251bGw9PT1ifHxiW3JmXXx8KGJbcmZdPSEwLHFmKFwic2VsZWN0aW9uY2hhbmdlXCIsITEsYikpfX1cbmZ1bmN0aW9uIHBmKGEsYixjLGQpe3N3aXRjaChqZChiKSl7Y2FzZSAxOnZhciBlPWVkO2JyZWFrO2Nhc2UgNDplPWdkO2JyZWFrO2RlZmF1bHQ6ZT1mZH1jPWUuYmluZChudWxsLGIsYyxhKTtlPXZvaWQgMDshTGJ8fFwidG91Y2hzdGFydFwiIT09YiYmXCJ0b3VjaG1vdmVcIiE9PWImJlwid2hlZWxcIiE9PWJ8fChlPSEwKTtkP3ZvaWQgMCE9PWU/YS5hZGRFdmVudExpc3RlbmVyKGIsYyx7Y2FwdHVyZTohMCxwYXNzaXZlOmV9KTphLmFkZEV2ZW50TGlzdGVuZXIoYixjLCEwKTp2b2lkIDAhPT1lP2EuYWRkRXZlbnRMaXN0ZW5lcihiLGMse3Bhc3NpdmU6ZX0pOmEuYWRkRXZlbnRMaXN0ZW5lcihiLGMsITEpfVxuZnVuY3Rpb24gaGQoYSxiLGMsZCxlKXt2YXIgZj1kO2lmKDA9PT0oYiYxKSYmMD09PShiJjIpJiZudWxsIT09ZClhOmZvcig7Oyl7aWYobnVsbD09PWQpcmV0dXJuO3ZhciBnPWQudGFnO2lmKDM9PT1nfHw0PT09Zyl7dmFyIGg9ZC5zdGF0ZU5vZGUuY29udGFpbmVySW5mbztpZihoPT09ZXx8OD09PWgubm9kZVR5cGUmJmgucGFyZW50Tm9kZT09PWUpYnJlYWs7aWYoND09PWcpZm9yKGc9ZC5yZXR1cm47bnVsbCE9PWc7KXt2YXIgaz1nLnRhZztpZigzPT09a3x8ND09PWspaWYoaz1nLnN0YXRlTm9kZS5jb250YWluZXJJbmZvLGs9PT1lfHw4PT09ay5ub2RlVHlwZSYmay5wYXJlbnROb2RlPT09ZSlyZXR1cm47Zz1nLnJldHVybn1mb3IoO251bGwhPT1oOyl7Zz1XYyhoKTtpZihudWxsPT09ZylyZXR1cm47az1nLnRhZztpZig1PT09a3x8Nj09PWspe2Q9Zj1nO2NvbnRpbnVlIGF9aD1oLnBhcmVudE5vZGV9fWQ9ZC5yZXR1cm59SmIoZnVuY3Rpb24oKXt2YXIgZD1mLGU9eGIoYyksZz1bXTtcbmE6e3ZhciBoPWRmLmdldChhKTtpZih2b2lkIDAhPT1oKXt2YXIgaz10ZCxuPWE7c3dpdGNoKGEpe2Nhc2UgXCJrZXlwcmVzc1wiOmlmKDA9PT1vZChjKSlicmVhayBhO2Nhc2UgXCJrZXlkb3duXCI6Y2FzZSBcImtleXVwXCI6az1SZDticmVhaztjYXNlIFwiZm9jdXNpblwiOm49XCJmb2N1c1wiO2s9RmQ7YnJlYWs7Y2FzZSBcImZvY3Vzb3V0XCI6bj1cImJsdXJcIjtrPUZkO2JyZWFrO2Nhc2UgXCJiZWZvcmVibHVyXCI6Y2FzZSBcImFmdGVyYmx1clwiOms9RmQ7YnJlYWs7Y2FzZSBcImNsaWNrXCI6aWYoMj09PWMuYnV0dG9uKWJyZWFrIGE7Y2FzZSBcImF1eGNsaWNrXCI6Y2FzZSBcImRibGNsaWNrXCI6Y2FzZSBcIm1vdXNlZG93blwiOmNhc2UgXCJtb3VzZW1vdmVcIjpjYXNlIFwibW91c2V1cFwiOmNhc2UgXCJtb3VzZW91dFwiOmNhc2UgXCJtb3VzZW92ZXJcIjpjYXNlIFwiY29udGV4dG1lbnVcIjprPUJkO2JyZWFrO2Nhc2UgXCJkcmFnXCI6Y2FzZSBcImRyYWdlbmRcIjpjYXNlIFwiZHJhZ2VudGVyXCI6Y2FzZSBcImRyYWdleGl0XCI6Y2FzZSBcImRyYWdsZWF2ZVwiOmNhc2UgXCJkcmFnb3ZlclwiOmNhc2UgXCJkcmFnc3RhcnRcIjpjYXNlIFwiZHJvcFwiOms9XG5EZDticmVhaztjYXNlIFwidG91Y2hjYW5jZWxcIjpjYXNlIFwidG91Y2hlbmRcIjpjYXNlIFwidG91Y2htb3ZlXCI6Y2FzZSBcInRvdWNoc3RhcnRcIjprPVZkO2JyZWFrO2Nhc2UgJGU6Y2FzZSBhZjpjYXNlIGJmOms9SGQ7YnJlYWs7Y2FzZSBjZjprPVhkO2JyZWFrO2Nhc2UgXCJzY3JvbGxcIjprPXZkO2JyZWFrO2Nhc2UgXCJ3aGVlbFwiOms9WmQ7YnJlYWs7Y2FzZSBcImNvcHlcIjpjYXNlIFwiY3V0XCI6Y2FzZSBcInBhc3RlXCI6az1KZDticmVhaztjYXNlIFwiZ290cG9pbnRlcmNhcHR1cmVcIjpjYXNlIFwibG9zdHBvaW50ZXJjYXB0dXJlXCI6Y2FzZSBcInBvaW50ZXJjYW5jZWxcIjpjYXNlIFwicG9pbnRlcmRvd25cIjpjYXNlIFwicG9pbnRlcm1vdmVcIjpjYXNlIFwicG9pbnRlcm91dFwiOmNhc2UgXCJwb2ludGVyb3ZlclwiOmNhc2UgXCJwb2ludGVydXBcIjprPVRkfXZhciB0PTAhPT0oYiY0KSxKPSF0JiZcInNjcm9sbFwiPT09YSx4PXQ/bnVsbCE9PWg/aCtcIkNhcHR1cmVcIjpudWxsOmg7dD1bXTtmb3IodmFyIHc9ZCx1O251bGwhPT1cbnc7KXt1PXc7dmFyIEY9dS5zdGF0ZU5vZGU7NT09PXUudGFnJiZudWxsIT09RiYmKHU9RixudWxsIT09eCYmKEY9S2Iodyx4KSxudWxsIT1GJiZ0LnB1c2godGYodyxGLHUpKSkpO2lmKEopYnJlYWs7dz13LnJldHVybn0wPHQubGVuZ3RoJiYoaD1uZXcgayhoLG4sbnVsbCxjLGUpLGcucHVzaCh7ZXZlbnQ6aCxsaXN0ZW5lcnM6dH0pKX19aWYoMD09PShiJjcpKXthOntoPVwibW91c2VvdmVyXCI9PT1hfHxcInBvaW50ZXJvdmVyXCI9PT1hO2s9XCJtb3VzZW91dFwiPT09YXx8XCJwb2ludGVyb3V0XCI9PT1hO2lmKGgmJmMhPT13YiYmKG49Yy5yZWxhdGVkVGFyZ2V0fHxjLmZyb21FbGVtZW50KSYmKFdjKG4pfHxuW3VmXSkpYnJlYWsgYTtpZihrfHxoKXtoPWUud2luZG93PT09ZT9lOihoPWUub3duZXJEb2N1bWVudCk/aC5kZWZhdWx0Vmlld3x8aC5wYXJlbnRXaW5kb3c6d2luZG93O2lmKGspe2lmKG49Yy5yZWxhdGVkVGFyZ2V0fHxjLnRvRWxlbWVudCxrPWQsbj1uP1djKG4pOm51bGwsbnVsbCE9PVxubiYmKEo9VmIobiksbiE9PUp8fDUhPT1uLnRhZyYmNiE9PW4udGFnKSluPW51bGx9ZWxzZSBrPW51bGwsbj1kO2lmKGshPT1uKXt0PUJkO0Y9XCJvbk1vdXNlTGVhdmVcIjt4PVwib25Nb3VzZUVudGVyXCI7dz1cIm1vdXNlXCI7aWYoXCJwb2ludGVyb3V0XCI9PT1hfHxcInBvaW50ZXJvdmVyXCI9PT1hKXQ9VGQsRj1cIm9uUG9pbnRlckxlYXZlXCIseD1cIm9uUG9pbnRlckVudGVyXCIsdz1cInBvaW50ZXJcIjtKPW51bGw9PWs/aDp1ZShrKTt1PW51bGw9PW4/aDp1ZShuKTtoPW5ldyB0KEYsdytcImxlYXZlXCIsayxjLGUpO2gudGFyZ2V0PUo7aC5yZWxhdGVkVGFyZ2V0PXU7Rj1udWxsO1djKGUpPT09ZCYmKHQ9bmV3IHQoeCx3K1wiZW50ZXJcIixuLGMsZSksdC50YXJnZXQ9dSx0LnJlbGF0ZWRUYXJnZXQ9SixGPXQpO0o9RjtpZihrJiZuKWI6e3Q9azt4PW47dz0wO2Zvcih1PXQ7dTt1PXZmKHUpKXcrKzt1PTA7Zm9yKEY9eDtGO0Y9dmYoRikpdSsrO2Zvcig7MDx3LXU7KXQ9dmYodCksdy0tO2Zvcig7MDx1LXc7KXg9XG52Zih4KSx1LS07Zm9yKDt3LS07KXtpZih0PT09eHx8bnVsbCE9PXgmJnQ9PT14LmFsdGVybmF0ZSlicmVhayBiO3Q9dmYodCk7eD12Zih4KX10PW51bGx9ZWxzZSB0PW51bGw7bnVsbCE9PWsmJndmKGcsaCxrLHQsITEpO251bGwhPT1uJiZudWxsIT09SiYmd2YoZyxKLG4sdCwhMCl9fX1hOntoPWQ/dWUoZCk6d2luZG93O2s9aC5ub2RlTmFtZSYmaC5ub2RlTmFtZS50b0xvd2VyQ2FzZSgpO2lmKFwic2VsZWN0XCI9PT1rfHxcImlucHV0XCI9PT1rJiZcImZpbGVcIj09PWgudHlwZSl2YXIgbmE9dmU7ZWxzZSBpZihtZShoKSlpZih3ZSluYT1GZTtlbHNle25hPURlO3ZhciB4YT1DZX1lbHNlKGs9aC5ub2RlTmFtZSkmJlwiaW5wdXRcIj09PWsudG9Mb3dlckNhc2UoKSYmKFwiY2hlY2tib3hcIj09PWgudHlwZXx8XCJyYWRpb1wiPT09aC50eXBlKSYmKG5hPUVlKTtpZihuYSYmKG5hPW5hKGEsZCkpKXtuZShnLG5hLGMsZSk7YnJlYWsgYX14YSYmeGEoYSxoLGQpO1wiZm9jdXNvdXRcIj09PWEmJih4YT1oLl93cmFwcGVyU3RhdGUpJiZcbnhhLmNvbnRyb2xsZWQmJlwibnVtYmVyXCI9PT1oLnR5cGUmJmNiKGgsXCJudW1iZXJcIixoLnZhbHVlKX14YT1kP3VlKGQpOndpbmRvdztzd2l0Y2goYSl7Y2FzZSBcImZvY3VzaW5cIjppZihtZSh4YSl8fFwidHJ1ZVwiPT09eGEuY29udGVudEVkaXRhYmxlKVFlPXhhLFJlPWQsU2U9bnVsbDticmVhaztjYXNlIFwiZm9jdXNvdXRcIjpTZT1SZT1RZT1udWxsO2JyZWFrO2Nhc2UgXCJtb3VzZWRvd25cIjpUZT0hMDticmVhaztjYXNlIFwiY29udGV4dG1lbnVcIjpjYXNlIFwibW91c2V1cFwiOmNhc2UgXCJkcmFnZW5kXCI6VGU9ITE7VWUoZyxjLGUpO2JyZWFrO2Nhc2UgXCJzZWxlY3Rpb25jaGFuZ2VcIjppZihQZSlicmVhaztjYXNlIFwia2V5ZG93blwiOmNhc2UgXCJrZXl1cFwiOlVlKGcsYyxlKX12YXIgJGE7aWYoYWUpYjp7c3dpdGNoKGEpe2Nhc2UgXCJjb21wb3NpdGlvbnN0YXJ0XCI6dmFyIGJhPVwib25Db21wb3NpdGlvblN0YXJ0XCI7YnJlYWsgYjtjYXNlIFwiY29tcG9zaXRpb25lbmRcIjpiYT1cIm9uQ29tcG9zaXRpb25FbmRcIjtcbmJyZWFrIGI7Y2FzZSBcImNvbXBvc2l0aW9udXBkYXRlXCI6YmE9XCJvbkNvbXBvc2l0aW9uVXBkYXRlXCI7YnJlYWsgYn1iYT12b2lkIDB9ZWxzZSBpZT9nZShhLGMpJiYoYmE9XCJvbkNvbXBvc2l0aW9uRW5kXCIpOlwia2V5ZG93blwiPT09YSYmMjI5PT09Yy5rZXlDb2RlJiYoYmE9XCJvbkNvbXBvc2l0aW9uU3RhcnRcIik7YmEmJihkZSYmXCJrb1wiIT09Yy5sb2NhbGUmJihpZXx8XCJvbkNvbXBvc2l0aW9uU3RhcnRcIiE9PWJhP1wib25Db21wb3NpdGlvbkVuZFwiPT09YmEmJmllJiYoJGE9bmQoKSk6KGtkPWUsbGQ9XCJ2YWx1ZVwiaW4ga2Q/a2QudmFsdWU6a2QudGV4dENvbnRlbnQsaWU9ITApKSx4YT1vZShkLGJhKSwwPHhhLmxlbmd0aCYmKGJhPW5ldyBMZChiYSxhLG51bGwsYyxlKSxnLnB1c2goe2V2ZW50OmJhLGxpc3RlbmVyczp4YX0pLCRhP2JhLmRhdGE9JGE6KCRhPWhlKGMpLG51bGwhPT0kYSYmKGJhLmRhdGE9JGEpKSkpO2lmKCRhPWNlP2plKGEsYyk6a2UoYSxjKSlkPW9lKGQsXCJvbkJlZm9yZUlucHV0XCIpLFxuMDxkLmxlbmd0aCYmKGU9bmV3IExkKFwib25CZWZvcmVJbnB1dFwiLFwiYmVmb3JlaW5wdXRcIixudWxsLGMsZSksZy5wdXNoKHtldmVudDplLGxpc3RlbmVyczpkfSksZS5kYXRhPSRhKX1zZShnLGIpfSl9ZnVuY3Rpb24gdGYoYSxiLGMpe3JldHVybntpbnN0YW5jZTphLGxpc3RlbmVyOmIsY3VycmVudFRhcmdldDpjfX1mdW5jdGlvbiBvZShhLGIpe2Zvcih2YXIgYz1iK1wiQ2FwdHVyZVwiLGQ9W107bnVsbCE9PWE7KXt2YXIgZT1hLGY9ZS5zdGF0ZU5vZGU7NT09PWUudGFnJiZudWxsIT09ZiYmKGU9ZixmPUtiKGEsYyksbnVsbCE9ZiYmZC51bnNoaWZ0KHRmKGEsZixlKSksZj1LYihhLGIpLG51bGwhPWYmJmQucHVzaCh0ZihhLGYsZSkpKTthPWEucmV0dXJufXJldHVybiBkfWZ1bmN0aW9uIHZmKGEpe2lmKG51bGw9PT1hKXJldHVybiBudWxsO2RvIGE9YS5yZXR1cm47d2hpbGUoYSYmNSE9PWEudGFnKTtyZXR1cm4gYT9hOm51bGx9XG5mdW5jdGlvbiB3ZihhLGIsYyxkLGUpe2Zvcih2YXIgZj1iLl9yZWFjdE5hbWUsZz1bXTtudWxsIT09YyYmYyE9PWQ7KXt2YXIgaD1jLGs9aC5hbHRlcm5hdGUsbD1oLnN0YXRlTm9kZTtpZihudWxsIT09ayYmaz09PWQpYnJlYWs7NT09PWgudGFnJiZudWxsIT09bCYmKGg9bCxlPyhrPUtiKGMsZiksbnVsbCE9ayYmZy51bnNoaWZ0KHRmKGMsayxoKSkpOmV8fChrPUtiKGMsZiksbnVsbCE9ayYmZy5wdXNoKHRmKGMsayxoKSkpKTtjPWMucmV0dXJufTAhPT1nLmxlbmd0aCYmYS5wdXNoKHtldmVudDpiLGxpc3RlbmVyczpnfSl9dmFyIHhmPS9cXHJcXG4/L2cseWY9L1xcdTAwMDB8XFx1RkZGRC9nO2Z1bmN0aW9uIHpmKGEpe3JldHVybihcInN0cmluZ1wiPT09dHlwZW9mIGE/YTpcIlwiK2EpLnJlcGxhY2UoeGYsXCJcXG5cIikucmVwbGFjZSh5ZixcIlwiKX1mdW5jdGlvbiBBZihhLGIsYyl7Yj16ZihiKTtpZih6ZihhKSE9PWImJmMpdGhyb3cgRXJyb3IocCg0MjUpKTt9ZnVuY3Rpb24gQmYoKXt9XG52YXIgQ2Y9bnVsbCxEZj1udWxsO2Z1bmN0aW9uIEVmKGEsYil7cmV0dXJuXCJ0ZXh0YXJlYVwiPT09YXx8XCJub3NjcmlwdFwiPT09YXx8XCJzdHJpbmdcIj09PXR5cGVvZiBiLmNoaWxkcmVufHxcIm51bWJlclwiPT09dHlwZW9mIGIuY2hpbGRyZW58fFwib2JqZWN0XCI9PT10eXBlb2YgYi5kYW5nZXJvdXNseVNldElubmVySFRNTCYmbnVsbCE9PWIuZGFuZ2Vyb3VzbHlTZXRJbm5lckhUTUwmJm51bGwhPWIuZGFuZ2Vyb3VzbHlTZXRJbm5lckhUTUwuX19odG1sfVxudmFyIEZmPVwiZnVuY3Rpb25cIj09PXR5cGVvZiBzZXRUaW1lb3V0P3NldFRpbWVvdXQ6dm9pZCAwLEdmPVwiZnVuY3Rpb25cIj09PXR5cGVvZiBjbGVhclRpbWVvdXQ/Y2xlYXJUaW1lb3V0OnZvaWQgMCxIZj1cImZ1bmN0aW9uXCI9PT10eXBlb2YgUHJvbWlzZT9Qcm9taXNlOnZvaWQgMCxKZj1cImZ1bmN0aW9uXCI9PT10eXBlb2YgcXVldWVNaWNyb3Rhc2s/cXVldWVNaWNyb3Rhc2s6XCJ1bmRlZmluZWRcIiE9PXR5cGVvZiBIZj9mdW5jdGlvbihhKXtyZXR1cm4gSGYucmVzb2x2ZShudWxsKS50aGVuKGEpLmNhdGNoKElmKX06RmY7ZnVuY3Rpb24gSWYoYSl7c2V0VGltZW91dChmdW5jdGlvbigpe3Rocm93IGE7fSl9XG5mdW5jdGlvbiBLZihhLGIpe3ZhciBjPWIsZD0wO2Rve3ZhciBlPWMubmV4dFNpYmxpbmc7YS5yZW1vdmVDaGlsZChjKTtpZihlJiY4PT09ZS5ub2RlVHlwZSlpZihjPWUuZGF0YSxcIi8kXCI9PT1jKXtpZigwPT09ZCl7YS5yZW1vdmVDaGlsZChlKTtiZChiKTtyZXR1cm59ZC0tfWVsc2VcIiRcIiE9PWMmJlwiJD9cIiE9PWMmJlwiJCFcIiE9PWN8fGQrKztjPWV9d2hpbGUoYyk7YmQoYil9ZnVuY3Rpb24gTGYoYSl7Zm9yKDtudWxsIT1hO2E9YS5uZXh0U2libGluZyl7dmFyIGI9YS5ub2RlVHlwZTtpZigxPT09Ynx8Mz09PWIpYnJlYWs7aWYoOD09PWIpe2I9YS5kYXRhO2lmKFwiJFwiPT09Ynx8XCIkIVwiPT09Ynx8XCIkP1wiPT09YilicmVhaztpZihcIi8kXCI9PT1iKXJldHVybiBudWxsfX1yZXR1cm4gYX1cbmZ1bmN0aW9uIE1mKGEpe2E9YS5wcmV2aW91c1NpYmxpbmc7Zm9yKHZhciBiPTA7YTspe2lmKDg9PT1hLm5vZGVUeXBlKXt2YXIgYz1hLmRhdGE7aWYoXCIkXCI9PT1jfHxcIiQhXCI9PT1jfHxcIiQ/XCI9PT1jKXtpZigwPT09YilyZXR1cm4gYTtiLS19ZWxzZVwiLyRcIj09PWMmJmIrK31hPWEucHJldmlvdXNTaWJsaW5nfXJldHVybiBudWxsfXZhciBOZj1NYXRoLnJhbmRvbSgpLnRvU3RyaW5nKDM2KS5zbGljZSgyKSxPZj1cIl9fcmVhY3RGaWJlciRcIitOZixQZj1cIl9fcmVhY3RQcm9wcyRcIitOZix1Zj1cIl9fcmVhY3RDb250YWluZXIkXCIrTmYsb2Y9XCJfX3JlYWN0RXZlbnRzJFwiK05mLFFmPVwiX19yZWFjdExpc3RlbmVycyRcIitOZixSZj1cIl9fcmVhY3RIYW5kbGVzJFwiK05mO1xuZnVuY3Rpb24gV2MoYSl7dmFyIGI9YVtPZl07aWYoYilyZXR1cm4gYjtmb3IodmFyIGM9YS5wYXJlbnROb2RlO2M7KXtpZihiPWNbdWZdfHxjW09mXSl7Yz1iLmFsdGVybmF0ZTtpZihudWxsIT09Yi5jaGlsZHx8bnVsbCE9PWMmJm51bGwhPT1jLmNoaWxkKWZvcihhPU1mKGEpO251bGwhPT1hOyl7aWYoYz1hW09mXSlyZXR1cm4gYzthPU1mKGEpfXJldHVybiBifWE9YztjPWEucGFyZW50Tm9kZX1yZXR1cm4gbnVsbH1mdW5jdGlvbiBDYihhKXthPWFbT2ZdfHxhW3VmXTtyZXR1cm4hYXx8NSE9PWEudGFnJiY2IT09YS50YWcmJjEzIT09YS50YWcmJjMhPT1hLnRhZz9udWxsOmF9ZnVuY3Rpb24gdWUoYSl7aWYoNT09PWEudGFnfHw2PT09YS50YWcpcmV0dXJuIGEuc3RhdGVOb2RlO3Rocm93IEVycm9yKHAoMzMpKTt9ZnVuY3Rpb24gRGIoYSl7cmV0dXJuIGFbUGZdfHxudWxsfXZhciBTZj1bXSxUZj0tMTtmdW5jdGlvbiBVZihhKXtyZXR1cm57Y3VycmVudDphfX1cbmZ1bmN0aW9uIEUoYSl7MD5UZnx8KGEuY3VycmVudD1TZltUZl0sU2ZbVGZdPW51bGwsVGYtLSl9ZnVuY3Rpb24gRyhhLGIpe1RmKys7U2ZbVGZdPWEuY3VycmVudDthLmN1cnJlbnQ9Yn12YXIgVmY9e30sSD1VZihWZiksV2Y9VWYoITEpLFhmPVZmO2Z1bmN0aW9uIFlmKGEsYil7dmFyIGM9YS50eXBlLmNvbnRleHRUeXBlcztpZighYylyZXR1cm4gVmY7dmFyIGQ9YS5zdGF0ZU5vZGU7aWYoZCYmZC5fX3JlYWN0SW50ZXJuYWxNZW1vaXplZFVubWFza2VkQ2hpbGRDb250ZXh0PT09YilyZXR1cm4gZC5fX3JlYWN0SW50ZXJuYWxNZW1vaXplZE1hc2tlZENoaWxkQ29udGV4dDt2YXIgZT17fSxmO2ZvcihmIGluIGMpZVtmXT1iW2ZdO2QmJihhPWEuc3RhdGVOb2RlLGEuX19yZWFjdEludGVybmFsTWVtb2l6ZWRVbm1hc2tlZENoaWxkQ29udGV4dD1iLGEuX19yZWFjdEludGVybmFsTWVtb2l6ZWRNYXNrZWRDaGlsZENvbnRleHQ9ZSk7cmV0dXJuIGV9XG5mdW5jdGlvbiBaZihhKXthPWEuY2hpbGRDb250ZXh0VHlwZXM7cmV0dXJuIG51bGwhPT1hJiZ2b2lkIDAhPT1hfWZ1bmN0aW9uICRmKCl7RShXZik7RShIKX1mdW5jdGlvbiBhZyhhLGIsYyl7aWYoSC5jdXJyZW50IT09VmYpdGhyb3cgRXJyb3IocCgxNjgpKTtHKEgsYik7RyhXZixjKX1mdW5jdGlvbiBiZyhhLGIsYyl7dmFyIGQ9YS5zdGF0ZU5vZGU7Yj1iLmNoaWxkQ29udGV4dFR5cGVzO2lmKFwiZnVuY3Rpb25cIiE9PXR5cGVvZiBkLmdldENoaWxkQ29udGV4dClyZXR1cm4gYztkPWQuZ2V0Q2hpbGRDb250ZXh0KCk7Zm9yKHZhciBlIGluIGQpaWYoIShlIGluIGIpKXRocm93IEVycm9yKHAoMTA4LFJhKGEpfHxcIlVua25vd25cIixlKSk7cmV0dXJuIEEoe30sYyxkKX1cbmZ1bmN0aW9uIGNnKGEpe2E9KGE9YS5zdGF0ZU5vZGUpJiZhLl9fcmVhY3RJbnRlcm5hbE1lbW9pemVkTWVyZ2VkQ2hpbGRDb250ZXh0fHxWZjtYZj1ILmN1cnJlbnQ7RyhILGEpO0coV2YsV2YuY3VycmVudCk7cmV0dXJuITB9ZnVuY3Rpb24gZGcoYSxiLGMpe3ZhciBkPWEuc3RhdGVOb2RlO2lmKCFkKXRocm93IEVycm9yKHAoMTY5KSk7Yz8oYT1iZyhhLGIsWGYpLGQuX19yZWFjdEludGVybmFsTWVtb2l6ZWRNZXJnZWRDaGlsZENvbnRleHQ9YSxFKFdmKSxFKEgpLEcoSCxhKSk6RShXZik7RyhXZixjKX12YXIgZWc9bnVsbCxmZz0hMSxnZz0hMTtmdW5jdGlvbiBoZyhhKXtudWxsPT09ZWc/ZWc9W2FdOmVnLnB1c2goYSl9ZnVuY3Rpb24gaWcoYSl7Zmc9ITA7aGcoYSl9XG5mdW5jdGlvbiBqZygpe2lmKCFnZyYmbnVsbCE9PWVnKXtnZz0hMDt2YXIgYT0wLGI9Qzt0cnl7dmFyIGM9ZWc7Zm9yKEM9MTthPGMubGVuZ3RoO2ErKyl7dmFyIGQ9Y1thXTtkbyBkPWQoITApO3doaWxlKG51bGwhPT1kKX1lZz1udWxsO2ZnPSExfWNhdGNoKGUpe3Rocm93IG51bGwhPT1lZyYmKGVnPWVnLnNsaWNlKGErMSkpLGFjKGZjLGpnKSxlO31maW5hbGx5e0M9YixnZz0hMX19cmV0dXJuIG51bGx9dmFyIGtnPVtdLGxnPTAsbWc9bnVsbCxuZz0wLG9nPVtdLHBnPTAscWc9bnVsbCxyZz0xLHNnPVwiXCI7ZnVuY3Rpb24gdGcoYSxiKXtrZ1tsZysrXT1uZztrZ1tsZysrXT1tZzttZz1hO25nPWJ9XG5mdW5jdGlvbiB1ZyhhLGIsYyl7b2dbcGcrK109cmc7b2dbcGcrK109c2c7b2dbcGcrK109cWc7cWc9YTt2YXIgZD1yZzthPXNnO3ZhciBlPTMyLW9jKGQpLTE7ZCY9figxPDxlKTtjKz0xO3ZhciBmPTMyLW9jKGIpK2U7aWYoMzA8Zil7dmFyIGc9ZS1lJTU7Zj0oZCYoMTw8ZyktMSkudG9TdHJpbmcoMzIpO2Q+Pj1nO2UtPWc7cmc9MTw8MzItb2MoYikrZXxjPDxlfGQ7c2c9ZithfWVsc2Ugcmc9MTw8ZnxjPDxlfGQsc2c9YX1mdW5jdGlvbiB2ZyhhKXtudWxsIT09YS5yZXR1cm4mJih0ZyhhLDEpLHVnKGEsMSwwKSl9ZnVuY3Rpb24gd2coYSl7Zm9yKDthPT09bWc7KW1nPWtnWy0tbGddLGtnW2xnXT1udWxsLG5nPWtnWy0tbGddLGtnW2xnXT1udWxsO2Zvcig7YT09PXFnOylxZz1vZ1stLXBnXSxvZ1twZ109bnVsbCxzZz1vZ1stLXBnXSxvZ1twZ109bnVsbCxyZz1vZ1stLXBnXSxvZ1twZ109bnVsbH12YXIgeGc9bnVsbCx5Zz1udWxsLEk9ITEsemc9bnVsbDtcbmZ1bmN0aW9uIEFnKGEsYil7dmFyIGM9QmcoNSxudWxsLG51bGwsMCk7Yy5lbGVtZW50VHlwZT1cIkRFTEVURURcIjtjLnN0YXRlTm9kZT1iO2MucmV0dXJuPWE7Yj1hLmRlbGV0aW9ucztudWxsPT09Yj8oYS5kZWxldGlvbnM9W2NdLGEuZmxhZ3N8PTE2KTpiLnB1c2goYyl9XG5mdW5jdGlvbiBDZyhhLGIpe3N3aXRjaChhLnRhZyl7Y2FzZSA1OnZhciBjPWEudHlwZTtiPTEhPT1iLm5vZGVUeXBlfHxjLnRvTG93ZXJDYXNlKCkhPT1iLm5vZGVOYW1lLnRvTG93ZXJDYXNlKCk/bnVsbDpiO3JldHVybiBudWxsIT09Yj8oYS5zdGF0ZU5vZGU9Yix4Zz1hLHlnPUxmKGIuZmlyc3RDaGlsZCksITApOiExO2Nhc2UgNjpyZXR1cm4gYj1cIlwiPT09YS5wZW5kaW5nUHJvcHN8fDMhPT1iLm5vZGVUeXBlP251bGw6YixudWxsIT09Yj8oYS5zdGF0ZU5vZGU9Yix4Zz1hLHlnPW51bGwsITApOiExO2Nhc2UgMTM6cmV0dXJuIGI9OCE9PWIubm9kZVR5cGU/bnVsbDpiLG51bGwhPT1iPyhjPW51bGwhPT1xZz97aWQ6cmcsb3ZlcmZsb3c6c2d9Om51bGwsYS5tZW1vaXplZFN0YXRlPXtkZWh5ZHJhdGVkOmIsdHJlZUNvbnRleHQ6YyxyZXRyeUxhbmU6MTA3Mzc0MTgyNH0sYz1CZygxOCxudWxsLG51bGwsMCksYy5zdGF0ZU5vZGU9YixjLnJldHVybj1hLGEuY2hpbGQ9Yyx4Zz1hLHlnPVxubnVsbCwhMCk6ITE7ZGVmYXVsdDpyZXR1cm4hMX19ZnVuY3Rpb24gRGcoYSl7cmV0dXJuIDAhPT0oYS5tb2RlJjEpJiYwPT09KGEuZmxhZ3MmMTI4KX1mdW5jdGlvbiBFZyhhKXtpZihJKXt2YXIgYj15ZztpZihiKXt2YXIgYz1iO2lmKCFDZyhhLGIpKXtpZihEZyhhKSl0aHJvdyBFcnJvcihwKDQxOCkpO2I9TGYoYy5uZXh0U2libGluZyk7dmFyIGQ9eGc7YiYmQ2coYSxiKT9BZyhkLGMpOihhLmZsYWdzPWEuZmxhZ3MmLTQwOTd8MixJPSExLHhnPWEpfX1lbHNle2lmKERnKGEpKXRocm93IEVycm9yKHAoNDE4KSk7YS5mbGFncz1hLmZsYWdzJi00MDk3fDI7ST0hMTt4Zz1hfX19ZnVuY3Rpb24gRmcoYSl7Zm9yKGE9YS5yZXR1cm47bnVsbCE9PWEmJjUhPT1hLnRhZyYmMyE9PWEudGFnJiYxMyE9PWEudGFnOylhPWEucmV0dXJuO3hnPWF9XG5mdW5jdGlvbiBHZyhhKXtpZihhIT09eGcpcmV0dXJuITE7aWYoIUkpcmV0dXJuIEZnKGEpLEk9ITAsITE7dmFyIGI7KGI9MyE9PWEudGFnKSYmIShiPTUhPT1hLnRhZykmJihiPWEudHlwZSxiPVwiaGVhZFwiIT09YiYmXCJib2R5XCIhPT1iJiYhRWYoYS50eXBlLGEubWVtb2l6ZWRQcm9wcykpO2lmKGImJihiPXlnKSl7aWYoRGcoYSkpdGhyb3cgSGcoKSxFcnJvcihwKDQxOCkpO2Zvcig7YjspQWcoYSxiKSxiPUxmKGIubmV4dFNpYmxpbmcpfUZnKGEpO2lmKDEzPT09YS50YWcpe2E9YS5tZW1vaXplZFN0YXRlO2E9bnVsbCE9PWE/YS5kZWh5ZHJhdGVkOm51bGw7aWYoIWEpdGhyb3cgRXJyb3IocCgzMTcpKTthOnthPWEubmV4dFNpYmxpbmc7Zm9yKGI9MDthOyl7aWYoOD09PWEubm9kZVR5cGUpe3ZhciBjPWEuZGF0YTtpZihcIi8kXCI9PT1jKXtpZigwPT09Yil7eWc9TGYoYS5uZXh0U2libGluZyk7YnJlYWsgYX1iLS19ZWxzZVwiJFwiIT09YyYmXCIkIVwiIT09YyYmXCIkP1wiIT09Y3x8YisrfWE9YS5uZXh0U2libGluZ315Zz1cbm51bGx9fWVsc2UgeWc9eGc/TGYoYS5zdGF0ZU5vZGUubmV4dFNpYmxpbmcpOm51bGw7cmV0dXJuITB9ZnVuY3Rpb24gSGcoKXtmb3IodmFyIGE9eWc7YTspYT1MZihhLm5leHRTaWJsaW5nKX1mdW5jdGlvbiBJZygpe3lnPXhnPW51bGw7ST0hMX1mdW5jdGlvbiBKZyhhKXtudWxsPT09emc/emc9W2FdOnpnLnB1c2goYSl9dmFyIEtnPXVhLlJlYWN0Q3VycmVudEJhdGNoQ29uZmlnO2Z1bmN0aW9uIExnKGEsYil7aWYoYSYmYS5kZWZhdWx0UHJvcHMpe2I9QSh7fSxiKTthPWEuZGVmYXVsdFByb3BzO2Zvcih2YXIgYyBpbiBhKXZvaWQgMD09PWJbY10mJihiW2NdPWFbY10pO3JldHVybiBifXJldHVybiBifXZhciBNZz1VZihudWxsKSxOZz1udWxsLE9nPW51bGwsUGc9bnVsbDtmdW5jdGlvbiBRZygpe1BnPU9nPU5nPW51bGx9ZnVuY3Rpb24gUmcoYSl7dmFyIGI9TWcuY3VycmVudDtFKE1nKTthLl9jdXJyZW50VmFsdWU9Yn1cbmZ1bmN0aW9uIFNnKGEsYixjKXtmb3IoO251bGwhPT1hOyl7dmFyIGQ9YS5hbHRlcm5hdGU7KGEuY2hpbGRMYW5lcyZiKSE9PWI/KGEuY2hpbGRMYW5lc3w9YixudWxsIT09ZCYmKGQuY2hpbGRMYW5lc3w9YikpOm51bGwhPT1kJiYoZC5jaGlsZExhbmVzJmIpIT09YiYmKGQuY2hpbGRMYW5lc3w9Yik7aWYoYT09PWMpYnJlYWs7YT1hLnJldHVybn19ZnVuY3Rpb24gVGcoYSxiKXtOZz1hO1BnPU9nPW51bGw7YT1hLmRlcGVuZGVuY2llcztudWxsIT09YSYmbnVsbCE9PWEuZmlyc3RDb250ZXh0JiYoMCE9PShhLmxhbmVzJmIpJiYoVWc9ITApLGEuZmlyc3RDb250ZXh0PW51bGwpfVxuZnVuY3Rpb24gVmcoYSl7dmFyIGI9YS5fY3VycmVudFZhbHVlO2lmKFBnIT09YSlpZihhPXtjb250ZXh0OmEsbWVtb2l6ZWRWYWx1ZTpiLG5leHQ6bnVsbH0sbnVsbD09PU9nKXtpZihudWxsPT09TmcpdGhyb3cgRXJyb3IocCgzMDgpKTtPZz1hO05nLmRlcGVuZGVuY2llcz17bGFuZXM6MCxmaXJzdENvbnRleHQ6YX19ZWxzZSBPZz1PZy5uZXh0PWE7cmV0dXJuIGJ9dmFyIFdnPW51bGw7ZnVuY3Rpb24gWGcoYSl7bnVsbD09PVdnP1dnPVthXTpXZy5wdXNoKGEpfWZ1bmN0aW9uIFlnKGEsYixjLGQpe3ZhciBlPWIuaW50ZXJsZWF2ZWQ7bnVsbD09PWU/KGMubmV4dD1jLFhnKGIpKTooYy5uZXh0PWUubmV4dCxlLm5leHQ9Yyk7Yi5pbnRlcmxlYXZlZD1jO3JldHVybiBaZyhhLGQpfVxuZnVuY3Rpb24gWmcoYSxiKXthLmxhbmVzfD1iO3ZhciBjPWEuYWx0ZXJuYXRlO251bGwhPT1jJiYoYy5sYW5lc3w9Yik7Yz1hO2ZvcihhPWEucmV0dXJuO251bGwhPT1hOylhLmNoaWxkTGFuZXN8PWIsYz1hLmFsdGVybmF0ZSxudWxsIT09YyYmKGMuY2hpbGRMYW5lc3w9YiksYz1hLGE9YS5yZXR1cm47cmV0dXJuIDM9PT1jLnRhZz9jLnN0YXRlTm9kZTpudWxsfXZhciAkZz0hMTtmdW5jdGlvbiBhaChhKXthLnVwZGF0ZVF1ZXVlPXtiYXNlU3RhdGU6YS5tZW1vaXplZFN0YXRlLGZpcnN0QmFzZVVwZGF0ZTpudWxsLGxhc3RCYXNlVXBkYXRlOm51bGwsc2hhcmVkOntwZW5kaW5nOm51bGwsaW50ZXJsZWF2ZWQ6bnVsbCxsYW5lczowfSxlZmZlY3RzOm51bGx9fVxuZnVuY3Rpb24gYmgoYSxiKXthPWEudXBkYXRlUXVldWU7Yi51cGRhdGVRdWV1ZT09PWEmJihiLnVwZGF0ZVF1ZXVlPXtiYXNlU3RhdGU6YS5iYXNlU3RhdGUsZmlyc3RCYXNlVXBkYXRlOmEuZmlyc3RCYXNlVXBkYXRlLGxhc3RCYXNlVXBkYXRlOmEubGFzdEJhc2VVcGRhdGUsc2hhcmVkOmEuc2hhcmVkLGVmZmVjdHM6YS5lZmZlY3RzfSl9ZnVuY3Rpb24gY2goYSxiKXtyZXR1cm57ZXZlbnRUaW1lOmEsbGFuZTpiLHRhZzowLHBheWxvYWQ6bnVsbCxjYWxsYmFjazpudWxsLG5leHQ6bnVsbH19XG5mdW5jdGlvbiBkaChhLGIsYyl7dmFyIGQ9YS51cGRhdGVRdWV1ZTtpZihudWxsPT09ZClyZXR1cm4gbnVsbDtkPWQuc2hhcmVkO2lmKDAhPT0oSyYyKSl7dmFyIGU9ZC5wZW5kaW5nO251bGw9PT1lP2IubmV4dD1iOihiLm5leHQ9ZS5uZXh0LGUubmV4dD1iKTtkLnBlbmRpbmc9YjtyZXR1cm4gWmcoYSxjKX1lPWQuaW50ZXJsZWF2ZWQ7bnVsbD09PWU/KGIubmV4dD1iLFhnKGQpKTooYi5uZXh0PWUubmV4dCxlLm5leHQ9Yik7ZC5pbnRlcmxlYXZlZD1iO3JldHVybiBaZyhhLGMpfWZ1bmN0aW9uIGVoKGEsYixjKXtiPWIudXBkYXRlUXVldWU7aWYobnVsbCE9PWImJihiPWIuc2hhcmVkLDAhPT0oYyY0MTk0MjQwKSkpe3ZhciBkPWIubGFuZXM7ZCY9YS5wZW5kaW5nTGFuZXM7Y3w9ZDtiLmxhbmVzPWM7Q2MoYSxjKX19XG5mdW5jdGlvbiBmaChhLGIpe3ZhciBjPWEudXBkYXRlUXVldWUsZD1hLmFsdGVybmF0ZTtpZihudWxsIT09ZCYmKGQ9ZC51cGRhdGVRdWV1ZSxjPT09ZCkpe3ZhciBlPW51bGwsZj1udWxsO2M9Yy5maXJzdEJhc2VVcGRhdGU7aWYobnVsbCE9PWMpe2Rve3ZhciBnPXtldmVudFRpbWU6Yy5ldmVudFRpbWUsbGFuZTpjLmxhbmUsdGFnOmMudGFnLHBheWxvYWQ6Yy5wYXlsb2FkLGNhbGxiYWNrOmMuY2FsbGJhY2ssbmV4dDpudWxsfTtudWxsPT09Zj9lPWY9ZzpmPWYubmV4dD1nO2M9Yy5uZXh0fXdoaWxlKG51bGwhPT1jKTtudWxsPT09Zj9lPWY9YjpmPWYubmV4dD1ifWVsc2UgZT1mPWI7Yz17YmFzZVN0YXRlOmQuYmFzZVN0YXRlLGZpcnN0QmFzZVVwZGF0ZTplLGxhc3RCYXNlVXBkYXRlOmYsc2hhcmVkOmQuc2hhcmVkLGVmZmVjdHM6ZC5lZmZlY3RzfTthLnVwZGF0ZVF1ZXVlPWM7cmV0dXJufWE9Yy5sYXN0QmFzZVVwZGF0ZTtudWxsPT09YT9jLmZpcnN0QmFzZVVwZGF0ZT1iOmEubmV4dD1cbmI7Yy5sYXN0QmFzZVVwZGF0ZT1ifVxuZnVuY3Rpb24gZ2goYSxiLGMsZCl7dmFyIGU9YS51cGRhdGVRdWV1ZTskZz0hMTt2YXIgZj1lLmZpcnN0QmFzZVVwZGF0ZSxnPWUubGFzdEJhc2VVcGRhdGUsaD1lLnNoYXJlZC5wZW5kaW5nO2lmKG51bGwhPT1oKXtlLnNoYXJlZC5wZW5kaW5nPW51bGw7dmFyIGs9aCxsPWsubmV4dDtrLm5leHQ9bnVsbDtudWxsPT09Zz9mPWw6Zy5uZXh0PWw7Zz1rO3ZhciBtPWEuYWx0ZXJuYXRlO251bGwhPT1tJiYobT1tLnVwZGF0ZVF1ZXVlLGg9bS5sYXN0QmFzZVVwZGF0ZSxoIT09ZyYmKG51bGw9PT1oP20uZmlyc3RCYXNlVXBkYXRlPWw6aC5uZXh0PWwsbS5sYXN0QmFzZVVwZGF0ZT1rKSl9aWYobnVsbCE9PWYpe3ZhciBxPWUuYmFzZVN0YXRlO2c9MDttPWw9az1udWxsO2g9Zjtkb3t2YXIgcj1oLmxhbmUseT1oLmV2ZW50VGltZTtpZigoZCZyKT09PXIpe251bGwhPT1tJiYobT1tLm5leHQ9e2V2ZW50VGltZTp5LGxhbmU6MCx0YWc6aC50YWcscGF5bG9hZDpoLnBheWxvYWQsY2FsbGJhY2s6aC5jYWxsYmFjayxcbm5leHQ6bnVsbH0pO2E6e3ZhciBuPWEsdD1oO3I9Yjt5PWM7c3dpdGNoKHQudGFnKXtjYXNlIDE6bj10LnBheWxvYWQ7aWYoXCJmdW5jdGlvblwiPT09dHlwZW9mIG4pe3E9bi5jYWxsKHkscSxyKTticmVhayBhfXE9bjticmVhayBhO2Nhc2UgMzpuLmZsYWdzPW4uZmxhZ3MmLTY1NTM3fDEyODtjYXNlIDA6bj10LnBheWxvYWQ7cj1cImZ1bmN0aW9uXCI9PT10eXBlb2Ygbj9uLmNhbGwoeSxxLHIpOm47aWYobnVsbD09PXJ8fHZvaWQgMD09PXIpYnJlYWsgYTtxPUEoe30scSxyKTticmVhayBhO2Nhc2UgMjokZz0hMH19bnVsbCE9PWguY2FsbGJhY2smJjAhPT1oLmxhbmUmJihhLmZsYWdzfD02NCxyPWUuZWZmZWN0cyxudWxsPT09cj9lLmVmZmVjdHM9W2hdOnIucHVzaChoKSl9ZWxzZSB5PXtldmVudFRpbWU6eSxsYW5lOnIsdGFnOmgudGFnLHBheWxvYWQ6aC5wYXlsb2FkLGNhbGxiYWNrOmguY2FsbGJhY2ssbmV4dDpudWxsfSxudWxsPT09bT8obD1tPXksaz1xKTptPW0ubmV4dD15LGd8PXI7XG5oPWgubmV4dDtpZihudWxsPT09aClpZihoPWUuc2hhcmVkLnBlbmRpbmcsbnVsbD09PWgpYnJlYWs7ZWxzZSByPWgsaD1yLm5leHQsci5uZXh0PW51bGwsZS5sYXN0QmFzZVVwZGF0ZT1yLGUuc2hhcmVkLnBlbmRpbmc9bnVsbH13aGlsZSgxKTtudWxsPT09bSYmKGs9cSk7ZS5iYXNlU3RhdGU9aztlLmZpcnN0QmFzZVVwZGF0ZT1sO2UubGFzdEJhc2VVcGRhdGU9bTtiPWUuc2hhcmVkLmludGVybGVhdmVkO2lmKG51bGwhPT1iKXtlPWI7ZG8gZ3w9ZS5sYW5lLGU9ZS5uZXh0O3doaWxlKGUhPT1iKX1lbHNlIG51bGw9PT1mJiYoZS5zaGFyZWQubGFuZXM9MCk7aGh8PWc7YS5sYW5lcz1nO2EubWVtb2l6ZWRTdGF0ZT1xfX1cbmZ1bmN0aW9uIGloKGEsYixjKXthPWIuZWZmZWN0cztiLmVmZmVjdHM9bnVsbDtpZihudWxsIT09YSlmb3IoYj0wO2I8YS5sZW5ndGg7YisrKXt2YXIgZD1hW2JdLGU9ZC5jYWxsYmFjaztpZihudWxsIT09ZSl7ZC5jYWxsYmFjaz1udWxsO2Q9YztpZihcImZ1bmN0aW9uXCIhPT10eXBlb2YgZSl0aHJvdyBFcnJvcihwKDE5MSxlKSk7ZS5jYWxsKGQpfX19dmFyIGpoPShuZXcgYWEuQ29tcG9uZW50KS5yZWZzO2Z1bmN0aW9uIGtoKGEsYixjLGQpe2I9YS5tZW1vaXplZFN0YXRlO2M9YyhkLGIpO2M9bnVsbD09PWN8fHZvaWQgMD09PWM/YjpBKHt9LGIsYyk7YS5tZW1vaXplZFN0YXRlPWM7MD09PWEubGFuZXMmJihhLnVwZGF0ZVF1ZXVlLmJhc2VTdGF0ZT1jKX1cbnZhciBuaD17aXNNb3VudGVkOmZ1bmN0aW9uKGEpe3JldHVybihhPWEuX3JlYWN0SW50ZXJuYWxzKT9WYihhKT09PWE6ITF9LGVucXVldWVTZXRTdGF0ZTpmdW5jdGlvbihhLGIsYyl7YT1hLl9yZWFjdEludGVybmFsczt2YXIgZD1MKCksZT1saChhKSxmPWNoKGQsZSk7Zi5wYXlsb2FkPWI7dm9pZCAwIT09YyYmbnVsbCE9PWMmJihmLmNhbGxiYWNrPWMpO2I9ZGgoYSxmLGUpO251bGwhPT1iJiYobWgoYixhLGUsZCksZWgoYixhLGUpKX0sZW5xdWV1ZVJlcGxhY2VTdGF0ZTpmdW5jdGlvbihhLGIsYyl7YT1hLl9yZWFjdEludGVybmFsczt2YXIgZD1MKCksZT1saChhKSxmPWNoKGQsZSk7Zi50YWc9MTtmLnBheWxvYWQ9Yjt2b2lkIDAhPT1jJiZudWxsIT09YyYmKGYuY2FsbGJhY2s9Yyk7Yj1kaChhLGYsZSk7bnVsbCE9PWImJihtaChiLGEsZSxkKSxlaChiLGEsZSkpfSxlbnF1ZXVlRm9yY2VVcGRhdGU6ZnVuY3Rpb24oYSxiKXthPWEuX3JlYWN0SW50ZXJuYWxzO3ZhciBjPUwoKSxkPVxubGgoYSksZT1jaChjLGQpO2UudGFnPTI7dm9pZCAwIT09YiYmbnVsbCE9PWImJihlLmNhbGxiYWNrPWIpO2I9ZGgoYSxlLGQpO251bGwhPT1iJiYobWgoYixhLGQsYyksZWgoYixhLGQpKX19O2Z1bmN0aW9uIG9oKGEsYixjLGQsZSxmLGcpe2E9YS5zdGF0ZU5vZGU7cmV0dXJuXCJmdW5jdGlvblwiPT09dHlwZW9mIGEuc2hvdWxkQ29tcG9uZW50VXBkYXRlP2Euc2hvdWxkQ29tcG9uZW50VXBkYXRlKGQsZixnKTpiLnByb3RvdHlwZSYmYi5wcm90b3R5cGUuaXNQdXJlUmVhY3RDb21wb25lbnQ/IUllKGMsZCl8fCFJZShlLGYpOiEwfVxuZnVuY3Rpb24gcGgoYSxiLGMpe3ZhciBkPSExLGU9VmY7dmFyIGY9Yi5jb250ZXh0VHlwZTtcIm9iamVjdFwiPT09dHlwZW9mIGYmJm51bGwhPT1mP2Y9VmcoZik6KGU9WmYoYik/WGY6SC5jdXJyZW50LGQ9Yi5jb250ZXh0VHlwZXMsZj0oZD1udWxsIT09ZCYmdm9pZCAwIT09ZCk/WWYoYSxlKTpWZik7Yj1uZXcgYihjLGYpO2EubWVtb2l6ZWRTdGF0ZT1udWxsIT09Yi5zdGF0ZSYmdm9pZCAwIT09Yi5zdGF0ZT9iLnN0YXRlOm51bGw7Yi51cGRhdGVyPW5oO2Euc3RhdGVOb2RlPWI7Yi5fcmVhY3RJbnRlcm5hbHM9YTtkJiYoYT1hLnN0YXRlTm9kZSxhLl9fcmVhY3RJbnRlcm5hbE1lbW9pemVkVW5tYXNrZWRDaGlsZENvbnRleHQ9ZSxhLl9fcmVhY3RJbnRlcm5hbE1lbW9pemVkTWFza2VkQ2hpbGRDb250ZXh0PWYpO3JldHVybiBifVxuZnVuY3Rpb24gcWgoYSxiLGMsZCl7YT1iLnN0YXRlO1wiZnVuY3Rpb25cIj09PXR5cGVvZiBiLmNvbXBvbmVudFdpbGxSZWNlaXZlUHJvcHMmJmIuY29tcG9uZW50V2lsbFJlY2VpdmVQcm9wcyhjLGQpO1wiZnVuY3Rpb25cIj09PXR5cGVvZiBiLlVOU0FGRV9jb21wb25lbnRXaWxsUmVjZWl2ZVByb3BzJiZiLlVOU0FGRV9jb21wb25lbnRXaWxsUmVjZWl2ZVByb3BzKGMsZCk7Yi5zdGF0ZSE9PWEmJm5oLmVucXVldWVSZXBsYWNlU3RhdGUoYixiLnN0YXRlLG51bGwpfVxuZnVuY3Rpb24gcmgoYSxiLGMsZCl7dmFyIGU9YS5zdGF0ZU5vZGU7ZS5wcm9wcz1jO2Uuc3RhdGU9YS5tZW1vaXplZFN0YXRlO2UucmVmcz1qaDthaChhKTt2YXIgZj1iLmNvbnRleHRUeXBlO1wib2JqZWN0XCI9PT10eXBlb2YgZiYmbnVsbCE9PWY/ZS5jb250ZXh0PVZnKGYpOihmPVpmKGIpP1hmOkguY3VycmVudCxlLmNvbnRleHQ9WWYoYSxmKSk7ZS5zdGF0ZT1hLm1lbW9pemVkU3RhdGU7Zj1iLmdldERlcml2ZWRTdGF0ZUZyb21Qcm9wcztcImZ1bmN0aW9uXCI9PT10eXBlb2YgZiYmKGtoKGEsYixmLGMpLGUuc3RhdGU9YS5tZW1vaXplZFN0YXRlKTtcImZ1bmN0aW9uXCI9PT10eXBlb2YgYi5nZXREZXJpdmVkU3RhdGVGcm9tUHJvcHN8fFwiZnVuY3Rpb25cIj09PXR5cGVvZiBlLmdldFNuYXBzaG90QmVmb3JlVXBkYXRlfHxcImZ1bmN0aW9uXCIhPT10eXBlb2YgZS5VTlNBRkVfY29tcG9uZW50V2lsbE1vdW50JiZcImZ1bmN0aW9uXCIhPT10eXBlb2YgZS5jb21wb25lbnRXaWxsTW91bnR8fChiPWUuc3RhdGUsXG5cImZ1bmN0aW9uXCI9PT10eXBlb2YgZS5jb21wb25lbnRXaWxsTW91bnQmJmUuY29tcG9uZW50V2lsbE1vdW50KCksXCJmdW5jdGlvblwiPT09dHlwZW9mIGUuVU5TQUZFX2NvbXBvbmVudFdpbGxNb3VudCYmZS5VTlNBRkVfY29tcG9uZW50V2lsbE1vdW50KCksYiE9PWUuc3RhdGUmJm5oLmVucXVldWVSZXBsYWNlU3RhdGUoZSxlLnN0YXRlLG51bGwpLGdoKGEsYyxlLGQpLGUuc3RhdGU9YS5tZW1vaXplZFN0YXRlKTtcImZ1bmN0aW9uXCI9PT10eXBlb2YgZS5jb21wb25lbnREaWRNb3VudCYmKGEuZmxhZ3N8PTQxOTQzMDgpfVxuZnVuY3Rpb24gc2goYSxiLGMpe2E9Yy5yZWY7aWYobnVsbCE9PWEmJlwiZnVuY3Rpb25cIiE9PXR5cGVvZiBhJiZcIm9iamVjdFwiIT09dHlwZW9mIGEpe2lmKGMuX293bmVyKXtjPWMuX293bmVyO2lmKGMpe2lmKDEhPT1jLnRhZyl0aHJvdyBFcnJvcihwKDMwOSkpO3ZhciBkPWMuc3RhdGVOb2RlfWlmKCFkKXRocm93IEVycm9yKHAoMTQ3LGEpKTt2YXIgZT1kLGY9XCJcIithO2lmKG51bGwhPT1iJiZudWxsIT09Yi5yZWYmJlwiZnVuY3Rpb25cIj09PXR5cGVvZiBiLnJlZiYmYi5yZWYuX3N0cmluZ1JlZj09PWYpcmV0dXJuIGIucmVmO2I9ZnVuY3Rpb24oYSl7dmFyIGI9ZS5yZWZzO2I9PT1qaCYmKGI9ZS5yZWZzPXt9KTtudWxsPT09YT9kZWxldGUgYltmXTpiW2ZdPWF9O2IuX3N0cmluZ1JlZj1mO3JldHVybiBifWlmKFwic3RyaW5nXCIhPT10eXBlb2YgYSl0aHJvdyBFcnJvcihwKDI4NCkpO2lmKCFjLl9vd25lcil0aHJvdyBFcnJvcihwKDI5MCxhKSk7fXJldHVybiBhfVxuZnVuY3Rpb24gdGgoYSxiKXthPU9iamVjdC5wcm90b3R5cGUudG9TdHJpbmcuY2FsbChiKTt0aHJvdyBFcnJvcihwKDMxLFwiW29iamVjdCBPYmplY3RdXCI9PT1hP1wib2JqZWN0IHdpdGgga2V5cyB7XCIrT2JqZWN0LmtleXMoYikuam9pbihcIiwgXCIpK1wifVwiOmEpKTt9ZnVuY3Rpb24gdWgoYSl7dmFyIGI9YS5faW5pdDtyZXR1cm4gYihhLl9wYXlsb2FkKX1cbmZ1bmN0aW9uIHZoKGEpe2Z1bmN0aW9uIGIoYixjKXtpZihhKXt2YXIgZD1iLmRlbGV0aW9ucztudWxsPT09ZD8oYi5kZWxldGlvbnM9W2NdLGIuZmxhZ3N8PTE2KTpkLnB1c2goYyl9fWZ1bmN0aW9uIGMoYyxkKXtpZighYSlyZXR1cm4gbnVsbDtmb3IoO251bGwhPT1kOyliKGMsZCksZD1kLnNpYmxpbmc7cmV0dXJuIG51bGx9ZnVuY3Rpb24gZChhLGIpe2ZvcihhPW5ldyBNYXA7bnVsbCE9PWI7KW51bGwhPT1iLmtleT9hLnNldChiLmtleSxiKTphLnNldChiLmluZGV4LGIpLGI9Yi5zaWJsaW5nO3JldHVybiBhfWZ1bmN0aW9uIGUoYSxiKXthPXdoKGEsYik7YS5pbmRleD0wO2Euc2libGluZz1udWxsO3JldHVybiBhfWZ1bmN0aW9uIGYoYixjLGQpe2IuaW5kZXg9ZDtpZighYSlyZXR1cm4gYi5mbGFnc3w9MTA0ODU3NixjO2Q9Yi5hbHRlcm5hdGU7aWYobnVsbCE9PWQpcmV0dXJuIGQ9ZC5pbmRleCxkPGM/KGIuZmxhZ3N8PTIsYyk6ZDtiLmZsYWdzfD0yO3JldHVybiBjfWZ1bmN0aW9uIGcoYil7YSYmXG5udWxsPT09Yi5hbHRlcm5hdGUmJihiLmZsYWdzfD0yKTtyZXR1cm4gYn1mdW5jdGlvbiBoKGEsYixjLGQpe2lmKG51bGw9PT1ifHw2IT09Yi50YWcpcmV0dXJuIGI9eGgoYyxhLm1vZGUsZCksYi5yZXR1cm49YSxiO2I9ZShiLGMpO2IucmV0dXJuPWE7cmV0dXJuIGJ9ZnVuY3Rpb24gayhhLGIsYyxkKXt2YXIgZj1jLnR5cGU7aWYoZj09PXlhKXJldHVybiBtKGEsYixjLnByb3BzLmNoaWxkcmVuLGQsYy5rZXkpO2lmKG51bGwhPT1iJiYoYi5lbGVtZW50VHlwZT09PWZ8fFwib2JqZWN0XCI9PT10eXBlb2YgZiYmbnVsbCE9PWYmJmYuJCR0eXBlb2Y9PT1IYSYmdWgoZik9PT1iLnR5cGUpKXJldHVybiBkPWUoYixjLnByb3BzKSxkLnJlZj1zaChhLGIsYyksZC5yZXR1cm49YSxkO2Q9eWgoYy50eXBlLGMua2V5LGMucHJvcHMsbnVsbCxhLm1vZGUsZCk7ZC5yZWY9c2goYSxiLGMpO2QucmV0dXJuPWE7cmV0dXJuIGR9ZnVuY3Rpb24gbChhLGIsYyxkKXtpZihudWxsPT09Ynx8NCE9PWIudGFnfHxcbmIuc3RhdGVOb2RlLmNvbnRhaW5lckluZm8hPT1jLmNvbnRhaW5lckluZm98fGIuc3RhdGVOb2RlLmltcGxlbWVudGF0aW9uIT09Yy5pbXBsZW1lbnRhdGlvbilyZXR1cm4gYj16aChjLGEubW9kZSxkKSxiLnJldHVybj1hLGI7Yj1lKGIsYy5jaGlsZHJlbnx8W10pO2IucmV0dXJuPWE7cmV0dXJuIGJ9ZnVuY3Rpb24gbShhLGIsYyxkLGYpe2lmKG51bGw9PT1ifHw3IT09Yi50YWcpcmV0dXJuIGI9QWgoYyxhLm1vZGUsZCxmKSxiLnJldHVybj1hLGI7Yj1lKGIsYyk7Yi5yZXR1cm49YTtyZXR1cm4gYn1mdW5jdGlvbiBxKGEsYixjKXtpZihcInN0cmluZ1wiPT09dHlwZW9mIGImJlwiXCIhPT1ifHxcIm51bWJlclwiPT09dHlwZW9mIGIpcmV0dXJuIGI9eGgoXCJcIitiLGEubW9kZSxjKSxiLnJldHVybj1hLGI7aWYoXCJvYmplY3RcIj09PXR5cGVvZiBiJiZudWxsIT09Yil7c3dpdGNoKGIuJCR0eXBlb2Ype2Nhc2UgdmE6cmV0dXJuIGM9eWgoYi50eXBlLGIua2V5LGIucHJvcHMsbnVsbCxhLm1vZGUsYyksXG5jLnJlZj1zaChhLG51bGwsYiksYy5yZXR1cm49YSxjO2Nhc2Ugd2E6cmV0dXJuIGI9emgoYixhLm1vZGUsYyksYi5yZXR1cm49YSxiO2Nhc2UgSGE6dmFyIGQ9Yi5faW5pdDtyZXR1cm4gcShhLGQoYi5fcGF5bG9hZCksYyl9aWYoZWIoYil8fEthKGIpKXJldHVybiBiPUFoKGIsYS5tb2RlLGMsbnVsbCksYi5yZXR1cm49YSxiO3RoKGEsYil9cmV0dXJuIG51bGx9ZnVuY3Rpb24gcihhLGIsYyxkKXt2YXIgZT1udWxsIT09Yj9iLmtleTpudWxsO2lmKFwic3RyaW5nXCI9PT10eXBlb2YgYyYmXCJcIiE9PWN8fFwibnVtYmVyXCI9PT10eXBlb2YgYylyZXR1cm4gbnVsbCE9PWU/bnVsbDpoKGEsYixcIlwiK2MsZCk7aWYoXCJvYmplY3RcIj09PXR5cGVvZiBjJiZudWxsIT09Yyl7c3dpdGNoKGMuJCR0eXBlb2Ype2Nhc2UgdmE6cmV0dXJuIGMua2V5PT09ZT9rKGEsYixjLGQpOm51bGw7Y2FzZSB3YTpyZXR1cm4gYy5rZXk9PT1lP2woYSxiLGMsZCk6bnVsbDtjYXNlIEhhOnJldHVybiBlPWMuX2luaXQscihhLFxuYixlKGMuX3BheWxvYWQpLGQpfWlmKGViKGMpfHxLYShjKSlyZXR1cm4gbnVsbCE9PWU/bnVsbDptKGEsYixjLGQsbnVsbCk7dGgoYSxjKX1yZXR1cm4gbnVsbH1mdW5jdGlvbiB5KGEsYixjLGQsZSl7aWYoXCJzdHJpbmdcIj09PXR5cGVvZiBkJiZcIlwiIT09ZHx8XCJudW1iZXJcIj09PXR5cGVvZiBkKXJldHVybiBhPWEuZ2V0KGMpfHxudWxsLGgoYixhLFwiXCIrZCxlKTtpZihcIm9iamVjdFwiPT09dHlwZW9mIGQmJm51bGwhPT1kKXtzd2l0Y2goZC4kJHR5cGVvZil7Y2FzZSB2YTpyZXR1cm4gYT1hLmdldChudWxsPT09ZC5rZXk/YzpkLmtleSl8fG51bGwsayhiLGEsZCxlKTtjYXNlIHdhOnJldHVybiBhPWEuZ2V0KG51bGw9PT1kLmtleT9jOmQua2V5KXx8bnVsbCxsKGIsYSxkLGUpO2Nhc2UgSGE6dmFyIGY9ZC5faW5pdDtyZXR1cm4geShhLGIsYyxmKGQuX3BheWxvYWQpLGUpfWlmKGViKGQpfHxLYShkKSlyZXR1cm4gYT1hLmdldChjKXx8bnVsbCxtKGIsYSxkLGUsbnVsbCk7dGgoYixkKX1yZXR1cm4gbnVsbH1cbmZ1bmN0aW9uIG4oZSxnLGgsayl7Zm9yKHZhciBsPW51bGwsbT1udWxsLHU9Zyx3PWc9MCx4PW51bGw7bnVsbCE9PXUmJnc8aC5sZW5ndGg7dysrKXt1LmluZGV4Pnc/KHg9dSx1PW51bGwpOng9dS5zaWJsaW5nO3ZhciBuPXIoZSx1LGhbd10sayk7aWYobnVsbD09PW4pe251bGw9PT11JiYodT14KTticmVha31hJiZ1JiZudWxsPT09bi5hbHRlcm5hdGUmJmIoZSx1KTtnPWYobixnLHcpO251bGw9PT1tP2w9bjptLnNpYmxpbmc9bjttPW47dT14fWlmKHc9PT1oLmxlbmd0aClyZXR1cm4gYyhlLHUpLEkmJnRnKGUsdyksbDtpZihudWxsPT09dSl7Zm9yKDt3PGgubGVuZ3RoO3crKyl1PXEoZSxoW3ddLGspLG51bGwhPT11JiYoZz1mKHUsZyx3KSxudWxsPT09bT9sPXU6bS5zaWJsaW5nPXUsbT11KTtJJiZ0ZyhlLHcpO3JldHVybiBsfWZvcih1PWQoZSx1KTt3PGgubGVuZ3RoO3crKyl4PXkodSxlLHcsaFt3XSxrKSxudWxsIT09eCYmKGEmJm51bGwhPT14LmFsdGVybmF0ZSYmdS5kZWxldGUobnVsbD09PVxueC5rZXk/dzp4LmtleSksZz1mKHgsZyx3KSxudWxsPT09bT9sPXg6bS5zaWJsaW5nPXgsbT14KTthJiZ1LmZvckVhY2goZnVuY3Rpb24oYSl7cmV0dXJuIGIoZSxhKX0pO0kmJnRnKGUsdyk7cmV0dXJuIGx9ZnVuY3Rpb24gdChlLGcsaCxrKXt2YXIgbD1LYShoKTtpZihcImZ1bmN0aW9uXCIhPT10eXBlb2YgbCl0aHJvdyBFcnJvcihwKDE1MCkpO2g9bC5jYWxsKGgpO2lmKG51bGw9PWgpdGhyb3cgRXJyb3IocCgxNTEpKTtmb3IodmFyIHU9bD1udWxsLG09Zyx3PWc9MCx4PW51bGwsbj1oLm5leHQoKTtudWxsIT09bSYmIW4uZG9uZTt3Kyssbj1oLm5leHQoKSl7bS5pbmRleD53Pyh4PW0sbT1udWxsKTp4PW0uc2libGluZzt2YXIgdD1yKGUsbSxuLnZhbHVlLGspO2lmKG51bGw9PT10KXtudWxsPT09bSYmKG09eCk7YnJlYWt9YSYmbSYmbnVsbD09PXQuYWx0ZXJuYXRlJiZiKGUsbSk7Zz1mKHQsZyx3KTtudWxsPT09dT9sPXQ6dS5zaWJsaW5nPXQ7dT10O209eH1pZihuLmRvbmUpcmV0dXJuIGMoZSxcbm0pLEkmJnRnKGUsdyksbDtpZihudWxsPT09bSl7Zm9yKDshbi5kb25lO3crKyxuPWgubmV4dCgpKW49cShlLG4udmFsdWUsayksbnVsbCE9PW4mJihnPWYobixnLHcpLG51bGw9PT11P2w9bjp1LnNpYmxpbmc9bix1PW4pO0kmJnRnKGUsdyk7cmV0dXJuIGx9Zm9yKG09ZChlLG0pOyFuLmRvbmU7dysrLG49aC5uZXh0KCkpbj15KG0sZSx3LG4udmFsdWUsayksbnVsbCE9PW4mJihhJiZudWxsIT09bi5hbHRlcm5hdGUmJm0uZGVsZXRlKG51bGw9PT1uLmtleT93Om4ua2V5KSxnPWYobixnLHcpLG51bGw9PT11P2w9bjp1LnNpYmxpbmc9bix1PW4pO2EmJm0uZm9yRWFjaChmdW5jdGlvbihhKXtyZXR1cm4gYihlLGEpfSk7SSYmdGcoZSx3KTtyZXR1cm4gbH1mdW5jdGlvbiBKKGEsZCxmLGgpe1wib2JqZWN0XCI9PT10eXBlb2YgZiYmbnVsbCE9PWYmJmYudHlwZT09PXlhJiZudWxsPT09Zi5rZXkmJihmPWYucHJvcHMuY2hpbGRyZW4pO2lmKFwib2JqZWN0XCI9PT10eXBlb2YgZiYmbnVsbCE9PWYpe3N3aXRjaChmLiQkdHlwZW9mKXtjYXNlIHZhOmE6e2Zvcih2YXIgaz1cbmYua2V5LGw9ZDtudWxsIT09bDspe2lmKGwua2V5PT09ayl7az1mLnR5cGU7aWYoaz09PXlhKXtpZig3PT09bC50YWcpe2MoYSxsLnNpYmxpbmcpO2Q9ZShsLGYucHJvcHMuY2hpbGRyZW4pO2QucmV0dXJuPWE7YT1kO2JyZWFrIGF9fWVsc2UgaWYobC5lbGVtZW50VHlwZT09PWt8fFwib2JqZWN0XCI9PT10eXBlb2YgayYmbnVsbCE9PWsmJmsuJCR0eXBlb2Y9PT1IYSYmdWgoayk9PT1sLnR5cGUpe2MoYSxsLnNpYmxpbmcpO2Q9ZShsLGYucHJvcHMpO2QucmVmPXNoKGEsbCxmKTtkLnJldHVybj1hO2E9ZDticmVhayBhfWMoYSxsKTticmVha31lbHNlIGIoYSxsKTtsPWwuc2libGluZ31mLnR5cGU9PT15YT8oZD1BaChmLnByb3BzLmNoaWxkcmVuLGEubW9kZSxoLGYua2V5KSxkLnJldHVybj1hLGE9ZCk6KGg9eWgoZi50eXBlLGYua2V5LGYucHJvcHMsbnVsbCxhLm1vZGUsaCksaC5yZWY9c2goYSxkLGYpLGgucmV0dXJuPWEsYT1oKX1yZXR1cm4gZyhhKTtjYXNlIHdhOmE6e2ZvcihsPWYua2V5O251bGwhPT1cbmQ7KXtpZihkLmtleT09PWwpaWYoND09PWQudGFnJiZkLnN0YXRlTm9kZS5jb250YWluZXJJbmZvPT09Zi5jb250YWluZXJJbmZvJiZkLnN0YXRlTm9kZS5pbXBsZW1lbnRhdGlvbj09PWYuaW1wbGVtZW50YXRpb24pe2MoYSxkLnNpYmxpbmcpO2Q9ZShkLGYuY2hpbGRyZW58fFtdKTtkLnJldHVybj1hO2E9ZDticmVhayBhfWVsc2V7YyhhLGQpO2JyZWFrfWVsc2UgYihhLGQpO2Q9ZC5zaWJsaW5nfWQ9emgoZixhLm1vZGUsaCk7ZC5yZXR1cm49YTthPWR9cmV0dXJuIGcoYSk7Y2FzZSBIYTpyZXR1cm4gbD1mLl9pbml0LEooYSxkLGwoZi5fcGF5bG9hZCksaCl9aWYoZWIoZikpcmV0dXJuIG4oYSxkLGYsaCk7aWYoS2EoZikpcmV0dXJuIHQoYSxkLGYsaCk7dGgoYSxmKX1yZXR1cm5cInN0cmluZ1wiPT09dHlwZW9mIGYmJlwiXCIhPT1mfHxcIm51bWJlclwiPT09dHlwZW9mIGY/KGY9XCJcIitmLG51bGwhPT1kJiY2PT09ZC50YWc/KGMoYSxkLnNpYmxpbmcpLGQ9ZShkLGYpLGQucmV0dXJuPWEsYT1kKTpcbihjKGEsZCksZD14aChmLGEubW9kZSxoKSxkLnJldHVybj1hLGE9ZCksZyhhKSk6YyhhLGQpfXJldHVybiBKfXZhciBCaD12aCghMCksQ2g9dmgoITEpLERoPXt9LEVoPVVmKERoKSxGaD1VZihEaCksR2g9VWYoRGgpO2Z1bmN0aW9uIEhoKGEpe2lmKGE9PT1EaCl0aHJvdyBFcnJvcihwKDE3NCkpO3JldHVybiBhfWZ1bmN0aW9uIEloKGEsYil7RyhHaCxiKTtHKEZoLGEpO0coRWgsRGgpO2E9Yi5ub2RlVHlwZTtzd2l0Y2goYSl7Y2FzZSA5OmNhc2UgMTE6Yj0oYj1iLmRvY3VtZW50RWxlbWVudCk/Yi5uYW1lc3BhY2VVUkk6bGIobnVsbCxcIlwiKTticmVhaztkZWZhdWx0OmE9OD09PWE/Yi5wYXJlbnROb2RlOmIsYj1hLm5hbWVzcGFjZVVSSXx8bnVsbCxhPWEudGFnTmFtZSxiPWxiKGIsYSl9RShFaCk7RyhFaCxiKX1mdW5jdGlvbiBKaCgpe0UoRWgpO0UoRmgpO0UoR2gpfVxuZnVuY3Rpb24gS2goYSl7SGgoR2guY3VycmVudCk7dmFyIGI9SGgoRWguY3VycmVudCk7dmFyIGM9bGIoYixhLnR5cGUpO2IhPT1jJiYoRyhGaCxhKSxHKEVoLGMpKX1mdW5jdGlvbiBMaChhKXtGaC5jdXJyZW50PT09YSYmKEUoRWgpLEUoRmgpKX12YXIgTT1VZigwKTtcbmZ1bmN0aW9uIE1oKGEpe2Zvcih2YXIgYj1hO251bGwhPT1iOyl7aWYoMTM9PT1iLnRhZyl7dmFyIGM9Yi5tZW1vaXplZFN0YXRlO2lmKG51bGwhPT1jJiYoYz1jLmRlaHlkcmF0ZWQsbnVsbD09PWN8fFwiJD9cIj09PWMuZGF0YXx8XCIkIVwiPT09Yy5kYXRhKSlyZXR1cm4gYn1lbHNlIGlmKDE5PT09Yi50YWcmJnZvaWQgMCE9PWIubWVtb2l6ZWRQcm9wcy5yZXZlYWxPcmRlcil7aWYoMCE9PShiLmZsYWdzJjEyOCkpcmV0dXJuIGJ9ZWxzZSBpZihudWxsIT09Yi5jaGlsZCl7Yi5jaGlsZC5yZXR1cm49YjtiPWIuY2hpbGQ7Y29udGludWV9aWYoYj09PWEpYnJlYWs7Zm9yKDtudWxsPT09Yi5zaWJsaW5nOyl7aWYobnVsbD09PWIucmV0dXJufHxiLnJldHVybj09PWEpcmV0dXJuIG51bGw7Yj1iLnJldHVybn1iLnNpYmxpbmcucmV0dXJuPWIucmV0dXJuO2I9Yi5zaWJsaW5nfXJldHVybiBudWxsfXZhciBOaD1bXTtcbmZ1bmN0aW9uIE9oKCl7Zm9yKHZhciBhPTA7YTxOaC5sZW5ndGg7YSsrKU5oW2FdLl93b3JrSW5Qcm9ncmVzc1ZlcnNpb25QcmltYXJ5PW51bGw7TmgubGVuZ3RoPTB9dmFyIFBoPXVhLlJlYWN0Q3VycmVudERpc3BhdGNoZXIsUWg9dWEuUmVhY3RDdXJyZW50QmF0Y2hDb25maWcsUmg9MCxOPW51bGwsTz1udWxsLFA9bnVsbCxTaD0hMSxUaD0hMSxVaD0wLFZoPTA7ZnVuY3Rpb24gUSgpe3Rocm93IEVycm9yKHAoMzIxKSk7fWZ1bmN0aW9uIFdoKGEsYil7aWYobnVsbD09PWIpcmV0dXJuITE7Zm9yKHZhciBjPTA7YzxiLmxlbmd0aCYmYzxhLmxlbmd0aDtjKyspaWYoIUhlKGFbY10sYltjXSkpcmV0dXJuITE7cmV0dXJuITB9XG5mdW5jdGlvbiBYaChhLGIsYyxkLGUsZil7Umg9ZjtOPWI7Yi5tZW1vaXplZFN0YXRlPW51bGw7Yi51cGRhdGVRdWV1ZT1udWxsO2IubGFuZXM9MDtQaC5jdXJyZW50PW51bGw9PT1hfHxudWxsPT09YS5tZW1vaXplZFN0YXRlP1loOlpoO2E9YyhkLGUpO2lmKFRoKXtmPTA7ZG97VGg9ITE7VWg9MDtpZigyNTw9Zil0aHJvdyBFcnJvcihwKDMwMSkpO2YrPTE7UD1PPW51bGw7Yi51cGRhdGVRdWV1ZT1udWxsO1BoLmN1cnJlbnQ9JGg7YT1jKGQsZSl9d2hpbGUoVGgpfVBoLmN1cnJlbnQ9YWk7Yj1udWxsIT09TyYmbnVsbCE9PU8ubmV4dDtSaD0wO1A9Tz1OPW51bGw7U2g9ITE7aWYoYil0aHJvdyBFcnJvcihwKDMwMCkpO3JldHVybiBhfWZ1bmN0aW9uIGJpKCl7dmFyIGE9MCE9PVVoO1VoPTA7cmV0dXJuIGF9XG5mdW5jdGlvbiBjaSgpe3ZhciBhPXttZW1vaXplZFN0YXRlOm51bGwsYmFzZVN0YXRlOm51bGwsYmFzZVF1ZXVlOm51bGwscXVldWU6bnVsbCxuZXh0Om51bGx9O251bGw9PT1QP04ubWVtb2l6ZWRTdGF0ZT1QPWE6UD1QLm5leHQ9YTtyZXR1cm4gUH1mdW5jdGlvbiBkaSgpe2lmKG51bGw9PT1PKXt2YXIgYT1OLmFsdGVybmF0ZTthPW51bGwhPT1hP2EubWVtb2l6ZWRTdGF0ZTpudWxsfWVsc2UgYT1PLm5leHQ7dmFyIGI9bnVsbD09PVA/Ti5tZW1vaXplZFN0YXRlOlAubmV4dDtpZihudWxsIT09YilQPWIsTz1hO2Vsc2V7aWYobnVsbD09PWEpdGhyb3cgRXJyb3IocCgzMTApKTtPPWE7YT17bWVtb2l6ZWRTdGF0ZTpPLm1lbW9pemVkU3RhdGUsYmFzZVN0YXRlOk8uYmFzZVN0YXRlLGJhc2VRdWV1ZTpPLmJhc2VRdWV1ZSxxdWV1ZTpPLnF1ZXVlLG5leHQ6bnVsbH07bnVsbD09PVA/Ti5tZW1vaXplZFN0YXRlPVA9YTpQPVAubmV4dD1hfXJldHVybiBQfVxuZnVuY3Rpb24gZWkoYSxiKXtyZXR1cm5cImZ1bmN0aW9uXCI9PT10eXBlb2YgYj9iKGEpOmJ9XG5mdW5jdGlvbiBmaShhKXt2YXIgYj1kaSgpLGM9Yi5xdWV1ZTtpZihudWxsPT09Yyl0aHJvdyBFcnJvcihwKDMxMSkpO2MubGFzdFJlbmRlcmVkUmVkdWNlcj1hO3ZhciBkPU8sZT1kLmJhc2VRdWV1ZSxmPWMucGVuZGluZztpZihudWxsIT09Zil7aWYobnVsbCE9PWUpe3ZhciBnPWUubmV4dDtlLm5leHQ9Zi5uZXh0O2YubmV4dD1nfWQuYmFzZVF1ZXVlPWU9ZjtjLnBlbmRpbmc9bnVsbH1pZihudWxsIT09ZSl7Zj1lLm5leHQ7ZD1kLmJhc2VTdGF0ZTt2YXIgaD1nPW51bGwsaz1udWxsLGw9Zjtkb3t2YXIgbT1sLmxhbmU7aWYoKFJoJm0pPT09bSludWxsIT09ayYmKGs9ay5uZXh0PXtsYW5lOjAsYWN0aW9uOmwuYWN0aW9uLGhhc0VhZ2VyU3RhdGU6bC5oYXNFYWdlclN0YXRlLGVhZ2VyU3RhdGU6bC5lYWdlclN0YXRlLG5leHQ6bnVsbH0pLGQ9bC5oYXNFYWdlclN0YXRlP2wuZWFnZXJTdGF0ZTphKGQsbC5hY3Rpb24pO2Vsc2V7dmFyIHE9e2xhbmU6bSxhY3Rpb246bC5hY3Rpb24saGFzRWFnZXJTdGF0ZTpsLmhhc0VhZ2VyU3RhdGUsXG5lYWdlclN0YXRlOmwuZWFnZXJTdGF0ZSxuZXh0Om51bGx9O251bGw9PT1rPyhoPWs9cSxnPWQpOms9ay5uZXh0PXE7Ti5sYW5lc3w9bTtoaHw9bX1sPWwubmV4dH13aGlsZShudWxsIT09bCYmbCE9PWYpO251bGw9PT1rP2c9ZDprLm5leHQ9aDtIZShkLGIubWVtb2l6ZWRTdGF0ZSl8fChVZz0hMCk7Yi5tZW1vaXplZFN0YXRlPWQ7Yi5iYXNlU3RhdGU9ZztiLmJhc2VRdWV1ZT1rO2MubGFzdFJlbmRlcmVkU3RhdGU9ZH1hPWMuaW50ZXJsZWF2ZWQ7aWYobnVsbCE9PWEpe2U9YTtkbyBmPWUubGFuZSxOLmxhbmVzfD1mLGhofD1mLGU9ZS5uZXh0O3doaWxlKGUhPT1hKX1lbHNlIG51bGw9PT1lJiYoYy5sYW5lcz0wKTtyZXR1cm5bYi5tZW1vaXplZFN0YXRlLGMuZGlzcGF0Y2hdfVxuZnVuY3Rpb24gZ2koYSl7dmFyIGI9ZGkoKSxjPWIucXVldWU7aWYobnVsbD09PWMpdGhyb3cgRXJyb3IocCgzMTEpKTtjLmxhc3RSZW5kZXJlZFJlZHVjZXI9YTt2YXIgZD1jLmRpc3BhdGNoLGU9Yy5wZW5kaW5nLGY9Yi5tZW1vaXplZFN0YXRlO2lmKG51bGwhPT1lKXtjLnBlbmRpbmc9bnVsbDt2YXIgZz1lPWUubmV4dDtkbyBmPWEoZixnLmFjdGlvbiksZz1nLm5leHQ7d2hpbGUoZyE9PWUpO0hlKGYsYi5tZW1vaXplZFN0YXRlKXx8KFVnPSEwKTtiLm1lbW9pemVkU3RhdGU9ZjtudWxsPT09Yi5iYXNlUXVldWUmJihiLmJhc2VTdGF0ZT1mKTtjLmxhc3RSZW5kZXJlZFN0YXRlPWZ9cmV0dXJuW2YsZF19ZnVuY3Rpb24gaGkoKXt9XG5mdW5jdGlvbiBpaShhLGIpe3ZhciBjPU4sZD1kaSgpLGU9YigpLGY9IUhlKGQubWVtb2l6ZWRTdGF0ZSxlKTtmJiYoZC5tZW1vaXplZFN0YXRlPWUsVWc9ITApO2Q9ZC5xdWV1ZTtqaShraS5iaW5kKG51bGwsYyxkLGEpLFthXSk7aWYoZC5nZXRTbmFwc2hvdCE9PWJ8fGZ8fG51bGwhPT1QJiZQLm1lbW9pemVkU3RhdGUudGFnJjEpe2MuZmxhZ3N8PTIwNDg7bGkoOSxtaS5iaW5kKG51bGwsYyxkLGUsYiksdm9pZCAwLG51bGwpO2lmKG51bGw9PT1SKXRocm93IEVycm9yKHAoMzQ5KSk7MCE9PShSaCYzMCl8fG5pKGMsYixlKX1yZXR1cm4gZX1mdW5jdGlvbiBuaShhLGIsYyl7YS5mbGFnc3w9MTYzODQ7YT17Z2V0U25hcHNob3Q6Yix2YWx1ZTpjfTtiPU4udXBkYXRlUXVldWU7bnVsbD09PWI/KGI9e2xhc3RFZmZlY3Q6bnVsbCxzdG9yZXM6bnVsbH0sTi51cGRhdGVRdWV1ZT1iLGIuc3RvcmVzPVthXSk6KGM9Yi5zdG9yZXMsbnVsbD09PWM/Yi5zdG9yZXM9W2FdOmMucHVzaChhKSl9XG5mdW5jdGlvbiBtaShhLGIsYyxkKXtiLnZhbHVlPWM7Yi5nZXRTbmFwc2hvdD1kO29pKGIpJiZwaShhKX1mdW5jdGlvbiBraShhLGIsYyl7cmV0dXJuIGMoZnVuY3Rpb24oKXtvaShiKSYmcGkoYSl9KX1mdW5jdGlvbiBvaShhKXt2YXIgYj1hLmdldFNuYXBzaG90O2E9YS52YWx1ZTt0cnl7dmFyIGM9YigpO3JldHVybiFIZShhLGMpfWNhdGNoKGQpe3JldHVybiEwfX1mdW5jdGlvbiBwaShhKXt2YXIgYj1aZyhhLDEpO251bGwhPT1iJiZtaChiLGEsMSwtMSl9XG5mdW5jdGlvbiBxaShhKXt2YXIgYj1jaSgpO1wiZnVuY3Rpb25cIj09PXR5cGVvZiBhJiYoYT1hKCkpO2IubWVtb2l6ZWRTdGF0ZT1iLmJhc2VTdGF0ZT1hO2E9e3BlbmRpbmc6bnVsbCxpbnRlcmxlYXZlZDpudWxsLGxhbmVzOjAsZGlzcGF0Y2g6bnVsbCxsYXN0UmVuZGVyZWRSZWR1Y2VyOmVpLGxhc3RSZW5kZXJlZFN0YXRlOmF9O2IucXVldWU9YTthPWEuZGlzcGF0Y2g9cmkuYmluZChudWxsLE4sYSk7cmV0dXJuW2IubWVtb2l6ZWRTdGF0ZSxhXX1cbmZ1bmN0aW9uIGxpKGEsYixjLGQpe2E9e3RhZzphLGNyZWF0ZTpiLGRlc3Ryb3k6YyxkZXBzOmQsbmV4dDpudWxsfTtiPU4udXBkYXRlUXVldWU7bnVsbD09PWI/KGI9e2xhc3RFZmZlY3Q6bnVsbCxzdG9yZXM6bnVsbH0sTi51cGRhdGVRdWV1ZT1iLGIubGFzdEVmZmVjdD1hLm5leHQ9YSk6KGM9Yi5sYXN0RWZmZWN0LG51bGw9PT1jP2IubGFzdEVmZmVjdD1hLm5leHQ9YTooZD1jLm5leHQsYy5uZXh0PWEsYS5uZXh0PWQsYi5sYXN0RWZmZWN0PWEpKTtyZXR1cm4gYX1mdW5jdGlvbiBzaSgpe3JldHVybiBkaSgpLm1lbW9pemVkU3RhdGV9ZnVuY3Rpb24gdGkoYSxiLGMsZCl7dmFyIGU9Y2koKTtOLmZsYWdzfD1hO2UubWVtb2l6ZWRTdGF0ZT1saSgxfGIsYyx2b2lkIDAsdm9pZCAwPT09ZD9udWxsOmQpfVxuZnVuY3Rpb24gdWkoYSxiLGMsZCl7dmFyIGU9ZGkoKTtkPXZvaWQgMD09PWQ/bnVsbDpkO3ZhciBmPXZvaWQgMDtpZihudWxsIT09Tyl7dmFyIGc9Ty5tZW1vaXplZFN0YXRlO2Y9Zy5kZXN0cm95O2lmKG51bGwhPT1kJiZXaChkLGcuZGVwcykpe2UubWVtb2l6ZWRTdGF0ZT1saShiLGMsZixkKTtyZXR1cm59fU4uZmxhZ3N8PWE7ZS5tZW1vaXplZFN0YXRlPWxpKDF8YixjLGYsZCl9ZnVuY3Rpb24gdmkoYSxiKXtyZXR1cm4gdGkoODM5MDY1Niw4LGEsYil9ZnVuY3Rpb24gamkoYSxiKXtyZXR1cm4gdWkoMjA0OCw4LGEsYil9ZnVuY3Rpb24gd2koYSxiKXtyZXR1cm4gdWkoNCwyLGEsYil9ZnVuY3Rpb24geGkoYSxiKXtyZXR1cm4gdWkoNCw0LGEsYil9XG5mdW5jdGlvbiB5aShhLGIpe2lmKFwiZnVuY3Rpb25cIj09PXR5cGVvZiBiKXJldHVybiBhPWEoKSxiKGEpLGZ1bmN0aW9uKCl7YihudWxsKX07aWYobnVsbCE9PWImJnZvaWQgMCE9PWIpcmV0dXJuIGE9YSgpLGIuY3VycmVudD1hLGZ1bmN0aW9uKCl7Yi5jdXJyZW50PW51bGx9fWZ1bmN0aW9uIHppKGEsYixjKXtjPW51bGwhPT1jJiZ2b2lkIDAhPT1jP2MuY29uY2F0KFthXSk6bnVsbDtyZXR1cm4gdWkoNCw0LHlpLmJpbmQobnVsbCxiLGEpLGMpfWZ1bmN0aW9uIEFpKCl7fWZ1bmN0aW9uIEJpKGEsYil7dmFyIGM9ZGkoKTtiPXZvaWQgMD09PWI/bnVsbDpiO3ZhciBkPWMubWVtb2l6ZWRTdGF0ZTtpZihudWxsIT09ZCYmbnVsbCE9PWImJldoKGIsZFsxXSkpcmV0dXJuIGRbMF07Yy5tZW1vaXplZFN0YXRlPVthLGJdO3JldHVybiBhfVxuZnVuY3Rpb24gQ2koYSxiKXt2YXIgYz1kaSgpO2I9dm9pZCAwPT09Yj9udWxsOmI7dmFyIGQ9Yy5tZW1vaXplZFN0YXRlO2lmKG51bGwhPT1kJiZudWxsIT09YiYmV2goYixkWzFdKSlyZXR1cm4gZFswXTthPWEoKTtjLm1lbW9pemVkU3RhdGU9W2EsYl07cmV0dXJuIGF9ZnVuY3Rpb24gRGkoYSxiLGMpe2lmKDA9PT0oUmgmMjEpKXJldHVybiBhLmJhc2VTdGF0ZSYmKGEuYmFzZVN0YXRlPSExLFVnPSEwKSxhLm1lbW9pemVkU3RhdGU9YztIZShjLGIpfHwoYz15YygpLE4ubGFuZXN8PWMsaGh8PWMsYS5iYXNlU3RhdGU9ITApO3JldHVybiBifWZ1bmN0aW9uIEVpKGEsYil7dmFyIGM9QztDPTAhPT1jJiY0PmM/Yzo0O2EoITApO3ZhciBkPVFoLnRyYW5zaXRpb247UWgudHJhbnNpdGlvbj17fTt0cnl7YSghMSksYigpfWZpbmFsbHl7Qz1jLFFoLnRyYW5zaXRpb249ZH19ZnVuY3Rpb24gRmkoKXtyZXR1cm4gZGkoKS5tZW1vaXplZFN0YXRlfVxuZnVuY3Rpb24gR2koYSxiLGMpe3ZhciBkPWxoKGEpO2M9e2xhbmU6ZCxhY3Rpb246YyxoYXNFYWdlclN0YXRlOiExLGVhZ2VyU3RhdGU6bnVsbCxuZXh0Om51bGx9O2lmKEhpKGEpKUlpKGIsYyk7ZWxzZSBpZihjPVlnKGEsYixjLGQpLG51bGwhPT1jKXt2YXIgZT1MKCk7bWgoYyxhLGQsZSk7SmkoYyxiLGQpfX1cbmZ1bmN0aW9uIHJpKGEsYixjKXt2YXIgZD1saChhKSxlPXtsYW5lOmQsYWN0aW9uOmMsaGFzRWFnZXJTdGF0ZTohMSxlYWdlclN0YXRlOm51bGwsbmV4dDpudWxsfTtpZihIaShhKSlJaShiLGUpO2Vsc2V7dmFyIGY9YS5hbHRlcm5hdGU7aWYoMD09PWEubGFuZXMmJihudWxsPT09Znx8MD09PWYubGFuZXMpJiYoZj1iLmxhc3RSZW5kZXJlZFJlZHVjZXIsbnVsbCE9PWYpKXRyeXt2YXIgZz1iLmxhc3RSZW5kZXJlZFN0YXRlLGg9ZihnLGMpO2UuaGFzRWFnZXJTdGF0ZT0hMDtlLmVhZ2VyU3RhdGU9aDtpZihIZShoLGcpKXt2YXIgaz1iLmludGVybGVhdmVkO251bGw9PT1rPyhlLm5leHQ9ZSxYZyhiKSk6KGUubmV4dD1rLm5leHQsay5uZXh0PWUpO2IuaW50ZXJsZWF2ZWQ9ZTtyZXR1cm59fWNhdGNoKGwpe31maW5hbGx5e31jPVlnKGEsYixlLGQpO251bGwhPT1jJiYoZT1MKCksbWgoYyxhLGQsZSksSmkoYyxiLGQpKX19XG5mdW5jdGlvbiBIaShhKXt2YXIgYj1hLmFsdGVybmF0ZTtyZXR1cm4gYT09PU58fG51bGwhPT1iJiZiPT09Tn1mdW5jdGlvbiBJaShhLGIpe1RoPVNoPSEwO3ZhciBjPWEucGVuZGluZztudWxsPT09Yz9iLm5leHQ9YjooYi5uZXh0PWMubmV4dCxjLm5leHQ9Yik7YS5wZW5kaW5nPWJ9ZnVuY3Rpb24gSmkoYSxiLGMpe2lmKDAhPT0oYyY0MTk0MjQwKSl7dmFyIGQ9Yi5sYW5lcztkJj1hLnBlbmRpbmdMYW5lcztjfD1kO2IubGFuZXM9YztDYyhhLGMpfX1cbnZhciBhaT17cmVhZENvbnRleHQ6VmcsdXNlQ2FsbGJhY2s6USx1c2VDb250ZXh0OlEsdXNlRWZmZWN0OlEsdXNlSW1wZXJhdGl2ZUhhbmRsZTpRLHVzZUluc2VydGlvbkVmZmVjdDpRLHVzZUxheW91dEVmZmVjdDpRLHVzZU1lbW86USx1c2VSZWR1Y2VyOlEsdXNlUmVmOlEsdXNlU3RhdGU6USx1c2VEZWJ1Z1ZhbHVlOlEsdXNlRGVmZXJyZWRWYWx1ZTpRLHVzZVRyYW5zaXRpb246USx1c2VNdXRhYmxlU291cmNlOlEsdXNlU3luY0V4dGVybmFsU3RvcmU6USx1c2VJZDpRLHVuc3RhYmxlX2lzTmV3UmVjb25jaWxlcjohMX0sWWg9e3JlYWRDb250ZXh0OlZnLHVzZUNhbGxiYWNrOmZ1bmN0aW9uKGEsYil7Y2koKS5tZW1vaXplZFN0YXRlPVthLHZvaWQgMD09PWI/bnVsbDpiXTtyZXR1cm4gYX0sdXNlQ29udGV4dDpWZyx1c2VFZmZlY3Q6dmksdXNlSW1wZXJhdGl2ZUhhbmRsZTpmdW5jdGlvbihhLGIsYyl7Yz1udWxsIT09YyYmdm9pZCAwIT09Yz9jLmNvbmNhdChbYV0pOm51bGw7cmV0dXJuIHRpKDQxOTQzMDgsXG40LHlpLmJpbmQobnVsbCxiLGEpLGMpfSx1c2VMYXlvdXRFZmZlY3Q6ZnVuY3Rpb24oYSxiKXtyZXR1cm4gdGkoNDE5NDMwOCw0LGEsYil9LHVzZUluc2VydGlvbkVmZmVjdDpmdW5jdGlvbihhLGIpe3JldHVybiB0aSg0LDIsYSxiKX0sdXNlTWVtbzpmdW5jdGlvbihhLGIpe3ZhciBjPWNpKCk7Yj12b2lkIDA9PT1iP251bGw6YjthPWEoKTtjLm1lbW9pemVkU3RhdGU9W2EsYl07cmV0dXJuIGF9LHVzZVJlZHVjZXI6ZnVuY3Rpb24oYSxiLGMpe3ZhciBkPWNpKCk7Yj12b2lkIDAhPT1jP2MoYik6YjtkLm1lbW9pemVkU3RhdGU9ZC5iYXNlU3RhdGU9YjthPXtwZW5kaW5nOm51bGwsaW50ZXJsZWF2ZWQ6bnVsbCxsYW5lczowLGRpc3BhdGNoOm51bGwsbGFzdFJlbmRlcmVkUmVkdWNlcjphLGxhc3RSZW5kZXJlZFN0YXRlOmJ9O2QucXVldWU9YTthPWEuZGlzcGF0Y2g9R2kuYmluZChudWxsLE4sYSk7cmV0dXJuW2QubWVtb2l6ZWRTdGF0ZSxhXX0sdXNlUmVmOmZ1bmN0aW9uKGEpe3ZhciBiPVxuY2koKTthPXtjdXJyZW50OmF9O3JldHVybiBiLm1lbW9pemVkU3RhdGU9YX0sdXNlU3RhdGU6cWksdXNlRGVidWdWYWx1ZTpBaSx1c2VEZWZlcnJlZFZhbHVlOmZ1bmN0aW9uKGEpe3JldHVybiBjaSgpLm1lbW9pemVkU3RhdGU9YX0sdXNlVHJhbnNpdGlvbjpmdW5jdGlvbigpe3ZhciBhPXFpKCExKSxiPWFbMF07YT1FaS5iaW5kKG51bGwsYVsxXSk7Y2koKS5tZW1vaXplZFN0YXRlPWE7cmV0dXJuW2IsYV19LHVzZU11dGFibGVTb3VyY2U6ZnVuY3Rpb24oKXt9LHVzZVN5bmNFeHRlcm5hbFN0b3JlOmZ1bmN0aW9uKGEsYixjKXt2YXIgZD1OLGU9Y2koKTtpZihJKXtpZih2b2lkIDA9PT1jKXRocm93IEVycm9yKHAoNDA3KSk7Yz1jKCl9ZWxzZXtjPWIoKTtpZihudWxsPT09Uil0aHJvdyBFcnJvcihwKDM0OSkpOzAhPT0oUmgmMzApfHxuaShkLGIsYyl9ZS5tZW1vaXplZFN0YXRlPWM7dmFyIGY9e3ZhbHVlOmMsZ2V0U25hcHNob3Q6Yn07ZS5xdWV1ZT1mO3ZpKGtpLmJpbmQobnVsbCxkLFxuZixhKSxbYV0pO2QuZmxhZ3N8PTIwNDg7bGkoOSxtaS5iaW5kKG51bGwsZCxmLGMsYiksdm9pZCAwLG51bGwpO3JldHVybiBjfSx1c2VJZDpmdW5jdGlvbigpe3ZhciBhPWNpKCksYj1SLmlkZW50aWZpZXJQcmVmaXg7aWYoSSl7dmFyIGM9c2c7dmFyIGQ9cmc7Yz0oZCZ+KDE8PDMyLW9jKGQpLTEpKS50b1N0cmluZygzMikrYztiPVwiOlwiK2IrXCJSXCIrYztjPVVoKys7MDxjJiYoYis9XCJIXCIrYy50b1N0cmluZygzMikpO2IrPVwiOlwifWVsc2UgYz1WaCsrLGI9XCI6XCIrYitcInJcIitjLnRvU3RyaW5nKDMyKStcIjpcIjtyZXR1cm4gYS5tZW1vaXplZFN0YXRlPWJ9LHVuc3RhYmxlX2lzTmV3UmVjb25jaWxlcjohMX0sWmg9e3JlYWRDb250ZXh0OlZnLHVzZUNhbGxiYWNrOkJpLHVzZUNvbnRleHQ6VmcsdXNlRWZmZWN0OmppLHVzZUltcGVyYXRpdmVIYW5kbGU6emksdXNlSW5zZXJ0aW9uRWZmZWN0OndpLHVzZUxheW91dEVmZmVjdDp4aSx1c2VNZW1vOkNpLHVzZVJlZHVjZXI6ZmksdXNlUmVmOnNpLHVzZVN0YXRlOmZ1bmN0aW9uKCl7cmV0dXJuIGZpKGVpKX0sXG51c2VEZWJ1Z1ZhbHVlOkFpLHVzZURlZmVycmVkVmFsdWU6ZnVuY3Rpb24oYSl7dmFyIGI9ZGkoKTtyZXR1cm4gRGkoYixPLm1lbW9pemVkU3RhdGUsYSl9LHVzZVRyYW5zaXRpb246ZnVuY3Rpb24oKXt2YXIgYT1maShlaSlbMF0sYj1kaSgpLm1lbW9pemVkU3RhdGU7cmV0dXJuW2EsYl19LHVzZU11dGFibGVTb3VyY2U6aGksdXNlU3luY0V4dGVybmFsU3RvcmU6aWksdXNlSWQ6RmksdW5zdGFibGVfaXNOZXdSZWNvbmNpbGVyOiExfSwkaD17cmVhZENvbnRleHQ6VmcsdXNlQ2FsbGJhY2s6QmksdXNlQ29udGV4dDpWZyx1c2VFZmZlY3Q6amksdXNlSW1wZXJhdGl2ZUhhbmRsZTp6aSx1c2VJbnNlcnRpb25FZmZlY3Q6d2ksdXNlTGF5b3V0RWZmZWN0OnhpLHVzZU1lbW86Q2ksdXNlUmVkdWNlcjpnaSx1c2VSZWY6c2ksdXNlU3RhdGU6ZnVuY3Rpb24oKXtyZXR1cm4gZ2koZWkpfSx1c2VEZWJ1Z1ZhbHVlOkFpLHVzZURlZmVycmVkVmFsdWU6ZnVuY3Rpb24oYSl7dmFyIGI9ZGkoKTtyZXR1cm4gbnVsbD09PVxuTz9iLm1lbW9pemVkU3RhdGU9YTpEaShiLE8ubWVtb2l6ZWRTdGF0ZSxhKX0sdXNlVHJhbnNpdGlvbjpmdW5jdGlvbigpe3ZhciBhPWdpKGVpKVswXSxiPWRpKCkubWVtb2l6ZWRTdGF0ZTtyZXR1cm5bYSxiXX0sdXNlTXV0YWJsZVNvdXJjZTpoaSx1c2VTeW5jRXh0ZXJuYWxTdG9yZTppaSx1c2VJZDpGaSx1bnN0YWJsZV9pc05ld1JlY29uY2lsZXI6ITF9O2Z1bmN0aW9uIEtpKGEsYil7dHJ5e3ZhciBjPVwiXCIsZD1iO2RvIGMrPVBhKGQpLGQ9ZC5yZXR1cm47d2hpbGUoZCk7dmFyIGU9Y31jYXRjaChmKXtlPVwiXFxuRXJyb3IgZ2VuZXJhdGluZyBzdGFjazogXCIrZi5tZXNzYWdlK1wiXFxuXCIrZi5zdGFja31yZXR1cm57dmFsdWU6YSxzb3VyY2U6YixzdGFjazplLGRpZ2VzdDpudWxsfX1mdW5jdGlvbiBMaShhLGIsYyl7cmV0dXJue3ZhbHVlOmEsc291cmNlOm51bGwsc3RhY2s6bnVsbCE9Yz9jOm51bGwsZGlnZXN0Om51bGwhPWI/YjpudWxsfX1cbmZ1bmN0aW9uIE1pKGEsYil7dHJ5e2NvbnNvbGUuZXJyb3IoYi52YWx1ZSl9Y2F0Y2goYyl7c2V0VGltZW91dChmdW5jdGlvbigpe3Rocm93IGM7fSl9fXZhciBOaT1cImZ1bmN0aW9uXCI9PT10eXBlb2YgV2Vha01hcD9XZWFrTWFwOk1hcDtmdW5jdGlvbiBPaShhLGIsYyl7Yz1jaCgtMSxjKTtjLnRhZz0zO2MucGF5bG9hZD17ZWxlbWVudDpudWxsfTt2YXIgZD1iLnZhbHVlO2MuY2FsbGJhY2s9ZnVuY3Rpb24oKXtQaXx8KFBpPSEwLFFpPWQpO01pKGEsYil9O3JldHVybiBjfVxuZnVuY3Rpb24gUmkoYSxiLGMpe2M9Y2goLTEsYyk7Yy50YWc9Mzt2YXIgZD1hLnR5cGUuZ2V0RGVyaXZlZFN0YXRlRnJvbUVycm9yO2lmKFwiZnVuY3Rpb25cIj09PXR5cGVvZiBkKXt2YXIgZT1iLnZhbHVlO2MucGF5bG9hZD1mdW5jdGlvbigpe3JldHVybiBkKGUpfTtjLmNhbGxiYWNrPWZ1bmN0aW9uKCl7TWkoYSxiKX19dmFyIGY9YS5zdGF0ZU5vZGU7bnVsbCE9PWYmJlwiZnVuY3Rpb25cIj09PXR5cGVvZiBmLmNvbXBvbmVudERpZENhdGNoJiYoYy5jYWxsYmFjaz1mdW5jdGlvbigpe01pKGEsYik7XCJmdW5jdGlvblwiIT09dHlwZW9mIGQmJihudWxsPT09U2k/U2k9bmV3IFNldChbdGhpc10pOlNpLmFkZCh0aGlzKSk7dmFyIGM9Yi5zdGFjazt0aGlzLmNvbXBvbmVudERpZENhdGNoKGIudmFsdWUse2NvbXBvbmVudFN0YWNrOm51bGwhPT1jP2M6XCJcIn0pfSk7cmV0dXJuIGN9XG5mdW5jdGlvbiBUaShhLGIsYyl7dmFyIGQ9YS5waW5nQ2FjaGU7aWYobnVsbD09PWQpe2Q9YS5waW5nQ2FjaGU9bmV3IE5pO3ZhciBlPW5ldyBTZXQ7ZC5zZXQoYixlKX1lbHNlIGU9ZC5nZXQoYiksdm9pZCAwPT09ZSYmKGU9bmV3IFNldCxkLnNldChiLGUpKTtlLmhhcyhjKXx8KGUuYWRkKGMpLGE9VWkuYmluZChudWxsLGEsYixjKSxiLnRoZW4oYSxhKSl9ZnVuY3Rpb24gVmkoYSl7ZG97dmFyIGI7aWYoYj0xMz09PWEudGFnKWI9YS5tZW1vaXplZFN0YXRlLGI9bnVsbCE9PWI/bnVsbCE9PWIuZGVoeWRyYXRlZD8hMDohMTohMDtpZihiKXJldHVybiBhO2E9YS5yZXR1cm59d2hpbGUobnVsbCE9PWEpO3JldHVybiBudWxsfVxuZnVuY3Rpb24gV2koYSxiLGMsZCxlKXtpZigwPT09KGEubW9kZSYxKSlyZXR1cm4gYT09PWI/YS5mbGFnc3w9NjU1MzY6KGEuZmxhZ3N8PTEyOCxjLmZsYWdzfD0xMzEwNzIsYy5mbGFncyY9LTUyODA1LDE9PT1jLnRhZyYmKG51bGw9PT1jLmFsdGVybmF0ZT9jLnRhZz0xNzooYj1jaCgtMSwxKSxiLnRhZz0yLGRoKGMsYiwxKSkpLGMubGFuZXN8PTEpLGE7YS5mbGFnc3w9NjU1MzY7YS5sYW5lcz1lO3JldHVybiBhfXZhciBYaT11YS5SZWFjdEN1cnJlbnRPd25lcixVZz0hMTtmdW5jdGlvbiBZaShhLGIsYyxkKXtiLmNoaWxkPW51bGw9PT1hP0NoKGIsbnVsbCxjLGQpOkJoKGIsYS5jaGlsZCxjLGQpfVxuZnVuY3Rpb24gWmkoYSxiLGMsZCxlKXtjPWMucmVuZGVyO3ZhciBmPWIucmVmO1RnKGIsZSk7ZD1YaChhLGIsYyxkLGYsZSk7Yz1iaSgpO2lmKG51bGwhPT1hJiYhVWcpcmV0dXJuIGIudXBkYXRlUXVldWU9YS51cGRhdGVRdWV1ZSxiLmZsYWdzJj0tMjA1MyxhLmxhbmVzJj1+ZSwkaShhLGIsZSk7SSYmYyYmdmcoYik7Yi5mbGFnc3w9MTtZaShhLGIsZCxlKTtyZXR1cm4gYi5jaGlsZH1cbmZ1bmN0aW9uIGFqKGEsYixjLGQsZSl7aWYobnVsbD09PWEpe3ZhciBmPWMudHlwZTtpZihcImZ1bmN0aW9uXCI9PT10eXBlb2YgZiYmIWJqKGYpJiZ2b2lkIDA9PT1mLmRlZmF1bHRQcm9wcyYmbnVsbD09PWMuY29tcGFyZSYmdm9pZCAwPT09Yy5kZWZhdWx0UHJvcHMpcmV0dXJuIGIudGFnPTE1LGIudHlwZT1mLGNqKGEsYixmLGQsZSk7YT15aChjLnR5cGUsbnVsbCxkLGIsYi5tb2RlLGUpO2EucmVmPWIucmVmO2EucmV0dXJuPWI7cmV0dXJuIGIuY2hpbGQ9YX1mPWEuY2hpbGQ7aWYoMD09PShhLmxhbmVzJmUpKXt2YXIgZz1mLm1lbW9pemVkUHJvcHM7Yz1jLmNvbXBhcmU7Yz1udWxsIT09Yz9jOkllO2lmKGMoZyxkKSYmYS5yZWY9PT1iLnJlZilyZXR1cm4gJGkoYSxiLGUpfWIuZmxhZ3N8PTE7YT13aChmLGQpO2EucmVmPWIucmVmO2EucmV0dXJuPWI7cmV0dXJuIGIuY2hpbGQ9YX1cbmZ1bmN0aW9uIGNqKGEsYixjLGQsZSl7aWYobnVsbCE9PWEpe3ZhciBmPWEubWVtb2l6ZWRQcm9wcztpZihJZShmLGQpJiZhLnJlZj09PWIucmVmKWlmKFVnPSExLGIucGVuZGluZ1Byb3BzPWQ9ZiwwIT09KGEubGFuZXMmZSkpMCE9PShhLmZsYWdzJjEzMTA3MikmJihVZz0hMCk7ZWxzZSByZXR1cm4gYi5sYW5lcz1hLmxhbmVzLCRpKGEsYixlKX1yZXR1cm4gZGooYSxiLGMsZCxlKX1cbmZ1bmN0aW9uIGVqKGEsYixjKXt2YXIgZD1iLnBlbmRpbmdQcm9wcyxlPWQuY2hpbGRyZW4sZj1udWxsIT09YT9hLm1lbW9pemVkU3RhdGU6bnVsbDtpZihcImhpZGRlblwiPT09ZC5tb2RlKWlmKDA9PT0oYi5tb2RlJjEpKWIubWVtb2l6ZWRTdGF0ZT17YmFzZUxhbmVzOjAsY2FjaGVQb29sOm51bGwsdHJhbnNpdGlvbnM6bnVsbH0sRyhmaixnaiksZ2p8PWM7ZWxzZXtpZigwPT09KGMmMTA3Mzc0MTgyNCkpcmV0dXJuIGE9bnVsbCE9PWY/Zi5iYXNlTGFuZXN8YzpjLGIubGFuZXM9Yi5jaGlsZExhbmVzPTEwNzM3NDE4MjQsYi5tZW1vaXplZFN0YXRlPXtiYXNlTGFuZXM6YSxjYWNoZVBvb2w6bnVsbCx0cmFuc2l0aW9uczpudWxsfSxiLnVwZGF0ZVF1ZXVlPW51bGwsRyhmaixnaiksZ2p8PWEsbnVsbDtiLm1lbW9pemVkU3RhdGU9e2Jhc2VMYW5lczowLGNhY2hlUG9vbDpudWxsLHRyYW5zaXRpb25zOm51bGx9O2Q9bnVsbCE9PWY/Zi5iYXNlTGFuZXM6YztHKGZqLGdqKTtnanw9ZH1lbHNlIG51bGwhPT1cbmY/KGQ9Zi5iYXNlTGFuZXN8YyxiLm1lbW9pemVkU3RhdGU9bnVsbCk6ZD1jLEcoZmosZ2opLGdqfD1kO1lpKGEsYixlLGMpO3JldHVybiBiLmNoaWxkfWZ1bmN0aW9uIGhqKGEsYil7dmFyIGM9Yi5yZWY7aWYobnVsbD09PWEmJm51bGwhPT1jfHxudWxsIT09YSYmYS5yZWYhPT1jKWIuZmxhZ3N8PTUxMixiLmZsYWdzfD0yMDk3MTUyfWZ1bmN0aW9uIGRqKGEsYixjLGQsZSl7dmFyIGY9WmYoYyk/WGY6SC5jdXJyZW50O2Y9WWYoYixmKTtUZyhiLGUpO2M9WGgoYSxiLGMsZCxmLGUpO2Q9YmkoKTtpZihudWxsIT09YSYmIVVnKXJldHVybiBiLnVwZGF0ZVF1ZXVlPWEudXBkYXRlUXVldWUsYi5mbGFncyY9LTIwNTMsYS5sYW5lcyY9fmUsJGkoYSxiLGUpO0kmJmQmJnZnKGIpO2IuZmxhZ3N8PTE7WWkoYSxiLGMsZSk7cmV0dXJuIGIuY2hpbGR9XG5mdW5jdGlvbiBpaihhLGIsYyxkLGUpe2lmKFpmKGMpKXt2YXIgZj0hMDtjZyhiKX1lbHNlIGY9ITE7VGcoYixlKTtpZihudWxsPT09Yi5zdGF0ZU5vZGUpamooYSxiKSxwaChiLGMsZCkscmgoYixjLGQsZSksZD0hMDtlbHNlIGlmKG51bGw9PT1hKXt2YXIgZz1iLnN0YXRlTm9kZSxoPWIubWVtb2l6ZWRQcm9wcztnLnByb3BzPWg7dmFyIGs9Zy5jb250ZXh0LGw9Yy5jb250ZXh0VHlwZTtcIm9iamVjdFwiPT09dHlwZW9mIGwmJm51bGwhPT1sP2w9VmcobCk6KGw9WmYoYyk/WGY6SC5jdXJyZW50LGw9WWYoYixsKSk7dmFyIG09Yy5nZXREZXJpdmVkU3RhdGVGcm9tUHJvcHMscT1cImZ1bmN0aW9uXCI9PT10eXBlb2YgbXx8XCJmdW5jdGlvblwiPT09dHlwZW9mIGcuZ2V0U25hcHNob3RCZWZvcmVVcGRhdGU7cXx8XCJmdW5jdGlvblwiIT09dHlwZW9mIGcuVU5TQUZFX2NvbXBvbmVudFdpbGxSZWNlaXZlUHJvcHMmJlwiZnVuY3Rpb25cIiE9PXR5cGVvZiBnLmNvbXBvbmVudFdpbGxSZWNlaXZlUHJvcHN8fFxuKGghPT1kfHxrIT09bCkmJnFoKGIsZyxkLGwpOyRnPSExO3ZhciByPWIubWVtb2l6ZWRTdGF0ZTtnLnN0YXRlPXI7Z2goYixkLGcsZSk7az1iLm1lbW9pemVkU3RhdGU7aCE9PWR8fHIhPT1rfHxXZi5jdXJyZW50fHwkZz8oXCJmdW5jdGlvblwiPT09dHlwZW9mIG0mJihraChiLGMsbSxkKSxrPWIubWVtb2l6ZWRTdGF0ZSksKGg9JGd8fG9oKGIsYyxoLGQscixrLGwpKT8ocXx8XCJmdW5jdGlvblwiIT09dHlwZW9mIGcuVU5TQUZFX2NvbXBvbmVudFdpbGxNb3VudCYmXCJmdW5jdGlvblwiIT09dHlwZW9mIGcuY29tcG9uZW50V2lsbE1vdW50fHwoXCJmdW5jdGlvblwiPT09dHlwZW9mIGcuY29tcG9uZW50V2lsbE1vdW50JiZnLmNvbXBvbmVudFdpbGxNb3VudCgpLFwiZnVuY3Rpb25cIj09PXR5cGVvZiBnLlVOU0FGRV9jb21wb25lbnRXaWxsTW91bnQmJmcuVU5TQUZFX2NvbXBvbmVudFdpbGxNb3VudCgpKSxcImZ1bmN0aW9uXCI9PT10eXBlb2YgZy5jb21wb25lbnREaWRNb3VudCYmKGIuZmxhZ3N8PTQxOTQzMDgpKTpcbihcImZ1bmN0aW9uXCI9PT10eXBlb2YgZy5jb21wb25lbnREaWRNb3VudCYmKGIuZmxhZ3N8PTQxOTQzMDgpLGIubWVtb2l6ZWRQcm9wcz1kLGIubWVtb2l6ZWRTdGF0ZT1rKSxnLnByb3BzPWQsZy5zdGF0ZT1rLGcuY29udGV4dD1sLGQ9aCk6KFwiZnVuY3Rpb25cIj09PXR5cGVvZiBnLmNvbXBvbmVudERpZE1vdW50JiYoYi5mbGFnc3w9NDE5NDMwOCksZD0hMSl9ZWxzZXtnPWIuc3RhdGVOb2RlO2JoKGEsYik7aD1iLm1lbW9pemVkUHJvcHM7bD1iLnR5cGU9PT1iLmVsZW1lbnRUeXBlP2g6TGcoYi50eXBlLGgpO2cucHJvcHM9bDtxPWIucGVuZGluZ1Byb3BzO3I9Zy5jb250ZXh0O2s9Yy5jb250ZXh0VHlwZTtcIm9iamVjdFwiPT09dHlwZW9mIGsmJm51bGwhPT1rP2s9Vmcoayk6KGs9WmYoYyk/WGY6SC5jdXJyZW50LGs9WWYoYixrKSk7dmFyIHk9Yy5nZXREZXJpdmVkU3RhdGVGcm9tUHJvcHM7KG09XCJmdW5jdGlvblwiPT09dHlwZW9mIHl8fFwiZnVuY3Rpb25cIj09PXR5cGVvZiBnLmdldFNuYXBzaG90QmVmb3JlVXBkYXRlKXx8XG5cImZ1bmN0aW9uXCIhPT10eXBlb2YgZy5VTlNBRkVfY29tcG9uZW50V2lsbFJlY2VpdmVQcm9wcyYmXCJmdW5jdGlvblwiIT09dHlwZW9mIGcuY29tcG9uZW50V2lsbFJlY2VpdmVQcm9wc3x8KGghPT1xfHxyIT09aykmJnFoKGIsZyxkLGspOyRnPSExO3I9Yi5tZW1vaXplZFN0YXRlO2cuc3RhdGU9cjtnaChiLGQsZyxlKTt2YXIgbj1iLm1lbW9pemVkU3RhdGU7aCE9PXF8fHIhPT1ufHxXZi5jdXJyZW50fHwkZz8oXCJmdW5jdGlvblwiPT09dHlwZW9mIHkmJihraChiLGMseSxkKSxuPWIubWVtb2l6ZWRTdGF0ZSksKGw9JGd8fG9oKGIsYyxsLGQscixuLGspfHwhMSk/KG18fFwiZnVuY3Rpb25cIiE9PXR5cGVvZiBnLlVOU0FGRV9jb21wb25lbnRXaWxsVXBkYXRlJiZcImZ1bmN0aW9uXCIhPT10eXBlb2YgZy5jb21wb25lbnRXaWxsVXBkYXRlfHwoXCJmdW5jdGlvblwiPT09dHlwZW9mIGcuY29tcG9uZW50V2lsbFVwZGF0ZSYmZy5jb21wb25lbnRXaWxsVXBkYXRlKGQsbixrKSxcImZ1bmN0aW9uXCI9PT10eXBlb2YgZy5VTlNBRkVfY29tcG9uZW50V2lsbFVwZGF0ZSYmXG5nLlVOU0FGRV9jb21wb25lbnRXaWxsVXBkYXRlKGQsbixrKSksXCJmdW5jdGlvblwiPT09dHlwZW9mIGcuY29tcG9uZW50RGlkVXBkYXRlJiYoYi5mbGFnc3w9NCksXCJmdW5jdGlvblwiPT09dHlwZW9mIGcuZ2V0U25hcHNob3RCZWZvcmVVcGRhdGUmJihiLmZsYWdzfD0xMDI0KSk6KFwiZnVuY3Rpb25cIiE9PXR5cGVvZiBnLmNvbXBvbmVudERpZFVwZGF0ZXx8aD09PWEubWVtb2l6ZWRQcm9wcyYmcj09PWEubWVtb2l6ZWRTdGF0ZXx8KGIuZmxhZ3N8PTQpLFwiZnVuY3Rpb25cIiE9PXR5cGVvZiBnLmdldFNuYXBzaG90QmVmb3JlVXBkYXRlfHxoPT09YS5tZW1vaXplZFByb3BzJiZyPT09YS5tZW1vaXplZFN0YXRlfHwoYi5mbGFnc3w9MTAyNCksYi5tZW1vaXplZFByb3BzPWQsYi5tZW1vaXplZFN0YXRlPW4pLGcucHJvcHM9ZCxnLnN0YXRlPW4sZy5jb250ZXh0PWssZD1sKTooXCJmdW5jdGlvblwiIT09dHlwZW9mIGcuY29tcG9uZW50RGlkVXBkYXRlfHxoPT09YS5tZW1vaXplZFByb3BzJiZyPT09XG5hLm1lbW9pemVkU3RhdGV8fChiLmZsYWdzfD00KSxcImZ1bmN0aW9uXCIhPT10eXBlb2YgZy5nZXRTbmFwc2hvdEJlZm9yZVVwZGF0ZXx8aD09PWEubWVtb2l6ZWRQcm9wcyYmcj09PWEubWVtb2l6ZWRTdGF0ZXx8KGIuZmxhZ3N8PTEwMjQpLGQ9ITEpfXJldHVybiBraihhLGIsYyxkLGYsZSl9XG5mdW5jdGlvbiBraihhLGIsYyxkLGUsZil7aGooYSxiKTt2YXIgZz0wIT09KGIuZmxhZ3MmMTI4KTtpZighZCYmIWcpcmV0dXJuIGUmJmRnKGIsYywhMSksJGkoYSxiLGYpO2Q9Yi5zdGF0ZU5vZGU7WGkuY3VycmVudD1iO3ZhciBoPWcmJlwiZnVuY3Rpb25cIiE9PXR5cGVvZiBjLmdldERlcml2ZWRTdGF0ZUZyb21FcnJvcj9udWxsOmQucmVuZGVyKCk7Yi5mbGFnc3w9MTtudWxsIT09YSYmZz8oYi5jaGlsZD1CaChiLGEuY2hpbGQsbnVsbCxmKSxiLmNoaWxkPUJoKGIsbnVsbCxoLGYpKTpZaShhLGIsaCxmKTtiLm1lbW9pemVkU3RhdGU9ZC5zdGF0ZTtlJiZkZyhiLGMsITApO3JldHVybiBiLmNoaWxkfWZ1bmN0aW9uIGxqKGEpe3ZhciBiPWEuc3RhdGVOb2RlO2IucGVuZGluZ0NvbnRleHQ/YWcoYSxiLnBlbmRpbmdDb250ZXh0LGIucGVuZGluZ0NvbnRleHQhPT1iLmNvbnRleHQpOmIuY29udGV4dCYmYWcoYSxiLmNvbnRleHQsITEpO0loKGEsYi5jb250YWluZXJJbmZvKX1cbmZ1bmN0aW9uIG1qKGEsYixjLGQsZSl7SWcoKTtKZyhlKTtiLmZsYWdzfD0yNTY7WWkoYSxiLGMsZCk7cmV0dXJuIGIuY2hpbGR9dmFyIG5qPXtkZWh5ZHJhdGVkOm51bGwsdHJlZUNvbnRleHQ6bnVsbCxyZXRyeUxhbmU6MH07ZnVuY3Rpb24gb2ooYSl7cmV0dXJue2Jhc2VMYW5lczphLGNhY2hlUG9vbDpudWxsLHRyYW5zaXRpb25zOm51bGx9fVxuZnVuY3Rpb24gcGooYSxiLGMpe3ZhciBkPWIucGVuZGluZ1Byb3BzLGU9TS5jdXJyZW50LGY9ITEsZz0wIT09KGIuZmxhZ3MmMTI4KSxoOyhoPWcpfHwoaD1udWxsIT09YSYmbnVsbD09PWEubWVtb2l6ZWRTdGF0ZT8hMTowIT09KGUmMikpO2lmKGgpZj0hMCxiLmZsYWdzJj0tMTI5O2Vsc2UgaWYobnVsbD09PWF8fG51bGwhPT1hLm1lbW9pemVkU3RhdGUpZXw9MTtHKE0sZSYxKTtpZihudWxsPT09YSl7RWcoYik7YT1iLm1lbW9pemVkU3RhdGU7aWYobnVsbCE9PWEmJihhPWEuZGVoeWRyYXRlZCxudWxsIT09YSkpcmV0dXJuIDA9PT0oYi5tb2RlJjEpP2IubGFuZXM9MTpcIiQhXCI9PT1hLmRhdGE/Yi5sYW5lcz04OmIubGFuZXM9MTA3Mzc0MTgyNCxudWxsO2c9ZC5jaGlsZHJlbjthPWQuZmFsbGJhY2s7cmV0dXJuIGY/KGQ9Yi5tb2RlLGY9Yi5jaGlsZCxnPXttb2RlOlwiaGlkZGVuXCIsY2hpbGRyZW46Z30sMD09PShkJjEpJiZudWxsIT09Zj8oZi5jaGlsZExhbmVzPTAsZi5wZW5kaW5nUHJvcHM9XG5nKTpmPXFqKGcsZCwwLG51bGwpLGE9QWgoYSxkLGMsbnVsbCksZi5yZXR1cm49YixhLnJldHVybj1iLGYuc2libGluZz1hLGIuY2hpbGQ9ZixiLmNoaWxkLm1lbW9pemVkU3RhdGU9b2ooYyksYi5tZW1vaXplZFN0YXRlPW5qLGEpOnJqKGIsZyl9ZT1hLm1lbW9pemVkU3RhdGU7aWYobnVsbCE9PWUmJihoPWUuZGVoeWRyYXRlZCxudWxsIT09aCkpcmV0dXJuIHNqKGEsYixnLGQsaCxlLGMpO2lmKGYpe2Y9ZC5mYWxsYmFjaztnPWIubW9kZTtlPWEuY2hpbGQ7aD1lLnNpYmxpbmc7dmFyIGs9e21vZGU6XCJoaWRkZW5cIixjaGlsZHJlbjpkLmNoaWxkcmVufTswPT09KGcmMSkmJmIuY2hpbGQhPT1lPyhkPWIuY2hpbGQsZC5jaGlsZExhbmVzPTAsZC5wZW5kaW5nUHJvcHM9ayxiLmRlbGV0aW9ucz1udWxsKTooZD13aChlLGspLGQuc3VidHJlZUZsYWdzPWUuc3VidHJlZUZsYWdzJjE0NjgwMDY0KTtudWxsIT09aD9mPXdoKGgsZik6KGY9QWgoZixnLGMsbnVsbCksZi5mbGFnc3w9Mik7Zi5yZXR1cm49XG5iO2QucmV0dXJuPWI7ZC5zaWJsaW5nPWY7Yi5jaGlsZD1kO2Q9ZjtmPWIuY2hpbGQ7Zz1hLmNoaWxkLm1lbW9pemVkU3RhdGU7Zz1udWxsPT09Zz9vaihjKTp7YmFzZUxhbmVzOmcuYmFzZUxhbmVzfGMsY2FjaGVQb29sOm51bGwsdHJhbnNpdGlvbnM6Zy50cmFuc2l0aW9uc307Zi5tZW1vaXplZFN0YXRlPWc7Zi5jaGlsZExhbmVzPWEuY2hpbGRMYW5lcyZ+YztiLm1lbW9pemVkU3RhdGU9bmo7cmV0dXJuIGR9Zj1hLmNoaWxkO2E9Zi5zaWJsaW5nO2Q9d2goZix7bW9kZTpcInZpc2libGVcIixjaGlsZHJlbjpkLmNoaWxkcmVufSk7MD09PShiLm1vZGUmMSkmJihkLmxhbmVzPWMpO2QucmV0dXJuPWI7ZC5zaWJsaW5nPW51bGw7bnVsbCE9PWEmJihjPWIuZGVsZXRpb25zLG51bGw9PT1jPyhiLmRlbGV0aW9ucz1bYV0sYi5mbGFnc3w9MTYpOmMucHVzaChhKSk7Yi5jaGlsZD1kO2IubWVtb2l6ZWRTdGF0ZT1udWxsO3JldHVybiBkfVxuZnVuY3Rpb24gcmooYSxiKXtiPXFqKHttb2RlOlwidmlzaWJsZVwiLGNoaWxkcmVuOmJ9LGEubW9kZSwwLG51bGwpO2IucmV0dXJuPWE7cmV0dXJuIGEuY2hpbGQ9Yn1mdW5jdGlvbiB0aihhLGIsYyxkKXtudWxsIT09ZCYmSmcoZCk7QmgoYixhLmNoaWxkLG51bGwsYyk7YT1yaihiLGIucGVuZGluZ1Byb3BzLmNoaWxkcmVuKTthLmZsYWdzfD0yO2IubWVtb2l6ZWRTdGF0ZT1udWxsO3JldHVybiBhfVxuZnVuY3Rpb24gc2ooYSxiLGMsZCxlLGYsZyl7aWYoYyl7aWYoYi5mbGFncyYyNTYpcmV0dXJuIGIuZmxhZ3MmPS0yNTcsZD1MaShFcnJvcihwKDQyMikpKSx0aihhLGIsZyxkKTtpZihudWxsIT09Yi5tZW1vaXplZFN0YXRlKXJldHVybiBiLmNoaWxkPWEuY2hpbGQsYi5mbGFnc3w9MTI4LG51bGw7Zj1kLmZhbGxiYWNrO2U9Yi5tb2RlO2Q9cWooe21vZGU6XCJ2aXNpYmxlXCIsY2hpbGRyZW46ZC5jaGlsZHJlbn0sZSwwLG51bGwpO2Y9QWgoZixlLGcsbnVsbCk7Zi5mbGFnc3w9MjtkLnJldHVybj1iO2YucmV0dXJuPWI7ZC5zaWJsaW5nPWY7Yi5jaGlsZD1kOzAhPT0oYi5tb2RlJjEpJiZCaChiLGEuY2hpbGQsbnVsbCxnKTtiLmNoaWxkLm1lbW9pemVkU3RhdGU9b2ooZyk7Yi5tZW1vaXplZFN0YXRlPW5qO3JldHVybiBmfWlmKDA9PT0oYi5tb2RlJjEpKXJldHVybiB0aihhLGIsZyxudWxsKTtpZihcIiQhXCI9PT1lLmRhdGEpe2Q9ZS5uZXh0U2libGluZyYmZS5uZXh0U2libGluZy5kYXRhc2V0O1xuaWYoZCl2YXIgaD1kLmRnc3Q7ZD1oO2Y9RXJyb3IocCg0MTkpKTtkPUxpKGYsZCx2b2lkIDApO3JldHVybiB0aihhLGIsZyxkKX1oPTAhPT0oZyZhLmNoaWxkTGFuZXMpO2lmKFVnfHxoKXtkPVI7aWYobnVsbCE9PWQpe3N3aXRjaChnJi1nKXtjYXNlIDQ6ZT0yO2JyZWFrO2Nhc2UgMTY6ZT04O2JyZWFrO2Nhc2UgNjQ6Y2FzZSAxMjg6Y2FzZSAyNTY6Y2FzZSA1MTI6Y2FzZSAxMDI0OmNhc2UgMjA0ODpjYXNlIDQwOTY6Y2FzZSA4MTkyOmNhc2UgMTYzODQ6Y2FzZSAzMjc2ODpjYXNlIDY1NTM2OmNhc2UgMTMxMDcyOmNhc2UgMjYyMTQ0OmNhc2UgNTI0Mjg4OmNhc2UgMTA0ODU3NjpjYXNlIDIwOTcxNTI6Y2FzZSA0MTk0MzA0OmNhc2UgODM4ODYwODpjYXNlIDE2Nzc3MjE2OmNhc2UgMzM1NTQ0MzI6Y2FzZSA2NzEwODg2NDplPTMyO2JyZWFrO2Nhc2UgNTM2ODcwOTEyOmU9MjY4NDM1NDU2O2JyZWFrO2RlZmF1bHQ6ZT0wfWU9MCE9PShlJihkLnN1c3BlbmRlZExhbmVzfGcpKT8wOmU7XG4wIT09ZSYmZSE9PWYucmV0cnlMYW5lJiYoZi5yZXRyeUxhbmU9ZSxaZyhhLGUpLG1oKGQsYSxlLC0xKSl9dWooKTtkPUxpKEVycm9yKHAoNDIxKSkpO3JldHVybiB0aihhLGIsZyxkKX1pZihcIiQ/XCI9PT1lLmRhdGEpcmV0dXJuIGIuZmxhZ3N8PTEyOCxiLmNoaWxkPWEuY2hpbGQsYj12ai5iaW5kKG51bGwsYSksZS5fcmVhY3RSZXRyeT1iLG51bGw7YT1mLnRyZWVDb250ZXh0O3lnPUxmKGUubmV4dFNpYmxpbmcpO3hnPWI7ST0hMDt6Zz1udWxsO251bGwhPT1hJiYob2dbcGcrK109cmcsb2dbcGcrK109c2csb2dbcGcrK109cWcscmc9YS5pZCxzZz1hLm92ZXJmbG93LHFnPWIpO2I9cmooYixkLmNoaWxkcmVuKTtiLmZsYWdzfD00MDk2O3JldHVybiBifWZ1bmN0aW9uIHdqKGEsYixjKXthLmxhbmVzfD1iO3ZhciBkPWEuYWx0ZXJuYXRlO251bGwhPT1kJiYoZC5sYW5lc3w9Yik7U2coYS5yZXR1cm4sYixjKX1cbmZ1bmN0aW9uIHhqKGEsYixjLGQsZSl7dmFyIGY9YS5tZW1vaXplZFN0YXRlO251bGw9PT1mP2EubWVtb2l6ZWRTdGF0ZT17aXNCYWNrd2FyZHM6YixyZW5kZXJpbmc6bnVsbCxyZW5kZXJpbmdTdGFydFRpbWU6MCxsYXN0OmQsdGFpbDpjLHRhaWxNb2RlOmV9OihmLmlzQmFja3dhcmRzPWIsZi5yZW5kZXJpbmc9bnVsbCxmLnJlbmRlcmluZ1N0YXJ0VGltZT0wLGYubGFzdD1kLGYudGFpbD1jLGYudGFpbE1vZGU9ZSl9XG5mdW5jdGlvbiB5aihhLGIsYyl7dmFyIGQ9Yi5wZW5kaW5nUHJvcHMsZT1kLnJldmVhbE9yZGVyLGY9ZC50YWlsO1lpKGEsYixkLmNoaWxkcmVuLGMpO2Q9TS5jdXJyZW50O2lmKDAhPT0oZCYyKSlkPWQmMXwyLGIuZmxhZ3N8PTEyODtlbHNle2lmKG51bGwhPT1hJiYwIT09KGEuZmxhZ3MmMTI4KSlhOmZvcihhPWIuY2hpbGQ7bnVsbCE9PWE7KXtpZigxMz09PWEudGFnKW51bGwhPT1hLm1lbW9pemVkU3RhdGUmJndqKGEsYyxiKTtlbHNlIGlmKDE5PT09YS50YWcpd2ooYSxjLGIpO2Vsc2UgaWYobnVsbCE9PWEuY2hpbGQpe2EuY2hpbGQucmV0dXJuPWE7YT1hLmNoaWxkO2NvbnRpbnVlfWlmKGE9PT1iKWJyZWFrIGE7Zm9yKDtudWxsPT09YS5zaWJsaW5nOyl7aWYobnVsbD09PWEucmV0dXJufHxhLnJldHVybj09PWIpYnJlYWsgYTthPWEucmV0dXJufWEuc2libGluZy5yZXR1cm49YS5yZXR1cm47YT1hLnNpYmxpbmd9ZCY9MX1HKE0sZCk7aWYoMD09PShiLm1vZGUmMSkpYi5tZW1vaXplZFN0YXRlPVxubnVsbDtlbHNlIHN3aXRjaChlKXtjYXNlIFwiZm9yd2FyZHNcIjpjPWIuY2hpbGQ7Zm9yKGU9bnVsbDtudWxsIT09YzspYT1jLmFsdGVybmF0ZSxudWxsIT09YSYmbnVsbD09PU1oKGEpJiYoZT1jKSxjPWMuc2libGluZztjPWU7bnVsbD09PWM/KGU9Yi5jaGlsZCxiLmNoaWxkPW51bGwpOihlPWMuc2libGluZyxjLnNpYmxpbmc9bnVsbCk7eGooYiwhMSxlLGMsZik7YnJlYWs7Y2FzZSBcImJhY2t3YXJkc1wiOmM9bnVsbDtlPWIuY2hpbGQ7Zm9yKGIuY2hpbGQ9bnVsbDtudWxsIT09ZTspe2E9ZS5hbHRlcm5hdGU7aWYobnVsbCE9PWEmJm51bGw9PT1NaChhKSl7Yi5jaGlsZD1lO2JyZWFrfWE9ZS5zaWJsaW5nO2Uuc2libGluZz1jO2M9ZTtlPWF9eGooYiwhMCxjLG51bGwsZik7YnJlYWs7Y2FzZSBcInRvZ2V0aGVyXCI6eGooYiwhMSxudWxsLG51bGwsdm9pZCAwKTticmVhaztkZWZhdWx0OmIubWVtb2l6ZWRTdGF0ZT1udWxsfXJldHVybiBiLmNoaWxkfVxuZnVuY3Rpb24gamooYSxiKXswPT09KGIubW9kZSYxKSYmbnVsbCE9PWEmJihhLmFsdGVybmF0ZT1udWxsLGIuYWx0ZXJuYXRlPW51bGwsYi5mbGFnc3w9Mil9ZnVuY3Rpb24gJGkoYSxiLGMpe251bGwhPT1hJiYoYi5kZXBlbmRlbmNpZXM9YS5kZXBlbmRlbmNpZXMpO2hofD1iLmxhbmVzO2lmKDA9PT0oYyZiLmNoaWxkTGFuZXMpKXJldHVybiBudWxsO2lmKG51bGwhPT1hJiZiLmNoaWxkIT09YS5jaGlsZCl0aHJvdyBFcnJvcihwKDE1MykpO2lmKG51bGwhPT1iLmNoaWxkKXthPWIuY2hpbGQ7Yz13aChhLGEucGVuZGluZ1Byb3BzKTtiLmNoaWxkPWM7Zm9yKGMucmV0dXJuPWI7bnVsbCE9PWEuc2libGluZzspYT1hLnNpYmxpbmcsYz1jLnNpYmxpbmc9d2goYSxhLnBlbmRpbmdQcm9wcyksYy5yZXR1cm49YjtjLnNpYmxpbmc9bnVsbH1yZXR1cm4gYi5jaGlsZH1cbmZ1bmN0aW9uIHpqKGEsYixjKXtzd2l0Y2goYi50YWcpe2Nhc2UgMzpsaihiKTtJZygpO2JyZWFrO2Nhc2UgNTpLaChiKTticmVhaztjYXNlIDE6WmYoYi50eXBlKSYmY2coYik7YnJlYWs7Y2FzZSA0OkloKGIsYi5zdGF0ZU5vZGUuY29udGFpbmVySW5mbyk7YnJlYWs7Y2FzZSAxMDp2YXIgZD1iLnR5cGUuX2NvbnRleHQsZT1iLm1lbW9pemVkUHJvcHMudmFsdWU7RyhNZyxkLl9jdXJyZW50VmFsdWUpO2QuX2N1cnJlbnRWYWx1ZT1lO2JyZWFrO2Nhc2UgMTM6ZD1iLm1lbW9pemVkU3RhdGU7aWYobnVsbCE9PWQpe2lmKG51bGwhPT1kLmRlaHlkcmF0ZWQpcmV0dXJuIEcoTSxNLmN1cnJlbnQmMSksYi5mbGFnc3w9MTI4LG51bGw7aWYoMCE9PShjJmIuY2hpbGQuY2hpbGRMYW5lcykpcmV0dXJuIHBqKGEsYixjKTtHKE0sTS5jdXJyZW50JjEpO2E9JGkoYSxiLGMpO3JldHVybiBudWxsIT09YT9hLnNpYmxpbmc6bnVsbH1HKE0sTS5jdXJyZW50JjEpO2JyZWFrO2Nhc2UgMTk6ZD0wIT09KGMmXG5iLmNoaWxkTGFuZXMpO2lmKDAhPT0oYS5mbGFncyYxMjgpKXtpZihkKXJldHVybiB5aihhLGIsYyk7Yi5mbGFnc3w9MTI4fWU9Yi5tZW1vaXplZFN0YXRlO251bGwhPT1lJiYoZS5yZW5kZXJpbmc9bnVsbCxlLnRhaWw9bnVsbCxlLmxhc3RFZmZlY3Q9bnVsbCk7RyhNLE0uY3VycmVudCk7aWYoZClicmVhaztlbHNlIHJldHVybiBudWxsO2Nhc2UgMjI6Y2FzZSAyMzpyZXR1cm4gYi5sYW5lcz0wLGVqKGEsYixjKX1yZXR1cm4gJGkoYSxiLGMpfXZhciBBaixCaixDaixEajtcbkFqPWZ1bmN0aW9uKGEsYil7Zm9yKHZhciBjPWIuY2hpbGQ7bnVsbCE9PWM7KXtpZig1PT09Yy50YWd8fDY9PT1jLnRhZylhLmFwcGVuZENoaWxkKGMuc3RhdGVOb2RlKTtlbHNlIGlmKDQhPT1jLnRhZyYmbnVsbCE9PWMuY2hpbGQpe2MuY2hpbGQucmV0dXJuPWM7Yz1jLmNoaWxkO2NvbnRpbnVlfWlmKGM9PT1iKWJyZWFrO2Zvcig7bnVsbD09PWMuc2libGluZzspe2lmKG51bGw9PT1jLnJldHVybnx8Yy5yZXR1cm49PT1iKXJldHVybjtjPWMucmV0dXJufWMuc2libGluZy5yZXR1cm49Yy5yZXR1cm47Yz1jLnNpYmxpbmd9fTtCaj1mdW5jdGlvbigpe307XG5Daj1mdW5jdGlvbihhLGIsYyxkKXt2YXIgZT1hLm1lbW9pemVkUHJvcHM7aWYoZSE9PWQpe2E9Yi5zdGF0ZU5vZGU7SGgoRWguY3VycmVudCk7dmFyIGY9bnVsbDtzd2l0Y2goYyl7Y2FzZSBcImlucHV0XCI6ZT1ZYShhLGUpO2Q9WWEoYSxkKTtmPVtdO2JyZWFrO2Nhc2UgXCJzZWxlY3RcIjplPUEoe30sZSx7dmFsdWU6dm9pZCAwfSk7ZD1BKHt9LGQse3ZhbHVlOnZvaWQgMH0pO2Y9W107YnJlYWs7Y2FzZSBcInRleHRhcmVhXCI6ZT1nYihhLGUpO2Q9Z2IoYSxkKTtmPVtdO2JyZWFrO2RlZmF1bHQ6XCJmdW5jdGlvblwiIT09dHlwZW9mIGUub25DbGljayYmXCJmdW5jdGlvblwiPT09dHlwZW9mIGQub25DbGljayYmKGEub25jbGljaz1CZil9dWIoYyxkKTt2YXIgZztjPW51bGw7Zm9yKGwgaW4gZSlpZighZC5oYXNPd25Qcm9wZXJ0eShsKSYmZS5oYXNPd25Qcm9wZXJ0eShsKSYmbnVsbCE9ZVtsXSlpZihcInN0eWxlXCI9PT1sKXt2YXIgaD1lW2xdO2ZvcihnIGluIGgpaC5oYXNPd25Qcm9wZXJ0eShnKSYmXG4oY3x8KGM9e30pLGNbZ109XCJcIil9ZWxzZVwiZGFuZ2Vyb3VzbHlTZXRJbm5lckhUTUxcIiE9PWwmJlwiY2hpbGRyZW5cIiE9PWwmJlwic3VwcHJlc3NDb250ZW50RWRpdGFibGVXYXJuaW5nXCIhPT1sJiZcInN1cHByZXNzSHlkcmF0aW9uV2FybmluZ1wiIT09bCYmXCJhdXRvRm9jdXNcIiE9PWwmJihlYS5oYXNPd25Qcm9wZXJ0eShsKT9mfHwoZj1bXSk6KGY9Znx8W10pLnB1c2gobCxudWxsKSk7Zm9yKGwgaW4gZCl7dmFyIGs9ZFtsXTtoPW51bGwhPWU/ZVtsXTp2b2lkIDA7aWYoZC5oYXNPd25Qcm9wZXJ0eShsKSYmayE9PWgmJihudWxsIT1rfHxudWxsIT1oKSlpZihcInN0eWxlXCI9PT1sKWlmKGgpe2ZvcihnIGluIGgpIWguaGFzT3duUHJvcGVydHkoZyl8fGsmJmsuaGFzT3duUHJvcGVydHkoZyl8fChjfHwoYz17fSksY1tnXT1cIlwiKTtmb3IoZyBpbiBrKWsuaGFzT3duUHJvcGVydHkoZykmJmhbZ10hPT1rW2ddJiYoY3x8KGM9e30pLGNbZ109a1tnXSl9ZWxzZSBjfHwoZnx8KGY9W10pLGYucHVzaChsLFxuYykpLGM9aztlbHNlXCJkYW5nZXJvdXNseVNldElubmVySFRNTFwiPT09bD8oaz1rP2suX19odG1sOnZvaWQgMCxoPWg/aC5fX2h0bWw6dm9pZCAwLG51bGwhPWsmJmghPT1rJiYoZj1mfHxbXSkucHVzaChsLGspKTpcImNoaWxkcmVuXCI9PT1sP1wic3RyaW5nXCIhPT10eXBlb2YgayYmXCJudW1iZXJcIiE9PXR5cGVvZiBrfHwoZj1mfHxbXSkucHVzaChsLFwiXCIrayk6XCJzdXBwcmVzc0NvbnRlbnRFZGl0YWJsZVdhcm5pbmdcIiE9PWwmJlwic3VwcHJlc3NIeWRyYXRpb25XYXJuaW5nXCIhPT1sJiYoZWEuaGFzT3duUHJvcGVydHkobCk/KG51bGwhPWsmJlwib25TY3JvbGxcIj09PWwmJkQoXCJzY3JvbGxcIixhKSxmfHxoPT09a3x8KGY9W10pKTooZj1mfHxbXSkucHVzaChsLGspKX1jJiYoZj1mfHxbXSkucHVzaChcInN0eWxlXCIsYyk7dmFyIGw9ZjtpZihiLnVwZGF0ZVF1ZXVlPWwpYi5mbGFnc3w9NH19O0RqPWZ1bmN0aW9uKGEsYixjLGQpe2MhPT1kJiYoYi5mbGFnc3w9NCl9O1xuZnVuY3Rpb24gRWooYSxiKXtpZighSSlzd2l0Y2goYS50YWlsTW9kZSl7Y2FzZSBcImhpZGRlblwiOmI9YS50YWlsO2Zvcih2YXIgYz1udWxsO251bGwhPT1iOyludWxsIT09Yi5hbHRlcm5hdGUmJihjPWIpLGI9Yi5zaWJsaW5nO251bGw9PT1jP2EudGFpbD1udWxsOmMuc2libGluZz1udWxsO2JyZWFrO2Nhc2UgXCJjb2xsYXBzZWRcIjpjPWEudGFpbDtmb3IodmFyIGQ9bnVsbDtudWxsIT09YzspbnVsbCE9PWMuYWx0ZXJuYXRlJiYoZD1jKSxjPWMuc2libGluZztudWxsPT09ZD9ifHxudWxsPT09YS50YWlsP2EudGFpbD1udWxsOmEudGFpbC5zaWJsaW5nPW51bGw6ZC5zaWJsaW5nPW51bGx9fVxuZnVuY3Rpb24gUyhhKXt2YXIgYj1udWxsIT09YS5hbHRlcm5hdGUmJmEuYWx0ZXJuYXRlLmNoaWxkPT09YS5jaGlsZCxjPTAsZD0wO2lmKGIpZm9yKHZhciBlPWEuY2hpbGQ7bnVsbCE9PWU7KWN8PWUubGFuZXN8ZS5jaGlsZExhbmVzLGR8PWUuc3VidHJlZUZsYWdzJjE0NjgwMDY0LGR8PWUuZmxhZ3MmMTQ2ODAwNjQsZS5yZXR1cm49YSxlPWUuc2libGluZztlbHNlIGZvcihlPWEuY2hpbGQ7bnVsbCE9PWU7KWN8PWUubGFuZXN8ZS5jaGlsZExhbmVzLGR8PWUuc3VidHJlZUZsYWdzLGR8PWUuZmxhZ3MsZS5yZXR1cm49YSxlPWUuc2libGluZzthLnN1YnRyZWVGbGFnc3w9ZDthLmNoaWxkTGFuZXM9YztyZXR1cm4gYn1cbmZ1bmN0aW9uIEZqKGEsYixjKXt2YXIgZD1iLnBlbmRpbmdQcm9wczt3ZyhiKTtzd2l0Y2goYi50YWcpe2Nhc2UgMjpjYXNlIDE2OmNhc2UgMTU6Y2FzZSAwOmNhc2UgMTE6Y2FzZSA3OmNhc2UgODpjYXNlIDEyOmNhc2UgOTpjYXNlIDE0OnJldHVybiBTKGIpLG51bGw7Y2FzZSAxOnJldHVybiBaZihiLnR5cGUpJiYkZigpLFMoYiksbnVsbDtjYXNlIDM6ZD1iLnN0YXRlTm9kZTtKaCgpO0UoV2YpO0UoSCk7T2goKTtkLnBlbmRpbmdDb250ZXh0JiYoZC5jb250ZXh0PWQucGVuZGluZ0NvbnRleHQsZC5wZW5kaW5nQ29udGV4dD1udWxsKTtpZihudWxsPT09YXx8bnVsbD09PWEuY2hpbGQpR2coYik/Yi5mbGFnc3w9NDpudWxsPT09YXx8YS5tZW1vaXplZFN0YXRlLmlzRGVoeWRyYXRlZCYmMD09PShiLmZsYWdzJjI1Nil8fChiLmZsYWdzfD0xMDI0LG51bGwhPT16ZyYmKEdqKHpnKSx6Zz1udWxsKSk7QmooYSxiKTtTKGIpO3JldHVybiBudWxsO2Nhc2UgNTpMaChiKTt2YXIgZT1IaChHaC5jdXJyZW50KTtcbmM9Yi50eXBlO2lmKG51bGwhPT1hJiZudWxsIT1iLnN0YXRlTm9kZSlDaihhLGIsYyxkLGUpLGEucmVmIT09Yi5yZWYmJihiLmZsYWdzfD01MTIsYi5mbGFnc3w9MjA5NzE1Mik7ZWxzZXtpZighZCl7aWYobnVsbD09PWIuc3RhdGVOb2RlKXRocm93IEVycm9yKHAoMTY2KSk7UyhiKTtyZXR1cm4gbnVsbH1hPUhoKEVoLmN1cnJlbnQpO2lmKEdnKGIpKXtkPWIuc3RhdGVOb2RlO2M9Yi50eXBlO3ZhciBmPWIubWVtb2l6ZWRQcm9wcztkW09mXT1iO2RbUGZdPWY7YT0wIT09KGIubW9kZSYxKTtzd2l0Y2goYyl7Y2FzZSBcImRpYWxvZ1wiOkQoXCJjYW5jZWxcIixkKTtEKFwiY2xvc2VcIixkKTticmVhaztjYXNlIFwiaWZyYW1lXCI6Y2FzZSBcIm9iamVjdFwiOmNhc2UgXCJlbWJlZFwiOkQoXCJsb2FkXCIsZCk7YnJlYWs7Y2FzZSBcInZpZGVvXCI6Y2FzZSBcImF1ZGlvXCI6Zm9yKGU9MDtlPGxmLmxlbmd0aDtlKyspRChsZltlXSxkKTticmVhaztjYXNlIFwic291cmNlXCI6RChcImVycm9yXCIsZCk7YnJlYWs7Y2FzZSBcImltZ1wiOmNhc2UgXCJpbWFnZVwiOmNhc2UgXCJsaW5rXCI6RChcImVycm9yXCIsXG5kKTtEKFwibG9hZFwiLGQpO2JyZWFrO2Nhc2UgXCJkZXRhaWxzXCI6RChcInRvZ2dsZVwiLGQpO2JyZWFrO2Nhc2UgXCJpbnB1dFwiOlphKGQsZik7RChcImludmFsaWRcIixkKTticmVhaztjYXNlIFwic2VsZWN0XCI6ZC5fd3JhcHBlclN0YXRlPXt3YXNNdWx0aXBsZTohIWYubXVsdGlwbGV9O0QoXCJpbnZhbGlkXCIsZCk7YnJlYWs7Y2FzZSBcInRleHRhcmVhXCI6aGIoZCxmKSxEKFwiaW52YWxpZFwiLGQpfXViKGMsZik7ZT1udWxsO2Zvcih2YXIgZyBpbiBmKWlmKGYuaGFzT3duUHJvcGVydHkoZykpe3ZhciBoPWZbZ107XCJjaGlsZHJlblwiPT09Zz9cInN0cmluZ1wiPT09dHlwZW9mIGg/ZC50ZXh0Q29udGVudCE9PWgmJighMCE9PWYuc3VwcHJlc3NIeWRyYXRpb25XYXJuaW5nJiZBZihkLnRleHRDb250ZW50LGgsYSksZT1bXCJjaGlsZHJlblwiLGhdKTpcIm51bWJlclwiPT09dHlwZW9mIGgmJmQudGV4dENvbnRlbnQhPT1cIlwiK2gmJighMCE9PWYuc3VwcHJlc3NIeWRyYXRpb25XYXJuaW5nJiZBZihkLnRleHRDb250ZW50LFxuaCxhKSxlPVtcImNoaWxkcmVuXCIsXCJcIitoXSk6ZWEuaGFzT3duUHJvcGVydHkoZykmJm51bGwhPWgmJlwib25TY3JvbGxcIj09PWcmJkQoXCJzY3JvbGxcIixkKX1zd2l0Y2goYyl7Y2FzZSBcImlucHV0XCI6VmEoZCk7ZGIoZCxmLCEwKTticmVhaztjYXNlIFwidGV4dGFyZWFcIjpWYShkKTtqYihkKTticmVhaztjYXNlIFwic2VsZWN0XCI6Y2FzZSBcIm9wdGlvblwiOmJyZWFrO2RlZmF1bHQ6XCJmdW5jdGlvblwiPT09dHlwZW9mIGYub25DbGljayYmKGQub25jbGljaz1CZil9ZD1lO2IudXBkYXRlUXVldWU9ZDtudWxsIT09ZCYmKGIuZmxhZ3N8PTQpfWVsc2V7Zz05PT09ZS5ub2RlVHlwZT9lOmUub3duZXJEb2N1bWVudDtcImh0dHA6Ly93d3cudzMub3JnLzE5OTkveGh0bWxcIj09PWEmJihhPWtiKGMpKTtcImh0dHA6Ly93d3cudzMub3JnLzE5OTkveGh0bWxcIj09PWE/XCJzY3JpcHRcIj09PWM/KGE9Zy5jcmVhdGVFbGVtZW50KFwiZGl2XCIpLGEuaW5uZXJIVE1MPVwiPHNjcmlwdD5cXHgzYy9zY3JpcHQ+XCIsYT1hLnJlbW92ZUNoaWxkKGEuZmlyc3RDaGlsZCkpOlxuXCJzdHJpbmdcIj09PXR5cGVvZiBkLmlzP2E9Zy5jcmVhdGVFbGVtZW50KGMse2lzOmQuaXN9KTooYT1nLmNyZWF0ZUVsZW1lbnQoYyksXCJzZWxlY3RcIj09PWMmJihnPWEsZC5tdWx0aXBsZT9nLm11bHRpcGxlPSEwOmQuc2l6ZSYmKGcuc2l6ZT1kLnNpemUpKSk6YT1nLmNyZWF0ZUVsZW1lbnROUyhhLGMpO2FbT2ZdPWI7YVtQZl09ZDtBaihhLGIsITEsITEpO2Iuc3RhdGVOb2RlPWE7YTp7Zz12YihjLGQpO3N3aXRjaChjKXtjYXNlIFwiZGlhbG9nXCI6RChcImNhbmNlbFwiLGEpO0QoXCJjbG9zZVwiLGEpO2U9ZDticmVhaztjYXNlIFwiaWZyYW1lXCI6Y2FzZSBcIm9iamVjdFwiOmNhc2UgXCJlbWJlZFwiOkQoXCJsb2FkXCIsYSk7ZT1kO2JyZWFrO2Nhc2UgXCJ2aWRlb1wiOmNhc2UgXCJhdWRpb1wiOmZvcihlPTA7ZTxsZi5sZW5ndGg7ZSsrKUQobGZbZV0sYSk7ZT1kO2JyZWFrO2Nhc2UgXCJzb3VyY2VcIjpEKFwiZXJyb3JcIixhKTtlPWQ7YnJlYWs7Y2FzZSBcImltZ1wiOmNhc2UgXCJpbWFnZVwiOmNhc2UgXCJsaW5rXCI6RChcImVycm9yXCIsXG5hKTtEKFwibG9hZFwiLGEpO2U9ZDticmVhaztjYXNlIFwiZGV0YWlsc1wiOkQoXCJ0b2dnbGVcIixhKTtlPWQ7YnJlYWs7Y2FzZSBcImlucHV0XCI6WmEoYSxkKTtlPVlhKGEsZCk7RChcImludmFsaWRcIixhKTticmVhaztjYXNlIFwib3B0aW9uXCI6ZT1kO2JyZWFrO2Nhc2UgXCJzZWxlY3RcIjphLl93cmFwcGVyU3RhdGU9e3dhc011bHRpcGxlOiEhZC5tdWx0aXBsZX07ZT1BKHt9LGQse3ZhbHVlOnZvaWQgMH0pO0QoXCJpbnZhbGlkXCIsYSk7YnJlYWs7Y2FzZSBcInRleHRhcmVhXCI6aGIoYSxkKTtlPWdiKGEsZCk7RChcImludmFsaWRcIixhKTticmVhaztkZWZhdWx0OmU9ZH11YihjLGUpO2g9ZTtmb3IoZiBpbiBoKWlmKGguaGFzT3duUHJvcGVydHkoZikpe3ZhciBrPWhbZl07XCJzdHlsZVwiPT09Zj9zYihhLGspOlwiZGFuZ2Vyb3VzbHlTZXRJbm5lckhUTUxcIj09PWY/KGs9az9rLl9faHRtbDp2b2lkIDAsbnVsbCE9ayYmbmIoYSxrKSk6XCJjaGlsZHJlblwiPT09Zj9cInN0cmluZ1wiPT09dHlwZW9mIGs/KFwidGV4dGFyZWFcIiE9PVxuY3x8XCJcIiE9PWspJiZvYihhLGspOlwibnVtYmVyXCI9PT10eXBlb2YgayYmb2IoYSxcIlwiK2spOlwic3VwcHJlc3NDb250ZW50RWRpdGFibGVXYXJuaW5nXCIhPT1mJiZcInN1cHByZXNzSHlkcmF0aW9uV2FybmluZ1wiIT09ZiYmXCJhdXRvRm9jdXNcIiE9PWYmJihlYS5oYXNPd25Qcm9wZXJ0eShmKT9udWxsIT1rJiZcIm9uU2Nyb2xsXCI9PT1mJiZEKFwic2Nyb2xsXCIsYSk6bnVsbCE9ayYmdGEoYSxmLGssZykpfXN3aXRjaChjKXtjYXNlIFwiaW5wdXRcIjpWYShhKTtkYihhLGQsITEpO2JyZWFrO2Nhc2UgXCJ0ZXh0YXJlYVwiOlZhKGEpO2piKGEpO2JyZWFrO2Nhc2UgXCJvcHRpb25cIjpudWxsIT1kLnZhbHVlJiZhLnNldEF0dHJpYnV0ZShcInZhbHVlXCIsXCJcIitTYShkLnZhbHVlKSk7YnJlYWs7Y2FzZSBcInNlbGVjdFwiOmEubXVsdGlwbGU9ISFkLm11bHRpcGxlO2Y9ZC52YWx1ZTtudWxsIT1mP2ZiKGEsISFkLm11bHRpcGxlLGYsITEpOm51bGwhPWQuZGVmYXVsdFZhbHVlJiZmYihhLCEhZC5tdWx0aXBsZSxkLmRlZmF1bHRWYWx1ZSxcbiEwKTticmVhaztkZWZhdWx0OlwiZnVuY3Rpb25cIj09PXR5cGVvZiBlLm9uQ2xpY2smJihhLm9uY2xpY2s9QmYpfXN3aXRjaChjKXtjYXNlIFwiYnV0dG9uXCI6Y2FzZSBcImlucHV0XCI6Y2FzZSBcInNlbGVjdFwiOmNhc2UgXCJ0ZXh0YXJlYVwiOmQ9ISFkLmF1dG9Gb2N1czticmVhayBhO2Nhc2UgXCJpbWdcIjpkPSEwO2JyZWFrIGE7ZGVmYXVsdDpkPSExfX1kJiYoYi5mbGFnc3w9NCl9bnVsbCE9PWIucmVmJiYoYi5mbGFnc3w9NTEyLGIuZmxhZ3N8PTIwOTcxNTIpfVMoYik7cmV0dXJuIG51bGw7Y2FzZSA2OmlmKGEmJm51bGwhPWIuc3RhdGVOb2RlKURqKGEsYixhLm1lbW9pemVkUHJvcHMsZCk7ZWxzZXtpZihcInN0cmluZ1wiIT09dHlwZW9mIGQmJm51bGw9PT1iLnN0YXRlTm9kZSl0aHJvdyBFcnJvcihwKDE2NikpO2M9SGgoR2guY3VycmVudCk7SGgoRWguY3VycmVudCk7aWYoR2coYikpe2Q9Yi5zdGF0ZU5vZGU7Yz1iLm1lbW9pemVkUHJvcHM7ZFtPZl09YjtpZihmPWQubm9kZVZhbHVlIT09YylpZihhPVxueGcsbnVsbCE9PWEpc3dpdGNoKGEudGFnKXtjYXNlIDM6QWYoZC5ub2RlVmFsdWUsYywwIT09KGEubW9kZSYxKSk7YnJlYWs7Y2FzZSA1OiEwIT09YS5tZW1vaXplZFByb3BzLnN1cHByZXNzSHlkcmF0aW9uV2FybmluZyYmQWYoZC5ub2RlVmFsdWUsYywwIT09KGEubW9kZSYxKSl9ZiYmKGIuZmxhZ3N8PTQpfWVsc2UgZD0oOT09PWMubm9kZVR5cGU/YzpjLm93bmVyRG9jdW1lbnQpLmNyZWF0ZVRleHROb2RlKGQpLGRbT2ZdPWIsYi5zdGF0ZU5vZGU9ZH1TKGIpO3JldHVybiBudWxsO2Nhc2UgMTM6RShNKTtkPWIubWVtb2l6ZWRTdGF0ZTtpZihudWxsPT09YXx8bnVsbCE9PWEubWVtb2l6ZWRTdGF0ZSYmbnVsbCE9PWEubWVtb2l6ZWRTdGF0ZS5kZWh5ZHJhdGVkKXtpZihJJiZudWxsIT09eWcmJjAhPT0oYi5tb2RlJjEpJiYwPT09KGIuZmxhZ3MmMTI4KSlIZygpLElnKCksYi5mbGFnc3w9OTg1NjAsZj0hMTtlbHNlIGlmKGY9R2coYiksbnVsbCE9PWQmJm51bGwhPT1kLmRlaHlkcmF0ZWQpe2lmKG51bGw9PT1cbmEpe2lmKCFmKXRocm93IEVycm9yKHAoMzE4KSk7Zj1iLm1lbW9pemVkU3RhdGU7Zj1udWxsIT09Zj9mLmRlaHlkcmF0ZWQ6bnVsbDtpZighZil0aHJvdyBFcnJvcihwKDMxNykpO2ZbT2ZdPWJ9ZWxzZSBJZygpLDA9PT0oYi5mbGFncyYxMjgpJiYoYi5tZW1vaXplZFN0YXRlPW51bGwpLGIuZmxhZ3N8PTQ7UyhiKTtmPSExfWVsc2UgbnVsbCE9PXpnJiYoR2ooemcpLHpnPW51bGwpLGY9ITA7aWYoIWYpcmV0dXJuIGIuZmxhZ3MmNjU1MzY/YjpudWxsfWlmKDAhPT0oYi5mbGFncyYxMjgpKXJldHVybiBiLmxhbmVzPWMsYjtkPW51bGwhPT1kO2QhPT0obnVsbCE9PWEmJm51bGwhPT1hLm1lbW9pemVkU3RhdGUpJiZkJiYoYi5jaGlsZC5mbGFnc3w9ODE5MiwwIT09KGIubW9kZSYxKSYmKG51bGw9PT1hfHwwIT09KE0uY3VycmVudCYxKT8wPT09VCYmKFQ9Myk6dWooKSkpO251bGwhPT1iLnVwZGF0ZVF1ZXVlJiYoYi5mbGFnc3w9NCk7UyhiKTtyZXR1cm4gbnVsbDtjYXNlIDQ6cmV0dXJuIEpoKCksXG5CaihhLGIpLG51bGw9PT1hJiZzZihiLnN0YXRlTm9kZS5jb250YWluZXJJbmZvKSxTKGIpLG51bGw7Y2FzZSAxMDpyZXR1cm4gUmcoYi50eXBlLl9jb250ZXh0KSxTKGIpLG51bGw7Y2FzZSAxNzpyZXR1cm4gWmYoYi50eXBlKSYmJGYoKSxTKGIpLG51bGw7Y2FzZSAxOTpFKE0pO2Y9Yi5tZW1vaXplZFN0YXRlO2lmKG51bGw9PT1mKXJldHVybiBTKGIpLG51bGw7ZD0wIT09KGIuZmxhZ3MmMTI4KTtnPWYucmVuZGVyaW5nO2lmKG51bGw9PT1nKWlmKGQpRWooZiwhMSk7ZWxzZXtpZigwIT09VHx8bnVsbCE9PWEmJjAhPT0oYS5mbGFncyYxMjgpKWZvcihhPWIuY2hpbGQ7bnVsbCE9PWE7KXtnPU1oKGEpO2lmKG51bGwhPT1nKXtiLmZsYWdzfD0xMjg7RWooZiwhMSk7ZD1nLnVwZGF0ZVF1ZXVlO251bGwhPT1kJiYoYi51cGRhdGVRdWV1ZT1kLGIuZmxhZ3N8PTQpO2Iuc3VidHJlZUZsYWdzPTA7ZD1jO2ZvcihjPWIuY2hpbGQ7bnVsbCE9PWM7KWY9YyxhPWQsZi5mbGFncyY9MTQ2ODAwNjYsXG5nPWYuYWx0ZXJuYXRlLG51bGw9PT1nPyhmLmNoaWxkTGFuZXM9MCxmLmxhbmVzPWEsZi5jaGlsZD1udWxsLGYuc3VidHJlZUZsYWdzPTAsZi5tZW1vaXplZFByb3BzPW51bGwsZi5tZW1vaXplZFN0YXRlPW51bGwsZi51cGRhdGVRdWV1ZT1udWxsLGYuZGVwZW5kZW5jaWVzPW51bGwsZi5zdGF0ZU5vZGU9bnVsbCk6KGYuY2hpbGRMYW5lcz1nLmNoaWxkTGFuZXMsZi5sYW5lcz1nLmxhbmVzLGYuY2hpbGQ9Zy5jaGlsZCxmLnN1YnRyZWVGbGFncz0wLGYuZGVsZXRpb25zPW51bGwsZi5tZW1vaXplZFByb3BzPWcubWVtb2l6ZWRQcm9wcyxmLm1lbW9pemVkU3RhdGU9Zy5tZW1vaXplZFN0YXRlLGYudXBkYXRlUXVldWU9Zy51cGRhdGVRdWV1ZSxmLnR5cGU9Zy50eXBlLGE9Zy5kZXBlbmRlbmNpZXMsZi5kZXBlbmRlbmNpZXM9bnVsbD09PWE/bnVsbDp7bGFuZXM6YS5sYW5lcyxmaXJzdENvbnRleHQ6YS5maXJzdENvbnRleHR9KSxjPWMuc2libGluZztHKE0sTS5jdXJyZW50JjF8Mik7cmV0dXJuIGIuY2hpbGR9YT1cbmEuc2libGluZ31udWxsIT09Zi50YWlsJiZCKCk+SGomJihiLmZsYWdzfD0xMjgsZD0hMCxFaihmLCExKSxiLmxhbmVzPTQxOTQzMDQpfWVsc2V7aWYoIWQpaWYoYT1NaChnKSxudWxsIT09YSl7aWYoYi5mbGFnc3w9MTI4LGQ9ITAsYz1hLnVwZGF0ZVF1ZXVlLG51bGwhPT1jJiYoYi51cGRhdGVRdWV1ZT1jLGIuZmxhZ3N8PTQpLEVqKGYsITApLG51bGw9PT1mLnRhaWwmJlwiaGlkZGVuXCI9PT1mLnRhaWxNb2RlJiYhZy5hbHRlcm5hdGUmJiFJKXJldHVybiBTKGIpLG51bGx9ZWxzZSAyKkIoKS1mLnJlbmRlcmluZ1N0YXJ0VGltZT5IaiYmMTA3Mzc0MTgyNCE9PWMmJihiLmZsYWdzfD0xMjgsZD0hMCxFaihmLCExKSxiLmxhbmVzPTQxOTQzMDQpO2YuaXNCYWNrd2FyZHM/KGcuc2libGluZz1iLmNoaWxkLGIuY2hpbGQ9Zyk6KGM9Zi5sYXN0LG51bGwhPT1jP2Muc2libGluZz1nOmIuY2hpbGQ9ZyxmLmxhc3Q9Zyl9aWYobnVsbCE9PWYudGFpbClyZXR1cm4gYj1mLnRhaWwsZi5yZW5kZXJpbmc9XG5iLGYudGFpbD1iLnNpYmxpbmcsZi5yZW5kZXJpbmdTdGFydFRpbWU9QigpLGIuc2libGluZz1udWxsLGM9TS5jdXJyZW50LEcoTSxkP2MmMXwyOmMmMSksYjtTKGIpO3JldHVybiBudWxsO2Nhc2UgMjI6Y2FzZSAyMzpyZXR1cm4gSWooKSxkPW51bGwhPT1iLm1lbW9pemVkU3RhdGUsbnVsbCE9PWEmJm51bGwhPT1hLm1lbW9pemVkU3RhdGUhPT1kJiYoYi5mbGFnc3w9ODE5MiksZCYmMCE9PShiLm1vZGUmMSk/MCE9PShnaiYxMDczNzQxODI0KSYmKFMoYiksYi5zdWJ0cmVlRmxhZ3MmNiYmKGIuZmxhZ3N8PTgxOTIpKTpTKGIpLG51bGw7Y2FzZSAyNDpyZXR1cm4gbnVsbDtjYXNlIDI1OnJldHVybiBudWxsfXRocm93IEVycm9yKHAoMTU2LGIudGFnKSk7fVxuZnVuY3Rpb24gSmooYSxiKXt3ZyhiKTtzd2l0Y2goYi50YWcpe2Nhc2UgMTpyZXR1cm4gWmYoYi50eXBlKSYmJGYoKSxhPWIuZmxhZ3MsYSY2NTUzNj8oYi5mbGFncz1hJi02NTUzN3wxMjgsYik6bnVsbDtjYXNlIDM6cmV0dXJuIEpoKCksRShXZiksRShIKSxPaCgpLGE9Yi5mbGFncywwIT09KGEmNjU1MzYpJiYwPT09KGEmMTI4KT8oYi5mbGFncz1hJi02NTUzN3wxMjgsYik6bnVsbDtjYXNlIDU6cmV0dXJuIExoKGIpLG51bGw7Y2FzZSAxMzpFKE0pO2E9Yi5tZW1vaXplZFN0YXRlO2lmKG51bGwhPT1hJiZudWxsIT09YS5kZWh5ZHJhdGVkKXtpZihudWxsPT09Yi5hbHRlcm5hdGUpdGhyb3cgRXJyb3IocCgzNDApKTtJZygpfWE9Yi5mbGFncztyZXR1cm4gYSY2NTUzNj8oYi5mbGFncz1hJi02NTUzN3wxMjgsYik6bnVsbDtjYXNlIDE5OnJldHVybiBFKE0pLG51bGw7Y2FzZSA0OnJldHVybiBKaCgpLG51bGw7Y2FzZSAxMDpyZXR1cm4gUmcoYi50eXBlLl9jb250ZXh0KSxudWxsO2Nhc2UgMjI6Y2FzZSAyMzpyZXR1cm4gSWooKSxcbm51bGw7Y2FzZSAyNDpyZXR1cm4gbnVsbDtkZWZhdWx0OnJldHVybiBudWxsfX12YXIgS2o9ITEsVT0hMSxMaj1cImZ1bmN0aW9uXCI9PT10eXBlb2YgV2Vha1NldD9XZWFrU2V0OlNldCxWPW51bGw7ZnVuY3Rpb24gTWooYSxiKXt2YXIgYz1hLnJlZjtpZihudWxsIT09YylpZihcImZ1bmN0aW9uXCI9PT10eXBlb2YgYyl0cnl7YyhudWxsKX1jYXRjaChkKXtXKGEsYixkKX1lbHNlIGMuY3VycmVudD1udWxsfWZ1bmN0aW9uIE5qKGEsYixjKXt0cnl7YygpfWNhdGNoKGQpe1coYSxiLGQpfX12YXIgT2o9ITE7XG5mdW5jdGlvbiBQaihhLGIpe0NmPWRkO2E9TWUoKTtpZihOZShhKSl7aWYoXCJzZWxlY3Rpb25TdGFydFwiaW4gYSl2YXIgYz17c3RhcnQ6YS5zZWxlY3Rpb25TdGFydCxlbmQ6YS5zZWxlY3Rpb25FbmR9O2Vsc2UgYTp7Yz0oYz1hLm93bmVyRG9jdW1lbnQpJiZjLmRlZmF1bHRWaWV3fHx3aW5kb3c7dmFyIGQ9Yy5nZXRTZWxlY3Rpb24mJmMuZ2V0U2VsZWN0aW9uKCk7aWYoZCYmMCE9PWQucmFuZ2VDb3VudCl7Yz1kLmFuY2hvck5vZGU7dmFyIGU9ZC5hbmNob3JPZmZzZXQsZj1kLmZvY3VzTm9kZTtkPWQuZm9jdXNPZmZzZXQ7dHJ5e2Mubm9kZVR5cGUsZi5ub2RlVHlwZX1jYXRjaChGKXtjPW51bGw7YnJlYWsgYX12YXIgZz0wLGg9LTEsaz0tMSxsPTAsbT0wLHE9YSxyPW51bGw7Yjpmb3IoOzspe2Zvcih2YXIgeTs7KXtxIT09Y3x8MCE9PWUmJjMhPT1xLm5vZGVUeXBlfHwoaD1nK2UpO3EhPT1mfHwwIT09ZCYmMyE9PXEubm9kZVR5cGV8fChrPWcrZCk7Mz09PXEubm9kZVR5cGUmJihnKz1cbnEubm9kZVZhbHVlLmxlbmd0aCk7aWYobnVsbD09PSh5PXEuZmlyc3RDaGlsZCkpYnJlYWs7cj1xO3E9eX1mb3IoOzspe2lmKHE9PT1hKWJyZWFrIGI7cj09PWMmJisrbD09PWUmJihoPWcpO3I9PT1mJiYrK209PT1kJiYoaz1nKTtpZihudWxsIT09KHk9cS5uZXh0U2libGluZykpYnJlYWs7cT1yO3I9cS5wYXJlbnROb2RlfXE9eX1jPS0xPT09aHx8LTE9PT1rP251bGw6e3N0YXJ0OmgsZW5kOmt9fWVsc2UgYz1udWxsfWM9Y3x8e3N0YXJ0OjAsZW5kOjB9fWVsc2UgYz1udWxsO0RmPXtmb2N1c2VkRWxlbTphLHNlbGVjdGlvblJhbmdlOmN9O2RkPSExO2ZvcihWPWI7bnVsbCE9PVY7KWlmKGI9VixhPWIuY2hpbGQsMCE9PShiLnN1YnRyZWVGbGFncyYxMDI4KSYmbnVsbCE9PWEpYS5yZXR1cm49YixWPWE7ZWxzZSBmb3IoO251bGwhPT1WOyl7Yj1WO3RyeXt2YXIgbj1iLmFsdGVybmF0ZTtpZigwIT09KGIuZmxhZ3MmMTAyNCkpc3dpdGNoKGIudGFnKXtjYXNlIDA6Y2FzZSAxMTpjYXNlIDE1OmJyZWFrO1xuY2FzZSAxOmlmKG51bGwhPT1uKXt2YXIgdD1uLm1lbW9pemVkUHJvcHMsSj1uLm1lbW9pemVkU3RhdGUseD1iLnN0YXRlTm9kZSx3PXguZ2V0U25hcHNob3RCZWZvcmVVcGRhdGUoYi5lbGVtZW50VHlwZT09PWIudHlwZT90OkxnKGIudHlwZSx0KSxKKTt4Ll9fcmVhY3RJbnRlcm5hbFNuYXBzaG90QmVmb3JlVXBkYXRlPXd9YnJlYWs7Y2FzZSAzOnZhciB1PWIuc3RhdGVOb2RlLmNvbnRhaW5lckluZm87MT09PXUubm9kZVR5cGU/dS50ZXh0Q29udGVudD1cIlwiOjk9PT11Lm5vZGVUeXBlJiZ1LmRvY3VtZW50RWxlbWVudCYmdS5yZW1vdmVDaGlsZCh1LmRvY3VtZW50RWxlbWVudCk7YnJlYWs7Y2FzZSA1OmNhc2UgNjpjYXNlIDQ6Y2FzZSAxNzpicmVhaztkZWZhdWx0OnRocm93IEVycm9yKHAoMTYzKSk7fX1jYXRjaChGKXtXKGIsYi5yZXR1cm4sRil9YT1iLnNpYmxpbmc7aWYobnVsbCE9PWEpe2EucmV0dXJuPWIucmV0dXJuO1Y9YTticmVha31WPWIucmV0dXJufW49T2o7T2o9ITE7cmV0dXJuIG59XG5mdW5jdGlvbiBRaihhLGIsYyl7dmFyIGQ9Yi51cGRhdGVRdWV1ZTtkPW51bGwhPT1kP2QubGFzdEVmZmVjdDpudWxsO2lmKG51bGwhPT1kKXt2YXIgZT1kPWQubmV4dDtkb3tpZigoZS50YWcmYSk9PT1hKXt2YXIgZj1lLmRlc3Ryb3k7ZS5kZXN0cm95PXZvaWQgMDt2b2lkIDAhPT1mJiZOaihiLGMsZil9ZT1lLm5leHR9d2hpbGUoZSE9PWQpfX1mdW5jdGlvbiBSaihhLGIpe2I9Yi51cGRhdGVRdWV1ZTtiPW51bGwhPT1iP2IubGFzdEVmZmVjdDpudWxsO2lmKG51bGwhPT1iKXt2YXIgYz1iPWIubmV4dDtkb3tpZigoYy50YWcmYSk9PT1hKXt2YXIgZD1jLmNyZWF0ZTtjLmRlc3Ryb3k9ZCgpfWM9Yy5uZXh0fXdoaWxlKGMhPT1iKX19ZnVuY3Rpb24gU2ooYSl7dmFyIGI9YS5yZWY7aWYobnVsbCE9PWIpe3ZhciBjPWEuc3RhdGVOb2RlO3N3aXRjaChhLnRhZyl7Y2FzZSA1OmE9YzticmVhaztkZWZhdWx0OmE9Y31cImZ1bmN0aW9uXCI9PT10eXBlb2YgYj9iKGEpOmIuY3VycmVudD1hfX1cbmZ1bmN0aW9uIFRqKGEpe3ZhciBiPWEuYWx0ZXJuYXRlO251bGwhPT1iJiYoYS5hbHRlcm5hdGU9bnVsbCxUaihiKSk7YS5jaGlsZD1udWxsO2EuZGVsZXRpb25zPW51bGw7YS5zaWJsaW5nPW51bGw7NT09PWEudGFnJiYoYj1hLnN0YXRlTm9kZSxudWxsIT09YiYmKGRlbGV0ZSBiW09mXSxkZWxldGUgYltQZl0sZGVsZXRlIGJbb2ZdLGRlbGV0ZSBiW1FmXSxkZWxldGUgYltSZl0pKTthLnN0YXRlTm9kZT1udWxsO2EucmV0dXJuPW51bGw7YS5kZXBlbmRlbmNpZXM9bnVsbDthLm1lbW9pemVkUHJvcHM9bnVsbDthLm1lbW9pemVkU3RhdGU9bnVsbDthLnBlbmRpbmdQcm9wcz1udWxsO2Euc3RhdGVOb2RlPW51bGw7YS51cGRhdGVRdWV1ZT1udWxsfWZ1bmN0aW9uIFVqKGEpe3JldHVybiA1PT09YS50YWd8fDM9PT1hLnRhZ3x8ND09PWEudGFnfVxuZnVuY3Rpb24gVmooYSl7YTpmb3IoOzspe2Zvcig7bnVsbD09PWEuc2libGluZzspe2lmKG51bGw9PT1hLnJldHVybnx8VWooYS5yZXR1cm4pKXJldHVybiBudWxsO2E9YS5yZXR1cm59YS5zaWJsaW5nLnJldHVybj1hLnJldHVybjtmb3IoYT1hLnNpYmxpbmc7NSE9PWEudGFnJiY2IT09YS50YWcmJjE4IT09YS50YWc7KXtpZihhLmZsYWdzJjIpY29udGludWUgYTtpZihudWxsPT09YS5jaGlsZHx8ND09PWEudGFnKWNvbnRpbnVlIGE7ZWxzZSBhLmNoaWxkLnJldHVybj1hLGE9YS5jaGlsZH1pZighKGEuZmxhZ3MmMikpcmV0dXJuIGEuc3RhdGVOb2RlfX1cbmZ1bmN0aW9uIFdqKGEsYixjKXt2YXIgZD1hLnRhZztpZig1PT09ZHx8Nj09PWQpYT1hLnN0YXRlTm9kZSxiPzg9PT1jLm5vZGVUeXBlP2MucGFyZW50Tm9kZS5pbnNlcnRCZWZvcmUoYSxiKTpjLmluc2VydEJlZm9yZShhLGIpOig4PT09Yy5ub2RlVHlwZT8oYj1jLnBhcmVudE5vZGUsYi5pbnNlcnRCZWZvcmUoYSxjKSk6KGI9YyxiLmFwcGVuZENoaWxkKGEpKSxjPWMuX3JlYWN0Um9vdENvbnRhaW5lcixudWxsIT09YyYmdm9pZCAwIT09Y3x8bnVsbCE9PWIub25jbGlja3x8KGIub25jbGljaz1CZikpO2Vsc2UgaWYoNCE9PWQmJihhPWEuY2hpbGQsbnVsbCE9PWEpKWZvcihXaihhLGIsYyksYT1hLnNpYmxpbmc7bnVsbCE9PWE7KVdqKGEsYixjKSxhPWEuc2libGluZ31cbmZ1bmN0aW9uIFhqKGEsYixjKXt2YXIgZD1hLnRhZztpZig1PT09ZHx8Nj09PWQpYT1hLnN0YXRlTm9kZSxiP2MuaW5zZXJ0QmVmb3JlKGEsYik6Yy5hcHBlbmRDaGlsZChhKTtlbHNlIGlmKDQhPT1kJiYoYT1hLmNoaWxkLG51bGwhPT1hKSlmb3IoWGooYSxiLGMpLGE9YS5zaWJsaW5nO251bGwhPT1hOylYaihhLGIsYyksYT1hLnNpYmxpbmd9dmFyIFg9bnVsbCxZaj0hMTtmdW5jdGlvbiBaaihhLGIsYyl7Zm9yKGM9Yy5jaGlsZDtudWxsIT09YzspYWsoYSxiLGMpLGM9Yy5zaWJsaW5nfVxuZnVuY3Rpb24gYWsoYSxiLGMpe2lmKGxjJiZcImZ1bmN0aW9uXCI9PT10eXBlb2YgbGMub25Db21taXRGaWJlclVubW91bnQpdHJ5e2xjLm9uQ29tbWl0RmliZXJVbm1vdW50KGtjLGMpfWNhdGNoKGgpe31zd2l0Y2goYy50YWcpe2Nhc2UgNTpVfHxNaihjLGIpO2Nhc2UgNjp2YXIgZD1YLGU9WWo7WD1udWxsO1pqKGEsYixjKTtYPWQ7WWo9ZTtudWxsIT09WCYmKFlqPyhhPVgsYz1jLnN0YXRlTm9kZSw4PT09YS5ub2RlVHlwZT9hLnBhcmVudE5vZGUucmVtb3ZlQ2hpbGQoYyk6YS5yZW1vdmVDaGlsZChjKSk6WC5yZW1vdmVDaGlsZChjLnN0YXRlTm9kZSkpO2JyZWFrO2Nhc2UgMTg6bnVsbCE9PVgmJihZaj8oYT1YLGM9Yy5zdGF0ZU5vZGUsOD09PWEubm9kZVR5cGU/S2YoYS5wYXJlbnROb2RlLGMpOjE9PT1hLm5vZGVUeXBlJiZLZihhLGMpLGJkKGEpKTpLZihYLGMuc3RhdGVOb2RlKSk7YnJlYWs7Y2FzZSA0OmQ9WDtlPVlqO1g9Yy5zdGF0ZU5vZGUuY29udGFpbmVySW5mbztZaj0hMDtcblpqKGEsYixjKTtYPWQ7WWo9ZTticmVhaztjYXNlIDA6Y2FzZSAxMTpjYXNlIDE0OmNhc2UgMTU6aWYoIVUmJihkPWMudXBkYXRlUXVldWUsbnVsbCE9PWQmJihkPWQubGFzdEVmZmVjdCxudWxsIT09ZCkpKXtlPWQ9ZC5uZXh0O2Rve3ZhciBmPWUsZz1mLmRlc3Ryb3k7Zj1mLnRhZzt2b2lkIDAhPT1nJiYoMCE9PShmJjIpP05qKGMsYixnKTowIT09KGYmNCkmJk5qKGMsYixnKSk7ZT1lLm5leHR9d2hpbGUoZSE9PWQpfVpqKGEsYixjKTticmVhaztjYXNlIDE6aWYoIVUmJihNaihjLGIpLGQ9Yy5zdGF0ZU5vZGUsXCJmdW5jdGlvblwiPT09dHlwZW9mIGQuY29tcG9uZW50V2lsbFVubW91bnQpKXRyeXtkLnByb3BzPWMubWVtb2l6ZWRQcm9wcyxkLnN0YXRlPWMubWVtb2l6ZWRTdGF0ZSxkLmNvbXBvbmVudFdpbGxVbm1vdW50KCl9Y2F0Y2goaCl7VyhjLGIsaCl9WmooYSxiLGMpO2JyZWFrO2Nhc2UgMjE6WmooYSxiLGMpO2JyZWFrO2Nhc2UgMjI6Yy5tb2RlJjE/KFU9KGQ9VSl8fG51bGwhPT1cbmMubWVtb2l6ZWRTdGF0ZSxaaihhLGIsYyksVT1kKTpaaihhLGIsYyk7YnJlYWs7ZGVmYXVsdDpaaihhLGIsYyl9fWZ1bmN0aW9uIGJrKGEpe3ZhciBiPWEudXBkYXRlUXVldWU7aWYobnVsbCE9PWIpe2EudXBkYXRlUXVldWU9bnVsbDt2YXIgYz1hLnN0YXRlTm9kZTtudWxsPT09YyYmKGM9YS5zdGF0ZU5vZGU9bmV3IExqKTtiLmZvckVhY2goZnVuY3Rpb24oYil7dmFyIGQ9Y2suYmluZChudWxsLGEsYik7Yy5oYXMoYil8fChjLmFkZChiKSxiLnRoZW4oZCxkKSl9KX19XG5mdW5jdGlvbiBkayhhLGIpe3ZhciBjPWIuZGVsZXRpb25zO2lmKG51bGwhPT1jKWZvcih2YXIgZD0wO2Q8Yy5sZW5ndGg7ZCsrKXt2YXIgZT1jW2RdO3RyeXt2YXIgZj1hLGc9YixoPWc7YTpmb3IoO251bGwhPT1oOyl7c3dpdGNoKGgudGFnKXtjYXNlIDU6WD1oLnN0YXRlTm9kZTtZaj0hMTticmVhayBhO2Nhc2UgMzpYPWguc3RhdGVOb2RlLmNvbnRhaW5lckluZm87WWo9ITA7YnJlYWsgYTtjYXNlIDQ6WD1oLnN0YXRlTm9kZS5jb250YWluZXJJbmZvO1lqPSEwO2JyZWFrIGF9aD1oLnJldHVybn1pZihudWxsPT09WCl0aHJvdyBFcnJvcihwKDE2MCkpO2FrKGYsZyxlKTtYPW51bGw7WWo9ITE7dmFyIGs9ZS5hbHRlcm5hdGU7bnVsbCE9PWsmJihrLnJldHVybj1udWxsKTtlLnJldHVybj1udWxsfWNhdGNoKGwpe1coZSxiLGwpfX1pZihiLnN1YnRyZWVGbGFncyYxMjg1NClmb3IoYj1iLmNoaWxkO251bGwhPT1iOyllayhiLGEpLGI9Yi5zaWJsaW5nfVxuZnVuY3Rpb24gZWsoYSxiKXt2YXIgYz1hLmFsdGVybmF0ZSxkPWEuZmxhZ3M7c3dpdGNoKGEudGFnKXtjYXNlIDA6Y2FzZSAxMTpjYXNlIDE0OmNhc2UgMTU6ZGsoYixhKTtmayhhKTtpZihkJjQpe3RyeXtRaigzLGEsYS5yZXR1cm4pLFJqKDMsYSl9Y2F0Y2godCl7VyhhLGEucmV0dXJuLHQpfXRyeXtRaig1LGEsYS5yZXR1cm4pfWNhdGNoKHQpe1coYSxhLnJldHVybix0KX19YnJlYWs7Y2FzZSAxOmRrKGIsYSk7ZmsoYSk7ZCY1MTImJm51bGwhPT1jJiZNaihjLGMucmV0dXJuKTticmVhaztjYXNlIDU6ZGsoYixhKTtmayhhKTtkJjUxMiYmbnVsbCE9PWMmJk1qKGMsYy5yZXR1cm4pO2lmKGEuZmxhZ3MmMzIpe3ZhciBlPWEuc3RhdGVOb2RlO3RyeXtvYihlLFwiXCIpfWNhdGNoKHQpe1coYSxhLnJldHVybix0KX19aWYoZCY0JiYoZT1hLnN0YXRlTm9kZSxudWxsIT1lKSl7dmFyIGY9YS5tZW1vaXplZFByb3BzLGc9bnVsbCE9PWM/Yy5tZW1vaXplZFByb3BzOmYsaD1hLnR5cGUsaz1hLnVwZGF0ZVF1ZXVlO1xuYS51cGRhdGVRdWV1ZT1udWxsO2lmKG51bGwhPT1rKXRyeXtcImlucHV0XCI9PT1oJiZcInJhZGlvXCI9PT1mLnR5cGUmJm51bGwhPWYubmFtZSYmYWIoZSxmKTt2YihoLGcpO3ZhciBsPXZiKGgsZik7Zm9yKGc9MDtnPGsubGVuZ3RoO2crPTIpe3ZhciBtPWtbZ10scT1rW2crMV07XCJzdHlsZVwiPT09bT9zYihlLHEpOlwiZGFuZ2Vyb3VzbHlTZXRJbm5lckhUTUxcIj09PW0/bmIoZSxxKTpcImNoaWxkcmVuXCI9PT1tP29iKGUscSk6dGEoZSxtLHEsbCl9c3dpdGNoKGgpe2Nhc2UgXCJpbnB1dFwiOmJiKGUsZik7YnJlYWs7Y2FzZSBcInRleHRhcmVhXCI6aWIoZSxmKTticmVhaztjYXNlIFwic2VsZWN0XCI6dmFyIHI9ZS5fd3JhcHBlclN0YXRlLndhc011bHRpcGxlO2UuX3dyYXBwZXJTdGF0ZS53YXNNdWx0aXBsZT0hIWYubXVsdGlwbGU7dmFyIHk9Zi52YWx1ZTtudWxsIT15P2ZiKGUsISFmLm11bHRpcGxlLHksITEpOnIhPT0hIWYubXVsdGlwbGUmJihudWxsIT1mLmRlZmF1bHRWYWx1ZT9mYihlLCEhZi5tdWx0aXBsZSxcbmYuZGVmYXVsdFZhbHVlLCEwKTpmYihlLCEhZi5tdWx0aXBsZSxmLm11bHRpcGxlP1tdOlwiXCIsITEpKX1lW1BmXT1mfWNhdGNoKHQpe1coYSxhLnJldHVybix0KX19YnJlYWs7Y2FzZSA2OmRrKGIsYSk7ZmsoYSk7aWYoZCY0KXtpZihudWxsPT09YS5zdGF0ZU5vZGUpdGhyb3cgRXJyb3IocCgxNjIpKTtlPWEuc3RhdGVOb2RlO2Y9YS5tZW1vaXplZFByb3BzO3RyeXtlLm5vZGVWYWx1ZT1mfWNhdGNoKHQpe1coYSxhLnJldHVybix0KX19YnJlYWs7Y2FzZSAzOmRrKGIsYSk7ZmsoYSk7aWYoZCY0JiZudWxsIT09YyYmYy5tZW1vaXplZFN0YXRlLmlzRGVoeWRyYXRlZCl0cnl7YmQoYi5jb250YWluZXJJbmZvKX1jYXRjaCh0KXtXKGEsYS5yZXR1cm4sdCl9YnJlYWs7Y2FzZSA0OmRrKGIsYSk7ZmsoYSk7YnJlYWs7Y2FzZSAxMzpkayhiLGEpO2ZrKGEpO2U9YS5jaGlsZDtlLmZsYWdzJjgxOTImJihmPW51bGwhPT1lLm1lbW9pemVkU3RhdGUsZS5zdGF0ZU5vZGUuaXNIaWRkZW49ZiwhZnx8XG5udWxsIT09ZS5hbHRlcm5hdGUmJm51bGwhPT1lLmFsdGVybmF0ZS5tZW1vaXplZFN0YXRlfHwoZ2s9QigpKSk7ZCY0JiZiayhhKTticmVhaztjYXNlIDIyOm09bnVsbCE9PWMmJm51bGwhPT1jLm1lbW9pemVkU3RhdGU7YS5tb2RlJjE/KFU9KGw9VSl8fG0sZGsoYixhKSxVPWwpOmRrKGIsYSk7ZmsoYSk7aWYoZCY4MTkyKXtsPW51bGwhPT1hLm1lbW9pemVkU3RhdGU7aWYoKGEuc3RhdGVOb2RlLmlzSGlkZGVuPWwpJiYhbSYmMCE9PShhLm1vZGUmMSkpZm9yKFY9YSxtPWEuY2hpbGQ7bnVsbCE9PW07KXtmb3IocT1WPW07bnVsbCE9PVY7KXtyPVY7eT1yLmNoaWxkO3N3aXRjaChyLnRhZyl7Y2FzZSAwOmNhc2UgMTE6Y2FzZSAxNDpjYXNlIDE1OlFqKDQscixyLnJldHVybik7YnJlYWs7Y2FzZSAxOk1qKHIsci5yZXR1cm4pO3ZhciBuPXIuc3RhdGVOb2RlO2lmKFwiZnVuY3Rpb25cIj09PXR5cGVvZiBuLmNvbXBvbmVudFdpbGxVbm1vdW50KXtkPXI7Yz1yLnJldHVybjt0cnl7Yj1kLG4ucHJvcHM9XG5iLm1lbW9pemVkUHJvcHMsbi5zdGF0ZT1iLm1lbW9pemVkU3RhdGUsbi5jb21wb25lbnRXaWxsVW5tb3VudCgpfWNhdGNoKHQpe1coZCxjLHQpfX1icmVhaztjYXNlIDU6TWoocixyLnJldHVybik7YnJlYWs7Y2FzZSAyMjppZihudWxsIT09ci5tZW1vaXplZFN0YXRlKXtoayhxKTtjb250aW51ZX19bnVsbCE9PXk/KHkucmV0dXJuPXIsVj15KTpoayhxKX1tPW0uc2libGluZ31hOmZvcihtPW51bGwscT1hOzspe2lmKDU9PT1xLnRhZyl7aWYobnVsbD09PW0pe209cTt0cnl7ZT1xLnN0YXRlTm9kZSxsPyhmPWUuc3R5bGUsXCJmdW5jdGlvblwiPT09dHlwZW9mIGYuc2V0UHJvcGVydHk/Zi5zZXRQcm9wZXJ0eShcImRpc3BsYXlcIixcIm5vbmVcIixcImltcG9ydGFudFwiKTpmLmRpc3BsYXk9XCJub25lXCIpOihoPXEuc3RhdGVOb2RlLGs9cS5tZW1vaXplZFByb3BzLnN0eWxlLGc9dm9pZCAwIT09ayYmbnVsbCE9PWsmJmsuaGFzT3duUHJvcGVydHkoXCJkaXNwbGF5XCIpP2suZGlzcGxheTpudWxsLGguc3R5bGUuZGlzcGxheT1cbnJiKFwiZGlzcGxheVwiLGcpKX1jYXRjaCh0KXtXKGEsYS5yZXR1cm4sdCl9fX1lbHNlIGlmKDY9PT1xLnRhZyl7aWYobnVsbD09PW0pdHJ5e3Euc3RhdGVOb2RlLm5vZGVWYWx1ZT1sP1wiXCI6cS5tZW1vaXplZFByb3BzfWNhdGNoKHQpe1coYSxhLnJldHVybix0KX19ZWxzZSBpZigoMjIhPT1xLnRhZyYmMjMhPT1xLnRhZ3x8bnVsbD09PXEubWVtb2l6ZWRTdGF0ZXx8cT09PWEpJiZudWxsIT09cS5jaGlsZCl7cS5jaGlsZC5yZXR1cm49cTtxPXEuY2hpbGQ7Y29udGludWV9aWYocT09PWEpYnJlYWsgYTtmb3IoO251bGw9PT1xLnNpYmxpbmc7KXtpZihudWxsPT09cS5yZXR1cm58fHEucmV0dXJuPT09YSlicmVhayBhO209PT1xJiYobT1udWxsKTtxPXEucmV0dXJufW09PT1xJiYobT1udWxsKTtxLnNpYmxpbmcucmV0dXJuPXEucmV0dXJuO3E9cS5zaWJsaW5nfX1icmVhaztjYXNlIDE5OmRrKGIsYSk7ZmsoYSk7ZCY0JiZiayhhKTticmVhaztjYXNlIDIxOmJyZWFrO2RlZmF1bHQ6ZGsoYixcbmEpLGZrKGEpfX1mdW5jdGlvbiBmayhhKXt2YXIgYj1hLmZsYWdzO2lmKGImMil7dHJ5e2E6e2Zvcih2YXIgYz1hLnJldHVybjtudWxsIT09Yzspe2lmKFVqKGMpKXt2YXIgZD1jO2JyZWFrIGF9Yz1jLnJldHVybn10aHJvdyBFcnJvcihwKDE2MCkpO31zd2l0Y2goZC50YWcpe2Nhc2UgNTp2YXIgZT1kLnN0YXRlTm9kZTtkLmZsYWdzJjMyJiYob2IoZSxcIlwiKSxkLmZsYWdzJj0tMzMpO3ZhciBmPVZqKGEpO1hqKGEsZixlKTticmVhaztjYXNlIDM6Y2FzZSA0OnZhciBnPWQuc3RhdGVOb2RlLmNvbnRhaW5lckluZm8saD1WaihhKTtXaihhLGgsZyk7YnJlYWs7ZGVmYXVsdDp0aHJvdyBFcnJvcihwKDE2MSkpO319Y2F0Y2goayl7VyhhLGEucmV0dXJuLGspfWEuZmxhZ3MmPS0zfWImNDA5NiYmKGEuZmxhZ3MmPS00MDk3KX1mdW5jdGlvbiBpayhhLGIsYyl7Vj1hO2prKGEsYixjKX1cbmZ1bmN0aW9uIGprKGEsYixjKXtmb3IodmFyIGQ9MCE9PShhLm1vZGUmMSk7bnVsbCE9PVY7KXt2YXIgZT1WLGY9ZS5jaGlsZDtpZigyMj09PWUudGFnJiZkKXt2YXIgZz1udWxsIT09ZS5tZW1vaXplZFN0YXRlfHxLajtpZighZyl7dmFyIGg9ZS5hbHRlcm5hdGUsaz1udWxsIT09aCYmbnVsbCE9PWgubWVtb2l6ZWRTdGF0ZXx8VTtoPUtqO3ZhciBsPVU7S2o9ZztpZigoVT1rKSYmIWwpZm9yKFY9ZTtudWxsIT09VjspZz1WLGs9Zy5jaGlsZCwyMj09PWcudGFnJiZudWxsIT09Zy5tZW1vaXplZFN0YXRlP2trKGUpOm51bGwhPT1rPyhrLnJldHVybj1nLFY9ayk6a2soZSk7Zm9yKDtudWxsIT09ZjspVj1mLGprKGYsYixjKSxmPWYuc2libGluZztWPWU7S2o9aDtVPWx9bGsoYSxiLGMpfWVsc2UgMCE9PShlLnN1YnRyZWVGbGFncyY4NzcyKSYmbnVsbCE9PWY/KGYucmV0dXJuPWUsVj1mKTpsayhhLGIsYyl9fVxuZnVuY3Rpb24gbGsoYSl7Zm9yKDtudWxsIT09Vjspe3ZhciBiPVY7aWYoMCE9PShiLmZsYWdzJjg3NzIpKXt2YXIgYz1iLmFsdGVybmF0ZTt0cnl7aWYoMCE9PShiLmZsYWdzJjg3NzIpKXN3aXRjaChiLnRhZyl7Y2FzZSAwOmNhc2UgMTE6Y2FzZSAxNTpVfHxSaig1LGIpO2JyZWFrO2Nhc2UgMTp2YXIgZD1iLnN0YXRlTm9kZTtpZihiLmZsYWdzJjQmJiFVKWlmKG51bGw9PT1jKWQuY29tcG9uZW50RGlkTW91bnQoKTtlbHNle3ZhciBlPWIuZWxlbWVudFR5cGU9PT1iLnR5cGU/Yy5tZW1vaXplZFByb3BzOkxnKGIudHlwZSxjLm1lbW9pemVkUHJvcHMpO2QuY29tcG9uZW50RGlkVXBkYXRlKGUsYy5tZW1vaXplZFN0YXRlLGQuX19yZWFjdEludGVybmFsU25hcHNob3RCZWZvcmVVcGRhdGUpfXZhciBmPWIudXBkYXRlUXVldWU7bnVsbCE9PWYmJmloKGIsZixkKTticmVhaztjYXNlIDM6dmFyIGc9Yi51cGRhdGVRdWV1ZTtpZihudWxsIT09Zyl7Yz1udWxsO2lmKG51bGwhPT1iLmNoaWxkKXN3aXRjaChiLmNoaWxkLnRhZyl7Y2FzZSA1OmM9XG5iLmNoaWxkLnN0YXRlTm9kZTticmVhaztjYXNlIDE6Yz1iLmNoaWxkLnN0YXRlTm9kZX1paChiLGcsYyl9YnJlYWs7Y2FzZSA1OnZhciBoPWIuc3RhdGVOb2RlO2lmKG51bGw9PT1jJiZiLmZsYWdzJjQpe2M9aDt2YXIgaz1iLm1lbW9pemVkUHJvcHM7c3dpdGNoKGIudHlwZSl7Y2FzZSBcImJ1dHRvblwiOmNhc2UgXCJpbnB1dFwiOmNhc2UgXCJzZWxlY3RcIjpjYXNlIFwidGV4dGFyZWFcIjprLmF1dG9Gb2N1cyYmYy5mb2N1cygpO2JyZWFrO2Nhc2UgXCJpbWdcIjprLnNyYyYmKGMuc3JjPWsuc3JjKX19YnJlYWs7Y2FzZSA2OmJyZWFrO2Nhc2UgNDpicmVhaztjYXNlIDEyOmJyZWFrO2Nhc2UgMTM6aWYobnVsbD09PWIubWVtb2l6ZWRTdGF0ZSl7dmFyIGw9Yi5hbHRlcm5hdGU7aWYobnVsbCE9PWwpe3ZhciBtPWwubWVtb2l6ZWRTdGF0ZTtpZihudWxsIT09bSl7dmFyIHE9bS5kZWh5ZHJhdGVkO251bGwhPT1xJiZiZChxKX19fWJyZWFrO2Nhc2UgMTk6Y2FzZSAxNzpjYXNlIDIxOmNhc2UgMjI6Y2FzZSAyMzpjYXNlIDI1OmJyZWFrO1xuZGVmYXVsdDp0aHJvdyBFcnJvcihwKDE2MykpO31VfHxiLmZsYWdzJjUxMiYmU2ooYil9Y2F0Y2gocil7VyhiLGIucmV0dXJuLHIpfX1pZihiPT09YSl7Vj1udWxsO2JyZWFrfWM9Yi5zaWJsaW5nO2lmKG51bGwhPT1jKXtjLnJldHVybj1iLnJldHVybjtWPWM7YnJlYWt9Vj1iLnJldHVybn19ZnVuY3Rpb24gaGsoYSl7Zm9yKDtudWxsIT09Vjspe3ZhciBiPVY7aWYoYj09PWEpe1Y9bnVsbDticmVha312YXIgYz1iLnNpYmxpbmc7aWYobnVsbCE9PWMpe2MucmV0dXJuPWIucmV0dXJuO1Y9YzticmVha31WPWIucmV0dXJufX1cbmZ1bmN0aW9uIGtrKGEpe2Zvcig7bnVsbCE9PVY7KXt2YXIgYj1WO3RyeXtzd2l0Y2goYi50YWcpe2Nhc2UgMDpjYXNlIDExOmNhc2UgMTU6dmFyIGM9Yi5yZXR1cm47dHJ5e1JqKDQsYil9Y2F0Y2goayl7VyhiLGMsayl9YnJlYWs7Y2FzZSAxOnZhciBkPWIuc3RhdGVOb2RlO2lmKFwiZnVuY3Rpb25cIj09PXR5cGVvZiBkLmNvbXBvbmVudERpZE1vdW50KXt2YXIgZT1iLnJldHVybjt0cnl7ZC5jb21wb25lbnREaWRNb3VudCgpfWNhdGNoKGspe1coYixlLGspfX12YXIgZj1iLnJldHVybjt0cnl7U2ooYil9Y2F0Y2goayl7VyhiLGYsayl9YnJlYWs7Y2FzZSA1OnZhciBnPWIucmV0dXJuO3RyeXtTaihiKX1jYXRjaChrKXtXKGIsZyxrKX19fWNhdGNoKGspe1coYixiLnJldHVybixrKX1pZihiPT09YSl7Vj1udWxsO2JyZWFrfXZhciBoPWIuc2libGluZztpZihudWxsIT09aCl7aC5yZXR1cm49Yi5yZXR1cm47Vj1oO2JyZWFrfVY9Yi5yZXR1cm59fVxudmFyIG1rPU1hdGguY2VpbCxuaz11YS5SZWFjdEN1cnJlbnREaXNwYXRjaGVyLG9rPXVhLlJlYWN0Q3VycmVudE93bmVyLHBrPXVhLlJlYWN0Q3VycmVudEJhdGNoQ29uZmlnLEs9MCxSPW51bGwsWT1udWxsLFo9MCxnaj0wLGZqPVVmKDApLFQ9MCxxaz1udWxsLGhoPTAscms9MCxzaz0wLHRrPW51bGwsdWs9bnVsbCxnaz0wLEhqPUluZmluaXR5LHZrPW51bGwsUGk9ITEsUWk9bnVsbCxTaT1udWxsLHdrPSExLHhrPW51bGwseWs9MCx6az0wLEFrPW51bGwsQms9LTEsQ2s9MDtmdW5jdGlvbiBMKCl7cmV0dXJuIDAhPT0oSyY2KT9CKCk6LTEhPT1Caz9CazpCaz1CKCl9XG5mdW5jdGlvbiBsaChhKXtpZigwPT09KGEubW9kZSYxKSlyZXR1cm4gMTtpZigwIT09KEsmMikmJjAhPT1aKXJldHVybiBaJi1aO2lmKG51bGwhPT1LZy50cmFuc2l0aW9uKXJldHVybiAwPT09Q2smJihDaz15YygpKSxDazthPUM7aWYoMCE9PWEpcmV0dXJuIGE7YT13aW5kb3cuZXZlbnQ7YT12b2lkIDA9PT1hPzE2OmpkKGEudHlwZSk7cmV0dXJuIGF9ZnVuY3Rpb24gbWgoYSxiLGMsZCl7aWYoNTA8emspdGhyb3cgems9MCxBaz1udWxsLEVycm9yKHAoMTg1KSk7QWMoYSxjLGQpO2lmKDA9PT0oSyYyKXx8YSE9PVIpYT09PVImJigwPT09KEsmMikmJihya3w9YyksND09PVQmJkRrKGEsWikpLEVrKGEsZCksMT09PWMmJjA9PT1LJiYwPT09KGIubW9kZSYxKSYmKEhqPUIoKSs1MDAsZmcmJmpnKCkpfVxuZnVuY3Rpb24gRWsoYSxiKXt2YXIgYz1hLmNhbGxiYWNrTm9kZTt3YyhhLGIpO3ZhciBkPXVjKGEsYT09PVI/WjowKTtpZigwPT09ZCludWxsIT09YyYmYmMoYyksYS5jYWxsYmFja05vZGU9bnVsbCxhLmNhbGxiYWNrUHJpb3JpdHk9MDtlbHNlIGlmKGI9ZCYtZCxhLmNhbGxiYWNrUHJpb3JpdHkhPT1iKXtudWxsIT1jJiZiYyhjKTtpZigxPT09YikwPT09YS50YWc/aWcoRmsuYmluZChudWxsLGEpKTpoZyhGay5iaW5kKG51bGwsYSkpLEpmKGZ1bmN0aW9uKCl7MD09PShLJjYpJiZqZygpfSksYz1udWxsO2Vsc2V7c3dpdGNoKERjKGQpKXtjYXNlIDE6Yz1mYzticmVhaztjYXNlIDQ6Yz1nYzticmVhaztjYXNlIDE2OmM9aGM7YnJlYWs7Y2FzZSA1MzY4NzA5MTI6Yz1qYzticmVhaztkZWZhdWx0OmM9aGN9Yz1HayhjLEhrLmJpbmQobnVsbCxhKSl9YS5jYWxsYmFja1ByaW9yaXR5PWI7YS5jYWxsYmFja05vZGU9Y319XG5mdW5jdGlvbiBIayhhLGIpe0JrPS0xO0NrPTA7aWYoMCE9PShLJjYpKXRocm93IEVycm9yKHAoMzI3KSk7dmFyIGM9YS5jYWxsYmFja05vZGU7aWYoSWsoKSYmYS5jYWxsYmFja05vZGUhPT1jKXJldHVybiBudWxsO3ZhciBkPXVjKGEsYT09PVI/WjowKTtpZigwPT09ZClyZXR1cm4gbnVsbDtpZigwIT09KGQmMzApfHwwIT09KGQmYS5leHBpcmVkTGFuZXMpfHxiKWI9SmsoYSxkKTtlbHNle2I9ZDt2YXIgZT1LO0t8PTI7dmFyIGY9S2soKTtpZihSIT09YXx8WiE9PWIpdms9bnVsbCxIaj1CKCkrNTAwLExrKGEsYik7ZG8gdHJ5e01rKCk7YnJlYWt9Y2F0Y2goaCl7TmsoYSxoKX13aGlsZSgxKTtRZygpO25rLmN1cnJlbnQ9ZjtLPWU7bnVsbCE9PVk/Yj0wOihSPW51bGwsWj0wLGI9VCl9aWYoMCE9PWIpezI9PT1iJiYoZT14YyhhKSwwIT09ZSYmKGQ9ZSxiPU9rKGEsZSkpKTtpZigxPT09Yil0aHJvdyBjPXFrLExrKGEsMCksRGsoYSxkKSxFayhhLEIoKSksYztpZig2PT09YilEayhhLGQpO1xuZWxzZXtlPWEuY3VycmVudC5hbHRlcm5hdGU7aWYoMD09PShkJjMwKSYmIVBrKGUpJiYoYj1KayhhLGQpLDI9PT1iJiYoZj14YyhhKSwwIT09ZiYmKGQ9ZixiPU9rKGEsZikpKSwxPT09YikpdGhyb3cgYz1xayxMayhhLDApLERrKGEsZCksRWsoYSxCKCkpLGM7YS5maW5pc2hlZFdvcms9ZTthLmZpbmlzaGVkTGFuZXM9ZDtzd2l0Y2goYil7Y2FzZSAwOmNhc2UgMTp0aHJvdyBFcnJvcihwKDM0NSkpO2Nhc2UgMjpRayhhLHVrLHZrKTticmVhaztjYXNlIDM6RGsoYSxkKTtpZigoZCYxMzAwMjM0MjQpPT09ZCYmKGI9Z2srNTAwLUIoKSwxMDxiKSl7aWYoMCE9PXVjKGEsMCkpYnJlYWs7ZT1hLnN1c3BlbmRlZExhbmVzO2lmKChlJmQpIT09ZCl7TCgpO2EucGluZ2VkTGFuZXN8PWEuc3VzcGVuZGVkTGFuZXMmZTticmVha31hLnRpbWVvdXRIYW5kbGU9RmYoUWsuYmluZChudWxsLGEsdWssdmspLGIpO2JyZWFrfVFrKGEsdWssdmspO2JyZWFrO2Nhc2UgNDpEayhhLGQpO2lmKChkJjQxOTQyNDApPT09XG5kKWJyZWFrO2I9YS5ldmVudFRpbWVzO2ZvcihlPS0xOzA8ZDspe3ZhciBnPTMxLW9jKGQpO2Y9MTw8ZztnPWJbZ107Zz5lJiYoZT1nKTtkJj1+Zn1kPWU7ZD1CKCktZDtkPSgxMjA+ZD8xMjA6NDgwPmQ/NDgwOjEwODA+ZD8xMDgwOjE5MjA+ZD8xOTIwOjNFMz5kPzNFMzo0MzIwPmQ/NDMyMDoxOTYwKm1rKGQvMTk2MCkpLWQ7aWYoMTA8ZCl7YS50aW1lb3V0SGFuZGxlPUZmKFFrLmJpbmQobnVsbCxhLHVrLHZrKSxkKTticmVha31RayhhLHVrLHZrKTticmVhaztjYXNlIDU6UWsoYSx1ayx2ayk7YnJlYWs7ZGVmYXVsdDp0aHJvdyBFcnJvcihwKDMyOSkpO319fUVrKGEsQigpKTtyZXR1cm4gYS5jYWxsYmFja05vZGU9PT1jP0hrLmJpbmQobnVsbCxhKTpudWxsfVxuZnVuY3Rpb24gT2soYSxiKXt2YXIgYz10azthLmN1cnJlbnQubWVtb2l6ZWRTdGF0ZS5pc0RlaHlkcmF0ZWQmJihMayhhLGIpLmZsYWdzfD0yNTYpO2E9SmsoYSxiKTsyIT09YSYmKGI9dWssdWs9YyxudWxsIT09YiYmR2ooYikpO3JldHVybiBhfWZ1bmN0aW9uIEdqKGEpe251bGw9PT11az91az1hOnVrLnB1c2guYXBwbHkodWssYSl9XG5mdW5jdGlvbiBQayhhKXtmb3IodmFyIGI9YTs7KXtpZihiLmZsYWdzJjE2Mzg0KXt2YXIgYz1iLnVwZGF0ZVF1ZXVlO2lmKG51bGwhPT1jJiYoYz1jLnN0b3JlcyxudWxsIT09YykpZm9yKHZhciBkPTA7ZDxjLmxlbmd0aDtkKyspe3ZhciBlPWNbZF0sZj1lLmdldFNuYXBzaG90O2U9ZS52YWx1ZTt0cnl7aWYoIUhlKGYoKSxlKSlyZXR1cm4hMX1jYXRjaChnKXtyZXR1cm4hMX19fWM9Yi5jaGlsZDtpZihiLnN1YnRyZWVGbGFncyYxNjM4NCYmbnVsbCE9PWMpYy5yZXR1cm49YixiPWM7ZWxzZXtpZihiPT09YSlicmVhaztmb3IoO251bGw9PT1iLnNpYmxpbmc7KXtpZihudWxsPT09Yi5yZXR1cm58fGIucmV0dXJuPT09YSlyZXR1cm4hMDtiPWIucmV0dXJufWIuc2libGluZy5yZXR1cm49Yi5yZXR1cm47Yj1iLnNpYmxpbmd9fXJldHVybiEwfVxuZnVuY3Rpb24gRGsoYSxiKXtiJj1+c2s7YiY9fnJrO2Euc3VzcGVuZGVkTGFuZXN8PWI7YS5waW5nZWRMYW5lcyY9fmI7Zm9yKGE9YS5leHBpcmF0aW9uVGltZXM7MDxiOyl7dmFyIGM9MzEtb2MoYiksZD0xPDxjO2FbY109LTE7YiY9fmR9fWZ1bmN0aW9uIEZrKGEpe2lmKDAhPT0oSyY2KSl0aHJvdyBFcnJvcihwKDMyNykpO0lrKCk7dmFyIGI9dWMoYSwwKTtpZigwPT09KGImMSkpcmV0dXJuIEVrKGEsQigpKSxudWxsO3ZhciBjPUprKGEsYik7aWYoMCE9PWEudGFnJiYyPT09Yyl7dmFyIGQ9eGMoYSk7MCE9PWQmJihiPWQsYz1PayhhLGQpKX1pZigxPT09Yyl0aHJvdyBjPXFrLExrKGEsMCksRGsoYSxiKSxFayhhLEIoKSksYztpZig2PT09Yyl0aHJvdyBFcnJvcihwKDM0NSkpO2EuZmluaXNoZWRXb3JrPWEuY3VycmVudC5hbHRlcm5hdGU7YS5maW5pc2hlZExhbmVzPWI7UWsoYSx1ayx2ayk7RWsoYSxCKCkpO3JldHVybiBudWxsfVxuZnVuY3Rpb24gUmsoYSxiKXt2YXIgYz1LO0t8PTE7dHJ5e3JldHVybiBhKGIpfWZpbmFsbHl7Sz1jLDA9PT1LJiYoSGo9QigpKzUwMCxmZyYmamcoKSl9fWZ1bmN0aW9uIFNrKGEpe251bGwhPT14ayYmMD09PXhrLnRhZyYmMD09PShLJjYpJiZJaygpO3ZhciBiPUs7S3w9MTt2YXIgYz1way50cmFuc2l0aW9uLGQ9Qzt0cnl7aWYocGsudHJhbnNpdGlvbj1udWxsLEM9MSxhKXJldHVybiBhKCl9ZmluYWxseXtDPWQscGsudHJhbnNpdGlvbj1jLEs9YiwwPT09KEsmNikmJmpnKCl9fWZ1bmN0aW9uIElqKCl7Z2o9ZmouY3VycmVudDtFKGZqKX1cbmZ1bmN0aW9uIExrKGEsYil7YS5maW5pc2hlZFdvcms9bnVsbDthLmZpbmlzaGVkTGFuZXM9MDt2YXIgYz1hLnRpbWVvdXRIYW5kbGU7LTEhPT1jJiYoYS50aW1lb3V0SGFuZGxlPS0xLEdmKGMpKTtpZihudWxsIT09WSlmb3IoYz1ZLnJldHVybjtudWxsIT09Yzspe3ZhciBkPWM7d2coZCk7c3dpdGNoKGQudGFnKXtjYXNlIDE6ZD1kLnR5cGUuY2hpbGRDb250ZXh0VHlwZXM7bnVsbCE9PWQmJnZvaWQgMCE9PWQmJiRmKCk7YnJlYWs7Y2FzZSAzOkpoKCk7RShXZik7RShIKTtPaCgpO2JyZWFrO2Nhc2UgNTpMaChkKTticmVhaztjYXNlIDQ6SmgoKTticmVhaztjYXNlIDEzOkUoTSk7YnJlYWs7Y2FzZSAxOTpFKE0pO2JyZWFrO2Nhc2UgMTA6UmcoZC50eXBlLl9jb250ZXh0KTticmVhaztjYXNlIDIyOmNhc2UgMjM6SWooKX1jPWMucmV0dXJufVI9YTtZPWE9d2goYS5jdXJyZW50LG51bGwpO1o9Z2o9YjtUPTA7cWs9bnVsbDtzaz1yaz1oaD0wO3VrPXRrPW51bGw7aWYobnVsbCE9PVdnKXtmb3IoYj1cbjA7YjxXZy5sZW5ndGg7YisrKWlmKGM9V2dbYl0sZD1jLmludGVybGVhdmVkLG51bGwhPT1kKXtjLmludGVybGVhdmVkPW51bGw7dmFyIGU9ZC5uZXh0LGY9Yy5wZW5kaW5nO2lmKG51bGwhPT1mKXt2YXIgZz1mLm5leHQ7Zi5uZXh0PWU7ZC5uZXh0PWd9Yy5wZW5kaW5nPWR9V2c9bnVsbH1yZXR1cm4gYX1cbmZ1bmN0aW9uIE5rKGEsYil7ZG97dmFyIGM9WTt0cnl7UWcoKTtQaC5jdXJyZW50PWFpO2lmKFNoKXtmb3IodmFyIGQ9Ti5tZW1vaXplZFN0YXRlO251bGwhPT1kOyl7dmFyIGU9ZC5xdWV1ZTtudWxsIT09ZSYmKGUucGVuZGluZz1udWxsKTtkPWQubmV4dH1TaD0hMX1SaD0wO1A9Tz1OPW51bGw7VGg9ITE7VWg9MDtvay5jdXJyZW50PW51bGw7aWYobnVsbD09PWN8fG51bGw9PT1jLnJldHVybil7VD0xO3FrPWI7WT1udWxsO2JyZWFrfWE6e3ZhciBmPWEsZz1jLnJldHVybixoPWMsaz1iO2I9WjtoLmZsYWdzfD0zMjc2ODtpZihudWxsIT09ayYmXCJvYmplY3RcIj09PXR5cGVvZiBrJiZcImZ1bmN0aW9uXCI9PT10eXBlb2Ygay50aGVuKXt2YXIgbD1rLG09aCxxPW0udGFnO2lmKDA9PT0obS5tb2RlJjEpJiYoMD09PXF8fDExPT09cXx8MTU9PT1xKSl7dmFyIHI9bS5hbHRlcm5hdGU7cj8obS51cGRhdGVRdWV1ZT1yLnVwZGF0ZVF1ZXVlLG0ubWVtb2l6ZWRTdGF0ZT1yLm1lbW9pemVkU3RhdGUsXG5tLmxhbmVzPXIubGFuZXMpOihtLnVwZGF0ZVF1ZXVlPW51bGwsbS5tZW1vaXplZFN0YXRlPW51bGwpfXZhciB5PVZpKGcpO2lmKG51bGwhPT15KXt5LmZsYWdzJj0tMjU3O1dpKHksZyxoLGYsYik7eS5tb2RlJjEmJlRpKGYsbCxiKTtiPXk7az1sO3ZhciBuPWIudXBkYXRlUXVldWU7aWYobnVsbD09PW4pe3ZhciB0PW5ldyBTZXQ7dC5hZGQoayk7Yi51cGRhdGVRdWV1ZT10fWVsc2Ugbi5hZGQoayk7YnJlYWsgYX1lbHNle2lmKDA9PT0oYiYxKSl7VGkoZixsLGIpO3VqKCk7YnJlYWsgYX1rPUVycm9yKHAoNDI2KSl9fWVsc2UgaWYoSSYmaC5tb2RlJjEpe3ZhciBKPVZpKGcpO2lmKG51bGwhPT1KKXswPT09KEouZmxhZ3MmNjU1MzYpJiYoSi5mbGFnc3w9MjU2KTtXaShKLGcsaCxmLGIpO0pnKEtpKGssaCkpO2JyZWFrIGF9fWY9az1LaShrLGgpOzQhPT1UJiYoVD0yKTtudWxsPT09dGs/dGs9W2ZdOnRrLnB1c2goZik7Zj1nO2Rve3N3aXRjaChmLnRhZyl7Y2FzZSAzOmYuZmxhZ3N8PTY1NTM2O1xuYiY9LWI7Zi5sYW5lc3w9Yjt2YXIgeD1PaShmLGssYik7ZmgoZix4KTticmVhayBhO2Nhc2UgMTpoPWs7dmFyIHc9Zi50eXBlLHU9Zi5zdGF0ZU5vZGU7aWYoMD09PShmLmZsYWdzJjEyOCkmJihcImZ1bmN0aW9uXCI9PT10eXBlb2Ygdy5nZXREZXJpdmVkU3RhdGVGcm9tRXJyb3J8fG51bGwhPT11JiZcImZ1bmN0aW9uXCI9PT10eXBlb2YgdS5jb21wb25lbnREaWRDYXRjaCYmKG51bGw9PT1TaXx8IVNpLmhhcyh1KSkpKXtmLmZsYWdzfD02NTUzNjtiJj0tYjtmLmxhbmVzfD1iO3ZhciBGPVJpKGYsaCxiKTtmaChmLEYpO2JyZWFrIGF9fWY9Zi5yZXR1cm59d2hpbGUobnVsbCE9PWYpfVRrKGMpfWNhdGNoKG5hKXtiPW5hO1k9PT1jJiZudWxsIT09YyYmKFk9Yz1jLnJldHVybik7Y29udGludWV9YnJlYWt9d2hpbGUoMSl9ZnVuY3Rpb24gS2soKXt2YXIgYT1uay5jdXJyZW50O25rLmN1cnJlbnQ9YWk7cmV0dXJuIG51bGw9PT1hP2FpOmF9XG5mdW5jdGlvbiB1aigpe2lmKDA9PT1UfHwzPT09VHx8Mj09PVQpVD00O251bGw9PT1SfHwwPT09KGhoJjI2ODQzNTQ1NSkmJjA9PT0ocmsmMjY4NDM1NDU1KXx8RGsoUixaKX1mdW5jdGlvbiBKayhhLGIpe3ZhciBjPUs7S3w9Mjt2YXIgZD1LaygpO2lmKFIhPT1hfHxaIT09Yil2az1udWxsLExrKGEsYik7ZG8gdHJ5e1VrKCk7YnJlYWt9Y2F0Y2goZSl7TmsoYSxlKX13aGlsZSgxKTtRZygpO0s9Yztuay5jdXJyZW50PWQ7aWYobnVsbCE9PVkpdGhyb3cgRXJyb3IocCgyNjEpKTtSPW51bGw7Wj0wO3JldHVybiBUfWZ1bmN0aW9uIFVrKCl7Zm9yKDtudWxsIT09WTspVmsoWSl9ZnVuY3Rpb24gTWsoKXtmb3IoO251bGwhPT1ZJiYhY2MoKTspVmsoWSl9ZnVuY3Rpb24gVmsoYSl7dmFyIGI9V2soYS5hbHRlcm5hdGUsYSxnaik7YS5tZW1vaXplZFByb3BzPWEucGVuZGluZ1Byb3BzO251bGw9PT1iP1RrKGEpOlk9Yjtvay5jdXJyZW50PW51bGx9XG5mdW5jdGlvbiBUayhhKXt2YXIgYj1hO2Rve3ZhciBjPWIuYWx0ZXJuYXRlO2E9Yi5yZXR1cm47aWYoMD09PShiLmZsYWdzJjMyNzY4KSl7aWYoYz1GaihjLGIsZ2opLG51bGwhPT1jKXtZPWM7cmV0dXJufX1lbHNle2M9SmooYyxiKTtpZihudWxsIT09Yyl7Yy5mbGFncyY9MzI3Njc7WT1jO3JldHVybn1pZihudWxsIT09YSlhLmZsYWdzfD0zMjc2OCxhLnN1YnRyZWVGbGFncz0wLGEuZGVsZXRpb25zPW51bGw7ZWxzZXtUPTY7WT1udWxsO3JldHVybn19Yj1iLnNpYmxpbmc7aWYobnVsbCE9PWIpe1k9YjtyZXR1cm59WT1iPWF9d2hpbGUobnVsbCE9PWIpOzA9PT1UJiYoVD01KX1mdW5jdGlvbiBRayhhLGIsYyl7dmFyIGQ9QyxlPXBrLnRyYW5zaXRpb247dHJ5e3BrLnRyYW5zaXRpb249bnVsbCxDPTEsWGsoYSxiLGMsZCl9ZmluYWxseXtway50cmFuc2l0aW9uPWUsQz1kfXJldHVybiBudWxsfVxuZnVuY3Rpb24gWGsoYSxiLGMsZCl7ZG8gSWsoKTt3aGlsZShudWxsIT09eGspO2lmKDAhPT0oSyY2KSl0aHJvdyBFcnJvcihwKDMyNykpO2M9YS5maW5pc2hlZFdvcms7dmFyIGU9YS5maW5pc2hlZExhbmVzO2lmKG51bGw9PT1jKXJldHVybiBudWxsO2EuZmluaXNoZWRXb3JrPW51bGw7YS5maW5pc2hlZExhbmVzPTA7aWYoYz09PWEuY3VycmVudCl0aHJvdyBFcnJvcihwKDE3NykpO2EuY2FsbGJhY2tOb2RlPW51bGw7YS5jYWxsYmFja1ByaW9yaXR5PTA7dmFyIGY9Yy5sYW5lc3xjLmNoaWxkTGFuZXM7QmMoYSxmKTthPT09UiYmKFk9Uj1udWxsLFo9MCk7MD09PShjLnN1YnRyZWVGbGFncyYyMDY0KSYmMD09PShjLmZsYWdzJjIwNjQpfHx3a3x8KHdrPSEwLEdrKGhjLGZ1bmN0aW9uKCl7SWsoKTtyZXR1cm4gbnVsbH0pKTtmPTAhPT0oYy5mbGFncyYxNTk5MCk7aWYoMCE9PShjLnN1YnRyZWVGbGFncyYxNTk5MCl8fGYpe2Y9cGsudHJhbnNpdGlvbjtway50cmFuc2l0aW9uPW51bGw7XG52YXIgZz1DO0M9MTt2YXIgaD1LO0t8PTQ7b2suY3VycmVudD1udWxsO1BqKGEsYyk7ZWsoYyxhKTtPZShEZik7ZGQ9ISFDZjtEZj1DZj1udWxsO2EuY3VycmVudD1jO2lrKGMsYSxlKTtkYygpO0s9aDtDPWc7cGsudHJhbnNpdGlvbj1mfWVsc2UgYS5jdXJyZW50PWM7d2smJih3az0hMSx4az1hLHlrPWUpO2Y9YS5wZW5kaW5nTGFuZXM7MD09PWYmJihTaT1udWxsKTttYyhjLnN0YXRlTm9kZSxkKTtFayhhLEIoKSk7aWYobnVsbCE9PWIpZm9yKGQ9YS5vblJlY292ZXJhYmxlRXJyb3IsYz0wO2M8Yi5sZW5ndGg7YysrKWU9YltjXSxkKGUudmFsdWUse2NvbXBvbmVudFN0YWNrOmUuc3RhY2ssZGlnZXN0OmUuZGlnZXN0fSk7aWYoUGkpdGhyb3cgUGk9ITEsYT1RaSxRaT1udWxsLGE7MCE9PSh5ayYxKSYmMCE9PWEudGFnJiZJaygpO2Y9YS5wZW5kaW5nTGFuZXM7MCE9PShmJjEpP2E9PT1Baz96aysrOih6az0wLEFrPWEpOnprPTA7amcoKTtyZXR1cm4gbnVsbH1cbmZ1bmN0aW9uIElrKCl7aWYobnVsbCE9PXhrKXt2YXIgYT1EYyh5ayksYj1way50cmFuc2l0aW9uLGM9Qzt0cnl7cGsudHJhbnNpdGlvbj1udWxsO0M9MTY+YT8xNjphO2lmKG51bGw9PT14ayl2YXIgZD0hMTtlbHNle2E9eGs7eGs9bnVsbDt5az0wO2lmKDAhPT0oSyY2KSl0aHJvdyBFcnJvcihwKDMzMSkpO3ZhciBlPUs7S3w9NDtmb3IoVj1hLmN1cnJlbnQ7bnVsbCE9PVY7KXt2YXIgZj1WLGc9Zi5jaGlsZDtpZigwIT09KFYuZmxhZ3MmMTYpKXt2YXIgaD1mLmRlbGV0aW9ucztpZihudWxsIT09aCl7Zm9yKHZhciBrPTA7azxoLmxlbmd0aDtrKyspe3ZhciBsPWhba107Zm9yKFY9bDtudWxsIT09Vjspe3ZhciBtPVY7c3dpdGNoKG0udGFnKXtjYXNlIDA6Y2FzZSAxMTpjYXNlIDE1OlFqKDgsbSxmKX12YXIgcT1tLmNoaWxkO2lmKG51bGwhPT1xKXEucmV0dXJuPW0sVj1xO2Vsc2UgZm9yKDtudWxsIT09Vjspe209Vjt2YXIgcj1tLnNpYmxpbmcseT1tLnJldHVybjtUaihtKTtpZihtPT09XG5sKXtWPW51bGw7YnJlYWt9aWYobnVsbCE9PXIpe3IucmV0dXJuPXk7Vj1yO2JyZWFrfVY9eX19fXZhciBuPWYuYWx0ZXJuYXRlO2lmKG51bGwhPT1uKXt2YXIgdD1uLmNoaWxkO2lmKG51bGwhPT10KXtuLmNoaWxkPW51bGw7ZG97dmFyIEo9dC5zaWJsaW5nO3Quc2libGluZz1udWxsO3Q9Sn13aGlsZShudWxsIT09dCl9fVY9Zn19aWYoMCE9PShmLnN1YnRyZWVGbGFncyYyMDY0KSYmbnVsbCE9PWcpZy5yZXR1cm49ZixWPWc7ZWxzZSBiOmZvcig7bnVsbCE9PVY7KXtmPVY7aWYoMCE9PShmLmZsYWdzJjIwNDgpKXN3aXRjaChmLnRhZyl7Y2FzZSAwOmNhc2UgMTE6Y2FzZSAxNTpRaig5LGYsZi5yZXR1cm4pfXZhciB4PWYuc2libGluZztpZihudWxsIT09eCl7eC5yZXR1cm49Zi5yZXR1cm47Vj14O2JyZWFrIGJ9Vj1mLnJldHVybn19dmFyIHc9YS5jdXJyZW50O2ZvcihWPXc7bnVsbCE9PVY7KXtnPVY7dmFyIHU9Zy5jaGlsZDtpZigwIT09KGcuc3VidHJlZUZsYWdzJjIwNjQpJiZudWxsIT09XG51KXUucmV0dXJuPWcsVj11O2Vsc2UgYjpmb3IoZz13O251bGwhPT1WOyl7aD1WO2lmKDAhPT0oaC5mbGFncyYyMDQ4KSl0cnl7c3dpdGNoKGgudGFnKXtjYXNlIDA6Y2FzZSAxMTpjYXNlIDE1OlJqKDksaCl9fWNhdGNoKG5hKXtXKGgsaC5yZXR1cm4sbmEpfWlmKGg9PT1nKXtWPW51bGw7YnJlYWsgYn12YXIgRj1oLnNpYmxpbmc7aWYobnVsbCE9PUYpe0YucmV0dXJuPWgucmV0dXJuO1Y9RjticmVhayBifVY9aC5yZXR1cm59fUs9ZTtqZygpO2lmKGxjJiZcImZ1bmN0aW9uXCI9PT10eXBlb2YgbGMub25Qb3N0Q29tbWl0RmliZXJSb290KXRyeXtsYy5vblBvc3RDb21taXRGaWJlclJvb3Qoa2MsYSl9Y2F0Y2gobmEpe31kPSEwfXJldHVybiBkfWZpbmFsbHl7Qz1jLHBrLnRyYW5zaXRpb249Yn19cmV0dXJuITF9ZnVuY3Rpb24gWWsoYSxiLGMpe2I9S2koYyxiKTtiPU9pKGEsYiwxKTthPWRoKGEsYiwxKTtiPUwoKTtudWxsIT09YSYmKEFjKGEsMSxiKSxFayhhLGIpKX1cbmZ1bmN0aW9uIFcoYSxiLGMpe2lmKDM9PT1hLnRhZylZayhhLGEsYyk7ZWxzZSBmb3IoO251bGwhPT1iOyl7aWYoMz09PWIudGFnKXtZayhiLGEsYyk7YnJlYWt9ZWxzZSBpZigxPT09Yi50YWcpe3ZhciBkPWIuc3RhdGVOb2RlO2lmKFwiZnVuY3Rpb25cIj09PXR5cGVvZiBiLnR5cGUuZ2V0RGVyaXZlZFN0YXRlRnJvbUVycm9yfHxcImZ1bmN0aW9uXCI9PT10eXBlb2YgZC5jb21wb25lbnREaWRDYXRjaCYmKG51bGw9PT1TaXx8IVNpLmhhcyhkKSkpe2E9S2koYyxhKTthPVJpKGIsYSwxKTtiPWRoKGIsYSwxKTthPUwoKTtudWxsIT09YiYmKEFjKGIsMSxhKSxFayhiLGEpKTticmVha319Yj1iLnJldHVybn19XG5mdW5jdGlvbiBVaShhLGIsYyl7dmFyIGQ9YS5waW5nQ2FjaGU7bnVsbCE9PWQmJmQuZGVsZXRlKGIpO2I9TCgpO2EucGluZ2VkTGFuZXN8PWEuc3VzcGVuZGVkTGFuZXMmYztSPT09YSYmKFomYyk9PT1jJiYoND09PVR8fDM9PT1UJiYoWiYxMzAwMjM0MjQpPT09WiYmNTAwPkIoKS1naz9MayhhLDApOnNrfD1jKTtFayhhLGIpfWZ1bmN0aW9uIFprKGEsYil7MD09PWImJigwPT09KGEubW9kZSYxKT9iPTE6KGI9c2Msc2M8PD0xLDA9PT0oc2MmMTMwMDIzNDI0KSYmKHNjPTQxOTQzMDQpKSk7dmFyIGM9TCgpO2E9WmcoYSxiKTtudWxsIT09YSYmKEFjKGEsYixjKSxFayhhLGMpKX1mdW5jdGlvbiB2aihhKXt2YXIgYj1hLm1lbW9pemVkU3RhdGUsYz0wO251bGwhPT1iJiYoYz1iLnJldHJ5TGFuZSk7WmsoYSxjKX1cbmZ1bmN0aW9uIGNrKGEsYil7dmFyIGM9MDtzd2l0Y2goYS50YWcpe2Nhc2UgMTM6dmFyIGQ9YS5zdGF0ZU5vZGU7dmFyIGU9YS5tZW1vaXplZFN0YXRlO251bGwhPT1lJiYoYz1lLnJldHJ5TGFuZSk7YnJlYWs7Y2FzZSAxOTpkPWEuc3RhdGVOb2RlO2JyZWFrO2RlZmF1bHQ6dGhyb3cgRXJyb3IocCgzMTQpKTt9bnVsbCE9PWQmJmQuZGVsZXRlKGIpO1prKGEsYyl9dmFyIFdrO1xuV2s9ZnVuY3Rpb24oYSxiLGMpe2lmKG51bGwhPT1hKWlmKGEubWVtb2l6ZWRQcm9wcyE9PWIucGVuZGluZ1Byb3BzfHxXZi5jdXJyZW50KVVnPSEwO2Vsc2V7aWYoMD09PShhLmxhbmVzJmMpJiYwPT09KGIuZmxhZ3MmMTI4KSlyZXR1cm4gVWc9ITEsemooYSxiLGMpO1VnPTAhPT0oYS5mbGFncyYxMzEwNzIpPyEwOiExfWVsc2UgVWc9ITEsSSYmMCE9PShiLmZsYWdzJjEwNDg1NzYpJiZ1ZyhiLG5nLGIuaW5kZXgpO2IubGFuZXM9MDtzd2l0Y2goYi50YWcpe2Nhc2UgMjp2YXIgZD1iLnR5cGU7amooYSxiKTthPWIucGVuZGluZ1Byb3BzO3ZhciBlPVlmKGIsSC5jdXJyZW50KTtUZyhiLGMpO2U9WGgobnVsbCxiLGQsYSxlLGMpO3ZhciBmPWJpKCk7Yi5mbGFnc3w9MTtcIm9iamVjdFwiPT09dHlwZW9mIGUmJm51bGwhPT1lJiZcImZ1bmN0aW9uXCI9PT10eXBlb2YgZS5yZW5kZXImJnZvaWQgMD09PWUuJCR0eXBlb2Y/KGIudGFnPTEsYi5tZW1vaXplZFN0YXRlPW51bGwsYi51cGRhdGVRdWV1ZT1cbm51bGwsWmYoZCk/KGY9ITAsY2coYikpOmY9ITEsYi5tZW1vaXplZFN0YXRlPW51bGwhPT1lLnN0YXRlJiZ2b2lkIDAhPT1lLnN0YXRlP2Uuc3RhdGU6bnVsbCxhaChiKSxlLnVwZGF0ZXI9bmgsYi5zdGF0ZU5vZGU9ZSxlLl9yZWFjdEludGVybmFscz1iLHJoKGIsZCxhLGMpLGI9a2oobnVsbCxiLGQsITAsZixjKSk6KGIudGFnPTAsSSYmZiYmdmcoYiksWWkobnVsbCxiLGUsYyksYj1iLmNoaWxkKTtyZXR1cm4gYjtjYXNlIDE2OmQ9Yi5lbGVtZW50VHlwZTthOntqaihhLGIpO2E9Yi5wZW5kaW5nUHJvcHM7ZT1kLl9pbml0O2Q9ZShkLl9wYXlsb2FkKTtiLnR5cGU9ZDtlPWIudGFnPSRrKGQpO2E9TGcoZCxhKTtzd2l0Y2goZSl7Y2FzZSAwOmI9ZGoobnVsbCxiLGQsYSxjKTticmVhayBhO2Nhc2UgMTpiPWlqKG51bGwsYixkLGEsYyk7YnJlYWsgYTtjYXNlIDExOmI9WmkobnVsbCxiLGQsYSxjKTticmVhayBhO2Nhc2UgMTQ6Yj1haihudWxsLGIsZCxMZyhkLnR5cGUsYSksYyk7YnJlYWsgYX10aHJvdyBFcnJvcihwKDMwNixcbmQsXCJcIikpO31yZXR1cm4gYjtjYXNlIDA6cmV0dXJuIGQ9Yi50eXBlLGU9Yi5wZW5kaW5nUHJvcHMsZT1iLmVsZW1lbnRUeXBlPT09ZD9lOkxnKGQsZSksZGooYSxiLGQsZSxjKTtjYXNlIDE6cmV0dXJuIGQ9Yi50eXBlLGU9Yi5wZW5kaW5nUHJvcHMsZT1iLmVsZW1lbnRUeXBlPT09ZD9lOkxnKGQsZSksaWooYSxiLGQsZSxjKTtjYXNlIDM6YTp7bGooYik7aWYobnVsbD09PWEpdGhyb3cgRXJyb3IocCgzODcpKTtkPWIucGVuZGluZ1Byb3BzO2Y9Yi5tZW1vaXplZFN0YXRlO2U9Zi5lbGVtZW50O2JoKGEsYik7Z2goYixkLG51bGwsYyk7dmFyIGc9Yi5tZW1vaXplZFN0YXRlO2Q9Zy5lbGVtZW50O2lmKGYuaXNEZWh5ZHJhdGVkKWlmKGY9e2VsZW1lbnQ6ZCxpc0RlaHlkcmF0ZWQ6ITEsY2FjaGU6Zy5jYWNoZSxwZW5kaW5nU3VzcGVuc2VCb3VuZGFyaWVzOmcucGVuZGluZ1N1c3BlbnNlQm91bmRhcmllcyx0cmFuc2l0aW9uczpnLnRyYW5zaXRpb25zfSxiLnVwZGF0ZVF1ZXVlLmJhc2VTdGF0ZT1cbmYsYi5tZW1vaXplZFN0YXRlPWYsYi5mbGFncyYyNTYpe2U9S2koRXJyb3IocCg0MjMpKSxiKTtiPW1qKGEsYixkLGMsZSk7YnJlYWsgYX1lbHNlIGlmKGQhPT1lKXtlPUtpKEVycm9yKHAoNDI0KSksYik7Yj1taihhLGIsZCxjLGUpO2JyZWFrIGF9ZWxzZSBmb3IoeWc9TGYoYi5zdGF0ZU5vZGUuY29udGFpbmVySW5mby5maXJzdENoaWxkKSx4Zz1iLEk9ITAsemc9bnVsbCxjPUNoKGIsbnVsbCxkLGMpLGIuY2hpbGQ9YztjOyljLmZsYWdzPWMuZmxhZ3MmLTN8NDA5NixjPWMuc2libGluZztlbHNle0lnKCk7aWYoZD09PWUpe2I9JGkoYSxiLGMpO2JyZWFrIGF9WWkoYSxiLGQsYyl9Yj1iLmNoaWxkfXJldHVybiBiO2Nhc2UgNTpyZXR1cm4gS2goYiksbnVsbD09PWEmJkVnKGIpLGQ9Yi50eXBlLGU9Yi5wZW5kaW5nUHJvcHMsZj1udWxsIT09YT9hLm1lbW9pemVkUHJvcHM6bnVsbCxnPWUuY2hpbGRyZW4sRWYoZCxlKT9nPW51bGw6bnVsbCE9PWYmJkVmKGQsZikmJihiLmZsYWdzfD0zMiksXG5oaihhLGIpLFlpKGEsYixnLGMpLGIuY2hpbGQ7Y2FzZSA2OnJldHVybiBudWxsPT09YSYmRWcoYiksbnVsbDtjYXNlIDEzOnJldHVybiBwaihhLGIsYyk7Y2FzZSA0OnJldHVybiBJaChiLGIuc3RhdGVOb2RlLmNvbnRhaW5lckluZm8pLGQ9Yi5wZW5kaW5nUHJvcHMsbnVsbD09PWE/Yi5jaGlsZD1CaChiLG51bGwsZCxjKTpZaShhLGIsZCxjKSxiLmNoaWxkO2Nhc2UgMTE6cmV0dXJuIGQ9Yi50eXBlLGU9Yi5wZW5kaW5nUHJvcHMsZT1iLmVsZW1lbnRUeXBlPT09ZD9lOkxnKGQsZSksWmkoYSxiLGQsZSxjKTtjYXNlIDc6cmV0dXJuIFlpKGEsYixiLnBlbmRpbmdQcm9wcyxjKSxiLmNoaWxkO2Nhc2UgODpyZXR1cm4gWWkoYSxiLGIucGVuZGluZ1Byb3BzLmNoaWxkcmVuLGMpLGIuY2hpbGQ7Y2FzZSAxMjpyZXR1cm4gWWkoYSxiLGIucGVuZGluZ1Byb3BzLmNoaWxkcmVuLGMpLGIuY2hpbGQ7Y2FzZSAxMDphOntkPWIudHlwZS5fY29udGV4dDtlPWIucGVuZGluZ1Byb3BzO2Y9Yi5tZW1vaXplZFByb3BzO1xuZz1lLnZhbHVlO0coTWcsZC5fY3VycmVudFZhbHVlKTtkLl9jdXJyZW50VmFsdWU9ZztpZihudWxsIT09ZilpZihIZShmLnZhbHVlLGcpKXtpZihmLmNoaWxkcmVuPT09ZS5jaGlsZHJlbiYmIVdmLmN1cnJlbnQpe2I9JGkoYSxiLGMpO2JyZWFrIGF9fWVsc2UgZm9yKGY9Yi5jaGlsZCxudWxsIT09ZiYmKGYucmV0dXJuPWIpO251bGwhPT1mOyl7dmFyIGg9Zi5kZXBlbmRlbmNpZXM7aWYobnVsbCE9PWgpe2c9Zi5jaGlsZDtmb3IodmFyIGs9aC5maXJzdENvbnRleHQ7bnVsbCE9PWs7KXtpZihrLmNvbnRleHQ9PT1kKXtpZigxPT09Zi50YWcpe2s9Y2goLTEsYyYtYyk7ay50YWc9Mjt2YXIgbD1mLnVwZGF0ZVF1ZXVlO2lmKG51bGwhPT1sKXtsPWwuc2hhcmVkO3ZhciBtPWwucGVuZGluZztudWxsPT09bT9rLm5leHQ9azooay5uZXh0PW0ubmV4dCxtLm5leHQ9ayk7bC5wZW5kaW5nPWt9fWYubGFuZXN8PWM7az1mLmFsdGVybmF0ZTtudWxsIT09ayYmKGsubGFuZXN8PWMpO1NnKGYucmV0dXJuLFxuYyxiKTtoLmxhbmVzfD1jO2JyZWFrfWs9ay5uZXh0fX1lbHNlIGlmKDEwPT09Zi50YWcpZz1mLnR5cGU9PT1iLnR5cGU/bnVsbDpmLmNoaWxkO2Vsc2UgaWYoMTg9PT1mLnRhZyl7Zz1mLnJldHVybjtpZihudWxsPT09Zyl0aHJvdyBFcnJvcihwKDM0MSkpO2cubGFuZXN8PWM7aD1nLmFsdGVybmF0ZTtudWxsIT09aCYmKGgubGFuZXN8PWMpO1NnKGcsYyxiKTtnPWYuc2libGluZ31lbHNlIGc9Zi5jaGlsZDtpZihudWxsIT09ZylnLnJldHVybj1mO2Vsc2UgZm9yKGc9ZjtudWxsIT09Zzspe2lmKGc9PT1iKXtnPW51bGw7YnJlYWt9Zj1nLnNpYmxpbmc7aWYobnVsbCE9PWYpe2YucmV0dXJuPWcucmV0dXJuO2c9ZjticmVha31nPWcucmV0dXJufWY9Z31ZaShhLGIsZS5jaGlsZHJlbixjKTtiPWIuY2hpbGR9cmV0dXJuIGI7Y2FzZSA5OnJldHVybiBlPWIudHlwZSxkPWIucGVuZGluZ1Byb3BzLmNoaWxkcmVuLFRnKGIsYyksZT1WZyhlKSxkPWQoZSksYi5mbGFnc3w9MSxZaShhLGIsZCxjKSxcbmIuY2hpbGQ7Y2FzZSAxNDpyZXR1cm4gZD1iLnR5cGUsZT1MZyhkLGIucGVuZGluZ1Byb3BzKSxlPUxnKGQudHlwZSxlKSxhaihhLGIsZCxlLGMpO2Nhc2UgMTU6cmV0dXJuIGNqKGEsYixiLnR5cGUsYi5wZW5kaW5nUHJvcHMsYyk7Y2FzZSAxNzpyZXR1cm4gZD1iLnR5cGUsZT1iLnBlbmRpbmdQcm9wcyxlPWIuZWxlbWVudFR5cGU9PT1kP2U6TGcoZCxlKSxqaihhLGIpLGIudGFnPTEsWmYoZCk/KGE9ITAsY2coYikpOmE9ITEsVGcoYixjKSxwaChiLGQsZSkscmgoYixkLGUsYyksa2oobnVsbCxiLGQsITAsYSxjKTtjYXNlIDE5OnJldHVybiB5aihhLGIsYyk7Y2FzZSAyMjpyZXR1cm4gZWooYSxiLGMpfXRocm93IEVycm9yKHAoMTU2LGIudGFnKSk7fTtmdW5jdGlvbiBHayhhLGIpe3JldHVybiBhYyhhLGIpfVxuZnVuY3Rpb24gYWwoYSxiLGMsZCl7dGhpcy50YWc9YTt0aGlzLmtleT1jO3RoaXMuc2libGluZz10aGlzLmNoaWxkPXRoaXMucmV0dXJuPXRoaXMuc3RhdGVOb2RlPXRoaXMudHlwZT10aGlzLmVsZW1lbnRUeXBlPW51bGw7dGhpcy5pbmRleD0wO3RoaXMucmVmPW51bGw7dGhpcy5wZW5kaW5nUHJvcHM9Yjt0aGlzLmRlcGVuZGVuY2llcz10aGlzLm1lbW9pemVkU3RhdGU9dGhpcy51cGRhdGVRdWV1ZT10aGlzLm1lbW9pemVkUHJvcHM9bnVsbDt0aGlzLm1vZGU9ZDt0aGlzLnN1YnRyZWVGbGFncz10aGlzLmZsYWdzPTA7dGhpcy5kZWxldGlvbnM9bnVsbDt0aGlzLmNoaWxkTGFuZXM9dGhpcy5sYW5lcz0wO3RoaXMuYWx0ZXJuYXRlPW51bGx9ZnVuY3Rpb24gQmcoYSxiLGMsZCl7cmV0dXJuIG5ldyBhbChhLGIsYyxkKX1mdW5jdGlvbiBiaihhKXthPWEucHJvdG90eXBlO3JldHVybiEoIWF8fCFhLmlzUmVhY3RDb21wb25lbnQpfVxuZnVuY3Rpb24gJGsoYSl7aWYoXCJmdW5jdGlvblwiPT09dHlwZW9mIGEpcmV0dXJuIGJqKGEpPzE6MDtpZih2b2lkIDAhPT1hJiZudWxsIT09YSl7YT1hLiQkdHlwZW9mO2lmKGE9PT1EYSlyZXR1cm4gMTE7aWYoYT09PUdhKXJldHVybiAxNH1yZXR1cm4gMn1cbmZ1bmN0aW9uIHdoKGEsYil7dmFyIGM9YS5hbHRlcm5hdGU7bnVsbD09PWM/KGM9QmcoYS50YWcsYixhLmtleSxhLm1vZGUpLGMuZWxlbWVudFR5cGU9YS5lbGVtZW50VHlwZSxjLnR5cGU9YS50eXBlLGMuc3RhdGVOb2RlPWEuc3RhdGVOb2RlLGMuYWx0ZXJuYXRlPWEsYS5hbHRlcm5hdGU9Yyk6KGMucGVuZGluZ1Byb3BzPWIsYy50eXBlPWEudHlwZSxjLmZsYWdzPTAsYy5zdWJ0cmVlRmxhZ3M9MCxjLmRlbGV0aW9ucz1udWxsKTtjLmZsYWdzPWEuZmxhZ3MmMTQ2ODAwNjQ7Yy5jaGlsZExhbmVzPWEuY2hpbGRMYW5lcztjLmxhbmVzPWEubGFuZXM7Yy5jaGlsZD1hLmNoaWxkO2MubWVtb2l6ZWRQcm9wcz1hLm1lbW9pemVkUHJvcHM7Yy5tZW1vaXplZFN0YXRlPWEubWVtb2l6ZWRTdGF0ZTtjLnVwZGF0ZVF1ZXVlPWEudXBkYXRlUXVldWU7Yj1hLmRlcGVuZGVuY2llcztjLmRlcGVuZGVuY2llcz1udWxsPT09Yj9udWxsOntsYW5lczpiLmxhbmVzLGZpcnN0Q29udGV4dDpiLmZpcnN0Q29udGV4dH07XG5jLnNpYmxpbmc9YS5zaWJsaW5nO2MuaW5kZXg9YS5pbmRleDtjLnJlZj1hLnJlZjtyZXR1cm4gY31cbmZ1bmN0aW9uIHloKGEsYixjLGQsZSxmKXt2YXIgZz0yO2Q9YTtpZihcImZ1bmN0aW9uXCI9PT10eXBlb2YgYSliaihhKSYmKGc9MSk7ZWxzZSBpZihcInN0cmluZ1wiPT09dHlwZW9mIGEpZz01O2Vsc2UgYTpzd2l0Y2goYSl7Y2FzZSB5YTpyZXR1cm4gQWgoYy5jaGlsZHJlbixlLGYsYik7Y2FzZSB6YTpnPTg7ZXw9ODticmVhaztjYXNlIEFhOnJldHVybiBhPUJnKDEyLGMsYixlfDIpLGEuZWxlbWVudFR5cGU9QWEsYS5sYW5lcz1mLGE7Y2FzZSBFYTpyZXR1cm4gYT1CZygxMyxjLGIsZSksYS5lbGVtZW50VHlwZT1FYSxhLmxhbmVzPWYsYTtjYXNlIEZhOnJldHVybiBhPUJnKDE5LGMsYixlKSxhLmVsZW1lbnRUeXBlPUZhLGEubGFuZXM9ZixhO2Nhc2UgSWE6cmV0dXJuIHFqKGMsZSxmLGIpO2RlZmF1bHQ6aWYoXCJvYmplY3RcIj09PXR5cGVvZiBhJiZudWxsIT09YSlzd2l0Y2goYS4kJHR5cGVvZil7Y2FzZSBCYTpnPTEwO2JyZWFrIGE7Y2FzZSBDYTpnPTk7YnJlYWsgYTtjYXNlIERhOmc9MTE7XG5icmVhayBhO2Nhc2UgR2E6Zz0xNDticmVhayBhO2Nhc2UgSGE6Zz0xNjtkPW51bGw7YnJlYWsgYX10aHJvdyBFcnJvcihwKDEzMCxudWxsPT1hP2E6dHlwZW9mIGEsXCJcIikpO31iPUJnKGcsYyxiLGUpO2IuZWxlbWVudFR5cGU9YTtiLnR5cGU9ZDtiLmxhbmVzPWY7cmV0dXJuIGJ9ZnVuY3Rpb24gQWgoYSxiLGMsZCl7YT1CZyg3LGEsZCxiKTthLmxhbmVzPWM7cmV0dXJuIGF9ZnVuY3Rpb24gcWooYSxiLGMsZCl7YT1CZygyMixhLGQsYik7YS5lbGVtZW50VHlwZT1JYTthLmxhbmVzPWM7YS5zdGF0ZU5vZGU9e2lzSGlkZGVuOiExfTtyZXR1cm4gYX1mdW5jdGlvbiB4aChhLGIsYyl7YT1CZyg2LGEsbnVsbCxiKTthLmxhbmVzPWM7cmV0dXJuIGF9XG5mdW5jdGlvbiB6aChhLGIsYyl7Yj1CZyg0LG51bGwhPT1hLmNoaWxkcmVuP2EuY2hpbGRyZW46W10sYS5rZXksYik7Yi5sYW5lcz1jO2Iuc3RhdGVOb2RlPXtjb250YWluZXJJbmZvOmEuY29udGFpbmVySW5mbyxwZW5kaW5nQ2hpbGRyZW46bnVsbCxpbXBsZW1lbnRhdGlvbjphLmltcGxlbWVudGF0aW9ufTtyZXR1cm4gYn1cbmZ1bmN0aW9uIGJsKGEsYixjLGQsZSl7dGhpcy50YWc9Yjt0aGlzLmNvbnRhaW5lckluZm89YTt0aGlzLmZpbmlzaGVkV29yaz10aGlzLnBpbmdDYWNoZT10aGlzLmN1cnJlbnQ9dGhpcy5wZW5kaW5nQ2hpbGRyZW49bnVsbDt0aGlzLnRpbWVvdXRIYW5kbGU9LTE7dGhpcy5jYWxsYmFja05vZGU9dGhpcy5wZW5kaW5nQ29udGV4dD10aGlzLmNvbnRleHQ9bnVsbDt0aGlzLmNhbGxiYWNrUHJpb3JpdHk9MDt0aGlzLmV2ZW50VGltZXM9emMoMCk7dGhpcy5leHBpcmF0aW9uVGltZXM9emMoLTEpO3RoaXMuZW50YW5nbGVkTGFuZXM9dGhpcy5maW5pc2hlZExhbmVzPXRoaXMubXV0YWJsZVJlYWRMYW5lcz10aGlzLmV4cGlyZWRMYW5lcz10aGlzLnBpbmdlZExhbmVzPXRoaXMuc3VzcGVuZGVkTGFuZXM9dGhpcy5wZW5kaW5nTGFuZXM9MDt0aGlzLmVudGFuZ2xlbWVudHM9emMoMCk7dGhpcy5pZGVudGlmaWVyUHJlZml4PWQ7dGhpcy5vblJlY292ZXJhYmxlRXJyb3I9ZTt0aGlzLm11dGFibGVTb3VyY2VFYWdlckh5ZHJhdGlvbkRhdGE9XG5udWxsfWZ1bmN0aW9uIGNsKGEsYixjLGQsZSxmLGcsaCxrKXthPW5ldyBibChhLGIsYyxoLGspOzE9PT1iPyhiPTEsITA9PT1mJiYoYnw9OCkpOmI9MDtmPUJnKDMsbnVsbCxudWxsLGIpO2EuY3VycmVudD1mO2Yuc3RhdGVOb2RlPWE7Zi5tZW1vaXplZFN0YXRlPXtlbGVtZW50OmQsaXNEZWh5ZHJhdGVkOmMsY2FjaGU6bnVsbCx0cmFuc2l0aW9uczpudWxsLHBlbmRpbmdTdXNwZW5zZUJvdW5kYXJpZXM6bnVsbH07YWgoZik7cmV0dXJuIGF9ZnVuY3Rpb24gZGwoYSxiLGMpe3ZhciBkPTM8YXJndW1lbnRzLmxlbmd0aCYmdm9pZCAwIT09YXJndW1lbnRzWzNdP2FyZ3VtZW50c1szXTpudWxsO3JldHVybnskJHR5cGVvZjp3YSxrZXk6bnVsbD09ZD9udWxsOlwiXCIrZCxjaGlsZHJlbjphLGNvbnRhaW5lckluZm86YixpbXBsZW1lbnRhdGlvbjpjfX1cbmZ1bmN0aW9uIGVsKGEpe2lmKCFhKXJldHVybiBWZjthPWEuX3JlYWN0SW50ZXJuYWxzO2E6e2lmKFZiKGEpIT09YXx8MSE9PWEudGFnKXRocm93IEVycm9yKHAoMTcwKSk7dmFyIGI9YTtkb3tzd2l0Y2goYi50YWcpe2Nhc2UgMzpiPWIuc3RhdGVOb2RlLmNvbnRleHQ7YnJlYWsgYTtjYXNlIDE6aWYoWmYoYi50eXBlKSl7Yj1iLnN0YXRlTm9kZS5fX3JlYWN0SW50ZXJuYWxNZW1vaXplZE1lcmdlZENoaWxkQ29udGV4dDticmVhayBhfX1iPWIucmV0dXJufXdoaWxlKG51bGwhPT1iKTt0aHJvdyBFcnJvcihwKDE3MSkpO31pZigxPT09YS50YWcpe3ZhciBjPWEudHlwZTtpZihaZihjKSlyZXR1cm4gYmcoYSxjLGIpfXJldHVybiBifVxuZnVuY3Rpb24gZmwoYSxiLGMsZCxlLGYsZyxoLGspe2E9Y2woYyxkLCEwLGEsZSxmLGcsaCxrKTthLmNvbnRleHQ9ZWwobnVsbCk7Yz1hLmN1cnJlbnQ7ZD1MKCk7ZT1saChjKTtmPWNoKGQsZSk7Zi5jYWxsYmFjaz12b2lkIDAhPT1iJiZudWxsIT09Yj9iOm51bGw7ZGgoYyxmLGUpO2EuY3VycmVudC5sYW5lcz1lO0FjKGEsZSxkKTtFayhhLGQpO3JldHVybiBhfWZ1bmN0aW9uIGdsKGEsYixjLGQpe3ZhciBlPWIuY3VycmVudCxmPUwoKSxnPWxoKGUpO2M9ZWwoYyk7bnVsbD09PWIuY29udGV4dD9iLmNvbnRleHQ9YzpiLnBlbmRpbmdDb250ZXh0PWM7Yj1jaChmLGcpO2IucGF5bG9hZD17ZWxlbWVudDphfTtkPXZvaWQgMD09PWQ/bnVsbDpkO251bGwhPT1kJiYoYi5jYWxsYmFjaz1kKTthPWRoKGUsYixnKTtudWxsIT09YSYmKG1oKGEsZSxnLGYpLGVoKGEsZSxnKSk7cmV0dXJuIGd9XG5mdW5jdGlvbiBobChhKXthPWEuY3VycmVudDtpZighYS5jaGlsZClyZXR1cm4gbnVsbDtzd2l0Y2goYS5jaGlsZC50YWcpe2Nhc2UgNTpyZXR1cm4gYS5jaGlsZC5zdGF0ZU5vZGU7ZGVmYXVsdDpyZXR1cm4gYS5jaGlsZC5zdGF0ZU5vZGV9fWZ1bmN0aW9uIGlsKGEsYil7YT1hLm1lbW9pemVkU3RhdGU7aWYobnVsbCE9PWEmJm51bGwhPT1hLmRlaHlkcmF0ZWQpe3ZhciBjPWEucmV0cnlMYW5lO2EucmV0cnlMYW5lPTAhPT1jJiZjPGI/YzpifX1mdW5jdGlvbiBqbChhLGIpe2lsKGEsYik7KGE9YS5hbHRlcm5hdGUpJiZpbChhLGIpfWZ1bmN0aW9uIGtsKCl7cmV0dXJuIG51bGx9dmFyIGxsPVwiZnVuY3Rpb25cIj09PXR5cGVvZiByZXBvcnRFcnJvcj9yZXBvcnRFcnJvcjpmdW5jdGlvbihhKXtjb25zb2xlLmVycm9yKGEpfTtmdW5jdGlvbiBtbChhKXt0aGlzLl9pbnRlcm5hbFJvb3Q9YX1cbm5sLnByb3RvdHlwZS5yZW5kZXI9bWwucHJvdG90eXBlLnJlbmRlcj1mdW5jdGlvbihhKXt2YXIgYj10aGlzLl9pbnRlcm5hbFJvb3Q7aWYobnVsbD09PWIpdGhyb3cgRXJyb3IocCg0MDkpKTtnbChhLGIsbnVsbCxudWxsKX07bmwucHJvdG90eXBlLnVubW91bnQ9bWwucHJvdG90eXBlLnVubW91bnQ9ZnVuY3Rpb24oKXt2YXIgYT10aGlzLl9pbnRlcm5hbFJvb3Q7aWYobnVsbCE9PWEpe3RoaXMuX2ludGVybmFsUm9vdD1udWxsO3ZhciBiPWEuY29udGFpbmVySW5mbztTayhmdW5jdGlvbigpe2dsKG51bGwsYSxudWxsLG51bGwpfSk7Ylt1Zl09bnVsbH19O2Z1bmN0aW9uIG5sKGEpe3RoaXMuX2ludGVybmFsUm9vdD1hfVxubmwucHJvdG90eXBlLnVuc3RhYmxlX3NjaGVkdWxlSHlkcmF0aW9uPWZ1bmN0aW9uKGEpe2lmKGEpe3ZhciBiPUhjKCk7YT17YmxvY2tlZE9uOm51bGwsdGFyZ2V0OmEscHJpb3JpdHk6Yn07Zm9yKHZhciBjPTA7YzxRYy5sZW5ndGgmJjAhPT1iJiZiPFFjW2NdLnByaW9yaXR5O2MrKyk7UWMuc3BsaWNlKGMsMCxhKTswPT09YyYmVmMoYSl9fTtmdW5jdGlvbiBvbChhKXtyZXR1cm4hKCFhfHwxIT09YS5ub2RlVHlwZSYmOSE9PWEubm9kZVR5cGUmJjExIT09YS5ub2RlVHlwZSl9ZnVuY3Rpb24gcGwoYSl7cmV0dXJuISghYXx8MSE9PWEubm9kZVR5cGUmJjkhPT1hLm5vZGVUeXBlJiYxMSE9PWEubm9kZVR5cGUmJig4IT09YS5ub2RlVHlwZXx8XCIgcmVhY3QtbW91bnQtcG9pbnQtdW5zdGFibGUgXCIhPT1hLm5vZGVWYWx1ZSkpfWZ1bmN0aW9uIHFsKCl7fVxuZnVuY3Rpb24gcmwoYSxiLGMsZCxlKXtpZihlKXtpZihcImZ1bmN0aW9uXCI9PT10eXBlb2YgZCl7dmFyIGY9ZDtkPWZ1bmN0aW9uKCl7dmFyIGE9aGwoZyk7Zi5jYWxsKGEpfX12YXIgZz1mbChiLGQsYSwwLG51bGwsITEsITEsXCJcIixxbCk7YS5fcmVhY3RSb290Q29udGFpbmVyPWc7YVt1Zl09Zy5jdXJyZW50O3NmKDg9PT1hLm5vZGVUeXBlP2EucGFyZW50Tm9kZTphKTtTaygpO3JldHVybiBnfWZvcig7ZT1hLmxhc3RDaGlsZDspYS5yZW1vdmVDaGlsZChlKTtpZihcImZ1bmN0aW9uXCI9PT10eXBlb2YgZCl7dmFyIGg9ZDtkPWZ1bmN0aW9uKCl7dmFyIGE9aGwoayk7aC5jYWxsKGEpfX12YXIgaz1jbChhLDAsITEsbnVsbCxudWxsLCExLCExLFwiXCIscWwpO2EuX3JlYWN0Um9vdENvbnRhaW5lcj1rO2FbdWZdPWsuY3VycmVudDtzZig4PT09YS5ub2RlVHlwZT9hLnBhcmVudE5vZGU6YSk7U2soZnVuY3Rpb24oKXtnbChiLGssYyxkKX0pO3JldHVybiBrfVxuZnVuY3Rpb24gc2woYSxiLGMsZCxlKXt2YXIgZj1jLl9yZWFjdFJvb3RDb250YWluZXI7aWYoZil7dmFyIGc9ZjtpZihcImZ1bmN0aW9uXCI9PT10eXBlb2YgZSl7dmFyIGg9ZTtlPWZ1bmN0aW9uKCl7dmFyIGE9aGwoZyk7aC5jYWxsKGEpfX1nbChiLGcsYSxlKX1lbHNlIGc9cmwoYyxiLGEsZSxkKTtyZXR1cm4gaGwoZyl9RWM9ZnVuY3Rpb24oYSl7c3dpdGNoKGEudGFnKXtjYXNlIDM6dmFyIGI9YS5zdGF0ZU5vZGU7aWYoYi5jdXJyZW50Lm1lbW9pemVkU3RhdGUuaXNEZWh5ZHJhdGVkKXt2YXIgYz10YyhiLnBlbmRpbmdMYW5lcyk7MCE9PWMmJihDYyhiLGN8MSksRWsoYixCKCkpLDA9PT0oSyY2KSYmKEhqPUIoKSs1MDAsamcoKSkpfWJyZWFrO2Nhc2UgMTM6U2soZnVuY3Rpb24oKXt2YXIgYj1aZyhhLDEpO2lmKG51bGwhPT1iKXt2YXIgYz1MKCk7bWgoYixhLDEsYyl9fSksamwoYSwxKX19O1xuRmM9ZnVuY3Rpb24oYSl7aWYoMTM9PT1hLnRhZyl7dmFyIGI9WmcoYSwxMzQyMTc3MjgpO2lmKG51bGwhPT1iKXt2YXIgYz1MKCk7bWgoYixhLDEzNDIxNzcyOCxjKX1qbChhLDEzNDIxNzcyOCl9fTtHYz1mdW5jdGlvbihhKXtpZigxMz09PWEudGFnKXt2YXIgYj1saChhKSxjPVpnKGEsYik7aWYobnVsbCE9PWMpe3ZhciBkPUwoKTttaChjLGEsYixkKX1qbChhLGIpfX07SGM9ZnVuY3Rpb24oKXtyZXR1cm4gQ307SWM9ZnVuY3Rpb24oYSxiKXt2YXIgYz1DO3RyeXtyZXR1cm4gQz1hLGIoKX1maW5hbGx5e0M9Y319O1xueWI9ZnVuY3Rpb24oYSxiLGMpe3N3aXRjaChiKXtjYXNlIFwiaW5wdXRcIjpiYihhLGMpO2I9Yy5uYW1lO2lmKFwicmFkaW9cIj09PWMudHlwZSYmbnVsbCE9Yil7Zm9yKGM9YTtjLnBhcmVudE5vZGU7KWM9Yy5wYXJlbnROb2RlO2M9Yy5xdWVyeVNlbGVjdG9yQWxsKFwiaW5wdXRbbmFtZT1cIitKU09OLnN0cmluZ2lmeShcIlwiK2IpKyddW3R5cGU9XCJyYWRpb1wiXScpO2ZvcihiPTA7YjxjLmxlbmd0aDtiKyspe3ZhciBkPWNbYl07aWYoZCE9PWEmJmQuZm9ybT09PWEuZm9ybSl7dmFyIGU9RGIoZCk7aWYoIWUpdGhyb3cgRXJyb3IocCg5MCkpO1dhKGQpO2JiKGQsZSl9fX1icmVhaztjYXNlIFwidGV4dGFyZWFcIjppYihhLGMpO2JyZWFrO2Nhc2UgXCJzZWxlY3RcIjpiPWMudmFsdWUsbnVsbCE9YiYmZmIoYSwhIWMubXVsdGlwbGUsYiwhMSl9fTtHYj1SaztIYj1TaztcbnZhciB0bD17dXNpbmdDbGllbnRFbnRyeVBvaW50OiExLEV2ZW50czpbQ2IsdWUsRGIsRWIsRmIsUmtdfSx1bD17ZmluZEZpYmVyQnlIb3N0SW5zdGFuY2U6V2MsYnVuZGxlVHlwZTowLHZlcnNpb246XCIxOC4yLjBcIixyZW5kZXJlclBhY2thZ2VOYW1lOlwicmVhY3QtZG9tXCJ9O1xudmFyIHZsPXtidW5kbGVUeXBlOnVsLmJ1bmRsZVR5cGUsdmVyc2lvbjp1bC52ZXJzaW9uLHJlbmRlcmVyUGFja2FnZU5hbWU6dWwucmVuZGVyZXJQYWNrYWdlTmFtZSxyZW5kZXJlckNvbmZpZzp1bC5yZW5kZXJlckNvbmZpZyxvdmVycmlkZUhvb2tTdGF0ZTpudWxsLG92ZXJyaWRlSG9va1N0YXRlRGVsZXRlUGF0aDpudWxsLG92ZXJyaWRlSG9va1N0YXRlUmVuYW1lUGF0aDpudWxsLG92ZXJyaWRlUHJvcHM6bnVsbCxvdmVycmlkZVByb3BzRGVsZXRlUGF0aDpudWxsLG92ZXJyaWRlUHJvcHNSZW5hbWVQYXRoOm51bGwsc2V0RXJyb3JIYW5kbGVyOm51bGwsc2V0U3VzcGVuc2VIYW5kbGVyOm51bGwsc2NoZWR1bGVVcGRhdGU6bnVsbCxjdXJyZW50RGlzcGF0Y2hlclJlZjp1YS5SZWFjdEN1cnJlbnREaXNwYXRjaGVyLGZpbmRIb3N0SW5zdGFuY2VCeUZpYmVyOmZ1bmN0aW9uKGEpe2E9WmIoYSk7cmV0dXJuIG51bGw9PT1hP251bGw6YS5zdGF0ZU5vZGV9LGZpbmRGaWJlckJ5SG9zdEluc3RhbmNlOnVsLmZpbmRGaWJlckJ5SG9zdEluc3RhbmNlfHxcbmtsLGZpbmRIb3N0SW5zdGFuY2VzRm9yUmVmcmVzaDpudWxsLHNjaGVkdWxlUmVmcmVzaDpudWxsLHNjaGVkdWxlUm9vdDpudWxsLHNldFJlZnJlc2hIYW5kbGVyOm51bGwsZ2V0Q3VycmVudEZpYmVyOm51bGwscmVjb25jaWxlclZlcnNpb246XCIxOC4yLjAtbmV4dC05ZTNiNzcyYjgtMjAyMjA2MDhcIn07aWYoXCJ1bmRlZmluZWRcIiE9PXR5cGVvZiBfX1JFQUNUX0RFVlRPT0xTX0dMT0JBTF9IT09LX18pe3ZhciB3bD1fX1JFQUNUX0RFVlRPT0xTX0dMT0JBTF9IT09LX187aWYoIXdsLmlzRGlzYWJsZWQmJndsLnN1cHBvcnRzRmliZXIpdHJ5e2tjPXdsLmluamVjdCh2bCksbGM9d2x9Y2F0Y2goYSl7fX1leHBvcnRzLl9fU0VDUkVUX0lOVEVSTkFMU19ET19OT1RfVVNFX09SX1lPVV9XSUxMX0JFX0ZJUkVEPXRsO1xuZXhwb3J0cy5jcmVhdGVQb3J0YWw9ZnVuY3Rpb24oYSxiKXt2YXIgYz0yPGFyZ3VtZW50cy5sZW5ndGgmJnZvaWQgMCE9PWFyZ3VtZW50c1syXT9hcmd1bWVudHNbMl06bnVsbDtpZighb2woYikpdGhyb3cgRXJyb3IocCgyMDApKTtyZXR1cm4gZGwoYSxiLG51bGwsYyl9O2V4cG9ydHMuY3JlYXRlUm9vdD1mdW5jdGlvbihhLGIpe2lmKCFvbChhKSl0aHJvdyBFcnJvcihwKDI5OSkpO3ZhciBjPSExLGQ9XCJcIixlPWxsO251bGwhPT1iJiZ2b2lkIDAhPT1iJiYoITA9PT1iLnVuc3RhYmxlX3N0cmljdE1vZGUmJihjPSEwKSx2b2lkIDAhPT1iLmlkZW50aWZpZXJQcmVmaXgmJihkPWIuaWRlbnRpZmllclByZWZpeCksdm9pZCAwIT09Yi5vblJlY292ZXJhYmxlRXJyb3ImJihlPWIub25SZWNvdmVyYWJsZUVycm9yKSk7Yj1jbChhLDEsITEsbnVsbCxudWxsLGMsITEsZCxlKTthW3VmXT1iLmN1cnJlbnQ7c2YoOD09PWEubm9kZVR5cGU/YS5wYXJlbnROb2RlOmEpO3JldHVybiBuZXcgbWwoYil9O1xuZXhwb3J0cy5maW5kRE9NTm9kZT1mdW5jdGlvbihhKXtpZihudWxsPT1hKXJldHVybiBudWxsO2lmKDE9PT1hLm5vZGVUeXBlKXJldHVybiBhO3ZhciBiPWEuX3JlYWN0SW50ZXJuYWxzO2lmKHZvaWQgMD09PWIpe2lmKFwiZnVuY3Rpb25cIj09PXR5cGVvZiBhLnJlbmRlcil0aHJvdyBFcnJvcihwKDE4OCkpO2E9T2JqZWN0LmtleXMoYSkuam9pbihcIixcIik7dGhyb3cgRXJyb3IocCgyNjgsYSkpO31hPVpiKGIpO2E9bnVsbD09PWE/bnVsbDphLnN0YXRlTm9kZTtyZXR1cm4gYX07ZXhwb3J0cy5mbHVzaFN5bmM9ZnVuY3Rpb24oYSl7cmV0dXJuIFNrKGEpfTtleHBvcnRzLmh5ZHJhdGU9ZnVuY3Rpb24oYSxiLGMpe2lmKCFwbChiKSl0aHJvdyBFcnJvcihwKDIwMCkpO3JldHVybiBzbChudWxsLGEsYiwhMCxjKX07XG5leHBvcnRzLmh5ZHJhdGVSb290PWZ1bmN0aW9uKGEsYixjKXtpZighb2woYSkpdGhyb3cgRXJyb3IocCg0MDUpKTt2YXIgZD1udWxsIT1jJiZjLmh5ZHJhdGVkU291cmNlc3x8bnVsbCxlPSExLGY9XCJcIixnPWxsO251bGwhPT1jJiZ2b2lkIDAhPT1jJiYoITA9PT1jLnVuc3RhYmxlX3N0cmljdE1vZGUmJihlPSEwKSx2b2lkIDAhPT1jLmlkZW50aWZpZXJQcmVmaXgmJihmPWMuaWRlbnRpZmllclByZWZpeCksdm9pZCAwIT09Yy5vblJlY292ZXJhYmxlRXJyb3ImJihnPWMub25SZWNvdmVyYWJsZUVycm9yKSk7Yj1mbChiLG51bGwsYSwxLG51bGwhPWM/YzpudWxsLGUsITEsZixnKTthW3VmXT1iLmN1cnJlbnQ7c2YoYSk7aWYoZClmb3IoYT0wO2E8ZC5sZW5ndGg7YSsrKWM9ZFthXSxlPWMuX2dldFZlcnNpb24sZT1lKGMuX3NvdXJjZSksbnVsbD09Yi5tdXRhYmxlU291cmNlRWFnZXJIeWRyYXRpb25EYXRhP2IubXV0YWJsZVNvdXJjZUVhZ2VySHlkcmF0aW9uRGF0YT1bYyxlXTpiLm11dGFibGVTb3VyY2VFYWdlckh5ZHJhdGlvbkRhdGEucHVzaChjLFxuZSk7cmV0dXJuIG5ldyBubChiKX07ZXhwb3J0cy5yZW5kZXI9ZnVuY3Rpb24oYSxiLGMpe2lmKCFwbChiKSl0aHJvdyBFcnJvcihwKDIwMCkpO3JldHVybiBzbChudWxsLGEsYiwhMSxjKX07ZXhwb3J0cy51bm1vdW50Q29tcG9uZW50QXROb2RlPWZ1bmN0aW9uKGEpe2lmKCFwbChhKSl0aHJvdyBFcnJvcihwKDQwKSk7cmV0dXJuIGEuX3JlYWN0Um9vdENvbnRhaW5lcj8oU2soZnVuY3Rpb24oKXtzbChudWxsLG51bGwsYSwhMSxmdW5jdGlvbigpe2EuX3JlYWN0Um9vdENvbnRhaW5lcj1udWxsO2FbdWZdPW51bGx9KX0pLCEwKTohMX07ZXhwb3J0cy51bnN0YWJsZV9iYXRjaGVkVXBkYXRlcz1SaztcbmV4cG9ydHMudW5zdGFibGVfcmVuZGVyU3VidHJlZUludG9Db250YWluZXI9ZnVuY3Rpb24oYSxiLGMsZCl7aWYoIXBsKGMpKXRocm93IEVycm9yKHAoMjAwKSk7aWYobnVsbD09YXx8dm9pZCAwPT09YS5fcmVhY3RJbnRlcm5hbHMpdGhyb3cgRXJyb3IocCgzOCkpO3JldHVybiBzbChhLGIsYywhMSxkKX07ZXhwb3J0cy52ZXJzaW9uPVwiMTguMi4wLW5leHQtOWUzYjc3MmI4LTIwMjIwNjA4XCI7XG4iLCIndXNlIHN0cmljdCc7XG5cbmZ1bmN0aW9uIGNoZWNrRENFKCkge1xuICAvKiBnbG9iYWwgX19SRUFDVF9ERVZUT09MU19HTE9CQUxfSE9PS19fICovXG4gIGlmIChcbiAgICB0eXBlb2YgX19SRUFDVF9ERVZUT09MU19HTE9CQUxfSE9PS19fID09PSAndW5kZWZpbmVkJyB8fFxuICAgIHR5cGVvZiBfX1JFQUNUX0RFVlRPT0xTX0dMT0JBTF9IT09LX18uY2hlY2tEQ0UgIT09ICdmdW5jdGlvbidcbiAgKSB7XG4gICAgcmV0dXJuO1xuICB9XG4gIGlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ3Byb2R1Y3Rpb24nKSB7XG4gICAgLy8gVGhpcyBicmFuY2ggaXMgdW5yZWFjaGFibGUgYmVjYXVzZSB0aGlzIGZ1bmN0aW9uIGlzIG9ubHkgY2FsbGVkXG4gICAgLy8gaW4gcHJvZHVjdGlvbiwgYnV0IHRoZSBjb25kaXRpb24gaXMgdHJ1ZSBvbmx5IGluIGRldmVsb3BtZW50LlxuICAgIC8vIFRoZXJlZm9yZSBpZiB0aGUgYnJhbmNoIGlzIHN0aWxsIGhlcmUsIGRlYWQgY29kZSBlbGltaW5hdGlvbiB3YXNuJ3RcbiAgICAvLyBwcm9wZXJseSBhcHBsaWVkLlxuICAgIC8vIERvbid0IGNoYW5nZSB0aGUgbWVzc2FnZS4gUmVhY3QgRGV2VG9vbHMgcmVsaWVzIG9uIGl0LiBBbHNvIG1ha2Ugc3VyZVxuICAgIC8vIHRoaXMgbWVzc2FnZSBkb2Vzbid0IG9jY3VyIGVsc2V3aGVyZSBpbiB0aGlzIGZ1bmN0aW9uLCBvciBpdCB3aWxsIGNhdXNlXG4gICAgLy8gYSBmYWxzZSBwb3NpdGl2ZS5cbiAgICB0aHJvdyBuZXcgRXJyb3IoJ15fXicpO1xuICB9XG4gIHRyeSB7XG4gICAgLy8gVmVyaWZ5IHRoYXQgdGhlIGNvZGUgYWJvdmUgaGFzIGJlZW4gZGVhZCBjb2RlIGVsaW1pbmF0ZWQgKERDRSdkKS5cbiAgICBfX1JFQUNUX0RFVlRPT0xTX0dMT0JBTF9IT09LX18uY2hlY2tEQ0UoY2hlY2tEQ0UpO1xuICB9IGNhdGNoIChlcnIpIHtcbiAgICAvLyBEZXZUb29scyBzaG91bGRuJ3QgY3Jhc2ggUmVhY3QsIG5vIG1hdHRlciB3aGF0LlxuICAgIC8vIFdlIHNob3VsZCBzdGlsbCByZXBvcnQgaW4gY2FzZSB3ZSBicmVhayB0aGlzIGNvZGUuXG4gICAgY29uc29sZS5lcnJvcihlcnIpO1xuICB9XG59XG5cbmlmIChwcm9jZXNzLmVudi5OT0RFX0VOViA9PT0gJ3Byb2R1Y3Rpb24nKSB7XG4gIC8vIERDRSBjaGVjayBzaG91bGQgaGFwcGVuIGJlZm9yZSBSZWFjdERPTSBidW5kbGUgZXhlY3V0ZXMgc28gdGhhdFxuICAvLyBEZXZUb29scyBjYW4gcmVwb3J0IGJhZCBtaW5pZmljYXRpb24gZHVyaW5nIGluamVjdGlvbi5cbiAgY2hlY2tEQ0UoKTtcbiAgbW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKCcuL2Nqcy9yZWFjdC1kb20ucHJvZHVjdGlvbi5taW4uanMnKTtcbn0gZWxzZSB7XG4gIG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi9janMvcmVhY3QtZG9tLmRldmVsb3BtZW50LmpzJyk7XG59XG4iLCIvKipcbiAqIEBsaWNlbnNlIFJlYWN0XG4gKiByZWFjdC5wcm9kdWN0aW9uLm1pbi5qc1xuICpcbiAqIENvcHlyaWdodCAoYykgRmFjZWJvb2ssIEluYy4gYW5kIGl0cyBhZmZpbGlhdGVzLlxuICpcbiAqIFRoaXMgc291cmNlIGNvZGUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlIGZvdW5kIGluIHRoZVxuICogTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLlxuICovXG4ndXNlIHN0cmljdCc7dmFyIGw9U3ltYm9sLmZvcihcInJlYWN0LmVsZW1lbnRcIiksbj1TeW1ib2wuZm9yKFwicmVhY3QucG9ydGFsXCIpLHA9U3ltYm9sLmZvcihcInJlYWN0LmZyYWdtZW50XCIpLHE9U3ltYm9sLmZvcihcInJlYWN0LnN0cmljdF9tb2RlXCIpLHI9U3ltYm9sLmZvcihcInJlYWN0LnByb2ZpbGVyXCIpLHQ9U3ltYm9sLmZvcihcInJlYWN0LnByb3ZpZGVyXCIpLHU9U3ltYm9sLmZvcihcInJlYWN0LmNvbnRleHRcIiksdj1TeW1ib2wuZm9yKFwicmVhY3QuZm9yd2FyZF9yZWZcIiksdz1TeW1ib2wuZm9yKFwicmVhY3Quc3VzcGVuc2VcIikseD1TeW1ib2wuZm9yKFwicmVhY3QubWVtb1wiKSx5PVN5bWJvbC5mb3IoXCJyZWFjdC5sYXp5XCIpLHo9U3ltYm9sLml0ZXJhdG9yO2Z1bmN0aW9uIEEoYSl7aWYobnVsbD09PWF8fFwib2JqZWN0XCIhPT10eXBlb2YgYSlyZXR1cm4gbnVsbDthPXomJmFbel18fGFbXCJAQGl0ZXJhdG9yXCJdO3JldHVyblwiZnVuY3Rpb25cIj09PXR5cGVvZiBhP2E6bnVsbH1cbnZhciBCPXtpc01vdW50ZWQ6ZnVuY3Rpb24oKXtyZXR1cm4hMX0sZW5xdWV1ZUZvcmNlVXBkYXRlOmZ1bmN0aW9uKCl7fSxlbnF1ZXVlUmVwbGFjZVN0YXRlOmZ1bmN0aW9uKCl7fSxlbnF1ZXVlU2V0U3RhdGU6ZnVuY3Rpb24oKXt9fSxDPU9iamVjdC5hc3NpZ24sRD17fTtmdW5jdGlvbiBFKGEsYixlKXt0aGlzLnByb3BzPWE7dGhpcy5jb250ZXh0PWI7dGhpcy5yZWZzPUQ7dGhpcy51cGRhdGVyPWV8fEJ9RS5wcm90b3R5cGUuaXNSZWFjdENvbXBvbmVudD17fTtcbkUucHJvdG90eXBlLnNldFN0YXRlPWZ1bmN0aW9uKGEsYil7aWYoXCJvYmplY3RcIiE9PXR5cGVvZiBhJiZcImZ1bmN0aW9uXCIhPT10eXBlb2YgYSYmbnVsbCE9YSl0aHJvdyBFcnJvcihcInNldFN0YXRlKC4uLik6IHRha2VzIGFuIG9iamVjdCBvZiBzdGF0ZSB2YXJpYWJsZXMgdG8gdXBkYXRlIG9yIGEgZnVuY3Rpb24gd2hpY2ggcmV0dXJucyBhbiBvYmplY3Qgb2Ygc3RhdGUgdmFyaWFibGVzLlwiKTt0aGlzLnVwZGF0ZXIuZW5xdWV1ZVNldFN0YXRlKHRoaXMsYSxiLFwic2V0U3RhdGVcIil9O0UucHJvdG90eXBlLmZvcmNlVXBkYXRlPWZ1bmN0aW9uKGEpe3RoaXMudXBkYXRlci5lbnF1ZXVlRm9yY2VVcGRhdGUodGhpcyxhLFwiZm9yY2VVcGRhdGVcIil9O2Z1bmN0aW9uIEYoKXt9Ri5wcm90b3R5cGU9RS5wcm90b3R5cGU7ZnVuY3Rpb24gRyhhLGIsZSl7dGhpcy5wcm9wcz1hO3RoaXMuY29udGV4dD1iO3RoaXMucmVmcz1EO3RoaXMudXBkYXRlcj1lfHxCfXZhciBIPUcucHJvdG90eXBlPW5ldyBGO1xuSC5jb25zdHJ1Y3Rvcj1HO0MoSCxFLnByb3RvdHlwZSk7SC5pc1B1cmVSZWFjdENvbXBvbmVudD0hMDt2YXIgST1BcnJheS5pc0FycmF5LEo9T2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eSxLPXtjdXJyZW50Om51bGx9LEw9e2tleTohMCxyZWY6ITAsX19zZWxmOiEwLF9fc291cmNlOiEwfTtcbmZ1bmN0aW9uIE0oYSxiLGUpe3ZhciBkLGM9e30saz1udWxsLGg9bnVsbDtpZihudWxsIT1iKWZvcihkIGluIHZvaWQgMCE9PWIucmVmJiYoaD1iLnJlZiksdm9pZCAwIT09Yi5rZXkmJihrPVwiXCIrYi5rZXkpLGIpSi5jYWxsKGIsZCkmJiFMLmhhc093blByb3BlcnR5KGQpJiYoY1tkXT1iW2RdKTt2YXIgZz1hcmd1bWVudHMubGVuZ3RoLTI7aWYoMT09PWcpYy5jaGlsZHJlbj1lO2Vsc2UgaWYoMTxnKXtmb3IodmFyIGY9QXJyYXkoZyksbT0wO208ZzttKyspZlttXT1hcmd1bWVudHNbbSsyXTtjLmNoaWxkcmVuPWZ9aWYoYSYmYS5kZWZhdWx0UHJvcHMpZm9yKGQgaW4gZz1hLmRlZmF1bHRQcm9wcyxnKXZvaWQgMD09PWNbZF0mJihjW2RdPWdbZF0pO3JldHVybnskJHR5cGVvZjpsLHR5cGU6YSxrZXk6ayxyZWY6aCxwcm9wczpjLF9vd25lcjpLLmN1cnJlbnR9fVxuZnVuY3Rpb24gTihhLGIpe3JldHVybnskJHR5cGVvZjpsLHR5cGU6YS50eXBlLGtleTpiLHJlZjphLnJlZixwcm9wczphLnByb3BzLF9vd25lcjphLl9vd25lcn19ZnVuY3Rpb24gTyhhKXtyZXR1cm5cIm9iamVjdFwiPT09dHlwZW9mIGEmJm51bGwhPT1hJiZhLiQkdHlwZW9mPT09bH1mdW5jdGlvbiBlc2NhcGUoYSl7dmFyIGI9e1wiPVwiOlwiPTBcIixcIjpcIjpcIj0yXCJ9O3JldHVyblwiJFwiK2EucmVwbGFjZSgvWz06XS9nLGZ1bmN0aW9uKGEpe3JldHVybiBiW2FdfSl9dmFyIFA9L1xcLysvZztmdW5jdGlvbiBRKGEsYil7cmV0dXJuXCJvYmplY3RcIj09PXR5cGVvZiBhJiZudWxsIT09YSYmbnVsbCE9YS5rZXk/ZXNjYXBlKFwiXCIrYS5rZXkpOmIudG9TdHJpbmcoMzYpfVxuZnVuY3Rpb24gUihhLGIsZSxkLGMpe3ZhciBrPXR5cGVvZiBhO2lmKFwidW5kZWZpbmVkXCI9PT1rfHxcImJvb2xlYW5cIj09PWspYT1udWxsO3ZhciBoPSExO2lmKG51bGw9PT1hKWg9ITA7ZWxzZSBzd2l0Y2goayl7Y2FzZSBcInN0cmluZ1wiOmNhc2UgXCJudW1iZXJcIjpoPSEwO2JyZWFrO2Nhc2UgXCJvYmplY3RcIjpzd2l0Y2goYS4kJHR5cGVvZil7Y2FzZSBsOmNhc2UgbjpoPSEwfX1pZihoKXJldHVybiBoPWEsYz1jKGgpLGE9XCJcIj09PWQ/XCIuXCIrUShoLDApOmQsSShjKT8oZT1cIlwiLG51bGwhPWEmJihlPWEucmVwbGFjZShQLFwiJCYvXCIpK1wiL1wiKSxSKGMsYixlLFwiXCIsZnVuY3Rpb24oYSl7cmV0dXJuIGF9KSk6bnVsbCE9YyYmKE8oYykmJihjPU4oYyxlKyghYy5rZXl8fGgmJmgua2V5PT09Yy5rZXk/XCJcIjooXCJcIitjLmtleSkucmVwbGFjZShQLFwiJCYvXCIpK1wiL1wiKSthKSksYi5wdXNoKGMpKSwxO2g9MDtkPVwiXCI9PT1kP1wiLlwiOmQrXCI6XCI7aWYoSShhKSlmb3IodmFyIGc9MDtnPGEubGVuZ3RoO2crKyl7az1cbmFbZ107dmFyIGY9ZCtRKGssZyk7aCs9UihrLGIsZSxmLGMpfWVsc2UgaWYoZj1BKGEpLFwiZnVuY3Rpb25cIj09PXR5cGVvZiBmKWZvcihhPWYuY2FsbChhKSxnPTA7IShrPWEubmV4dCgpKS5kb25lOylrPWsudmFsdWUsZj1kK1EoayxnKyspLGgrPVIoayxiLGUsZixjKTtlbHNlIGlmKFwib2JqZWN0XCI9PT1rKXRocm93IGI9U3RyaW5nKGEpLEVycm9yKFwiT2JqZWN0cyBhcmUgbm90IHZhbGlkIGFzIGEgUmVhY3QgY2hpbGQgKGZvdW5kOiBcIisoXCJbb2JqZWN0IE9iamVjdF1cIj09PWI/XCJvYmplY3Qgd2l0aCBrZXlzIHtcIitPYmplY3Qua2V5cyhhKS5qb2luKFwiLCBcIikrXCJ9XCI6YikrXCIpLiBJZiB5b3UgbWVhbnQgdG8gcmVuZGVyIGEgY29sbGVjdGlvbiBvZiBjaGlsZHJlbiwgdXNlIGFuIGFycmF5IGluc3RlYWQuXCIpO3JldHVybiBofVxuZnVuY3Rpb24gUyhhLGIsZSl7aWYobnVsbD09YSlyZXR1cm4gYTt2YXIgZD1bXSxjPTA7UihhLGQsXCJcIixcIlwiLGZ1bmN0aW9uKGEpe3JldHVybiBiLmNhbGwoZSxhLGMrKyl9KTtyZXR1cm4gZH1mdW5jdGlvbiBUKGEpe2lmKC0xPT09YS5fc3RhdHVzKXt2YXIgYj1hLl9yZXN1bHQ7Yj1iKCk7Yi50aGVuKGZ1bmN0aW9uKGIpe2lmKDA9PT1hLl9zdGF0dXN8fC0xPT09YS5fc3RhdHVzKWEuX3N0YXR1cz0xLGEuX3Jlc3VsdD1ifSxmdW5jdGlvbihiKXtpZigwPT09YS5fc3RhdHVzfHwtMT09PWEuX3N0YXR1cylhLl9zdGF0dXM9MixhLl9yZXN1bHQ9Yn0pOy0xPT09YS5fc3RhdHVzJiYoYS5fc3RhdHVzPTAsYS5fcmVzdWx0PWIpfWlmKDE9PT1hLl9zdGF0dXMpcmV0dXJuIGEuX3Jlc3VsdC5kZWZhdWx0O3Rocm93IGEuX3Jlc3VsdDt9XG52YXIgVT17Y3VycmVudDpudWxsfSxWPXt0cmFuc2l0aW9uOm51bGx9LFc9e1JlYWN0Q3VycmVudERpc3BhdGNoZXI6VSxSZWFjdEN1cnJlbnRCYXRjaENvbmZpZzpWLFJlYWN0Q3VycmVudE93bmVyOkt9O2V4cG9ydHMuQ2hpbGRyZW49e21hcDpTLGZvckVhY2g6ZnVuY3Rpb24oYSxiLGUpe1MoYSxmdW5jdGlvbigpe2IuYXBwbHkodGhpcyxhcmd1bWVudHMpfSxlKX0sY291bnQ6ZnVuY3Rpb24oYSl7dmFyIGI9MDtTKGEsZnVuY3Rpb24oKXtiKyt9KTtyZXR1cm4gYn0sdG9BcnJheTpmdW5jdGlvbihhKXtyZXR1cm4gUyhhLGZ1bmN0aW9uKGEpe3JldHVybiBhfSl8fFtdfSxvbmx5OmZ1bmN0aW9uKGEpe2lmKCFPKGEpKXRocm93IEVycm9yKFwiUmVhY3QuQ2hpbGRyZW4ub25seSBleHBlY3RlZCB0byByZWNlaXZlIGEgc2luZ2xlIFJlYWN0IGVsZW1lbnQgY2hpbGQuXCIpO3JldHVybiBhfX07ZXhwb3J0cy5Db21wb25lbnQ9RTtleHBvcnRzLkZyYWdtZW50PXA7XG5leHBvcnRzLlByb2ZpbGVyPXI7ZXhwb3J0cy5QdXJlQ29tcG9uZW50PUc7ZXhwb3J0cy5TdHJpY3RNb2RlPXE7ZXhwb3J0cy5TdXNwZW5zZT13O2V4cG9ydHMuX19TRUNSRVRfSU5URVJOQUxTX0RPX05PVF9VU0VfT1JfWU9VX1dJTExfQkVfRklSRUQ9VztcbmV4cG9ydHMuY2xvbmVFbGVtZW50PWZ1bmN0aW9uKGEsYixlKXtpZihudWxsPT09YXx8dm9pZCAwPT09YSl0aHJvdyBFcnJvcihcIlJlYWN0LmNsb25lRWxlbWVudCguLi4pOiBUaGUgYXJndW1lbnQgbXVzdCBiZSBhIFJlYWN0IGVsZW1lbnQsIGJ1dCB5b3UgcGFzc2VkIFwiK2ErXCIuXCIpO3ZhciBkPUMoe30sYS5wcm9wcyksYz1hLmtleSxrPWEucmVmLGg9YS5fb3duZXI7aWYobnVsbCE9Yil7dm9pZCAwIT09Yi5yZWYmJihrPWIucmVmLGg9Sy5jdXJyZW50KTt2b2lkIDAhPT1iLmtleSYmKGM9XCJcIitiLmtleSk7aWYoYS50eXBlJiZhLnR5cGUuZGVmYXVsdFByb3BzKXZhciBnPWEudHlwZS5kZWZhdWx0UHJvcHM7Zm9yKGYgaW4gYilKLmNhbGwoYixmKSYmIUwuaGFzT3duUHJvcGVydHkoZikmJihkW2ZdPXZvaWQgMD09PWJbZl0mJnZvaWQgMCE9PWc/Z1tmXTpiW2ZdKX12YXIgZj1hcmd1bWVudHMubGVuZ3RoLTI7aWYoMT09PWYpZC5jaGlsZHJlbj1lO2Vsc2UgaWYoMTxmKXtnPUFycmF5KGYpO1xuZm9yKHZhciBtPTA7bTxmO20rKylnW21dPWFyZ3VtZW50c1ttKzJdO2QuY2hpbGRyZW49Z31yZXR1cm57JCR0eXBlb2Y6bCx0eXBlOmEudHlwZSxrZXk6YyxyZWY6ayxwcm9wczpkLF9vd25lcjpofX07ZXhwb3J0cy5jcmVhdGVDb250ZXh0PWZ1bmN0aW9uKGEpe2E9eyQkdHlwZW9mOnUsX2N1cnJlbnRWYWx1ZTphLF9jdXJyZW50VmFsdWUyOmEsX3RocmVhZENvdW50OjAsUHJvdmlkZXI6bnVsbCxDb25zdW1lcjpudWxsLF9kZWZhdWx0VmFsdWU6bnVsbCxfZ2xvYmFsTmFtZTpudWxsfTthLlByb3ZpZGVyPXskJHR5cGVvZjp0LF9jb250ZXh0OmF9O3JldHVybiBhLkNvbnN1bWVyPWF9O2V4cG9ydHMuY3JlYXRlRWxlbWVudD1NO2V4cG9ydHMuY3JlYXRlRmFjdG9yeT1mdW5jdGlvbihhKXt2YXIgYj1NLmJpbmQobnVsbCxhKTtiLnR5cGU9YTtyZXR1cm4gYn07ZXhwb3J0cy5jcmVhdGVSZWY9ZnVuY3Rpb24oKXtyZXR1cm57Y3VycmVudDpudWxsfX07XG5leHBvcnRzLmZvcndhcmRSZWY9ZnVuY3Rpb24oYSl7cmV0dXJueyQkdHlwZW9mOnYscmVuZGVyOmF9fTtleHBvcnRzLmlzVmFsaWRFbGVtZW50PU87ZXhwb3J0cy5sYXp5PWZ1bmN0aW9uKGEpe3JldHVybnskJHR5cGVvZjp5LF9wYXlsb2FkOntfc3RhdHVzOi0xLF9yZXN1bHQ6YX0sX2luaXQ6VH19O2V4cG9ydHMubWVtbz1mdW5jdGlvbihhLGIpe3JldHVybnskJHR5cGVvZjp4LHR5cGU6YSxjb21wYXJlOnZvaWQgMD09PWI/bnVsbDpifX07ZXhwb3J0cy5zdGFydFRyYW5zaXRpb249ZnVuY3Rpb24oYSl7dmFyIGI9Vi50cmFuc2l0aW9uO1YudHJhbnNpdGlvbj17fTt0cnl7YSgpfWZpbmFsbHl7Vi50cmFuc2l0aW9uPWJ9fTtleHBvcnRzLnVuc3RhYmxlX2FjdD1mdW5jdGlvbigpe3Rocm93IEVycm9yKFwiYWN0KC4uLikgaXMgbm90IHN1cHBvcnRlZCBpbiBwcm9kdWN0aW9uIGJ1aWxkcyBvZiBSZWFjdC5cIik7fTtcbmV4cG9ydHMudXNlQ2FsbGJhY2s9ZnVuY3Rpb24oYSxiKXtyZXR1cm4gVS5jdXJyZW50LnVzZUNhbGxiYWNrKGEsYil9O2V4cG9ydHMudXNlQ29udGV4dD1mdW5jdGlvbihhKXtyZXR1cm4gVS5jdXJyZW50LnVzZUNvbnRleHQoYSl9O2V4cG9ydHMudXNlRGVidWdWYWx1ZT1mdW5jdGlvbigpe307ZXhwb3J0cy51c2VEZWZlcnJlZFZhbHVlPWZ1bmN0aW9uKGEpe3JldHVybiBVLmN1cnJlbnQudXNlRGVmZXJyZWRWYWx1ZShhKX07ZXhwb3J0cy51c2VFZmZlY3Q9ZnVuY3Rpb24oYSxiKXtyZXR1cm4gVS5jdXJyZW50LnVzZUVmZmVjdChhLGIpfTtleHBvcnRzLnVzZUlkPWZ1bmN0aW9uKCl7cmV0dXJuIFUuY3VycmVudC51c2VJZCgpfTtleHBvcnRzLnVzZUltcGVyYXRpdmVIYW5kbGU9ZnVuY3Rpb24oYSxiLGUpe3JldHVybiBVLmN1cnJlbnQudXNlSW1wZXJhdGl2ZUhhbmRsZShhLGIsZSl9O1xuZXhwb3J0cy51c2VJbnNlcnRpb25FZmZlY3Q9ZnVuY3Rpb24oYSxiKXtyZXR1cm4gVS5jdXJyZW50LnVzZUluc2VydGlvbkVmZmVjdChhLGIpfTtleHBvcnRzLnVzZUxheW91dEVmZmVjdD1mdW5jdGlvbihhLGIpe3JldHVybiBVLmN1cnJlbnQudXNlTGF5b3V0RWZmZWN0KGEsYil9O2V4cG9ydHMudXNlTWVtbz1mdW5jdGlvbihhLGIpe3JldHVybiBVLmN1cnJlbnQudXNlTWVtbyhhLGIpfTtleHBvcnRzLnVzZVJlZHVjZXI9ZnVuY3Rpb24oYSxiLGUpe3JldHVybiBVLmN1cnJlbnQudXNlUmVkdWNlcihhLGIsZSl9O2V4cG9ydHMudXNlUmVmPWZ1bmN0aW9uKGEpe3JldHVybiBVLmN1cnJlbnQudXNlUmVmKGEpfTtleHBvcnRzLnVzZVN0YXRlPWZ1bmN0aW9uKGEpe3JldHVybiBVLmN1cnJlbnQudXNlU3RhdGUoYSl9O2V4cG9ydHMudXNlU3luY0V4dGVybmFsU3RvcmU9ZnVuY3Rpb24oYSxiLGUpe3JldHVybiBVLmN1cnJlbnQudXNlU3luY0V4dGVybmFsU3RvcmUoYSxiLGUpfTtcbmV4cG9ydHMudXNlVHJhbnNpdGlvbj1mdW5jdGlvbigpe3JldHVybiBVLmN1cnJlbnQudXNlVHJhbnNpdGlvbigpfTtleHBvcnRzLnZlcnNpb249XCIxOC4yLjBcIjtcbiIsIid1c2Ugc3RyaWN0JztcblxuaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WID09PSAncHJvZHVjdGlvbicpIHtcbiAgbW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKCcuL2Nqcy9yZWFjdC5wcm9kdWN0aW9uLm1pbi5qcycpO1xufSBlbHNlIHtcbiAgbW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKCcuL2Nqcy9yZWFjdC5kZXZlbG9wbWVudC5qcycpO1xufVxuIiwiLyoqXG4gKiBAbGljZW5zZSBSZWFjdFxuICogc2NoZWR1bGVyLnByb2R1Y3Rpb24ubWluLmpzXG4gKlxuICogQ29weXJpZ2h0IChjKSBGYWNlYm9vaywgSW5jLiBhbmQgaXRzIGFmZmlsaWF0ZXMuXG4gKlxuICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UgZm91bmQgaW4gdGhlXG4gKiBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuXG4gKi9cbid1c2Ugc3RyaWN0JztmdW5jdGlvbiBmKGEsYil7dmFyIGM9YS5sZW5ndGg7YS5wdXNoKGIpO2E6Zm9yKDswPGM7KXt2YXIgZD1jLTE+Pj4xLGU9YVtkXTtpZigwPGcoZSxiKSlhW2RdPWIsYVtjXT1lLGM9ZDtlbHNlIGJyZWFrIGF9fWZ1bmN0aW9uIGgoYSl7cmV0dXJuIDA9PT1hLmxlbmd0aD9udWxsOmFbMF19ZnVuY3Rpb24gayhhKXtpZigwPT09YS5sZW5ndGgpcmV0dXJuIG51bGw7dmFyIGI9YVswXSxjPWEucG9wKCk7aWYoYyE9PWIpe2FbMF09YzthOmZvcih2YXIgZD0wLGU9YS5sZW5ndGgsdz1lPj4+MTtkPHc7KXt2YXIgbT0yKihkKzEpLTEsQz1hW21dLG49bSsxLHg9YVtuXTtpZigwPmcoQyxjKSluPGUmJjA+Zyh4LEMpPyhhW2RdPXgsYVtuXT1jLGQ9bik6KGFbZF09QyxhW21dPWMsZD1tKTtlbHNlIGlmKG48ZSYmMD5nKHgsYykpYVtkXT14LGFbbl09YyxkPW47ZWxzZSBicmVhayBhfX1yZXR1cm4gYn1cbmZ1bmN0aW9uIGcoYSxiKXt2YXIgYz1hLnNvcnRJbmRleC1iLnNvcnRJbmRleDtyZXR1cm4gMCE9PWM/YzphLmlkLWIuaWR9aWYoXCJvYmplY3RcIj09PXR5cGVvZiBwZXJmb3JtYW5jZSYmXCJmdW5jdGlvblwiPT09dHlwZW9mIHBlcmZvcm1hbmNlLm5vdyl7dmFyIGw9cGVyZm9ybWFuY2U7ZXhwb3J0cy51bnN0YWJsZV9ub3c9ZnVuY3Rpb24oKXtyZXR1cm4gbC5ub3coKX19ZWxzZXt2YXIgcD1EYXRlLHE9cC5ub3coKTtleHBvcnRzLnVuc3RhYmxlX25vdz1mdW5jdGlvbigpe3JldHVybiBwLm5vdygpLXF9fXZhciByPVtdLHQ9W10sdT0xLHY9bnVsbCx5PTMsej0hMSxBPSExLEI9ITEsRD1cImZ1bmN0aW9uXCI9PT10eXBlb2Ygc2V0VGltZW91dD9zZXRUaW1lb3V0Om51bGwsRT1cImZ1bmN0aW9uXCI9PT10eXBlb2YgY2xlYXJUaW1lb3V0P2NsZWFyVGltZW91dDpudWxsLEY9XCJ1bmRlZmluZWRcIiE9PXR5cGVvZiBzZXRJbW1lZGlhdGU/c2V0SW1tZWRpYXRlOm51bGw7XG5cInVuZGVmaW5lZFwiIT09dHlwZW9mIG5hdmlnYXRvciYmdm9pZCAwIT09bmF2aWdhdG9yLnNjaGVkdWxpbmcmJnZvaWQgMCE9PW5hdmlnYXRvci5zY2hlZHVsaW5nLmlzSW5wdXRQZW5kaW5nJiZuYXZpZ2F0b3Iuc2NoZWR1bGluZy5pc0lucHV0UGVuZGluZy5iaW5kKG5hdmlnYXRvci5zY2hlZHVsaW5nKTtmdW5jdGlvbiBHKGEpe2Zvcih2YXIgYj1oKHQpO251bGwhPT1iOyl7aWYobnVsbD09PWIuY2FsbGJhY2spayh0KTtlbHNlIGlmKGIuc3RhcnRUaW1lPD1hKWsodCksYi5zb3J0SW5kZXg9Yi5leHBpcmF0aW9uVGltZSxmKHIsYik7ZWxzZSBicmVhaztiPWgodCl9fWZ1bmN0aW9uIEgoYSl7Qj0hMTtHKGEpO2lmKCFBKWlmKG51bGwhPT1oKHIpKUE9ITAsSShKKTtlbHNle3ZhciBiPWgodCk7bnVsbCE9PWImJksoSCxiLnN0YXJ0VGltZS1hKX19XG5mdW5jdGlvbiBKKGEsYil7QT0hMTtCJiYoQj0hMSxFKEwpLEw9LTEpO3o9ITA7dmFyIGM9eTt0cnl7RyhiKTtmb3Iodj1oKHIpO251bGwhPT12JiYoISh2LmV4cGlyYXRpb25UaW1lPmIpfHxhJiYhTSgpKTspe3ZhciBkPXYuY2FsbGJhY2s7aWYoXCJmdW5jdGlvblwiPT09dHlwZW9mIGQpe3YuY2FsbGJhY2s9bnVsbDt5PXYucHJpb3JpdHlMZXZlbDt2YXIgZT1kKHYuZXhwaXJhdGlvblRpbWU8PWIpO2I9ZXhwb3J0cy51bnN0YWJsZV9ub3coKTtcImZ1bmN0aW9uXCI9PT10eXBlb2YgZT92LmNhbGxiYWNrPWU6dj09PWgocikmJmsocik7RyhiKX1lbHNlIGsocik7dj1oKHIpfWlmKG51bGwhPT12KXZhciB3PSEwO2Vsc2V7dmFyIG09aCh0KTtudWxsIT09bSYmSyhILG0uc3RhcnRUaW1lLWIpO3c9ITF9cmV0dXJuIHd9ZmluYWxseXt2PW51bGwseT1jLHo9ITF9fXZhciBOPSExLE89bnVsbCxMPS0xLFA9NSxRPS0xO1xuZnVuY3Rpb24gTSgpe3JldHVybiBleHBvcnRzLnVuc3RhYmxlX25vdygpLVE8UD8hMTohMH1mdW5jdGlvbiBSKCl7aWYobnVsbCE9PU8pe3ZhciBhPWV4cG9ydHMudW5zdGFibGVfbm93KCk7UT1hO3ZhciBiPSEwO3RyeXtiPU8oITAsYSl9ZmluYWxseXtiP1MoKTooTj0hMSxPPW51bGwpfX1lbHNlIE49ITF9dmFyIFM7aWYoXCJmdW5jdGlvblwiPT09dHlwZW9mIEYpUz1mdW5jdGlvbigpe0YoUil9O2Vsc2UgaWYoXCJ1bmRlZmluZWRcIiE9PXR5cGVvZiBNZXNzYWdlQ2hhbm5lbCl7dmFyIFQ9bmV3IE1lc3NhZ2VDaGFubmVsLFU9VC5wb3J0MjtULnBvcnQxLm9ubWVzc2FnZT1SO1M9ZnVuY3Rpb24oKXtVLnBvc3RNZXNzYWdlKG51bGwpfX1lbHNlIFM9ZnVuY3Rpb24oKXtEKFIsMCl9O2Z1bmN0aW9uIEkoYSl7Tz1hO058fChOPSEwLFMoKSl9ZnVuY3Rpb24gSyhhLGIpe0w9RChmdW5jdGlvbigpe2EoZXhwb3J0cy51bnN0YWJsZV9ub3coKSl9LGIpfVxuZXhwb3J0cy51bnN0YWJsZV9JZGxlUHJpb3JpdHk9NTtleHBvcnRzLnVuc3RhYmxlX0ltbWVkaWF0ZVByaW9yaXR5PTE7ZXhwb3J0cy51bnN0YWJsZV9Mb3dQcmlvcml0eT00O2V4cG9ydHMudW5zdGFibGVfTm9ybWFsUHJpb3JpdHk9MztleHBvcnRzLnVuc3RhYmxlX1Byb2ZpbGluZz1udWxsO2V4cG9ydHMudW5zdGFibGVfVXNlckJsb2NraW5nUHJpb3JpdHk9MjtleHBvcnRzLnVuc3RhYmxlX2NhbmNlbENhbGxiYWNrPWZ1bmN0aW9uKGEpe2EuY2FsbGJhY2s9bnVsbH07ZXhwb3J0cy51bnN0YWJsZV9jb250aW51ZUV4ZWN1dGlvbj1mdW5jdGlvbigpe0F8fHp8fChBPSEwLEkoSikpfTtcbmV4cG9ydHMudW5zdGFibGVfZm9yY2VGcmFtZVJhdGU9ZnVuY3Rpb24oYSl7MD5hfHwxMjU8YT9jb25zb2xlLmVycm9yKFwiZm9yY2VGcmFtZVJhdGUgdGFrZXMgYSBwb3NpdGl2ZSBpbnQgYmV0d2VlbiAwIGFuZCAxMjUsIGZvcmNpbmcgZnJhbWUgcmF0ZXMgaGlnaGVyIHRoYW4gMTI1IGZwcyBpcyBub3Qgc3VwcG9ydGVkXCIpOlA9MDxhP01hdGguZmxvb3IoMUUzL2EpOjV9O2V4cG9ydHMudW5zdGFibGVfZ2V0Q3VycmVudFByaW9yaXR5TGV2ZWw9ZnVuY3Rpb24oKXtyZXR1cm4geX07ZXhwb3J0cy51bnN0YWJsZV9nZXRGaXJzdENhbGxiYWNrTm9kZT1mdW5jdGlvbigpe3JldHVybiBoKHIpfTtleHBvcnRzLnVuc3RhYmxlX25leHQ9ZnVuY3Rpb24oYSl7c3dpdGNoKHkpe2Nhc2UgMTpjYXNlIDI6Y2FzZSAzOnZhciBiPTM7YnJlYWs7ZGVmYXVsdDpiPXl9dmFyIGM9eTt5PWI7dHJ5e3JldHVybiBhKCl9ZmluYWxseXt5PWN9fTtleHBvcnRzLnVuc3RhYmxlX3BhdXNlRXhlY3V0aW9uPWZ1bmN0aW9uKCl7fTtcbmV4cG9ydHMudW5zdGFibGVfcmVxdWVzdFBhaW50PWZ1bmN0aW9uKCl7fTtleHBvcnRzLnVuc3RhYmxlX3J1bldpdGhQcmlvcml0eT1mdW5jdGlvbihhLGIpe3N3aXRjaChhKXtjYXNlIDE6Y2FzZSAyOmNhc2UgMzpjYXNlIDQ6Y2FzZSA1OmJyZWFrO2RlZmF1bHQ6YT0zfXZhciBjPXk7eT1hO3RyeXtyZXR1cm4gYigpfWZpbmFsbHl7eT1jfX07XG5leHBvcnRzLnVuc3RhYmxlX3NjaGVkdWxlQ2FsbGJhY2s9ZnVuY3Rpb24oYSxiLGMpe3ZhciBkPWV4cG9ydHMudW5zdGFibGVfbm93KCk7XCJvYmplY3RcIj09PXR5cGVvZiBjJiZudWxsIT09Yz8oYz1jLmRlbGF5LGM9XCJudW1iZXJcIj09PXR5cGVvZiBjJiYwPGM/ZCtjOmQpOmM9ZDtzd2l0Y2goYSl7Y2FzZSAxOnZhciBlPS0xO2JyZWFrO2Nhc2UgMjplPTI1MDticmVhaztjYXNlIDU6ZT0xMDczNzQxODIzO2JyZWFrO2Nhc2UgNDplPTFFNDticmVhaztkZWZhdWx0OmU9NUUzfWU9YytlO2E9e2lkOnUrKyxjYWxsYmFjazpiLHByaW9yaXR5TGV2ZWw6YSxzdGFydFRpbWU6YyxleHBpcmF0aW9uVGltZTplLHNvcnRJbmRleDotMX07Yz5kPyhhLnNvcnRJbmRleD1jLGYodCxhKSxudWxsPT09aChyKSYmYT09PWgodCkmJihCPyhFKEwpLEw9LTEpOkI9ITAsSyhILGMtZCkpKTooYS5zb3J0SW5kZXg9ZSxmKHIsYSksQXx8enx8KEE9ITAsSShKKSkpO3JldHVybiBhfTtcbmV4cG9ydHMudW5zdGFibGVfc2hvdWxkWWllbGQ9TTtleHBvcnRzLnVuc3RhYmxlX3dyYXBDYWxsYmFjaz1mdW5jdGlvbihhKXt2YXIgYj15O3JldHVybiBmdW5jdGlvbigpe3ZhciBjPXk7eT1iO3RyeXtyZXR1cm4gYS5hcHBseSh0aGlzLGFyZ3VtZW50cyl9ZmluYWxseXt5PWN9fX07XG4iLCIndXNlIHN0cmljdCc7XG5cbmlmIChwcm9jZXNzLmVudi5OT0RFX0VOViA9PT0gJ3Byb2R1Y3Rpb24nKSB7XG4gIG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi9janMvc2NoZWR1bGVyLnByb2R1Y3Rpb24ubWluLmpzJyk7XG59IGVsc2Uge1xuICBtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoJy4vY2pzL3NjaGVkdWxlci5kZXZlbG9wbWVudC5qcycpO1xufVxuIiwiXCJ1c2Ugc3RyaWN0XCI7XG5cbnZhciBzdHlsZXNJbkRPTSA9IFtdO1xuXG5mdW5jdGlvbiBnZXRJbmRleEJ5SWRlbnRpZmllcihpZGVudGlmaWVyKSB7XG4gIHZhciByZXN1bHQgPSAtMTtcblxuICBmb3IgKHZhciBpID0gMDsgaSA8IHN0eWxlc0luRE9NLmxlbmd0aDsgaSsrKSB7XG4gICAgaWYgKHN0eWxlc0luRE9NW2ldLmlkZW50aWZpZXIgPT09IGlkZW50aWZpZXIpIHtcbiAgICAgIHJlc3VsdCA9IGk7XG4gICAgICBicmVhaztcbiAgICB9XG4gIH1cblxuICByZXR1cm4gcmVzdWx0O1xufVxuXG5mdW5jdGlvbiBtb2R1bGVzVG9Eb20obGlzdCwgb3B0aW9ucykge1xuICB2YXIgaWRDb3VudE1hcCA9IHt9O1xuICB2YXIgaWRlbnRpZmllcnMgPSBbXTtcblxuICBmb3IgKHZhciBpID0gMDsgaSA8IGxpc3QubGVuZ3RoOyBpKyspIHtcbiAgICB2YXIgaXRlbSA9IGxpc3RbaV07XG4gICAgdmFyIGlkID0gb3B0aW9ucy5iYXNlID8gaXRlbVswXSArIG9wdGlvbnMuYmFzZSA6IGl0ZW1bMF07XG4gICAgdmFyIGNvdW50ID0gaWRDb3VudE1hcFtpZF0gfHwgMDtcbiAgICB2YXIgaWRlbnRpZmllciA9IFwiXCIuY29uY2F0KGlkLCBcIiBcIikuY29uY2F0KGNvdW50KTtcbiAgICBpZENvdW50TWFwW2lkXSA9IGNvdW50ICsgMTtcbiAgICB2YXIgaW5kZXhCeUlkZW50aWZpZXIgPSBnZXRJbmRleEJ5SWRlbnRpZmllcihpZGVudGlmaWVyKTtcbiAgICB2YXIgb2JqID0ge1xuICAgICAgY3NzOiBpdGVtWzFdLFxuICAgICAgbWVkaWE6IGl0ZW1bMl0sXG4gICAgICBzb3VyY2VNYXA6IGl0ZW1bM10sXG4gICAgICBzdXBwb3J0czogaXRlbVs0XSxcbiAgICAgIGxheWVyOiBpdGVtWzVdXG4gICAgfTtcblxuICAgIGlmIChpbmRleEJ5SWRlbnRpZmllciAhPT0gLTEpIHtcbiAgICAgIHN0eWxlc0luRE9NW2luZGV4QnlJZGVudGlmaWVyXS5yZWZlcmVuY2VzKys7XG4gICAgICBzdHlsZXNJbkRPTVtpbmRleEJ5SWRlbnRpZmllcl0udXBkYXRlcihvYmopO1xuICAgIH0gZWxzZSB7XG4gICAgICB2YXIgdXBkYXRlciA9IGFkZEVsZW1lbnRTdHlsZShvYmosIG9wdGlvbnMpO1xuICAgICAgb3B0aW9ucy5ieUluZGV4ID0gaTtcbiAgICAgIHN0eWxlc0luRE9NLnNwbGljZShpLCAwLCB7XG4gICAgICAgIGlkZW50aWZpZXI6IGlkZW50aWZpZXIsXG4gICAgICAgIHVwZGF0ZXI6IHVwZGF0ZXIsXG4gICAgICAgIHJlZmVyZW5jZXM6IDFcbiAgICAgIH0pO1xuICAgIH1cblxuICAgIGlkZW50aWZpZXJzLnB1c2goaWRlbnRpZmllcik7XG4gIH1cblxuICByZXR1cm4gaWRlbnRpZmllcnM7XG59XG5cbmZ1bmN0aW9uIGFkZEVsZW1lbnRTdHlsZShvYmosIG9wdGlvbnMpIHtcbiAgdmFyIGFwaSA9IG9wdGlvbnMuZG9tQVBJKG9wdGlvbnMpO1xuICBhcGkudXBkYXRlKG9iaik7XG5cbiAgdmFyIHVwZGF0ZXIgPSBmdW5jdGlvbiB1cGRhdGVyKG5ld09iaikge1xuICAgIGlmIChuZXdPYmopIHtcbiAgICAgIGlmIChuZXdPYmouY3NzID09PSBvYmouY3NzICYmIG5ld09iai5tZWRpYSA9PT0gb2JqLm1lZGlhICYmIG5ld09iai5zb3VyY2VNYXAgPT09IG9iai5zb3VyY2VNYXAgJiYgbmV3T2JqLnN1cHBvcnRzID09PSBvYmouc3VwcG9ydHMgJiYgbmV3T2JqLmxheWVyID09PSBvYmoubGF5ZXIpIHtcbiAgICAgICAgcmV0dXJuO1xuICAgICAgfVxuXG4gICAgICBhcGkudXBkYXRlKG9iaiA9IG5ld09iaik7XG4gICAgfSBlbHNlIHtcbiAgICAgIGFwaS5yZW1vdmUoKTtcbiAgICB9XG4gIH07XG5cbiAgcmV0dXJuIHVwZGF0ZXI7XG59XG5cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKGxpc3QsIG9wdGlvbnMpIHtcbiAgb3B0aW9ucyA9IG9wdGlvbnMgfHwge307XG4gIGxpc3QgPSBsaXN0IHx8IFtdO1xuICB2YXIgbGFzdElkZW50aWZpZXJzID0gbW9kdWxlc1RvRG9tKGxpc3QsIG9wdGlvbnMpO1xuICByZXR1cm4gZnVuY3Rpb24gdXBkYXRlKG5ld0xpc3QpIHtcbiAgICBuZXdMaXN0ID0gbmV3TGlzdCB8fCBbXTtcblxuICAgIGZvciAodmFyIGkgPSAwOyBpIDwgbGFzdElkZW50aWZpZXJzLmxlbmd0aDsgaSsrKSB7XG4gICAgICB2YXIgaWRlbnRpZmllciA9IGxhc3RJZGVudGlmaWVyc1tpXTtcbiAgICAgIHZhciBpbmRleCA9IGdldEluZGV4QnlJZGVudGlmaWVyKGlkZW50aWZpZXIpO1xuICAgICAgc3R5bGVzSW5ET01baW5kZXhdLnJlZmVyZW5jZXMtLTtcbiAgICB9XG5cbiAgICB2YXIgbmV3TGFzdElkZW50aWZpZXJzID0gbW9kdWxlc1RvRG9tKG5ld0xpc3QsIG9wdGlvbnMpO1xuXG4gICAgZm9yICh2YXIgX2kgPSAwOyBfaSA8IGxhc3RJZGVudGlmaWVycy5sZW5ndGg7IF9pKyspIHtcbiAgICAgIHZhciBfaWRlbnRpZmllciA9IGxhc3RJZGVudGlmaWVyc1tfaV07XG5cbiAgICAgIHZhciBfaW5kZXggPSBnZXRJbmRleEJ5SWRlbnRpZmllcihfaWRlbnRpZmllcik7XG5cbiAgICAgIGlmIChzdHlsZXNJbkRPTVtfaW5kZXhdLnJlZmVyZW5jZXMgPT09IDApIHtcbiAgICAgICAgc3R5bGVzSW5ET01bX2luZGV4XS51cGRhdGVyKCk7XG5cbiAgICAgICAgc3R5bGVzSW5ET00uc3BsaWNlKF9pbmRleCwgMSk7XG4gICAgICB9XG4gICAgfVxuXG4gICAgbGFzdElkZW50aWZpZXJzID0gbmV3TGFzdElkZW50aWZpZXJzO1xuICB9O1xufTsiLCJcInVzZSBzdHJpY3RcIjtcblxudmFyIG1lbW8gPSB7fTtcbi8qIGlzdGFuYnVsIGlnbm9yZSBuZXh0ICAqL1xuXG5mdW5jdGlvbiBnZXRUYXJnZXQodGFyZ2V0KSB7XG4gIGlmICh0eXBlb2YgbWVtb1t0YXJnZXRdID09PSBcInVuZGVmaW5lZFwiKSB7XG4gICAgdmFyIHN0eWxlVGFyZ2V0ID0gZG9jdW1lbnQucXVlcnlTZWxlY3Rvcih0YXJnZXQpOyAvLyBTcGVjaWFsIGNhc2UgdG8gcmV0dXJuIGhlYWQgb2YgaWZyYW1lIGluc3RlYWQgb2YgaWZyYW1lIGl0c2VsZlxuXG4gICAgaWYgKHdpbmRvdy5IVE1MSUZyYW1lRWxlbWVudCAmJiBzdHlsZVRhcmdldCBpbnN0YW5jZW9mIHdpbmRvdy5IVE1MSUZyYW1lRWxlbWVudCkge1xuICAgICAgdHJ5IHtcbiAgICAgICAgLy8gVGhpcyB3aWxsIHRocm93IGFuIGV4Y2VwdGlvbiBpZiBhY2Nlc3MgdG8gaWZyYW1lIGlzIGJsb2NrZWRcbiAgICAgICAgLy8gZHVlIHRvIGNyb3NzLW9yaWdpbiByZXN0cmljdGlvbnNcbiAgICAgICAgc3R5bGVUYXJnZXQgPSBzdHlsZVRhcmdldC5jb250ZW50RG9jdW1lbnQuaGVhZDtcbiAgICAgIH0gY2F0Y2ggKGUpIHtcbiAgICAgICAgLy8gaXN0YW5idWwgaWdub3JlIG5leHRcbiAgICAgICAgc3R5bGVUYXJnZXQgPSBudWxsO1xuICAgICAgfVxuICAgIH1cblxuICAgIG1lbW9bdGFyZ2V0XSA9IHN0eWxlVGFyZ2V0O1xuICB9XG5cbiAgcmV0dXJuIG1lbW9bdGFyZ2V0XTtcbn1cbi8qIGlzdGFuYnVsIGlnbm9yZSBuZXh0ICAqL1xuXG5cbmZ1bmN0aW9uIGluc2VydEJ5U2VsZWN0b3IoaW5zZXJ0LCBzdHlsZSkge1xuICB2YXIgdGFyZ2V0ID0gZ2V0VGFyZ2V0KGluc2VydCk7XG5cbiAgaWYgKCF0YXJnZXQpIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoXCJDb3VsZG4ndCBmaW5kIGEgc3R5bGUgdGFyZ2V0LiBUaGlzIHByb2JhYmx5IG1lYW5zIHRoYXQgdGhlIHZhbHVlIGZvciB0aGUgJ2luc2VydCcgcGFyYW1ldGVyIGlzIGludmFsaWQuXCIpO1xuICB9XG5cbiAgdGFyZ2V0LmFwcGVuZENoaWxkKHN0eWxlKTtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBpbnNlcnRCeVNlbGVjdG9yOyIsIlwidXNlIHN0cmljdFwiO1xuXG4vKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCAgKi9cbmZ1bmN0aW9uIGluc2VydFN0eWxlRWxlbWVudChvcHRpb25zKSB7XG4gIHZhciBlbGVtZW50ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcInN0eWxlXCIpO1xuICBvcHRpb25zLnNldEF0dHJpYnV0ZXMoZWxlbWVudCwgb3B0aW9ucy5hdHRyaWJ1dGVzKTtcbiAgb3B0aW9ucy5pbnNlcnQoZWxlbWVudCwgb3B0aW9ucy5vcHRpb25zKTtcbiAgcmV0dXJuIGVsZW1lbnQ7XG59XG5cbm1vZHVsZS5leHBvcnRzID0gaW5zZXJ0U3R5bGVFbGVtZW50OyIsIlwidXNlIHN0cmljdFwiO1xuXG4vKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCAgKi9cbmZ1bmN0aW9uIHNldEF0dHJpYnV0ZXNXaXRob3V0QXR0cmlidXRlcyhzdHlsZUVsZW1lbnQpIHtcbiAgdmFyIG5vbmNlID0gdHlwZW9mIF9fd2VicGFja19ub25jZV9fICE9PSBcInVuZGVmaW5lZFwiID8gX193ZWJwYWNrX25vbmNlX18gOiBudWxsO1xuXG4gIGlmIChub25jZSkge1xuICAgIHN0eWxlRWxlbWVudC5zZXRBdHRyaWJ1dGUoXCJub25jZVwiLCBub25jZSk7XG4gIH1cbn1cblxubW9kdWxlLmV4cG9ydHMgPSBzZXRBdHRyaWJ1dGVzV2l0aG91dEF0dHJpYnV0ZXM7IiwiXCJ1c2Ugc3RyaWN0XCI7XG5cbi8qIGlzdGFuYnVsIGlnbm9yZSBuZXh0ICAqL1xuZnVuY3Rpb24gYXBwbHkoc3R5bGVFbGVtZW50LCBvcHRpb25zLCBvYmopIHtcbiAgdmFyIGNzcyA9IFwiXCI7XG5cbiAgaWYgKG9iai5zdXBwb3J0cykge1xuICAgIGNzcyArPSBcIkBzdXBwb3J0cyAoXCIuY29uY2F0KG9iai5zdXBwb3J0cywgXCIpIHtcIik7XG4gIH1cblxuICBpZiAob2JqLm1lZGlhKSB7XG4gICAgY3NzICs9IFwiQG1lZGlhIFwiLmNvbmNhdChvYmoubWVkaWEsIFwiIHtcIik7XG4gIH1cblxuICB2YXIgbmVlZExheWVyID0gdHlwZW9mIG9iai5sYXllciAhPT0gXCJ1bmRlZmluZWRcIjtcblxuICBpZiAobmVlZExheWVyKSB7XG4gICAgY3NzICs9IFwiQGxheWVyXCIuY29uY2F0KG9iai5sYXllci5sZW5ndGggPiAwID8gXCIgXCIuY29uY2F0KG9iai5sYXllcikgOiBcIlwiLCBcIiB7XCIpO1xuICB9XG5cbiAgY3NzICs9IG9iai5jc3M7XG5cbiAgaWYgKG5lZWRMYXllcikge1xuICAgIGNzcyArPSBcIn1cIjtcbiAgfVxuXG4gIGlmIChvYmoubWVkaWEpIHtcbiAgICBjc3MgKz0gXCJ9XCI7XG4gIH1cblxuICBpZiAob2JqLnN1cHBvcnRzKSB7XG4gICAgY3NzICs9IFwifVwiO1xuICB9XG5cbiAgdmFyIHNvdXJjZU1hcCA9IG9iai5zb3VyY2VNYXA7XG5cbiAgaWYgKHNvdXJjZU1hcCAmJiB0eXBlb2YgYnRvYSAhPT0gXCJ1bmRlZmluZWRcIikge1xuICAgIGNzcyArPSBcIlxcbi8qIyBzb3VyY2VNYXBwaW5nVVJMPWRhdGE6YXBwbGljYXRpb24vanNvbjtiYXNlNjQsXCIuY29uY2F0KGJ0b2EodW5lc2NhcGUoZW5jb2RlVVJJQ29tcG9uZW50KEpTT04uc3RyaW5naWZ5KHNvdXJjZU1hcCkpKSksIFwiICovXCIpO1xuICB9IC8vIEZvciBvbGQgSUVcblxuICAvKiBpc3RhbmJ1bCBpZ25vcmUgaWYgICovXG5cblxuICBvcHRpb25zLnN0eWxlVGFnVHJhbnNmb3JtKGNzcywgc3R5bGVFbGVtZW50LCBvcHRpb25zLm9wdGlvbnMpO1xufVxuXG5mdW5jdGlvbiByZW1vdmVTdHlsZUVsZW1lbnQoc3R5bGVFbGVtZW50KSB7XG4gIC8vIGlzdGFuYnVsIGlnbm9yZSBpZlxuICBpZiAoc3R5bGVFbGVtZW50LnBhcmVudE5vZGUgPT09IG51bGwpIHtcbiAgICByZXR1cm4gZmFsc2U7XG4gIH1cblxuICBzdHlsZUVsZW1lbnQucGFyZW50Tm9kZS5yZW1vdmVDaGlsZChzdHlsZUVsZW1lbnQpO1xufVxuLyogaXN0YW5idWwgaWdub3JlIG5leHQgICovXG5cblxuZnVuY3Rpb24gZG9tQVBJKG9wdGlvbnMpIHtcbiAgdmFyIHN0eWxlRWxlbWVudCA9IG9wdGlvbnMuaW5zZXJ0U3R5bGVFbGVtZW50KG9wdGlvbnMpO1xuICByZXR1cm4ge1xuICAgIHVwZGF0ZTogZnVuY3Rpb24gdXBkYXRlKG9iaikge1xuICAgICAgYXBwbHkoc3R5bGVFbGVtZW50LCBvcHRpb25zLCBvYmopO1xuICAgIH0sXG4gICAgcmVtb3ZlOiBmdW5jdGlvbiByZW1vdmUoKSB7XG4gICAgICByZW1vdmVTdHlsZUVsZW1lbnQoc3R5bGVFbGVtZW50KTtcbiAgICB9XG4gIH07XG59XG5cbm1vZHVsZS5leHBvcnRzID0gZG9tQVBJOyIsIlwidXNlIHN0cmljdFwiO1xuXG4vKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCAgKi9cbmZ1bmN0aW9uIHN0eWxlVGFnVHJhbnNmb3JtKGNzcywgc3R5bGVFbGVtZW50KSB7XG4gIGlmIChzdHlsZUVsZW1lbnQuc3R5bGVTaGVldCkge1xuICAgIHN0eWxlRWxlbWVudC5zdHlsZVNoZWV0LmNzc1RleHQgPSBjc3M7XG4gIH0gZWxzZSB7XG4gICAgd2hpbGUgKHN0eWxlRWxlbWVudC5maXJzdENoaWxkKSB7XG4gICAgICBzdHlsZUVsZW1lbnQucmVtb3ZlQ2hpbGQoc3R5bGVFbGVtZW50LmZpcnN0Q2hpbGQpO1xuICAgIH1cblxuICAgIHN0eWxlRWxlbWVudC5hcHBlbmRDaGlsZChkb2N1bWVudC5jcmVhdGVUZXh0Tm9kZShjc3MpKTtcbiAgfVxufVxuXG5tb2R1bGUuZXhwb3J0cyA9IHN0eWxlVGFnVHJhbnNmb3JtOyIsIm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gaXNCdWZmZXIoYXJnKSB7XG4gIHJldHVybiBhcmcgJiYgdHlwZW9mIGFyZyA9PT0gJ29iamVjdCdcbiAgICAmJiB0eXBlb2YgYXJnLmNvcHkgPT09ICdmdW5jdGlvbidcbiAgICAmJiB0eXBlb2YgYXJnLmZpbGwgPT09ICdmdW5jdGlvbidcbiAgICAmJiB0eXBlb2YgYXJnLnJlYWRVSW50OCA9PT0gJ2Z1bmN0aW9uJztcbn0iLCIvLyBDdXJyZW50bHkgaW4gc3luYyB3aXRoIE5vZGUuanMgbGliL2ludGVybmFsL3V0aWwvdHlwZXMuanNcbi8vIGh0dHBzOi8vZ2l0aHViLmNvbS9ub2RlanMvbm9kZS9jb21taXQvMTEyY2M3YzI3NTUxMjU0YWEyYjE3MDk4ZmI3NzQ4NjdmMDVlZDBkOVxuXG4ndXNlIHN0cmljdCc7XG5cbnZhciBpc0FyZ3VtZW50c09iamVjdCA9IHJlcXVpcmUoJ2lzLWFyZ3VtZW50cycpO1xudmFyIGlzR2VuZXJhdG9yRnVuY3Rpb24gPSByZXF1aXJlKCdpcy1nZW5lcmF0b3ItZnVuY3Rpb24nKTtcbnZhciB3aGljaFR5cGVkQXJyYXkgPSByZXF1aXJlKCd3aGljaC10eXBlZC1hcnJheScpO1xudmFyIGlzVHlwZWRBcnJheSA9IHJlcXVpcmUoJ2lzLXR5cGVkLWFycmF5Jyk7XG5cbmZ1bmN0aW9uIHVuY3VycnlUaGlzKGYpIHtcbiAgcmV0dXJuIGYuY2FsbC5iaW5kKGYpO1xufVxuXG52YXIgQmlnSW50U3VwcG9ydGVkID0gdHlwZW9mIEJpZ0ludCAhPT0gJ3VuZGVmaW5lZCc7XG52YXIgU3ltYm9sU3VwcG9ydGVkID0gdHlwZW9mIFN5bWJvbCAhPT0gJ3VuZGVmaW5lZCc7XG5cbnZhciBPYmplY3RUb1N0cmluZyA9IHVuY3VycnlUaGlzKE9iamVjdC5wcm90b3R5cGUudG9TdHJpbmcpO1xuXG52YXIgbnVtYmVyVmFsdWUgPSB1bmN1cnJ5VGhpcyhOdW1iZXIucHJvdG90eXBlLnZhbHVlT2YpO1xudmFyIHN0cmluZ1ZhbHVlID0gdW5jdXJyeVRoaXMoU3RyaW5nLnByb3RvdHlwZS52YWx1ZU9mKTtcbnZhciBib29sZWFuVmFsdWUgPSB1bmN1cnJ5VGhpcyhCb29sZWFuLnByb3RvdHlwZS52YWx1ZU9mKTtcblxuaWYgKEJpZ0ludFN1cHBvcnRlZCkge1xuICB2YXIgYmlnSW50VmFsdWUgPSB1bmN1cnJ5VGhpcyhCaWdJbnQucHJvdG90eXBlLnZhbHVlT2YpO1xufVxuXG5pZiAoU3ltYm9sU3VwcG9ydGVkKSB7XG4gIHZhciBzeW1ib2xWYWx1ZSA9IHVuY3VycnlUaGlzKFN5bWJvbC5wcm90b3R5cGUudmFsdWVPZik7XG59XG5cbmZ1bmN0aW9uIGNoZWNrQm94ZWRQcmltaXRpdmUodmFsdWUsIHByb3RvdHlwZVZhbHVlT2YpIHtcbiAgaWYgKHR5cGVvZiB2YWx1ZSAhPT0gJ29iamVjdCcpIHtcbiAgICByZXR1cm4gZmFsc2U7XG4gIH1cbiAgdHJ5IHtcbiAgICBwcm90b3R5cGVWYWx1ZU9mKHZhbHVlKTtcbiAgICByZXR1cm4gdHJ1ZTtcbiAgfSBjYXRjaChlKSB7XG4gICAgcmV0dXJuIGZhbHNlO1xuICB9XG59XG5cbmV4cG9ydHMuaXNBcmd1bWVudHNPYmplY3QgPSBpc0FyZ3VtZW50c09iamVjdDtcbmV4cG9ydHMuaXNHZW5lcmF0b3JGdW5jdGlvbiA9IGlzR2VuZXJhdG9yRnVuY3Rpb247XG5leHBvcnRzLmlzVHlwZWRBcnJheSA9IGlzVHlwZWRBcnJheTtcblxuLy8gVGFrZW4gZnJvbSBoZXJlIGFuZCBtb2RpZmllZCBmb3IgYmV0dGVyIGJyb3dzZXIgc3VwcG9ydFxuLy8gaHR0cHM6Ly9naXRodWIuY29tL3NpbmRyZXNvcmh1cy9wLWlzLXByb21pc2UvYmxvYi9jZGEzNWE1MTNiZGEwM2Y5NzdhZDVjZGUzYTA3OWQyMzdlODJkN2VmL2luZGV4LmpzXG5mdW5jdGlvbiBpc1Byb21pc2UoaW5wdXQpIHtcblx0cmV0dXJuIChcblx0XHQoXG5cdFx0XHR0eXBlb2YgUHJvbWlzZSAhPT0gJ3VuZGVmaW5lZCcgJiZcblx0XHRcdGlucHV0IGluc3RhbmNlb2YgUHJvbWlzZVxuXHRcdCkgfHxcblx0XHQoXG5cdFx0XHRpbnB1dCAhPT0gbnVsbCAmJlxuXHRcdFx0dHlwZW9mIGlucHV0ID09PSAnb2JqZWN0JyAmJlxuXHRcdFx0dHlwZW9mIGlucHV0LnRoZW4gPT09ICdmdW5jdGlvbicgJiZcblx0XHRcdHR5cGVvZiBpbnB1dC5jYXRjaCA9PT0gJ2Z1bmN0aW9uJ1xuXHRcdClcblx0KTtcbn1cbmV4cG9ydHMuaXNQcm9taXNlID0gaXNQcm9taXNlO1xuXG5mdW5jdGlvbiBpc0FycmF5QnVmZmVyVmlldyh2YWx1ZSkge1xuICBpZiAodHlwZW9mIEFycmF5QnVmZmVyICE9PSAndW5kZWZpbmVkJyAmJiBBcnJheUJ1ZmZlci5pc1ZpZXcpIHtcbiAgICByZXR1cm4gQXJyYXlCdWZmZXIuaXNWaWV3KHZhbHVlKTtcbiAgfVxuXG4gIHJldHVybiAoXG4gICAgaXNUeXBlZEFycmF5KHZhbHVlKSB8fFxuICAgIGlzRGF0YVZpZXcodmFsdWUpXG4gICk7XG59XG5leHBvcnRzLmlzQXJyYXlCdWZmZXJWaWV3ID0gaXNBcnJheUJ1ZmZlclZpZXc7XG5cblxuZnVuY3Rpb24gaXNVaW50OEFycmF5KHZhbHVlKSB7XG4gIHJldHVybiB3aGljaFR5cGVkQXJyYXkodmFsdWUpID09PSAnVWludDhBcnJheSc7XG59XG5leHBvcnRzLmlzVWludDhBcnJheSA9IGlzVWludDhBcnJheTtcblxuZnVuY3Rpb24gaXNVaW50OENsYW1wZWRBcnJheSh2YWx1ZSkge1xuICByZXR1cm4gd2hpY2hUeXBlZEFycmF5KHZhbHVlKSA9PT0gJ1VpbnQ4Q2xhbXBlZEFycmF5Jztcbn1cbmV4cG9ydHMuaXNVaW50OENsYW1wZWRBcnJheSA9IGlzVWludDhDbGFtcGVkQXJyYXk7XG5cbmZ1bmN0aW9uIGlzVWludDE2QXJyYXkodmFsdWUpIHtcbiAgcmV0dXJuIHdoaWNoVHlwZWRBcnJheSh2YWx1ZSkgPT09ICdVaW50MTZBcnJheSc7XG59XG5leHBvcnRzLmlzVWludDE2QXJyYXkgPSBpc1VpbnQxNkFycmF5O1xuXG5mdW5jdGlvbiBpc1VpbnQzMkFycmF5KHZhbHVlKSB7XG4gIHJldHVybiB3aGljaFR5cGVkQXJyYXkodmFsdWUpID09PSAnVWludDMyQXJyYXknO1xufVxuZXhwb3J0cy5pc1VpbnQzMkFycmF5ID0gaXNVaW50MzJBcnJheTtcblxuZnVuY3Rpb24gaXNJbnQ4QXJyYXkodmFsdWUpIHtcbiAgcmV0dXJuIHdoaWNoVHlwZWRBcnJheSh2YWx1ZSkgPT09ICdJbnQ4QXJyYXknO1xufVxuZXhwb3J0cy5pc0ludDhBcnJheSA9IGlzSW50OEFycmF5O1xuXG5mdW5jdGlvbiBpc0ludDE2QXJyYXkodmFsdWUpIHtcbiAgcmV0dXJuIHdoaWNoVHlwZWRBcnJheSh2YWx1ZSkgPT09ICdJbnQxNkFycmF5Jztcbn1cbmV4cG9ydHMuaXNJbnQxNkFycmF5ID0gaXNJbnQxNkFycmF5O1xuXG5mdW5jdGlvbiBpc0ludDMyQXJyYXkodmFsdWUpIHtcbiAgcmV0dXJuIHdoaWNoVHlwZWRBcnJheSh2YWx1ZSkgPT09ICdJbnQzMkFycmF5Jztcbn1cbmV4cG9ydHMuaXNJbnQzMkFycmF5ID0gaXNJbnQzMkFycmF5O1xuXG5mdW5jdGlvbiBpc0Zsb2F0MzJBcnJheSh2YWx1ZSkge1xuICByZXR1cm4gd2hpY2hUeXBlZEFycmF5KHZhbHVlKSA9PT0gJ0Zsb2F0MzJBcnJheSc7XG59XG5leHBvcnRzLmlzRmxvYXQzMkFycmF5ID0gaXNGbG9hdDMyQXJyYXk7XG5cbmZ1bmN0aW9uIGlzRmxvYXQ2NEFycmF5KHZhbHVlKSB7XG4gIHJldHVybiB3aGljaFR5cGVkQXJyYXkodmFsdWUpID09PSAnRmxvYXQ2NEFycmF5Jztcbn1cbmV4cG9ydHMuaXNGbG9hdDY0QXJyYXkgPSBpc0Zsb2F0NjRBcnJheTtcblxuZnVuY3Rpb24gaXNCaWdJbnQ2NEFycmF5KHZhbHVlKSB7XG4gIHJldHVybiB3aGljaFR5cGVkQXJyYXkodmFsdWUpID09PSAnQmlnSW50NjRBcnJheSc7XG59XG5leHBvcnRzLmlzQmlnSW50NjRBcnJheSA9IGlzQmlnSW50NjRBcnJheTtcblxuZnVuY3Rpb24gaXNCaWdVaW50NjRBcnJheSh2YWx1ZSkge1xuICByZXR1cm4gd2hpY2hUeXBlZEFycmF5KHZhbHVlKSA9PT0gJ0JpZ1VpbnQ2NEFycmF5Jztcbn1cbmV4cG9ydHMuaXNCaWdVaW50NjRBcnJheSA9IGlzQmlnVWludDY0QXJyYXk7XG5cbmZ1bmN0aW9uIGlzTWFwVG9TdHJpbmcodmFsdWUpIHtcbiAgcmV0dXJuIE9iamVjdFRvU3RyaW5nKHZhbHVlKSA9PT0gJ1tvYmplY3QgTWFwXSc7XG59XG5pc01hcFRvU3RyaW5nLndvcmtpbmcgPSAoXG4gIHR5cGVvZiBNYXAgIT09ICd1bmRlZmluZWQnICYmXG4gIGlzTWFwVG9TdHJpbmcobmV3IE1hcCgpKVxuKTtcblxuZnVuY3Rpb24gaXNNYXAodmFsdWUpIHtcbiAgaWYgKHR5cGVvZiBNYXAgPT09ICd1bmRlZmluZWQnKSB7XG4gICAgcmV0dXJuIGZhbHNlO1xuICB9XG5cbiAgcmV0dXJuIGlzTWFwVG9TdHJpbmcud29ya2luZ1xuICAgID8gaXNNYXBUb1N0cmluZyh2YWx1ZSlcbiAgICA6IHZhbHVlIGluc3RhbmNlb2YgTWFwO1xufVxuZXhwb3J0cy5pc01hcCA9IGlzTWFwO1xuXG5mdW5jdGlvbiBpc1NldFRvU3RyaW5nKHZhbHVlKSB7XG4gIHJldHVybiBPYmplY3RUb1N0cmluZyh2YWx1ZSkgPT09ICdbb2JqZWN0IFNldF0nO1xufVxuaXNTZXRUb1N0cmluZy53b3JraW5nID0gKFxuICB0eXBlb2YgU2V0ICE9PSAndW5kZWZpbmVkJyAmJlxuICBpc1NldFRvU3RyaW5nKG5ldyBTZXQoKSlcbik7XG5mdW5jdGlvbiBpc1NldCh2YWx1ZSkge1xuICBpZiAodHlwZW9mIFNldCA9PT0gJ3VuZGVmaW5lZCcpIHtcbiAgICByZXR1cm4gZmFsc2U7XG4gIH1cblxuICByZXR1cm4gaXNTZXRUb1N0cmluZy53b3JraW5nXG4gICAgPyBpc1NldFRvU3RyaW5nKHZhbHVlKVxuICAgIDogdmFsdWUgaW5zdGFuY2VvZiBTZXQ7XG59XG5leHBvcnRzLmlzU2V0ID0gaXNTZXQ7XG5cbmZ1bmN0aW9uIGlzV2Vha01hcFRvU3RyaW5nKHZhbHVlKSB7XG4gIHJldHVybiBPYmplY3RUb1N0cmluZyh2YWx1ZSkgPT09ICdbb2JqZWN0IFdlYWtNYXBdJztcbn1cbmlzV2Vha01hcFRvU3RyaW5nLndvcmtpbmcgPSAoXG4gIHR5cGVvZiBXZWFrTWFwICE9PSAndW5kZWZpbmVkJyAmJlxuICBpc1dlYWtNYXBUb1N0cmluZyhuZXcgV2Vha01hcCgpKVxuKTtcbmZ1bmN0aW9uIGlzV2Vha01hcCh2YWx1ZSkge1xuICBpZiAodHlwZW9mIFdlYWtNYXAgPT09ICd1bmRlZmluZWQnKSB7XG4gICAgcmV0dXJuIGZhbHNlO1xuICB9XG5cbiAgcmV0dXJuIGlzV2Vha01hcFRvU3RyaW5nLndvcmtpbmdcbiAgICA/IGlzV2Vha01hcFRvU3RyaW5nKHZhbHVlKVxuICAgIDogdmFsdWUgaW5zdGFuY2VvZiBXZWFrTWFwO1xufVxuZXhwb3J0cy5pc1dlYWtNYXAgPSBpc1dlYWtNYXA7XG5cbmZ1bmN0aW9uIGlzV2Vha1NldFRvU3RyaW5nKHZhbHVlKSB7XG4gIHJldHVybiBPYmplY3RUb1N0cmluZyh2YWx1ZSkgPT09ICdbb2JqZWN0IFdlYWtTZXRdJztcbn1cbmlzV2Vha1NldFRvU3RyaW5nLndvcmtpbmcgPSAoXG4gIHR5cGVvZiBXZWFrU2V0ICE9PSAndW5kZWZpbmVkJyAmJlxuICBpc1dlYWtTZXRUb1N0cmluZyhuZXcgV2Vha1NldCgpKVxuKTtcbmZ1bmN0aW9uIGlzV2Vha1NldCh2YWx1ZSkge1xuICByZXR1cm4gaXNXZWFrU2V0VG9TdHJpbmcodmFsdWUpO1xufVxuZXhwb3J0cy5pc1dlYWtTZXQgPSBpc1dlYWtTZXQ7XG5cbmZ1bmN0aW9uIGlzQXJyYXlCdWZmZXJUb1N0cmluZyh2YWx1ZSkge1xuICByZXR1cm4gT2JqZWN0VG9TdHJpbmcodmFsdWUpID09PSAnW29iamVjdCBBcnJheUJ1ZmZlcl0nO1xufVxuaXNBcnJheUJ1ZmZlclRvU3RyaW5nLndvcmtpbmcgPSAoXG4gIHR5cGVvZiBBcnJheUJ1ZmZlciAhPT0gJ3VuZGVmaW5lZCcgJiZcbiAgaXNBcnJheUJ1ZmZlclRvU3RyaW5nKG5ldyBBcnJheUJ1ZmZlcigpKVxuKTtcbmZ1bmN0aW9uIGlzQXJyYXlCdWZmZXIodmFsdWUpIHtcbiAgaWYgKHR5cGVvZiBBcnJheUJ1ZmZlciA9PT0gJ3VuZGVmaW5lZCcpIHtcbiAgICByZXR1cm4gZmFsc2U7XG4gIH1cblxuICByZXR1cm4gaXNBcnJheUJ1ZmZlclRvU3RyaW5nLndvcmtpbmdcbiAgICA/IGlzQXJyYXlCdWZmZXJUb1N0cmluZyh2YWx1ZSlcbiAgICA6IHZhbHVlIGluc3RhbmNlb2YgQXJyYXlCdWZmZXI7XG59XG5leHBvcnRzLmlzQXJyYXlCdWZmZXIgPSBpc0FycmF5QnVmZmVyO1xuXG5mdW5jdGlvbiBpc0RhdGFWaWV3VG9TdHJpbmcodmFsdWUpIHtcbiAgcmV0dXJuIE9iamVjdFRvU3RyaW5nKHZhbHVlKSA9PT0gJ1tvYmplY3QgRGF0YVZpZXddJztcbn1cbmlzRGF0YVZpZXdUb1N0cmluZy53b3JraW5nID0gKFxuICB0eXBlb2YgQXJyYXlCdWZmZXIgIT09ICd1bmRlZmluZWQnICYmXG4gIHR5cGVvZiBEYXRhVmlldyAhPT0gJ3VuZGVmaW5lZCcgJiZcbiAgaXNEYXRhVmlld1RvU3RyaW5nKG5ldyBEYXRhVmlldyhuZXcgQXJyYXlCdWZmZXIoMSksIDAsIDEpKVxuKTtcbmZ1bmN0aW9uIGlzRGF0YVZpZXcodmFsdWUpIHtcbiAgaWYgKHR5cGVvZiBEYXRhVmlldyA9PT0gJ3VuZGVmaW5lZCcpIHtcbiAgICByZXR1cm4gZmFsc2U7XG4gIH1cblxuICByZXR1cm4gaXNEYXRhVmlld1RvU3RyaW5nLndvcmtpbmdcbiAgICA/IGlzRGF0YVZpZXdUb1N0cmluZyh2YWx1ZSlcbiAgICA6IHZhbHVlIGluc3RhbmNlb2YgRGF0YVZpZXc7XG59XG5leHBvcnRzLmlzRGF0YVZpZXcgPSBpc0RhdGFWaWV3O1xuXG4vLyBTdG9yZSBhIGNvcHkgb2YgU2hhcmVkQXJyYXlCdWZmZXIgaW4gY2FzZSBpdCdzIGRlbGV0ZWQgZWxzZXdoZXJlXG52YXIgU2hhcmVkQXJyYXlCdWZmZXJDb3B5ID0gdHlwZW9mIFNoYXJlZEFycmF5QnVmZmVyICE9PSAndW5kZWZpbmVkJyA/IFNoYXJlZEFycmF5QnVmZmVyIDogdW5kZWZpbmVkO1xuZnVuY3Rpb24gaXNTaGFyZWRBcnJheUJ1ZmZlclRvU3RyaW5nKHZhbHVlKSB7XG4gIHJldHVybiBPYmplY3RUb1N0cmluZyh2YWx1ZSkgPT09ICdbb2JqZWN0IFNoYXJlZEFycmF5QnVmZmVyXSc7XG59XG5mdW5jdGlvbiBpc1NoYXJlZEFycmF5QnVmZmVyKHZhbHVlKSB7XG4gIGlmICh0eXBlb2YgU2hhcmVkQXJyYXlCdWZmZXJDb3B5ID09PSAndW5kZWZpbmVkJykge1xuICAgIHJldHVybiBmYWxzZTtcbiAgfVxuXG4gIGlmICh0eXBlb2YgaXNTaGFyZWRBcnJheUJ1ZmZlclRvU3RyaW5nLndvcmtpbmcgPT09ICd1bmRlZmluZWQnKSB7XG4gICAgaXNTaGFyZWRBcnJheUJ1ZmZlclRvU3RyaW5nLndvcmtpbmcgPSBpc1NoYXJlZEFycmF5QnVmZmVyVG9TdHJpbmcobmV3IFNoYXJlZEFycmF5QnVmZmVyQ29weSgpKTtcbiAgfVxuXG4gIHJldHVybiBpc1NoYXJlZEFycmF5QnVmZmVyVG9TdHJpbmcud29ya2luZ1xuICAgID8gaXNTaGFyZWRBcnJheUJ1ZmZlclRvU3RyaW5nKHZhbHVlKVxuICAgIDogdmFsdWUgaW5zdGFuY2VvZiBTaGFyZWRBcnJheUJ1ZmZlckNvcHk7XG59XG5leHBvcnRzLmlzU2hhcmVkQXJyYXlCdWZmZXIgPSBpc1NoYXJlZEFycmF5QnVmZmVyO1xuXG5mdW5jdGlvbiBpc0FzeW5jRnVuY3Rpb24odmFsdWUpIHtcbiAgcmV0dXJuIE9iamVjdFRvU3RyaW5nKHZhbHVlKSA9PT0gJ1tvYmplY3QgQXN5bmNGdW5jdGlvbl0nO1xufVxuZXhwb3J0cy5pc0FzeW5jRnVuY3Rpb24gPSBpc0FzeW5jRnVuY3Rpb247XG5cbmZ1bmN0aW9uIGlzTWFwSXRlcmF0b3IodmFsdWUpIHtcbiAgcmV0dXJuIE9iamVjdFRvU3RyaW5nKHZhbHVlKSA9PT0gJ1tvYmplY3QgTWFwIEl0ZXJhdG9yXSc7XG59XG5leHBvcnRzLmlzTWFwSXRlcmF0b3IgPSBpc01hcEl0ZXJhdG9yO1xuXG5mdW5jdGlvbiBpc1NldEl0ZXJhdG9yKHZhbHVlKSB7XG4gIHJldHVybiBPYmplY3RUb1N0cmluZyh2YWx1ZSkgPT09ICdbb2JqZWN0IFNldCBJdGVyYXRvcl0nO1xufVxuZXhwb3J0cy5pc1NldEl0ZXJhdG9yID0gaXNTZXRJdGVyYXRvcjtcblxuZnVuY3Rpb24gaXNHZW5lcmF0b3JPYmplY3QodmFsdWUpIHtcbiAgcmV0dXJuIE9iamVjdFRvU3RyaW5nKHZhbHVlKSA9PT0gJ1tvYmplY3QgR2VuZXJhdG9yXSc7XG59XG5leHBvcnRzLmlzR2VuZXJhdG9yT2JqZWN0ID0gaXNHZW5lcmF0b3JPYmplY3Q7XG5cbmZ1bmN0aW9uIGlzV2ViQXNzZW1ibHlDb21waWxlZE1vZHVsZSh2YWx1ZSkge1xuICByZXR1cm4gT2JqZWN0VG9TdHJpbmcodmFsdWUpID09PSAnW29iamVjdCBXZWJBc3NlbWJseS5Nb2R1bGVdJztcbn1cbmV4cG9ydHMuaXNXZWJBc3NlbWJseUNvbXBpbGVkTW9kdWxlID0gaXNXZWJBc3NlbWJseUNvbXBpbGVkTW9kdWxlO1xuXG5mdW5jdGlvbiBpc051bWJlck9iamVjdCh2YWx1ZSkge1xuICByZXR1cm4gY2hlY2tCb3hlZFByaW1pdGl2ZSh2YWx1ZSwgbnVtYmVyVmFsdWUpO1xufVxuZXhwb3J0cy5pc051bWJlck9iamVjdCA9IGlzTnVtYmVyT2JqZWN0O1xuXG5mdW5jdGlvbiBpc1N0cmluZ09iamVjdCh2YWx1ZSkge1xuICByZXR1cm4gY2hlY2tCb3hlZFByaW1pdGl2ZSh2YWx1ZSwgc3RyaW5nVmFsdWUpO1xufVxuZXhwb3J0cy5pc1N0cmluZ09iamVjdCA9IGlzU3RyaW5nT2JqZWN0O1xuXG5mdW5jdGlvbiBpc0Jvb2xlYW5PYmplY3QodmFsdWUpIHtcbiAgcmV0dXJuIGNoZWNrQm94ZWRQcmltaXRpdmUodmFsdWUsIGJvb2xlYW5WYWx1ZSk7XG59XG5leHBvcnRzLmlzQm9vbGVhbk9iamVjdCA9IGlzQm9vbGVhbk9iamVjdDtcblxuZnVuY3Rpb24gaXNCaWdJbnRPYmplY3QodmFsdWUpIHtcbiAgcmV0dXJuIEJpZ0ludFN1cHBvcnRlZCAmJiBjaGVja0JveGVkUHJpbWl0aXZlKHZhbHVlLCBiaWdJbnRWYWx1ZSk7XG59XG5leHBvcnRzLmlzQmlnSW50T2JqZWN0ID0gaXNCaWdJbnRPYmplY3Q7XG5cbmZ1bmN0aW9uIGlzU3ltYm9sT2JqZWN0KHZhbHVlKSB7XG4gIHJldHVybiBTeW1ib2xTdXBwb3J0ZWQgJiYgY2hlY2tCb3hlZFByaW1pdGl2ZSh2YWx1ZSwgc3ltYm9sVmFsdWUpO1xufVxuZXhwb3J0cy5pc1N5bWJvbE9iamVjdCA9IGlzU3ltYm9sT2JqZWN0O1xuXG5mdW5jdGlvbiBpc0JveGVkUHJpbWl0aXZlKHZhbHVlKSB7XG4gIHJldHVybiAoXG4gICAgaXNOdW1iZXJPYmplY3QodmFsdWUpIHx8XG4gICAgaXNTdHJpbmdPYmplY3QodmFsdWUpIHx8XG4gICAgaXNCb29sZWFuT2JqZWN0KHZhbHVlKSB8fFxuICAgIGlzQmlnSW50T2JqZWN0KHZhbHVlKSB8fFxuICAgIGlzU3ltYm9sT2JqZWN0KHZhbHVlKVxuICApO1xufVxuZXhwb3J0cy5pc0JveGVkUHJpbWl0aXZlID0gaXNCb3hlZFByaW1pdGl2ZTtcblxuZnVuY3Rpb24gaXNBbnlBcnJheUJ1ZmZlcih2YWx1ZSkge1xuICByZXR1cm4gdHlwZW9mIFVpbnQ4QXJyYXkgIT09ICd1bmRlZmluZWQnICYmIChcbiAgICBpc0FycmF5QnVmZmVyKHZhbHVlKSB8fFxuICAgIGlzU2hhcmVkQXJyYXlCdWZmZXIodmFsdWUpXG4gICk7XG59XG5leHBvcnRzLmlzQW55QXJyYXlCdWZmZXIgPSBpc0FueUFycmF5QnVmZmVyO1xuXG5bJ2lzUHJveHknLCAnaXNFeHRlcm5hbCcsICdpc01vZHVsZU5hbWVzcGFjZU9iamVjdCddLmZvckVhY2goZnVuY3Rpb24obWV0aG9kKSB7XG4gIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBtZXRob2QsIHtcbiAgICBlbnVtZXJhYmxlOiBmYWxzZSxcbiAgICB2YWx1ZTogZnVuY3Rpb24oKSB7XG4gICAgICB0aHJvdyBuZXcgRXJyb3IobWV0aG9kICsgJyBpcyBub3Qgc3VwcG9ydGVkIGluIHVzZXJsYW5kJyk7XG4gICAgfVxuICB9KTtcbn0pO1xuIiwiLy8gQ29weXJpZ2h0IEpveWVudCwgSW5jLiBhbmQgb3RoZXIgTm9kZSBjb250cmlidXRvcnMuXG4vL1xuLy8gUGVybWlzc2lvbiBpcyBoZXJlYnkgZ3JhbnRlZCwgZnJlZSBvZiBjaGFyZ2UsIHRvIGFueSBwZXJzb24gb2J0YWluaW5nIGFcbi8vIGNvcHkgb2YgdGhpcyBzb2Z0d2FyZSBhbmQgYXNzb2NpYXRlZCBkb2N1bWVudGF0aW9uIGZpbGVzICh0aGVcbi8vIFwiU29mdHdhcmVcIiksIHRvIGRlYWwgaW4gdGhlIFNvZnR3YXJlIHdpdGhvdXQgcmVzdHJpY3Rpb24sIGluY2x1ZGluZ1xuLy8gd2l0aG91dCBsaW1pdGF0aW9uIHRoZSByaWdodHMgdG8gdXNlLCBjb3B5LCBtb2RpZnksIG1lcmdlLCBwdWJsaXNoLFxuLy8gZGlzdHJpYnV0ZSwgc3VibGljZW5zZSwgYW5kL29yIHNlbGwgY29waWVzIG9mIHRoZSBTb2Z0d2FyZSwgYW5kIHRvIHBlcm1pdFxuLy8gcGVyc29ucyB0byB3aG9tIHRoZSBTb2Z0d2FyZSBpcyBmdXJuaXNoZWQgdG8gZG8gc28sIHN1YmplY3QgdG8gdGhlXG4vLyBmb2xsb3dpbmcgY29uZGl0aW9uczpcbi8vXG4vLyBUaGUgYWJvdmUgY29weXJpZ2h0IG5vdGljZSBhbmQgdGhpcyBwZXJtaXNzaW9uIG5vdGljZSBzaGFsbCBiZSBpbmNsdWRlZFxuLy8gaW4gYWxsIGNvcGllcyBvciBzdWJzdGFudGlhbCBwb3J0aW9ucyBvZiB0aGUgU29mdHdhcmUuXG4vL1xuLy8gVEhFIFNPRlRXQVJFIElTIFBST1ZJREVEIFwiQVMgSVNcIiwgV0lUSE9VVCBXQVJSQU5UWSBPRiBBTlkgS0lORCwgRVhQUkVTU1xuLy8gT1IgSU1QTElFRCwgSU5DTFVESU5HIEJVVCBOT1QgTElNSVRFRCBUTyBUSEUgV0FSUkFOVElFUyBPRlxuLy8gTUVSQ0hBTlRBQklMSVRZLCBGSVRORVNTIEZPUiBBIFBBUlRJQ1VMQVIgUFVSUE9TRSBBTkQgTk9OSU5GUklOR0VNRU5ULiBJTlxuLy8gTk8gRVZFTlQgU0hBTEwgVEhFIEFVVEhPUlMgT1IgQ09QWVJJR0hUIEhPTERFUlMgQkUgTElBQkxFIEZPUiBBTlkgQ0xBSU0sXG4vLyBEQU1BR0VTIE9SIE9USEVSIExJQUJJTElUWSwgV0hFVEhFUiBJTiBBTiBBQ1RJT04gT0YgQ09OVFJBQ1QsIFRPUlQgT1Jcbi8vIE9USEVSV0lTRSwgQVJJU0lORyBGUk9NLCBPVVQgT0YgT1IgSU4gQ09OTkVDVElPTiBXSVRIIFRIRSBTT0ZUV0FSRSBPUiBUSEVcbi8vIFVTRSBPUiBPVEhFUiBERUFMSU5HUyBJTiBUSEUgU09GVFdBUkUuXG5cbnZhciBnZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3JzID0gT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcnMgfHxcbiAgZnVuY3Rpb24gZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9ycyhvYmopIHtcbiAgICB2YXIga2V5cyA9IE9iamVjdC5rZXlzKG9iaik7XG4gICAgdmFyIGRlc2NyaXB0b3JzID0ge307XG4gICAgZm9yICh2YXIgaSA9IDA7IGkgPCBrZXlzLmxlbmd0aDsgaSsrKSB7XG4gICAgICBkZXNjcmlwdG9yc1trZXlzW2ldXSA9IE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3Iob2JqLCBrZXlzW2ldKTtcbiAgICB9XG4gICAgcmV0dXJuIGRlc2NyaXB0b3JzO1xuICB9O1xuXG52YXIgZm9ybWF0UmVnRXhwID0gLyVbc2RqJV0vZztcbmV4cG9ydHMuZm9ybWF0ID0gZnVuY3Rpb24oZikge1xuICBpZiAoIWlzU3RyaW5nKGYpKSB7XG4gICAgdmFyIG9iamVjdHMgPSBbXTtcbiAgICBmb3IgKHZhciBpID0gMDsgaSA8IGFyZ3VtZW50cy5sZW5ndGg7IGkrKykge1xuICAgICAgb2JqZWN0cy5wdXNoKGluc3BlY3QoYXJndW1lbnRzW2ldKSk7XG4gICAgfVxuICAgIHJldHVybiBvYmplY3RzLmpvaW4oJyAnKTtcbiAgfVxuXG4gIHZhciBpID0gMTtcbiAgdmFyIGFyZ3MgPSBhcmd1bWVudHM7XG4gIHZhciBsZW4gPSBhcmdzLmxlbmd0aDtcbiAgdmFyIHN0ciA9IFN0cmluZyhmKS5yZXBsYWNlKGZvcm1hdFJlZ0V4cCwgZnVuY3Rpb24oeCkge1xuICAgIGlmICh4ID09PSAnJSUnKSByZXR1cm4gJyUnO1xuICAgIGlmIChpID49IGxlbikgcmV0dXJuIHg7XG4gICAgc3dpdGNoICh4KSB7XG4gICAgICBjYXNlICclcyc6IHJldHVybiBTdHJpbmcoYXJnc1tpKytdKTtcbiAgICAgIGNhc2UgJyVkJzogcmV0dXJuIE51bWJlcihhcmdzW2krK10pO1xuICAgICAgY2FzZSAnJWonOlxuICAgICAgICB0cnkge1xuICAgICAgICAgIHJldHVybiBKU09OLnN0cmluZ2lmeShhcmdzW2krK10pO1xuICAgICAgICB9IGNhdGNoIChfKSB7XG4gICAgICAgICAgcmV0dXJuICdbQ2lyY3VsYXJdJztcbiAgICAgICAgfVxuICAgICAgZGVmYXVsdDpcbiAgICAgICAgcmV0dXJuIHg7XG4gICAgfVxuICB9KTtcbiAgZm9yICh2YXIgeCA9IGFyZ3NbaV07IGkgPCBsZW47IHggPSBhcmdzWysraV0pIHtcbiAgICBpZiAoaXNOdWxsKHgpIHx8ICFpc09iamVjdCh4KSkge1xuICAgICAgc3RyICs9ICcgJyArIHg7XG4gICAgfSBlbHNlIHtcbiAgICAgIHN0ciArPSAnICcgKyBpbnNwZWN0KHgpO1xuICAgIH1cbiAgfVxuICByZXR1cm4gc3RyO1xufTtcblxuXG4vLyBNYXJrIHRoYXQgYSBtZXRob2Qgc2hvdWxkIG5vdCBiZSB1c2VkLlxuLy8gUmV0dXJucyBhIG1vZGlmaWVkIGZ1bmN0aW9uIHdoaWNoIHdhcm5zIG9uY2UgYnkgZGVmYXVsdC5cbi8vIElmIC0tbm8tZGVwcmVjYXRpb24gaXMgc2V0LCB0aGVuIGl0IGlzIGEgbm8tb3AuXG5leHBvcnRzLmRlcHJlY2F0ZSA9IGZ1bmN0aW9uKGZuLCBtc2cpIHtcbiAgaWYgKHR5cGVvZiBwcm9jZXNzICE9PSAndW5kZWZpbmVkJyAmJiBwcm9jZXNzLm5vRGVwcmVjYXRpb24gPT09IHRydWUpIHtcbiAgICByZXR1cm4gZm47XG4gIH1cblxuICAvLyBBbGxvdyBmb3IgZGVwcmVjYXRpbmcgdGhpbmdzIGluIHRoZSBwcm9jZXNzIG9mIHN0YXJ0aW5nIHVwLlxuICBpZiAodHlwZW9mIHByb2Nlc3MgPT09ICd1bmRlZmluZWQnKSB7XG4gICAgcmV0dXJuIGZ1bmN0aW9uKCkge1xuICAgICAgcmV0dXJuIGV4cG9ydHMuZGVwcmVjYXRlKGZuLCBtc2cpLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7XG4gICAgfTtcbiAgfVxuXG4gIHZhciB3YXJuZWQgPSBmYWxzZTtcbiAgZnVuY3Rpb24gZGVwcmVjYXRlZCgpIHtcbiAgICBpZiAoIXdhcm5lZCkge1xuICAgICAgaWYgKHByb2Nlc3MudGhyb3dEZXByZWNhdGlvbikge1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IobXNnKTtcbiAgICAgIH0gZWxzZSBpZiAocHJvY2Vzcy50cmFjZURlcHJlY2F0aW9uKSB7XG4gICAgICAgIGNvbnNvbGUudHJhY2UobXNnKTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIGNvbnNvbGUuZXJyb3IobXNnKTtcbiAgICAgIH1cbiAgICAgIHdhcm5lZCA9IHRydWU7XG4gICAgfVxuICAgIHJldHVybiBmbi5hcHBseSh0aGlzLCBhcmd1bWVudHMpO1xuICB9XG5cbiAgcmV0dXJuIGRlcHJlY2F0ZWQ7XG59O1xuXG5cbnZhciBkZWJ1Z3MgPSB7fTtcbnZhciBkZWJ1Z0VudlJlZ2V4ID0gL14kLztcblxuaWYgKHByb2Nlc3MuZW52Lk5PREVfREVCVUcpIHtcbiAgdmFyIGRlYnVnRW52ID0gcHJvY2Vzcy5lbnYuTk9ERV9ERUJVRztcbiAgZGVidWdFbnYgPSBkZWJ1Z0Vudi5yZXBsYWNlKC9bfFxcXFx7fSgpW1xcXV4kKz8uXS9nLCAnXFxcXCQmJylcbiAgICAucmVwbGFjZSgvXFwqL2csICcuKicpXG4gICAgLnJlcGxhY2UoLywvZywgJyR8XicpXG4gICAgLnRvVXBwZXJDYXNlKCk7XG4gIGRlYnVnRW52UmVnZXggPSBuZXcgUmVnRXhwKCdeJyArIGRlYnVnRW52ICsgJyQnLCAnaScpO1xufVxuZXhwb3J0cy5kZWJ1Z2xvZyA9IGZ1bmN0aW9uKHNldCkge1xuICBzZXQgPSBzZXQudG9VcHBlckNhc2UoKTtcbiAgaWYgKCFkZWJ1Z3Nbc2V0XSkge1xuICAgIGlmIChkZWJ1Z0VudlJlZ2V4LnRlc3Qoc2V0KSkge1xuICAgICAgdmFyIHBpZCA9IHByb2Nlc3MucGlkO1xuICAgICAgZGVidWdzW3NldF0gPSBmdW5jdGlvbigpIHtcbiAgICAgICAgdmFyIG1zZyA9IGV4cG9ydHMuZm9ybWF0LmFwcGx5KGV4cG9ydHMsIGFyZ3VtZW50cyk7XG4gICAgICAgIGNvbnNvbGUuZXJyb3IoJyVzICVkOiAlcycsIHNldCwgcGlkLCBtc2cpO1xuICAgICAgfTtcbiAgICB9IGVsc2Uge1xuICAgICAgZGVidWdzW3NldF0gPSBmdW5jdGlvbigpIHt9O1xuICAgIH1cbiAgfVxuICByZXR1cm4gZGVidWdzW3NldF07XG59O1xuXG5cbi8qKlxuICogRWNob3MgdGhlIHZhbHVlIG9mIGEgdmFsdWUuIFRyeXMgdG8gcHJpbnQgdGhlIHZhbHVlIG91dFxuICogaW4gdGhlIGJlc3Qgd2F5IHBvc3NpYmxlIGdpdmVuIHRoZSBkaWZmZXJlbnQgdHlwZXMuXG4gKlxuICogQHBhcmFtIHtPYmplY3R9IG9iaiBUaGUgb2JqZWN0IHRvIHByaW50IG91dC5cbiAqIEBwYXJhbSB7T2JqZWN0fSBvcHRzIE9wdGlvbmFsIG9wdGlvbnMgb2JqZWN0IHRoYXQgYWx0ZXJzIHRoZSBvdXRwdXQuXG4gKi9cbi8qIGxlZ2FjeTogb2JqLCBzaG93SGlkZGVuLCBkZXB0aCwgY29sb3JzKi9cbmZ1bmN0aW9uIGluc3BlY3Qob2JqLCBvcHRzKSB7XG4gIC8vIGRlZmF1bHQgb3B0aW9uc1xuICB2YXIgY3R4ID0ge1xuICAgIHNlZW46IFtdLFxuICAgIHN0eWxpemU6IHN0eWxpemVOb0NvbG9yXG4gIH07XG4gIC8vIGxlZ2FjeS4uLlxuICBpZiAoYXJndW1lbnRzLmxlbmd0aCA+PSAzKSBjdHguZGVwdGggPSBhcmd1bWVudHNbMl07XG4gIGlmIChhcmd1bWVudHMubGVuZ3RoID49IDQpIGN0eC5jb2xvcnMgPSBhcmd1bWVudHNbM107XG4gIGlmIChpc0Jvb2xlYW4ob3B0cykpIHtcbiAgICAvLyBsZWdhY3kuLi5cbiAgICBjdHguc2hvd0hpZGRlbiA9IG9wdHM7XG4gIH0gZWxzZSBpZiAob3B0cykge1xuICAgIC8vIGdvdCBhbiBcIm9wdGlvbnNcIiBvYmplY3RcbiAgICBleHBvcnRzLl9leHRlbmQoY3R4LCBvcHRzKTtcbiAgfVxuICAvLyBzZXQgZGVmYXVsdCBvcHRpb25zXG4gIGlmIChpc1VuZGVmaW5lZChjdHguc2hvd0hpZGRlbikpIGN0eC5zaG93SGlkZGVuID0gZmFsc2U7XG4gIGlmIChpc1VuZGVmaW5lZChjdHguZGVwdGgpKSBjdHguZGVwdGggPSAyO1xuICBpZiAoaXNVbmRlZmluZWQoY3R4LmNvbG9ycykpIGN0eC5jb2xvcnMgPSBmYWxzZTtcbiAgaWYgKGlzVW5kZWZpbmVkKGN0eC5jdXN0b21JbnNwZWN0KSkgY3R4LmN1c3RvbUluc3BlY3QgPSB0cnVlO1xuICBpZiAoY3R4LmNvbG9ycykgY3R4LnN0eWxpemUgPSBzdHlsaXplV2l0aENvbG9yO1xuICByZXR1cm4gZm9ybWF0VmFsdWUoY3R4LCBvYmosIGN0eC5kZXB0aCk7XG59XG5leHBvcnRzLmluc3BlY3QgPSBpbnNwZWN0O1xuXG5cbi8vIGh0dHA6Ly9lbi53aWtpcGVkaWEub3JnL3dpa2kvQU5TSV9lc2NhcGVfY29kZSNncmFwaGljc1xuaW5zcGVjdC5jb2xvcnMgPSB7XG4gICdib2xkJyA6IFsxLCAyMl0sXG4gICdpdGFsaWMnIDogWzMsIDIzXSxcbiAgJ3VuZGVybGluZScgOiBbNCwgMjRdLFxuICAnaW52ZXJzZScgOiBbNywgMjddLFxuICAnd2hpdGUnIDogWzM3LCAzOV0sXG4gICdncmV5JyA6IFs5MCwgMzldLFxuICAnYmxhY2snIDogWzMwLCAzOV0sXG4gICdibHVlJyA6IFszNCwgMzldLFxuICAnY3lhbicgOiBbMzYsIDM5XSxcbiAgJ2dyZWVuJyA6IFszMiwgMzldLFxuICAnbWFnZW50YScgOiBbMzUsIDM5XSxcbiAgJ3JlZCcgOiBbMzEsIDM5XSxcbiAgJ3llbGxvdycgOiBbMzMsIDM5XVxufTtcblxuLy8gRG9uJ3QgdXNlICdibHVlJyBub3QgdmlzaWJsZSBvbiBjbWQuZXhlXG5pbnNwZWN0LnN0eWxlcyA9IHtcbiAgJ3NwZWNpYWwnOiAnY3lhbicsXG4gICdudW1iZXInOiAneWVsbG93JyxcbiAgJ2Jvb2xlYW4nOiAneWVsbG93JyxcbiAgJ3VuZGVmaW5lZCc6ICdncmV5JyxcbiAgJ251bGwnOiAnYm9sZCcsXG4gICdzdHJpbmcnOiAnZ3JlZW4nLFxuICAnZGF0ZSc6ICdtYWdlbnRhJyxcbiAgLy8gXCJuYW1lXCI6IGludGVudGlvbmFsbHkgbm90IHN0eWxpbmdcbiAgJ3JlZ2V4cCc6ICdyZWQnXG59O1xuXG5cbmZ1bmN0aW9uIHN0eWxpemVXaXRoQ29sb3Ioc3RyLCBzdHlsZVR5cGUpIHtcbiAgdmFyIHN0eWxlID0gaW5zcGVjdC5zdHlsZXNbc3R5bGVUeXBlXTtcblxuICBpZiAoc3R5bGUpIHtcbiAgICByZXR1cm4gJ1xcdTAwMWJbJyArIGluc3BlY3QuY29sb3JzW3N0eWxlXVswXSArICdtJyArIHN0ciArXG4gICAgICAgICAgICdcXHUwMDFiWycgKyBpbnNwZWN0LmNvbG9yc1tzdHlsZV1bMV0gKyAnbSc7XG4gIH0gZWxzZSB7XG4gICAgcmV0dXJuIHN0cjtcbiAgfVxufVxuXG5cbmZ1bmN0aW9uIHN0eWxpemVOb0NvbG9yKHN0ciwgc3R5bGVUeXBlKSB7XG4gIHJldHVybiBzdHI7XG59XG5cblxuZnVuY3Rpb24gYXJyYXlUb0hhc2goYXJyYXkpIHtcbiAgdmFyIGhhc2ggPSB7fTtcblxuICBhcnJheS5mb3JFYWNoKGZ1bmN0aW9uKHZhbCwgaWR4KSB7XG4gICAgaGFzaFt2YWxdID0gdHJ1ZTtcbiAgfSk7XG5cbiAgcmV0dXJuIGhhc2g7XG59XG5cblxuZnVuY3Rpb24gZm9ybWF0VmFsdWUoY3R4LCB2YWx1ZSwgcmVjdXJzZVRpbWVzKSB7XG4gIC8vIFByb3ZpZGUgYSBob29rIGZvciB1c2VyLXNwZWNpZmllZCBpbnNwZWN0IGZ1bmN0aW9ucy5cbiAgLy8gQ2hlY2sgdGhhdCB2YWx1ZSBpcyBhbiBvYmplY3Qgd2l0aCBhbiBpbnNwZWN0IGZ1bmN0aW9uIG9uIGl0XG4gIGlmIChjdHguY3VzdG9tSW5zcGVjdCAmJlxuICAgICAgdmFsdWUgJiZcbiAgICAgIGlzRnVuY3Rpb24odmFsdWUuaW5zcGVjdCkgJiZcbiAgICAgIC8vIEZpbHRlciBvdXQgdGhlIHV0aWwgbW9kdWxlLCBpdCdzIGluc3BlY3QgZnVuY3Rpb24gaXMgc3BlY2lhbFxuICAgICAgdmFsdWUuaW5zcGVjdCAhPT0gZXhwb3J0cy5pbnNwZWN0ICYmXG4gICAgICAvLyBBbHNvIGZpbHRlciBvdXQgYW55IHByb3RvdHlwZSBvYmplY3RzIHVzaW5nIHRoZSBjaXJjdWxhciBjaGVjay5cbiAgICAgICEodmFsdWUuY29uc3RydWN0b3IgJiYgdmFsdWUuY29uc3RydWN0b3IucHJvdG90eXBlID09PSB2YWx1ZSkpIHtcbiAgICB2YXIgcmV0ID0gdmFsdWUuaW5zcGVjdChyZWN1cnNlVGltZXMsIGN0eCk7XG4gICAgaWYgKCFpc1N0cmluZyhyZXQpKSB7XG4gICAgICByZXQgPSBmb3JtYXRWYWx1ZShjdHgsIHJldCwgcmVjdXJzZVRpbWVzKTtcbiAgICB9XG4gICAgcmV0dXJuIHJldDtcbiAgfVxuXG4gIC8vIFByaW1pdGl2ZSB0eXBlcyBjYW5ub3QgaGF2ZSBwcm9wZXJ0aWVzXG4gIHZhciBwcmltaXRpdmUgPSBmb3JtYXRQcmltaXRpdmUoY3R4LCB2YWx1ZSk7XG4gIGlmIChwcmltaXRpdmUpIHtcbiAgICByZXR1cm4gcHJpbWl0aXZlO1xuICB9XG5cbiAgLy8gTG9vayB1cCB0aGUga2V5cyBvZiB0aGUgb2JqZWN0LlxuICB2YXIga2V5cyA9IE9iamVjdC5rZXlzKHZhbHVlKTtcbiAgdmFyIHZpc2libGVLZXlzID0gYXJyYXlUb0hhc2goa2V5cyk7XG5cbiAgaWYgKGN0eC5zaG93SGlkZGVuKSB7XG4gICAga2V5cyA9IE9iamVjdC5nZXRPd25Qcm9wZXJ0eU5hbWVzKHZhbHVlKTtcbiAgfVxuXG4gIC8vIElFIGRvZXNuJ3QgbWFrZSBlcnJvciBmaWVsZHMgbm9uLWVudW1lcmFibGVcbiAgLy8gaHR0cDovL21zZG4ubWljcm9zb2Z0LmNvbS9lbi11cy9saWJyYXJ5L2llL2R3dzUyc2J0KHY9dnMuOTQpLmFzcHhcbiAgaWYgKGlzRXJyb3IodmFsdWUpXG4gICAgICAmJiAoa2V5cy5pbmRleE9mKCdtZXNzYWdlJykgPj0gMCB8fCBrZXlzLmluZGV4T2YoJ2Rlc2NyaXB0aW9uJykgPj0gMCkpIHtcbiAgICByZXR1cm4gZm9ybWF0RXJyb3IodmFsdWUpO1xuICB9XG5cbiAgLy8gU29tZSB0eXBlIG9mIG9iamVjdCB3aXRob3V0IHByb3BlcnRpZXMgY2FuIGJlIHNob3J0Y3V0dGVkLlxuICBpZiAoa2V5cy5sZW5ndGggPT09IDApIHtcbiAgICBpZiAoaXNGdW5jdGlvbih2YWx1ZSkpIHtcbiAgICAgIHZhciBuYW1lID0gdmFsdWUubmFtZSA/ICc6ICcgKyB2YWx1ZS5uYW1lIDogJyc7XG4gICAgICByZXR1cm4gY3R4LnN0eWxpemUoJ1tGdW5jdGlvbicgKyBuYW1lICsgJ10nLCAnc3BlY2lhbCcpO1xuICAgIH1cbiAgICBpZiAoaXNSZWdFeHAodmFsdWUpKSB7XG4gICAgICByZXR1cm4gY3R4LnN0eWxpemUoUmVnRXhwLnByb3RvdHlwZS50b1N0cmluZy5jYWxsKHZhbHVlKSwgJ3JlZ2V4cCcpO1xuICAgIH1cbiAgICBpZiAoaXNEYXRlKHZhbHVlKSkge1xuICAgICAgcmV0dXJuIGN0eC5zdHlsaXplKERhdGUucHJvdG90eXBlLnRvU3RyaW5nLmNhbGwodmFsdWUpLCAnZGF0ZScpO1xuICAgIH1cbiAgICBpZiAoaXNFcnJvcih2YWx1ZSkpIHtcbiAgICAgIHJldHVybiBmb3JtYXRFcnJvcih2YWx1ZSk7XG4gICAgfVxuICB9XG5cbiAgdmFyIGJhc2UgPSAnJywgYXJyYXkgPSBmYWxzZSwgYnJhY2VzID0gWyd7JywgJ30nXTtcblxuICAvLyBNYWtlIEFycmF5IHNheSB0aGF0IHRoZXkgYXJlIEFycmF5XG4gIGlmIChpc0FycmF5KHZhbHVlKSkge1xuICAgIGFycmF5ID0gdHJ1ZTtcbiAgICBicmFjZXMgPSBbJ1snLCAnXSddO1xuICB9XG5cbiAgLy8gTWFrZSBmdW5jdGlvbnMgc2F5IHRoYXQgdGhleSBhcmUgZnVuY3Rpb25zXG4gIGlmIChpc0Z1bmN0aW9uKHZhbHVlKSkge1xuICAgIHZhciBuID0gdmFsdWUubmFtZSA/ICc6ICcgKyB2YWx1ZS5uYW1lIDogJyc7XG4gICAgYmFzZSA9ICcgW0Z1bmN0aW9uJyArIG4gKyAnXSc7XG4gIH1cblxuICAvLyBNYWtlIFJlZ0V4cHMgc2F5IHRoYXQgdGhleSBhcmUgUmVnRXhwc1xuICBpZiAoaXNSZWdFeHAodmFsdWUpKSB7XG4gICAgYmFzZSA9ICcgJyArIFJlZ0V4cC5wcm90b3R5cGUudG9TdHJpbmcuY2FsbCh2YWx1ZSk7XG4gIH1cblxuICAvLyBNYWtlIGRhdGVzIHdpdGggcHJvcGVydGllcyBmaXJzdCBzYXkgdGhlIGRhdGVcbiAgaWYgKGlzRGF0ZSh2YWx1ZSkpIHtcbiAgICBiYXNlID0gJyAnICsgRGF0ZS5wcm90b3R5cGUudG9VVENTdHJpbmcuY2FsbCh2YWx1ZSk7XG4gIH1cblxuICAvLyBNYWtlIGVycm9yIHdpdGggbWVzc2FnZSBmaXJzdCBzYXkgdGhlIGVycm9yXG4gIGlmIChpc0Vycm9yKHZhbHVlKSkge1xuICAgIGJhc2UgPSAnICcgKyBmb3JtYXRFcnJvcih2YWx1ZSk7XG4gIH1cblxuICBpZiAoa2V5cy5sZW5ndGggPT09IDAgJiYgKCFhcnJheSB8fCB2YWx1ZS5sZW5ndGggPT0gMCkpIHtcbiAgICByZXR1cm4gYnJhY2VzWzBdICsgYmFzZSArIGJyYWNlc1sxXTtcbiAgfVxuXG4gIGlmIChyZWN1cnNlVGltZXMgPCAwKSB7XG4gICAgaWYgKGlzUmVnRXhwKHZhbHVlKSkge1xuICAgICAgcmV0dXJuIGN0eC5zdHlsaXplKFJlZ0V4cC5wcm90b3R5cGUudG9TdHJpbmcuY2FsbCh2YWx1ZSksICdyZWdleHAnKTtcbiAgICB9IGVsc2Uge1xuICAgICAgcmV0dXJuIGN0eC5zdHlsaXplKCdbT2JqZWN0XScsICdzcGVjaWFsJyk7XG4gICAgfVxuICB9XG5cbiAgY3R4LnNlZW4ucHVzaCh2YWx1ZSk7XG5cbiAgdmFyIG91dHB1dDtcbiAgaWYgKGFycmF5KSB7XG4gICAgb3V0cHV0ID0gZm9ybWF0QXJyYXkoY3R4LCB2YWx1ZSwgcmVjdXJzZVRpbWVzLCB2aXNpYmxlS2V5cywga2V5cyk7XG4gIH0gZWxzZSB7XG4gICAgb3V0cHV0ID0ga2V5cy5tYXAoZnVuY3Rpb24oa2V5KSB7XG4gICAgICByZXR1cm4gZm9ybWF0UHJvcGVydHkoY3R4LCB2YWx1ZSwgcmVjdXJzZVRpbWVzLCB2aXNpYmxlS2V5cywga2V5LCBhcnJheSk7XG4gICAgfSk7XG4gIH1cblxuICBjdHguc2Vlbi5wb3AoKTtcblxuICByZXR1cm4gcmVkdWNlVG9TaW5nbGVTdHJpbmcob3V0cHV0LCBiYXNlLCBicmFjZXMpO1xufVxuXG5cbmZ1bmN0aW9uIGZvcm1hdFByaW1pdGl2ZShjdHgsIHZhbHVlKSB7XG4gIGlmIChpc1VuZGVmaW5lZCh2YWx1ZSkpXG4gICAgcmV0dXJuIGN0eC5zdHlsaXplKCd1bmRlZmluZWQnLCAndW5kZWZpbmVkJyk7XG4gIGlmIChpc1N0cmluZyh2YWx1ZSkpIHtcbiAgICB2YXIgc2ltcGxlID0gJ1xcJycgKyBKU09OLnN0cmluZ2lmeSh2YWx1ZSkucmVwbGFjZSgvXlwifFwiJC9nLCAnJylcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC5yZXBsYWNlKC8nL2csIFwiXFxcXCdcIilcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC5yZXBsYWNlKC9cXFxcXCIvZywgJ1wiJykgKyAnXFwnJztcbiAgICByZXR1cm4gY3R4LnN0eWxpemUoc2ltcGxlLCAnc3RyaW5nJyk7XG4gIH1cbiAgaWYgKGlzTnVtYmVyKHZhbHVlKSlcbiAgICByZXR1cm4gY3R4LnN0eWxpemUoJycgKyB2YWx1ZSwgJ251bWJlcicpO1xuICBpZiAoaXNCb29sZWFuKHZhbHVlKSlcbiAgICByZXR1cm4gY3R4LnN0eWxpemUoJycgKyB2YWx1ZSwgJ2Jvb2xlYW4nKTtcbiAgLy8gRm9yIHNvbWUgcmVhc29uIHR5cGVvZiBudWxsIGlzIFwib2JqZWN0XCIsIHNvIHNwZWNpYWwgY2FzZSBoZXJlLlxuICBpZiAoaXNOdWxsKHZhbHVlKSlcbiAgICByZXR1cm4gY3R4LnN0eWxpemUoJ251bGwnLCAnbnVsbCcpO1xufVxuXG5cbmZ1bmN0aW9uIGZvcm1hdEVycm9yKHZhbHVlKSB7XG4gIHJldHVybiAnWycgKyBFcnJvci5wcm90b3R5cGUudG9TdHJpbmcuY2FsbCh2YWx1ZSkgKyAnXSc7XG59XG5cblxuZnVuY3Rpb24gZm9ybWF0QXJyYXkoY3R4LCB2YWx1ZSwgcmVjdXJzZVRpbWVzLCB2aXNpYmxlS2V5cywga2V5cykge1xuICB2YXIgb3V0cHV0ID0gW107XG4gIGZvciAodmFyIGkgPSAwLCBsID0gdmFsdWUubGVuZ3RoOyBpIDwgbDsgKytpKSB7XG4gICAgaWYgKGhhc093blByb3BlcnR5KHZhbHVlLCBTdHJpbmcoaSkpKSB7XG4gICAgICBvdXRwdXQucHVzaChmb3JtYXRQcm9wZXJ0eShjdHgsIHZhbHVlLCByZWN1cnNlVGltZXMsIHZpc2libGVLZXlzLFxuICAgICAgICAgIFN0cmluZyhpKSwgdHJ1ZSkpO1xuICAgIH0gZWxzZSB7XG4gICAgICBvdXRwdXQucHVzaCgnJyk7XG4gICAgfVxuICB9XG4gIGtleXMuZm9yRWFjaChmdW5jdGlvbihrZXkpIHtcbiAgICBpZiAoIWtleS5tYXRjaCgvXlxcZCskLykpIHtcbiAgICAgIG91dHB1dC5wdXNoKGZvcm1hdFByb3BlcnR5KGN0eCwgdmFsdWUsIHJlY3Vyc2VUaW1lcywgdmlzaWJsZUtleXMsXG4gICAgICAgICAga2V5LCB0cnVlKSk7XG4gICAgfVxuICB9KTtcbiAgcmV0dXJuIG91dHB1dDtcbn1cblxuXG5mdW5jdGlvbiBmb3JtYXRQcm9wZXJ0eShjdHgsIHZhbHVlLCByZWN1cnNlVGltZXMsIHZpc2libGVLZXlzLCBrZXksIGFycmF5KSB7XG4gIHZhciBuYW1lLCBzdHIsIGRlc2M7XG4gIGRlc2MgPSBPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKHZhbHVlLCBrZXkpIHx8IHsgdmFsdWU6IHZhbHVlW2tleV0gfTtcbiAgaWYgKGRlc2MuZ2V0KSB7XG4gICAgaWYgKGRlc2Muc2V0KSB7XG4gICAgICBzdHIgPSBjdHguc3R5bGl6ZSgnW0dldHRlci9TZXR0ZXJdJywgJ3NwZWNpYWwnKTtcbiAgICB9IGVsc2Uge1xuICAgICAgc3RyID0gY3R4LnN0eWxpemUoJ1tHZXR0ZXJdJywgJ3NwZWNpYWwnKTtcbiAgICB9XG4gIH0gZWxzZSB7XG4gICAgaWYgKGRlc2Muc2V0KSB7XG4gICAgICBzdHIgPSBjdHguc3R5bGl6ZSgnW1NldHRlcl0nLCAnc3BlY2lhbCcpO1xuICAgIH1cbiAgfVxuICBpZiAoIWhhc093blByb3BlcnR5KHZpc2libGVLZXlzLCBrZXkpKSB7XG4gICAgbmFtZSA9ICdbJyArIGtleSArICddJztcbiAgfVxuICBpZiAoIXN0cikge1xuICAgIGlmIChjdHguc2Vlbi5pbmRleE9mKGRlc2MudmFsdWUpIDwgMCkge1xuICAgICAgaWYgKGlzTnVsbChyZWN1cnNlVGltZXMpKSB7XG4gICAgICAgIHN0ciA9IGZvcm1hdFZhbHVlKGN0eCwgZGVzYy52YWx1ZSwgbnVsbCk7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBzdHIgPSBmb3JtYXRWYWx1ZShjdHgsIGRlc2MudmFsdWUsIHJlY3Vyc2VUaW1lcyAtIDEpO1xuICAgICAgfVxuICAgICAgaWYgKHN0ci5pbmRleE9mKCdcXG4nKSA+IC0xKSB7XG4gICAgICAgIGlmIChhcnJheSkge1xuICAgICAgICAgIHN0ciA9IHN0ci5zcGxpdCgnXFxuJykubWFwKGZ1bmN0aW9uKGxpbmUpIHtcbiAgICAgICAgICAgIHJldHVybiAnICAnICsgbGluZTtcbiAgICAgICAgICB9KS5qb2luKCdcXG4nKS5zdWJzdHIoMik7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgc3RyID0gJ1xcbicgKyBzdHIuc3BsaXQoJ1xcbicpLm1hcChmdW5jdGlvbihsaW5lKSB7XG4gICAgICAgICAgICByZXR1cm4gJyAgICcgKyBsaW5lO1xuICAgICAgICAgIH0pLmpvaW4oJ1xcbicpO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfSBlbHNlIHtcbiAgICAgIHN0ciA9IGN0eC5zdHlsaXplKCdbQ2lyY3VsYXJdJywgJ3NwZWNpYWwnKTtcbiAgICB9XG4gIH1cbiAgaWYgKGlzVW5kZWZpbmVkKG5hbWUpKSB7XG4gICAgaWYgKGFycmF5ICYmIGtleS5tYXRjaCgvXlxcZCskLykpIHtcbiAgICAgIHJldHVybiBzdHI7XG4gICAgfVxuICAgIG5hbWUgPSBKU09OLnN0cmluZ2lmeSgnJyArIGtleSk7XG4gICAgaWYgKG5hbWUubWF0Y2goL15cIihbYS16QS1aX11bYS16QS1aXzAtOV0qKVwiJC8pKSB7XG4gICAgICBuYW1lID0gbmFtZS5zdWJzdHIoMSwgbmFtZS5sZW5ndGggLSAyKTtcbiAgICAgIG5hbWUgPSBjdHguc3R5bGl6ZShuYW1lLCAnbmFtZScpO1xuICAgIH0gZWxzZSB7XG4gICAgICBuYW1lID0gbmFtZS5yZXBsYWNlKC8nL2csIFwiXFxcXCdcIilcbiAgICAgICAgICAgICAgICAgLnJlcGxhY2UoL1xcXFxcIi9nLCAnXCInKVxuICAgICAgICAgICAgICAgICAucmVwbGFjZSgvKF5cInxcIiQpL2csIFwiJ1wiKTtcbiAgICAgIG5hbWUgPSBjdHguc3R5bGl6ZShuYW1lLCAnc3RyaW5nJyk7XG4gICAgfVxuICB9XG5cbiAgcmV0dXJuIG5hbWUgKyAnOiAnICsgc3RyO1xufVxuXG5cbmZ1bmN0aW9uIHJlZHVjZVRvU2luZ2xlU3RyaW5nKG91dHB1dCwgYmFzZSwgYnJhY2VzKSB7XG4gIHZhciBudW1MaW5lc0VzdCA9IDA7XG4gIHZhciBsZW5ndGggPSBvdXRwdXQucmVkdWNlKGZ1bmN0aW9uKHByZXYsIGN1cikge1xuICAgIG51bUxpbmVzRXN0Kys7XG4gICAgaWYgKGN1ci5pbmRleE9mKCdcXG4nKSA+PSAwKSBudW1MaW5lc0VzdCsrO1xuICAgIHJldHVybiBwcmV2ICsgY3VyLnJlcGxhY2UoL1xcdTAwMWJcXFtcXGRcXGQ/bS9nLCAnJykubGVuZ3RoICsgMTtcbiAgfSwgMCk7XG5cbiAgaWYgKGxlbmd0aCA+IDYwKSB7XG4gICAgcmV0dXJuIGJyYWNlc1swXSArXG4gICAgICAgICAgIChiYXNlID09PSAnJyA/ICcnIDogYmFzZSArICdcXG4gJykgK1xuICAgICAgICAgICAnICcgK1xuICAgICAgICAgICBvdXRwdXQuam9pbignLFxcbiAgJykgK1xuICAgICAgICAgICAnICcgK1xuICAgICAgICAgICBicmFjZXNbMV07XG4gIH1cblxuICByZXR1cm4gYnJhY2VzWzBdICsgYmFzZSArICcgJyArIG91dHB1dC5qb2luKCcsICcpICsgJyAnICsgYnJhY2VzWzFdO1xufVxuXG5cbi8vIE5PVEU6IFRoZXNlIHR5cGUgY2hlY2tpbmcgZnVuY3Rpb25zIGludGVudGlvbmFsbHkgZG9uJ3QgdXNlIGBpbnN0YW5jZW9mYFxuLy8gYmVjYXVzZSBpdCBpcyBmcmFnaWxlIGFuZCBjYW4gYmUgZWFzaWx5IGZha2VkIHdpdGggYE9iamVjdC5jcmVhdGUoKWAuXG5leHBvcnRzLnR5cGVzID0gcmVxdWlyZSgnLi9zdXBwb3J0L3R5cGVzJyk7XG5cbmZ1bmN0aW9uIGlzQXJyYXkoYXIpIHtcbiAgcmV0dXJuIEFycmF5LmlzQXJyYXkoYXIpO1xufVxuZXhwb3J0cy5pc0FycmF5ID0gaXNBcnJheTtcblxuZnVuY3Rpb24gaXNCb29sZWFuKGFyZykge1xuICByZXR1cm4gdHlwZW9mIGFyZyA9PT0gJ2Jvb2xlYW4nO1xufVxuZXhwb3J0cy5pc0Jvb2xlYW4gPSBpc0Jvb2xlYW47XG5cbmZ1bmN0aW9uIGlzTnVsbChhcmcpIHtcbiAgcmV0dXJuIGFyZyA9PT0gbnVsbDtcbn1cbmV4cG9ydHMuaXNOdWxsID0gaXNOdWxsO1xuXG5mdW5jdGlvbiBpc051bGxPclVuZGVmaW5lZChhcmcpIHtcbiAgcmV0dXJuIGFyZyA9PSBudWxsO1xufVxuZXhwb3J0cy5pc051bGxPclVuZGVmaW5lZCA9IGlzTnVsbE9yVW5kZWZpbmVkO1xuXG5mdW5jdGlvbiBpc051bWJlcihhcmcpIHtcbiAgcmV0dXJuIHR5cGVvZiBhcmcgPT09ICdudW1iZXInO1xufVxuZXhwb3J0cy5pc051bWJlciA9IGlzTnVtYmVyO1xuXG5mdW5jdGlvbiBpc1N0cmluZyhhcmcpIHtcbiAgcmV0dXJuIHR5cGVvZiBhcmcgPT09ICdzdHJpbmcnO1xufVxuZXhwb3J0cy5pc1N0cmluZyA9IGlzU3RyaW5nO1xuXG5mdW5jdGlvbiBpc1N5bWJvbChhcmcpIHtcbiAgcmV0dXJuIHR5cGVvZiBhcmcgPT09ICdzeW1ib2wnO1xufVxuZXhwb3J0cy5pc1N5bWJvbCA9IGlzU3ltYm9sO1xuXG5mdW5jdGlvbiBpc1VuZGVmaW5lZChhcmcpIHtcbiAgcmV0dXJuIGFyZyA9PT0gdm9pZCAwO1xufVxuZXhwb3J0cy5pc1VuZGVmaW5lZCA9IGlzVW5kZWZpbmVkO1xuXG5mdW5jdGlvbiBpc1JlZ0V4cChyZSkge1xuICByZXR1cm4gaXNPYmplY3QocmUpICYmIG9iamVjdFRvU3RyaW5nKHJlKSA9PT0gJ1tvYmplY3QgUmVnRXhwXSc7XG59XG5leHBvcnRzLmlzUmVnRXhwID0gaXNSZWdFeHA7XG5leHBvcnRzLnR5cGVzLmlzUmVnRXhwID0gaXNSZWdFeHA7XG5cbmZ1bmN0aW9uIGlzT2JqZWN0KGFyZykge1xuICByZXR1cm4gdHlwZW9mIGFyZyA9PT0gJ29iamVjdCcgJiYgYXJnICE9PSBudWxsO1xufVxuZXhwb3J0cy5pc09iamVjdCA9IGlzT2JqZWN0O1xuXG5mdW5jdGlvbiBpc0RhdGUoZCkge1xuICByZXR1cm4gaXNPYmplY3QoZCkgJiYgb2JqZWN0VG9TdHJpbmcoZCkgPT09ICdbb2JqZWN0IERhdGVdJztcbn1cbmV4cG9ydHMuaXNEYXRlID0gaXNEYXRlO1xuZXhwb3J0cy50eXBlcy5pc0RhdGUgPSBpc0RhdGU7XG5cbmZ1bmN0aW9uIGlzRXJyb3IoZSkge1xuICByZXR1cm4gaXNPYmplY3QoZSkgJiZcbiAgICAgIChvYmplY3RUb1N0cmluZyhlKSA9PT0gJ1tvYmplY3QgRXJyb3JdJyB8fCBlIGluc3RhbmNlb2YgRXJyb3IpO1xufVxuZXhwb3J0cy5pc0Vycm9yID0gaXNFcnJvcjtcbmV4cG9ydHMudHlwZXMuaXNOYXRpdmVFcnJvciA9IGlzRXJyb3I7XG5cbmZ1bmN0aW9uIGlzRnVuY3Rpb24oYXJnKSB7XG4gIHJldHVybiB0eXBlb2YgYXJnID09PSAnZnVuY3Rpb24nO1xufVxuZXhwb3J0cy5pc0Z1bmN0aW9uID0gaXNGdW5jdGlvbjtcblxuZnVuY3Rpb24gaXNQcmltaXRpdmUoYXJnKSB7XG4gIHJldHVybiBhcmcgPT09IG51bGwgfHxcbiAgICAgICAgIHR5cGVvZiBhcmcgPT09ICdib29sZWFuJyB8fFxuICAgICAgICAgdHlwZW9mIGFyZyA9PT0gJ251bWJlcicgfHxcbiAgICAgICAgIHR5cGVvZiBhcmcgPT09ICdzdHJpbmcnIHx8XG4gICAgICAgICB0eXBlb2YgYXJnID09PSAnc3ltYm9sJyB8fCAgLy8gRVM2IHN5bWJvbFxuICAgICAgICAgdHlwZW9mIGFyZyA9PT0gJ3VuZGVmaW5lZCc7XG59XG5leHBvcnRzLmlzUHJpbWl0aXZlID0gaXNQcmltaXRpdmU7XG5cbmV4cG9ydHMuaXNCdWZmZXIgPSByZXF1aXJlKCcuL3N1cHBvcnQvaXNCdWZmZXInKTtcblxuZnVuY3Rpb24gb2JqZWN0VG9TdHJpbmcobykge1xuICByZXR1cm4gT2JqZWN0LnByb3RvdHlwZS50b1N0cmluZy5jYWxsKG8pO1xufVxuXG5cbmZ1bmN0aW9uIHBhZChuKSB7XG4gIHJldHVybiBuIDwgMTAgPyAnMCcgKyBuLnRvU3RyaW5nKDEwKSA6IG4udG9TdHJpbmcoMTApO1xufVxuXG5cbnZhciBtb250aHMgPSBbJ0phbicsICdGZWInLCAnTWFyJywgJ0FwcicsICdNYXknLCAnSnVuJywgJ0p1bCcsICdBdWcnLCAnU2VwJyxcbiAgICAgICAgICAgICAgJ09jdCcsICdOb3YnLCAnRGVjJ107XG5cbi8vIDI2IEZlYiAxNjoxOTozNFxuZnVuY3Rpb24gdGltZXN0YW1wKCkge1xuICB2YXIgZCA9IG5ldyBEYXRlKCk7XG4gIHZhciB0aW1lID0gW3BhZChkLmdldEhvdXJzKCkpLFxuICAgICAgICAgICAgICBwYWQoZC5nZXRNaW51dGVzKCkpLFxuICAgICAgICAgICAgICBwYWQoZC5nZXRTZWNvbmRzKCkpXS5qb2luKCc6Jyk7XG4gIHJldHVybiBbZC5nZXREYXRlKCksIG1vbnRoc1tkLmdldE1vbnRoKCldLCB0aW1lXS5qb2luKCcgJyk7XG59XG5cblxuLy8gbG9nIGlzIGp1c3QgYSB0aGluIHdyYXBwZXIgdG8gY29uc29sZS5sb2cgdGhhdCBwcmVwZW5kcyBhIHRpbWVzdGFtcFxuZXhwb3J0cy5sb2cgPSBmdW5jdGlvbigpIHtcbiAgY29uc29sZS5sb2coJyVzIC0gJXMnLCB0aW1lc3RhbXAoKSwgZXhwb3J0cy5mb3JtYXQuYXBwbHkoZXhwb3J0cywgYXJndW1lbnRzKSk7XG59O1xuXG5cbi8qKlxuICogSW5oZXJpdCB0aGUgcHJvdG90eXBlIG1ldGhvZHMgZnJvbSBvbmUgY29uc3RydWN0b3IgaW50byBhbm90aGVyLlxuICpcbiAqIFRoZSBGdW5jdGlvbi5wcm90b3R5cGUuaW5oZXJpdHMgZnJvbSBsYW5nLmpzIHJld3JpdHRlbiBhcyBhIHN0YW5kYWxvbmVcbiAqIGZ1bmN0aW9uIChub3Qgb24gRnVuY3Rpb24ucHJvdG90eXBlKS4gTk9URTogSWYgdGhpcyBmaWxlIGlzIHRvIGJlIGxvYWRlZFxuICogZHVyaW5nIGJvb3RzdHJhcHBpbmcgdGhpcyBmdW5jdGlvbiBuZWVkcyB0byBiZSByZXdyaXR0ZW4gdXNpbmcgc29tZSBuYXRpdmVcbiAqIGZ1bmN0aW9ucyBhcyBwcm90b3R5cGUgc2V0dXAgdXNpbmcgbm9ybWFsIEphdmFTY3JpcHQgZG9lcyBub3Qgd29yayBhc1xuICogZXhwZWN0ZWQgZHVyaW5nIGJvb3RzdHJhcHBpbmcgKHNlZSBtaXJyb3IuanMgaW4gcjExNDkwMykuXG4gKlxuICogQHBhcmFtIHtmdW5jdGlvbn0gY3RvciBDb25zdHJ1Y3RvciBmdW5jdGlvbiB3aGljaCBuZWVkcyB0byBpbmhlcml0IHRoZVxuICogICAgIHByb3RvdHlwZS5cbiAqIEBwYXJhbSB7ZnVuY3Rpb259IHN1cGVyQ3RvciBDb25zdHJ1Y3RvciBmdW5jdGlvbiB0byBpbmhlcml0IHByb3RvdHlwZSBmcm9tLlxuICovXG5leHBvcnRzLmluaGVyaXRzID0gcmVxdWlyZSgnaW5oZXJpdHMnKTtcblxuZXhwb3J0cy5fZXh0ZW5kID0gZnVuY3Rpb24ob3JpZ2luLCBhZGQpIHtcbiAgLy8gRG9uJ3QgZG8gYW55dGhpbmcgaWYgYWRkIGlzbid0IGFuIG9iamVjdFxuICBpZiAoIWFkZCB8fCAhaXNPYmplY3QoYWRkKSkgcmV0dXJuIG9yaWdpbjtcblxuICB2YXIga2V5cyA9IE9iamVjdC5rZXlzKGFkZCk7XG4gIHZhciBpID0ga2V5cy5sZW5ndGg7XG4gIHdoaWxlIChpLS0pIHtcbiAgICBvcmlnaW5ba2V5c1tpXV0gPSBhZGRba2V5c1tpXV07XG4gIH1cbiAgcmV0dXJuIG9yaWdpbjtcbn07XG5cbmZ1bmN0aW9uIGhhc093blByb3BlcnR5KG9iaiwgcHJvcCkge1xuICByZXR1cm4gT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKG9iaiwgcHJvcCk7XG59XG5cbnZhciBrQ3VzdG9tUHJvbWlzaWZpZWRTeW1ib2wgPSB0eXBlb2YgU3ltYm9sICE9PSAndW5kZWZpbmVkJyA/IFN5bWJvbCgndXRpbC5wcm9taXNpZnkuY3VzdG9tJykgOiB1bmRlZmluZWQ7XG5cbmV4cG9ydHMucHJvbWlzaWZ5ID0gZnVuY3Rpb24gcHJvbWlzaWZ5KG9yaWdpbmFsKSB7XG4gIGlmICh0eXBlb2Ygb3JpZ2luYWwgIT09ICdmdW5jdGlvbicpXG4gICAgdGhyb3cgbmV3IFR5cGVFcnJvcignVGhlIFwib3JpZ2luYWxcIiBhcmd1bWVudCBtdXN0IGJlIG9mIHR5cGUgRnVuY3Rpb24nKTtcblxuICBpZiAoa0N1c3RvbVByb21pc2lmaWVkU3ltYm9sICYmIG9yaWdpbmFsW2tDdXN0b21Qcm9taXNpZmllZFN5bWJvbF0pIHtcbiAgICB2YXIgZm4gPSBvcmlnaW5hbFtrQ3VzdG9tUHJvbWlzaWZpZWRTeW1ib2xdO1xuICAgIGlmICh0eXBlb2YgZm4gIT09ICdmdW5jdGlvbicpIHtcbiAgICAgIHRocm93IG5ldyBUeXBlRXJyb3IoJ1RoZSBcInV0aWwucHJvbWlzaWZ5LmN1c3RvbVwiIGFyZ3VtZW50IG11c3QgYmUgb2YgdHlwZSBGdW5jdGlvbicpO1xuICAgIH1cbiAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkoZm4sIGtDdXN0b21Qcm9taXNpZmllZFN5bWJvbCwge1xuICAgICAgdmFsdWU6IGZuLCBlbnVtZXJhYmxlOiBmYWxzZSwgd3JpdGFibGU6IGZhbHNlLCBjb25maWd1cmFibGU6IHRydWVcbiAgICB9KTtcbiAgICByZXR1cm4gZm47XG4gIH1cblxuICBmdW5jdGlvbiBmbigpIHtcbiAgICB2YXIgcHJvbWlzZVJlc29sdmUsIHByb21pc2VSZWplY3Q7XG4gICAgdmFyIHByb21pc2UgPSBuZXcgUHJvbWlzZShmdW5jdGlvbiAocmVzb2x2ZSwgcmVqZWN0KSB7XG4gICAgICBwcm9taXNlUmVzb2x2ZSA9IHJlc29sdmU7XG4gICAgICBwcm9taXNlUmVqZWN0ID0gcmVqZWN0O1xuICAgIH0pO1xuXG4gICAgdmFyIGFyZ3MgPSBbXTtcbiAgICBmb3IgKHZhciBpID0gMDsgaSA8IGFyZ3VtZW50cy5sZW5ndGg7IGkrKykge1xuICAgICAgYXJncy5wdXNoKGFyZ3VtZW50c1tpXSk7XG4gICAgfVxuICAgIGFyZ3MucHVzaChmdW5jdGlvbiAoZXJyLCB2YWx1ZSkge1xuICAgICAgaWYgKGVycikge1xuICAgICAgICBwcm9taXNlUmVqZWN0KGVycik7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBwcm9taXNlUmVzb2x2ZSh2YWx1ZSk7XG4gICAgICB9XG4gICAgfSk7XG5cbiAgICB0cnkge1xuICAgICAgb3JpZ2luYWwuYXBwbHkodGhpcywgYXJncyk7XG4gICAgfSBjYXRjaCAoZXJyKSB7XG4gICAgICBwcm9taXNlUmVqZWN0KGVycik7XG4gICAgfVxuXG4gICAgcmV0dXJuIHByb21pc2U7XG4gIH1cblxuICBPYmplY3Quc2V0UHJvdG90eXBlT2YoZm4sIE9iamVjdC5nZXRQcm90b3R5cGVPZihvcmlnaW5hbCkpO1xuXG4gIGlmIChrQ3VzdG9tUHJvbWlzaWZpZWRTeW1ib2wpIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShmbiwga0N1c3RvbVByb21pc2lmaWVkU3ltYm9sLCB7XG4gICAgdmFsdWU6IGZuLCBlbnVtZXJhYmxlOiBmYWxzZSwgd3JpdGFibGU6IGZhbHNlLCBjb25maWd1cmFibGU6IHRydWVcbiAgfSk7XG4gIHJldHVybiBPYmplY3QuZGVmaW5lUHJvcGVydGllcyhcbiAgICBmbixcbiAgICBnZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3JzKG9yaWdpbmFsKVxuICApO1xufVxuXG5leHBvcnRzLnByb21pc2lmeS5jdXN0b20gPSBrQ3VzdG9tUHJvbWlzaWZpZWRTeW1ib2xcblxuZnVuY3Rpb24gY2FsbGJhY2tpZnlPblJlamVjdGVkKHJlYXNvbiwgY2IpIHtcbiAgLy8gYCFyZWFzb25gIGd1YXJkIGluc3BpcmVkIGJ5IGJsdWViaXJkIChSZWY6IGh0dHBzOi8vZ29vLmdsL3Q1SVM2TSkuXG4gIC8vIEJlY2F1c2UgYG51bGxgIGlzIGEgc3BlY2lhbCBlcnJvciB2YWx1ZSBpbiBjYWxsYmFja3Mgd2hpY2ggbWVhbnMgXCJubyBlcnJvclxuICAvLyBvY2N1cnJlZFwiLCB3ZSBlcnJvci13cmFwIHNvIHRoZSBjYWxsYmFjayBjb25zdW1lciBjYW4gZGlzdGluZ3Vpc2ggYmV0d2VlblxuICAvLyBcInRoZSBwcm9taXNlIHJlamVjdGVkIHdpdGggbnVsbFwiIG9yIFwidGhlIHByb21pc2UgZnVsZmlsbGVkIHdpdGggdW5kZWZpbmVkXCIuXG4gIGlmICghcmVhc29uKSB7XG4gICAgdmFyIG5ld1JlYXNvbiA9IG5ldyBFcnJvcignUHJvbWlzZSB3YXMgcmVqZWN0ZWQgd2l0aCBhIGZhbHN5IHZhbHVlJyk7XG4gICAgbmV3UmVhc29uLnJlYXNvbiA9IHJlYXNvbjtcbiAgICByZWFzb24gPSBuZXdSZWFzb247XG4gIH1cbiAgcmV0dXJuIGNiKHJlYXNvbik7XG59XG5cbmZ1bmN0aW9uIGNhbGxiYWNraWZ5KG9yaWdpbmFsKSB7XG4gIGlmICh0eXBlb2Ygb3JpZ2luYWwgIT09ICdmdW5jdGlvbicpIHtcbiAgICB0aHJvdyBuZXcgVHlwZUVycm9yKCdUaGUgXCJvcmlnaW5hbFwiIGFyZ3VtZW50IG11c3QgYmUgb2YgdHlwZSBGdW5jdGlvbicpO1xuICB9XG5cbiAgLy8gV2UgRE8gTk9UIHJldHVybiB0aGUgcHJvbWlzZSBhcyBpdCBnaXZlcyB0aGUgdXNlciBhIGZhbHNlIHNlbnNlIHRoYXRcbiAgLy8gdGhlIHByb21pc2UgaXMgYWN0dWFsbHkgc29tZWhvdyByZWxhdGVkIHRvIHRoZSBjYWxsYmFjaydzIGV4ZWN1dGlvblxuICAvLyBhbmQgdGhhdCB0aGUgY2FsbGJhY2sgdGhyb3dpbmcgd2lsbCByZWplY3QgdGhlIHByb21pc2UuXG4gIGZ1bmN0aW9uIGNhbGxiYWNraWZpZWQoKSB7XG4gICAgdmFyIGFyZ3MgPSBbXTtcbiAgICBmb3IgKHZhciBpID0gMDsgaSA8IGFyZ3VtZW50cy5sZW5ndGg7IGkrKykge1xuICAgICAgYXJncy5wdXNoKGFyZ3VtZW50c1tpXSk7XG4gICAgfVxuXG4gICAgdmFyIG1heWJlQ2IgPSBhcmdzLnBvcCgpO1xuICAgIGlmICh0eXBlb2YgbWF5YmVDYiAhPT0gJ2Z1bmN0aW9uJykge1xuICAgICAgdGhyb3cgbmV3IFR5cGVFcnJvcignVGhlIGxhc3QgYXJndW1lbnQgbXVzdCBiZSBvZiB0eXBlIEZ1bmN0aW9uJyk7XG4gICAgfVxuICAgIHZhciBzZWxmID0gdGhpcztcbiAgICB2YXIgY2IgPSBmdW5jdGlvbigpIHtcbiAgICAgIHJldHVybiBtYXliZUNiLmFwcGx5KHNlbGYsIGFyZ3VtZW50cyk7XG4gICAgfTtcbiAgICAvLyBJbiB0cnVlIG5vZGUgc3R5bGUgd2UgcHJvY2VzcyB0aGUgY2FsbGJhY2sgb24gYG5leHRUaWNrYCB3aXRoIGFsbCB0aGVcbiAgICAvLyBpbXBsaWNhdGlvbnMgKHN0YWNrLCBgdW5jYXVnaHRFeGNlcHRpb25gLCBgYXN5bmNfaG9va3NgKVxuICAgIG9yaWdpbmFsLmFwcGx5KHRoaXMsIGFyZ3MpXG4gICAgICAudGhlbihmdW5jdGlvbihyZXQpIHsgcHJvY2Vzcy5uZXh0VGljayhjYi5iaW5kKG51bGwsIG51bGwsIHJldCkpIH0sXG4gICAgICAgICAgICBmdW5jdGlvbihyZWopIHsgcHJvY2Vzcy5uZXh0VGljayhjYWxsYmFja2lmeU9uUmVqZWN0ZWQuYmluZChudWxsLCByZWosIGNiKSkgfSk7XG4gIH1cblxuICBPYmplY3Quc2V0UHJvdG90eXBlT2YoY2FsbGJhY2tpZmllZCwgT2JqZWN0LmdldFByb3RvdHlwZU9mKG9yaWdpbmFsKSk7XG4gIE9iamVjdC5kZWZpbmVQcm9wZXJ0aWVzKGNhbGxiYWNraWZpZWQsXG4gICAgICAgICAgICAgICAgICAgICAgICAgIGdldE93blByb3BlcnR5RGVzY3JpcHRvcnMob3JpZ2luYWwpKTtcbiAgcmV0dXJuIGNhbGxiYWNraWZpZWQ7XG59XG5leHBvcnRzLmNhbGxiYWNraWZ5ID0gY2FsbGJhY2tpZnk7XG4iLCIndXNlIHN0cmljdCc7XG5cbnZhciBmb3JFYWNoID0gcmVxdWlyZSgnZm9yLWVhY2gnKTtcbnZhciBhdmFpbGFibGVUeXBlZEFycmF5cyA9IHJlcXVpcmUoJ2F2YWlsYWJsZS10eXBlZC1hcnJheXMnKTtcbnZhciBjYWxsQm91bmQgPSByZXF1aXJlKCdjYWxsLWJpbmQvY2FsbEJvdW5kJyk7XG5cbnZhciAkdG9TdHJpbmcgPSBjYWxsQm91bmQoJ09iamVjdC5wcm90b3R5cGUudG9TdHJpbmcnKTtcbnZhciBoYXNUb1N0cmluZ1RhZyA9IHJlcXVpcmUoJ2hhcy10b3N0cmluZ3RhZy9zaGFtcycpKCk7XG5cbnZhciBnID0gdHlwZW9mIGdsb2JhbFRoaXMgPT09ICd1bmRlZmluZWQnID8gZ2xvYmFsIDogZ2xvYmFsVGhpcztcbnZhciB0eXBlZEFycmF5cyA9IGF2YWlsYWJsZVR5cGVkQXJyYXlzKCk7XG5cbnZhciAkc2xpY2UgPSBjYWxsQm91bmQoJ1N0cmluZy5wcm90b3R5cGUuc2xpY2UnKTtcbnZhciB0b1N0clRhZ3MgPSB7fTtcbnZhciBnT1BEID0gcmVxdWlyZSgnZXMtYWJzdHJhY3QvaGVscGVycy9nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3InKTtcbnZhciBnZXRQcm90b3R5cGVPZiA9IE9iamVjdC5nZXRQcm90b3R5cGVPZjsgLy8gcmVxdWlyZSgnZ2V0cHJvdG90eXBlb2YnKTtcbmlmIChoYXNUb1N0cmluZ1RhZyAmJiBnT1BEICYmIGdldFByb3RvdHlwZU9mKSB7XG5cdGZvckVhY2godHlwZWRBcnJheXMsIGZ1bmN0aW9uICh0eXBlZEFycmF5KSB7XG5cdFx0aWYgKHR5cGVvZiBnW3R5cGVkQXJyYXldID09PSAnZnVuY3Rpb24nKSB7XG5cdFx0XHR2YXIgYXJyID0gbmV3IGdbdHlwZWRBcnJheV0oKTtcblx0XHRcdGlmIChTeW1ib2wudG9TdHJpbmdUYWcgaW4gYXJyKSB7XG5cdFx0XHRcdHZhciBwcm90byA9IGdldFByb3RvdHlwZU9mKGFycik7XG5cdFx0XHRcdHZhciBkZXNjcmlwdG9yID0gZ09QRChwcm90bywgU3ltYm9sLnRvU3RyaW5nVGFnKTtcblx0XHRcdFx0aWYgKCFkZXNjcmlwdG9yKSB7XG5cdFx0XHRcdFx0dmFyIHN1cGVyUHJvdG8gPSBnZXRQcm90b3R5cGVPZihwcm90byk7XG5cdFx0XHRcdFx0ZGVzY3JpcHRvciA9IGdPUEQoc3VwZXJQcm90bywgU3ltYm9sLnRvU3RyaW5nVGFnKTtcblx0XHRcdFx0fVxuXHRcdFx0XHR0b1N0clRhZ3NbdHlwZWRBcnJheV0gPSBkZXNjcmlwdG9yLmdldDtcblx0XHRcdH1cblx0XHR9XG5cdH0pO1xufVxuXG52YXIgdHJ5VHlwZWRBcnJheXMgPSBmdW5jdGlvbiB0cnlBbGxUeXBlZEFycmF5cyh2YWx1ZSkge1xuXHR2YXIgZm91bmROYW1lID0gZmFsc2U7XG5cdGZvckVhY2godG9TdHJUYWdzLCBmdW5jdGlvbiAoZ2V0dGVyLCB0eXBlZEFycmF5KSB7XG5cdFx0aWYgKCFmb3VuZE5hbWUpIHtcblx0XHRcdHRyeSB7XG5cdFx0XHRcdHZhciBuYW1lID0gZ2V0dGVyLmNhbGwodmFsdWUpO1xuXHRcdFx0XHRpZiAobmFtZSA9PT0gdHlwZWRBcnJheSkge1xuXHRcdFx0XHRcdGZvdW5kTmFtZSA9IG5hbWU7XG5cdFx0XHRcdH1cblx0XHRcdH0gY2F0Y2ggKGUpIHt9XG5cdFx0fVxuXHR9KTtcblx0cmV0dXJuIGZvdW5kTmFtZTtcbn07XG5cbnZhciBpc1R5cGVkQXJyYXkgPSByZXF1aXJlKCdpcy10eXBlZC1hcnJheScpO1xuXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIHdoaWNoVHlwZWRBcnJheSh2YWx1ZSkge1xuXHRpZiAoIWlzVHlwZWRBcnJheSh2YWx1ZSkpIHsgcmV0dXJuIGZhbHNlOyB9XG5cdGlmICghaGFzVG9TdHJpbmdUYWcgfHwgIShTeW1ib2wudG9TdHJpbmdUYWcgaW4gdmFsdWUpKSB7IHJldHVybiAkc2xpY2UoJHRvU3RyaW5nKHZhbHVlKSwgOCwgLTEpOyB9XG5cdHJldHVybiB0cnlUeXBlZEFycmF5cyh2YWx1ZSk7XG59O1xuIiwiJ3VzZSBzdHJpY3QnO1xuXG52YXIgcG9zc2libGVOYW1lcyA9IFtcblx0J0JpZ0ludDY0QXJyYXknLFxuXHQnQmlnVWludDY0QXJyYXknLFxuXHQnRmxvYXQzMkFycmF5Jyxcblx0J0Zsb2F0NjRBcnJheScsXG5cdCdJbnQxNkFycmF5Jyxcblx0J0ludDMyQXJyYXknLFxuXHQnSW50OEFycmF5Jyxcblx0J1VpbnQxNkFycmF5Jyxcblx0J1VpbnQzMkFycmF5Jyxcblx0J1VpbnQ4QXJyYXknLFxuXHQnVWludDhDbGFtcGVkQXJyYXknXG5dO1xuXG52YXIgZyA9IHR5cGVvZiBnbG9iYWxUaGlzID09PSAndW5kZWZpbmVkJyA/IGdsb2JhbCA6IGdsb2JhbFRoaXM7XG5cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gYXZhaWxhYmxlVHlwZWRBcnJheXMoKSB7XG5cdHZhciBvdXQgPSBbXTtcblx0Zm9yICh2YXIgaSA9IDA7IGkgPCBwb3NzaWJsZU5hbWVzLmxlbmd0aDsgaSsrKSB7XG5cdFx0aWYgKHR5cGVvZiBnW3Bvc3NpYmxlTmFtZXNbaV1dID09PSAnZnVuY3Rpb24nKSB7XG5cdFx0XHRvdXRbb3V0Lmxlbmd0aF0gPSBwb3NzaWJsZU5hbWVzW2ldO1xuXHRcdH1cblx0fVxuXHRyZXR1cm4gb3V0O1xufTtcbiIsIid1c2Ugc3RyaWN0JztcblxudmFyIEdldEludHJpbnNpYyA9IHJlcXVpcmUoJ2dldC1pbnRyaW5zaWMnKTtcblxudmFyICRnT1BEID0gR2V0SW50cmluc2ljKCclT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvciUnLCB0cnVlKTtcbmlmICgkZ09QRCkge1xuXHR0cnkge1xuXHRcdCRnT1BEKFtdLCAnbGVuZ3RoJyk7XG5cdH0gY2F0Y2ggKGUpIHtcblx0XHQvLyBJRSA4IGhhcyBhIGJyb2tlbiBnT1BEXG5cdFx0JGdPUEQgPSBudWxsO1xuXHR9XG59XG5cbm1vZHVsZS5leHBvcnRzID0gJGdPUEQ7XG4iLCIvLyBUaGUgbW9kdWxlIGNhY2hlXG52YXIgX193ZWJwYWNrX21vZHVsZV9jYWNoZV9fID0ge307XG5cbi8vIFRoZSByZXF1aXJlIGZ1bmN0aW9uXG5mdW5jdGlvbiBfX3dlYnBhY2tfcmVxdWlyZV9fKG1vZHVsZUlkKSB7XG5cdC8vIENoZWNrIGlmIG1vZHVsZSBpcyBpbiBjYWNoZVxuXHR2YXIgY2FjaGVkTW9kdWxlID0gX193ZWJwYWNrX21vZHVsZV9jYWNoZV9fW21vZHVsZUlkXTtcblx0aWYgKGNhY2hlZE1vZHVsZSAhPT0gdW5kZWZpbmVkKSB7XG5cdFx0cmV0dXJuIGNhY2hlZE1vZHVsZS5leHBvcnRzO1xuXHR9XG5cdC8vIENyZWF0ZSBhIG5ldyBtb2R1bGUgKGFuZCBwdXQgaXQgaW50byB0aGUgY2FjaGUpXG5cdHZhciBtb2R1bGUgPSBfX3dlYnBhY2tfbW9kdWxlX2NhY2hlX19bbW9kdWxlSWRdID0ge1xuXHRcdGlkOiBtb2R1bGVJZCxcblx0XHQvLyBubyBtb2R1bGUubG9hZGVkIG5lZWRlZFxuXHRcdGV4cG9ydHM6IHt9XG5cdH07XG5cblx0Ly8gRXhlY3V0ZSB0aGUgbW9kdWxlIGZ1bmN0aW9uXG5cdF9fd2VicGFja19tb2R1bGVzX19bbW9kdWxlSWRdKG1vZHVsZSwgbW9kdWxlLmV4cG9ydHMsIF9fd2VicGFja19yZXF1aXJlX18pO1xuXG5cdC8vIFJldHVybiB0aGUgZXhwb3J0cyBvZiB0aGUgbW9kdWxlXG5cdHJldHVybiBtb2R1bGUuZXhwb3J0cztcbn1cblxuIiwiLy8gZ2V0RGVmYXVsdEV4cG9ydCBmdW5jdGlvbiBmb3IgY29tcGF0aWJpbGl0eSB3aXRoIG5vbi1oYXJtb255IG1vZHVsZXNcbl9fd2VicGFja19yZXF1aXJlX18ubiA9IChtb2R1bGUpID0+IHtcblx0dmFyIGdldHRlciA9IG1vZHVsZSAmJiBtb2R1bGUuX19lc01vZHVsZSA/XG5cdFx0KCkgPT4gKG1vZHVsZVsnZGVmYXVsdCddKSA6XG5cdFx0KCkgPT4gKG1vZHVsZSk7XG5cdF9fd2VicGFja19yZXF1aXJlX18uZChnZXR0ZXIsIHsgYTogZ2V0dGVyIH0pO1xuXHRyZXR1cm4gZ2V0dGVyO1xufTsiLCIvLyBkZWZpbmUgZ2V0dGVyIGZ1bmN0aW9ucyBmb3IgaGFybW9ueSBleHBvcnRzXG5fX3dlYnBhY2tfcmVxdWlyZV9fLmQgPSAoZXhwb3J0cywgZGVmaW5pdGlvbikgPT4ge1xuXHRmb3IodmFyIGtleSBpbiBkZWZpbml0aW9uKSB7XG5cdFx0aWYoX193ZWJwYWNrX3JlcXVpcmVfXy5vKGRlZmluaXRpb24sIGtleSkgJiYgIV9fd2VicGFja19yZXF1aXJlX18ubyhleHBvcnRzLCBrZXkpKSB7XG5cdFx0XHRPYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywga2V5LCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZGVmaW5pdGlvbltrZXldIH0pO1xuXHRcdH1cblx0fVxufTsiLCJfX3dlYnBhY2tfcmVxdWlyZV9fLmcgPSAoZnVuY3Rpb24oKSB7XG5cdGlmICh0eXBlb2YgZ2xvYmFsVGhpcyA9PT0gJ29iamVjdCcpIHJldHVybiBnbG9iYWxUaGlzO1xuXHR0cnkge1xuXHRcdHJldHVybiB0aGlzIHx8IG5ldyBGdW5jdGlvbigncmV0dXJuIHRoaXMnKSgpO1xuXHR9IGNhdGNoIChlKSB7XG5cdFx0aWYgKHR5cGVvZiB3aW5kb3cgPT09ICdvYmplY3QnKSByZXR1cm4gd2luZG93O1xuXHR9XG59KSgpOyIsIl9fd2VicGFja19yZXF1aXJlX18ubyA9IChvYmosIHByb3ApID0+IChPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwob2JqLCBwcm9wKSkiLCJfX3dlYnBhY2tfcmVxdWlyZV9fLm5jID0gdW5kZWZpbmVkOyIsImltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XHJcblxyXG5jb25zdCBIZWFkZXIgPSAoKSA9PiB7XHJcbiAgICByZXR1cm4gKFxyXG4gICAgICAgIDxkaXYgY2xhc3NOYW1lPVwiZW9nLWhlYWRlclwiPlxyXG4gICAgICAgICAgICA8aDEgY2xhc3NOYW1lPSdlb2ctaGVhZGVyX190aXRsZSc+RXhwZXJpbWVudCBPdXRwdXQgR2VuZXJhdG9yPC9oMT5cclxuICAgICAgICA8L2Rpdj5cclxuICAgIClcclxufVxyXG5cclxuZXhwb3J0IGRlZmF1bHQgSGVhZGVyO1xyXG4iLCJleHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBfZXh0ZW5kcygpIHtcbiAgX2V4dGVuZHMgPSBPYmplY3QuYXNzaWduID8gT2JqZWN0LmFzc2lnbi5iaW5kKCkgOiBmdW5jdGlvbiAodGFyZ2V0KSB7XG4gICAgZm9yICh2YXIgaSA9IDE7IGkgPCBhcmd1bWVudHMubGVuZ3RoOyBpKyspIHtcbiAgICAgIHZhciBzb3VyY2UgPSBhcmd1bWVudHNbaV07XG5cbiAgICAgIGZvciAodmFyIGtleSBpbiBzb3VyY2UpIHtcbiAgICAgICAgaWYgKE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChzb3VyY2UsIGtleSkpIHtcbiAgICAgICAgICB0YXJnZXRba2V5XSA9IHNvdXJjZVtrZXldO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfVxuXG4gICAgcmV0dXJuIHRhcmdldDtcbiAgfTtcbiAgcmV0dXJuIF9leHRlbmRzLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7XG59IiwiaW1wb3J0IF9leHRlbmRzIGZyb20gJ0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2V4dGVuZHMnO1xuXG4vKipcclxuICogQWN0aW9ucyByZXByZXNlbnQgdGhlIHR5cGUgb2YgY2hhbmdlIHRvIGEgbG9jYXRpb24gdmFsdWUuXHJcbiAqXHJcbiAqIEBzZWUgaHR0cHM6Ly9naXRodWIuY29tL3JlbWl4LXJ1bi9oaXN0b3J5L3RyZWUvbWFpbi9kb2NzL2FwaS1yZWZlcmVuY2UubWQjYWN0aW9uXHJcbiAqL1xudmFyIEFjdGlvbjtcblxuKGZ1bmN0aW9uIChBY3Rpb24pIHtcbiAgLyoqXHJcbiAgICogQSBQT1AgaW5kaWNhdGVzIGEgY2hhbmdlIHRvIGFuIGFyYml0cmFyeSBpbmRleCBpbiB0aGUgaGlzdG9yeSBzdGFjaywgc3VjaFxyXG4gICAqIGFzIGEgYmFjayBvciBmb3J3YXJkIG5hdmlnYXRpb24uIEl0IGRvZXMgbm90IGRlc2NyaWJlIHRoZSBkaXJlY3Rpb24gb2YgdGhlXHJcbiAgICogbmF2aWdhdGlvbiwgb25seSB0aGF0IHRoZSBjdXJyZW50IGluZGV4IGNoYW5nZWQuXHJcbiAgICpcclxuICAgKiBOb3RlOiBUaGlzIGlzIHRoZSBkZWZhdWx0IGFjdGlvbiBmb3IgbmV3bHkgY3JlYXRlZCBoaXN0b3J5IG9iamVjdHMuXHJcbiAgICovXG4gIEFjdGlvbltcIlBvcFwiXSA9IFwiUE9QXCI7XG4gIC8qKlxyXG4gICAqIEEgUFVTSCBpbmRpY2F0ZXMgYSBuZXcgZW50cnkgYmVpbmcgYWRkZWQgdG8gdGhlIGhpc3Rvcnkgc3RhY2ssIHN1Y2ggYXMgd2hlblxyXG4gICAqIGEgbGluayBpcyBjbGlja2VkIGFuZCBhIG5ldyBwYWdlIGxvYWRzLiBXaGVuIHRoaXMgaGFwcGVucywgYWxsIHN1YnNlcXVlbnRcclxuICAgKiBlbnRyaWVzIGluIHRoZSBzdGFjayBhcmUgbG9zdC5cclxuICAgKi9cblxuICBBY3Rpb25bXCJQdXNoXCJdID0gXCJQVVNIXCI7XG4gIC8qKlxyXG4gICAqIEEgUkVQTEFDRSBpbmRpY2F0ZXMgdGhlIGVudHJ5IGF0IHRoZSBjdXJyZW50IGluZGV4IGluIHRoZSBoaXN0b3J5IHN0YWNrXHJcbiAgICogYmVpbmcgcmVwbGFjZWQgYnkgYSBuZXcgb25lLlxyXG4gICAqL1xuXG4gIEFjdGlvbltcIlJlcGxhY2VcIl0gPSBcIlJFUExBQ0VcIjtcbn0pKEFjdGlvbiB8fCAoQWN0aW9uID0ge30pKTtcblxudmFyIHJlYWRPbmx5ID0gcHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiID8gZnVuY3Rpb24gKG9iaikge1xuICByZXR1cm4gT2JqZWN0LmZyZWV6ZShvYmopO1xufSA6IGZ1bmN0aW9uIChvYmopIHtcbiAgcmV0dXJuIG9iajtcbn07XG5cbmZ1bmN0aW9uIHdhcm5pbmcoY29uZCwgbWVzc2FnZSkge1xuICBpZiAoIWNvbmQpIHtcbiAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbm8tY29uc29sZVxuICAgIGlmICh0eXBlb2YgY29uc29sZSAhPT0gJ3VuZGVmaW5lZCcpIGNvbnNvbGUud2FybihtZXNzYWdlKTtcblxuICAgIHRyeSB7XG4gICAgICAvLyBXZWxjb21lIHRvIGRlYnVnZ2luZyBoaXN0b3J5IVxuICAgICAgLy9cbiAgICAgIC8vIFRoaXMgZXJyb3IgaXMgdGhyb3duIGFzIGEgY29udmVuaWVuY2Ugc28geW91IGNhbiBtb3JlIGVhc2lseVxuICAgICAgLy8gZmluZCB0aGUgc291cmNlIGZvciBhIHdhcm5pbmcgdGhhdCBhcHBlYXJzIGluIHRoZSBjb25zb2xlIGJ5XG4gICAgICAvLyBlbmFibGluZyBcInBhdXNlIG9uIGV4Y2VwdGlvbnNcIiBpbiB5b3VyIEphdmFTY3JpcHQgZGVidWdnZXIuXG4gICAgICB0aHJvdyBuZXcgRXJyb3IobWVzc2FnZSk7IC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBuby1lbXB0eVxuICAgIH0gY2F0Y2ggKGUpIHt9XG4gIH1cbn1cblxudmFyIEJlZm9yZVVubG9hZEV2ZW50VHlwZSA9ICdiZWZvcmV1bmxvYWQnO1xudmFyIEhhc2hDaGFuZ2VFdmVudFR5cGUgPSAnaGFzaGNoYW5nZSc7XG52YXIgUG9wU3RhdGVFdmVudFR5cGUgPSAncG9wc3RhdGUnO1xuLyoqXHJcbiAqIEJyb3dzZXIgaGlzdG9yeSBzdG9yZXMgdGhlIGxvY2F0aW9uIGluIHJlZ3VsYXIgVVJMcy4gVGhpcyBpcyB0aGUgc3RhbmRhcmQgZm9yXHJcbiAqIG1vc3Qgd2ViIGFwcHMsIGJ1dCBpdCByZXF1aXJlcyBzb21lIGNvbmZpZ3VyYXRpb24gb24gdGhlIHNlcnZlciB0byBlbnN1cmUgeW91XHJcbiAqIHNlcnZlIHRoZSBzYW1lIGFwcCBhdCBtdWx0aXBsZSBVUkxzLlxyXG4gKlxyXG4gKiBAc2VlIGh0dHBzOi8vZ2l0aHViLmNvbS9yZW1peC1ydW4vaGlzdG9yeS90cmVlL21haW4vZG9jcy9hcGktcmVmZXJlbmNlLm1kI2NyZWF0ZWJyb3dzZXJoaXN0b3J5XHJcbiAqL1xuXG5mdW5jdGlvbiBjcmVhdGVCcm93c2VySGlzdG9yeShvcHRpb25zKSB7XG4gIGlmIChvcHRpb25zID09PSB2b2lkIDApIHtcbiAgICBvcHRpb25zID0ge307XG4gIH1cblxuICB2YXIgX29wdGlvbnMgPSBvcHRpb25zLFxuICAgICAgX29wdGlvbnMkd2luZG93ID0gX29wdGlvbnMud2luZG93LFxuICAgICAgd2luZG93ID0gX29wdGlvbnMkd2luZG93ID09PSB2b2lkIDAgPyBkb2N1bWVudC5kZWZhdWx0VmlldyA6IF9vcHRpb25zJHdpbmRvdztcbiAgdmFyIGdsb2JhbEhpc3RvcnkgPSB3aW5kb3cuaGlzdG9yeTtcblxuICBmdW5jdGlvbiBnZXRJbmRleEFuZExvY2F0aW9uKCkge1xuICAgIHZhciBfd2luZG93JGxvY2F0aW9uID0gd2luZG93LmxvY2F0aW9uLFxuICAgICAgICBwYXRobmFtZSA9IF93aW5kb3ckbG9jYXRpb24ucGF0aG5hbWUsXG4gICAgICAgIHNlYXJjaCA9IF93aW5kb3ckbG9jYXRpb24uc2VhcmNoLFxuICAgICAgICBoYXNoID0gX3dpbmRvdyRsb2NhdGlvbi5oYXNoO1xuICAgIHZhciBzdGF0ZSA9IGdsb2JhbEhpc3Rvcnkuc3RhdGUgfHwge307XG4gICAgcmV0dXJuIFtzdGF0ZS5pZHgsIHJlYWRPbmx5KHtcbiAgICAgIHBhdGhuYW1lOiBwYXRobmFtZSxcbiAgICAgIHNlYXJjaDogc2VhcmNoLFxuICAgICAgaGFzaDogaGFzaCxcbiAgICAgIHN0YXRlOiBzdGF0ZS51c3IgfHwgbnVsbCxcbiAgICAgIGtleTogc3RhdGUua2V5IHx8ICdkZWZhdWx0J1xuICAgIH0pXTtcbiAgfVxuXG4gIHZhciBibG9ja2VkUG9wVHggPSBudWxsO1xuXG4gIGZ1bmN0aW9uIGhhbmRsZVBvcCgpIHtcbiAgICBpZiAoYmxvY2tlZFBvcFR4KSB7XG4gICAgICBibG9ja2Vycy5jYWxsKGJsb2NrZWRQb3BUeCk7XG4gICAgICBibG9ja2VkUG9wVHggPSBudWxsO1xuICAgIH0gZWxzZSB7XG4gICAgICB2YXIgbmV4dEFjdGlvbiA9IEFjdGlvbi5Qb3A7XG5cbiAgICAgIHZhciBfZ2V0SW5kZXhBbmRMb2NhdGlvbiA9IGdldEluZGV4QW5kTG9jYXRpb24oKSxcbiAgICAgICAgICBuZXh0SW5kZXggPSBfZ2V0SW5kZXhBbmRMb2NhdGlvblswXSxcbiAgICAgICAgICBuZXh0TG9jYXRpb24gPSBfZ2V0SW5kZXhBbmRMb2NhdGlvblsxXTtcblxuICAgICAgaWYgKGJsb2NrZXJzLmxlbmd0aCkge1xuICAgICAgICBpZiAobmV4dEluZGV4ICE9IG51bGwpIHtcbiAgICAgICAgICB2YXIgZGVsdGEgPSBpbmRleCAtIG5leHRJbmRleDtcblxuICAgICAgICAgIGlmIChkZWx0YSkge1xuICAgICAgICAgICAgLy8gUmV2ZXJ0IHRoZSBQT1BcbiAgICAgICAgICAgIGJsb2NrZWRQb3BUeCA9IHtcbiAgICAgICAgICAgICAgYWN0aW9uOiBuZXh0QWN0aW9uLFxuICAgICAgICAgICAgICBsb2NhdGlvbjogbmV4dExvY2F0aW9uLFxuICAgICAgICAgICAgICByZXRyeTogZnVuY3Rpb24gcmV0cnkoKSB7XG4gICAgICAgICAgICAgICAgZ28oZGVsdGEgKiAtMSk7XG4gICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH07XG4gICAgICAgICAgICBnbyhkZWx0YSk7XG4gICAgICAgICAgfVxuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIC8vIFRyeWluZyB0byBQT1AgdG8gYSBsb2NhdGlvbiB3aXRoIG5vIGluZGV4LiBXZSBkaWQgbm90IGNyZWF0ZVxuICAgICAgICAgIC8vIHRoaXMgbG9jYXRpb24sIHNvIHdlIGNhbid0IGVmZmVjdGl2ZWx5IGJsb2NrIHRoZSBuYXZpZ2F0aW9uLlxuICAgICAgICAgIHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIiA/IHdhcm5pbmcoZmFsc2UsIC8vIFRPRE86IFdyaXRlIHVwIGEgZG9jIHRoYXQgZXhwbGFpbnMgb3VyIGJsb2NraW5nIHN0cmF0ZWd5IGluXG4gICAgICAgICAgLy8gZGV0YWlsIGFuZCBsaW5rIHRvIGl0IGhlcmUgc28gcGVvcGxlIGNhbiB1bmRlcnN0YW5kIGJldHRlciB3aGF0XG4gICAgICAgICAgLy8gaXMgZ29pbmcgb24gYW5kIGhvdyB0byBhdm9pZCBpdC5cbiAgICAgICAgICBcIllvdSBhcmUgdHJ5aW5nIHRvIGJsb2NrIGEgUE9QIG5hdmlnYXRpb24gdG8gYSBsb2NhdGlvbiB0aGF0IHdhcyBub3QgXCIgKyBcImNyZWF0ZWQgYnkgdGhlIGhpc3RvcnkgbGlicmFyeS4gVGhlIGJsb2NrIHdpbGwgZmFpbCBzaWxlbnRseSBpbiBcIiArIFwicHJvZHVjdGlvbiwgYnV0IGluIGdlbmVyYWwgeW91IHNob3VsZCBkbyBhbGwgbmF2aWdhdGlvbiB3aXRoIHRoZSBcIiArIFwiaGlzdG9yeSBsaWJyYXJ5IChpbnN0ZWFkIG9mIHVzaW5nIHdpbmRvdy5oaXN0b3J5LnB1c2hTdGF0ZSBkaXJlY3RseSkgXCIgKyBcInRvIGF2b2lkIHRoaXMgc2l0dWF0aW9uLlwiKSA6IHZvaWQgMDtcbiAgICAgICAgfVxuICAgICAgfSBlbHNlIHtcbiAgICAgICAgYXBwbHlUeChuZXh0QWN0aW9uKTtcbiAgICAgIH1cbiAgICB9XG4gIH1cblxuICB3aW5kb3cuYWRkRXZlbnRMaXN0ZW5lcihQb3BTdGF0ZUV2ZW50VHlwZSwgaGFuZGxlUG9wKTtcbiAgdmFyIGFjdGlvbiA9IEFjdGlvbi5Qb3A7XG5cbiAgdmFyIF9nZXRJbmRleEFuZExvY2F0aW9uMiA9IGdldEluZGV4QW5kTG9jYXRpb24oKSxcbiAgICAgIGluZGV4ID0gX2dldEluZGV4QW5kTG9jYXRpb24yWzBdLFxuICAgICAgbG9jYXRpb24gPSBfZ2V0SW5kZXhBbmRMb2NhdGlvbjJbMV07XG5cbiAgdmFyIGxpc3RlbmVycyA9IGNyZWF0ZUV2ZW50cygpO1xuICB2YXIgYmxvY2tlcnMgPSBjcmVhdGVFdmVudHMoKTtcblxuICBpZiAoaW5kZXggPT0gbnVsbCkge1xuICAgIGluZGV4ID0gMDtcbiAgICBnbG9iYWxIaXN0b3J5LnJlcGxhY2VTdGF0ZShfZXh0ZW5kcyh7fSwgZ2xvYmFsSGlzdG9yeS5zdGF0ZSwge1xuICAgICAgaWR4OiBpbmRleFxuICAgIH0pLCAnJyk7XG4gIH1cblxuICBmdW5jdGlvbiBjcmVhdGVIcmVmKHRvKSB7XG4gICAgcmV0dXJuIHR5cGVvZiB0byA9PT0gJ3N0cmluZycgPyB0byA6IGNyZWF0ZVBhdGgodG8pO1xuICB9IC8vIHN0YXRlIGRlZmF1bHRzIHRvIGBudWxsYCBiZWNhdXNlIGB3aW5kb3cuaGlzdG9yeS5zdGF0ZWAgZG9lc1xuXG5cbiAgZnVuY3Rpb24gZ2V0TmV4dExvY2F0aW9uKHRvLCBzdGF0ZSkge1xuICAgIGlmIChzdGF0ZSA9PT0gdm9pZCAwKSB7XG4gICAgICBzdGF0ZSA9IG51bGw7XG4gICAgfVxuXG4gICAgcmV0dXJuIHJlYWRPbmx5KF9leHRlbmRzKHtcbiAgICAgIHBhdGhuYW1lOiBsb2NhdGlvbi5wYXRobmFtZSxcbiAgICAgIGhhc2g6ICcnLFxuICAgICAgc2VhcmNoOiAnJ1xuICAgIH0sIHR5cGVvZiB0byA9PT0gJ3N0cmluZycgPyBwYXJzZVBhdGgodG8pIDogdG8sIHtcbiAgICAgIHN0YXRlOiBzdGF0ZSxcbiAgICAgIGtleTogY3JlYXRlS2V5KClcbiAgICB9KSk7XG4gIH1cblxuICBmdW5jdGlvbiBnZXRIaXN0b3J5U3RhdGVBbmRVcmwobmV4dExvY2F0aW9uLCBpbmRleCkge1xuICAgIHJldHVybiBbe1xuICAgICAgdXNyOiBuZXh0TG9jYXRpb24uc3RhdGUsXG4gICAgICBrZXk6IG5leHRMb2NhdGlvbi5rZXksXG4gICAgICBpZHg6IGluZGV4XG4gICAgfSwgY3JlYXRlSHJlZihuZXh0TG9jYXRpb24pXTtcbiAgfVxuXG4gIGZ1bmN0aW9uIGFsbG93VHgoYWN0aW9uLCBsb2NhdGlvbiwgcmV0cnkpIHtcbiAgICByZXR1cm4gIWJsb2NrZXJzLmxlbmd0aCB8fCAoYmxvY2tlcnMuY2FsbCh7XG4gICAgICBhY3Rpb246IGFjdGlvbixcbiAgICAgIGxvY2F0aW9uOiBsb2NhdGlvbixcbiAgICAgIHJldHJ5OiByZXRyeVxuICAgIH0pLCBmYWxzZSk7XG4gIH1cblxuICBmdW5jdGlvbiBhcHBseVR4KG5leHRBY3Rpb24pIHtcbiAgICBhY3Rpb24gPSBuZXh0QWN0aW9uO1xuXG4gICAgdmFyIF9nZXRJbmRleEFuZExvY2F0aW9uMyA9IGdldEluZGV4QW5kTG9jYXRpb24oKTtcblxuICAgIGluZGV4ID0gX2dldEluZGV4QW5kTG9jYXRpb24zWzBdO1xuICAgIGxvY2F0aW9uID0gX2dldEluZGV4QW5kTG9jYXRpb24zWzFdO1xuICAgIGxpc3RlbmVycy5jYWxsKHtcbiAgICAgIGFjdGlvbjogYWN0aW9uLFxuICAgICAgbG9jYXRpb246IGxvY2F0aW9uXG4gICAgfSk7XG4gIH1cblxuICBmdW5jdGlvbiBwdXNoKHRvLCBzdGF0ZSkge1xuICAgIHZhciBuZXh0QWN0aW9uID0gQWN0aW9uLlB1c2g7XG4gICAgdmFyIG5leHRMb2NhdGlvbiA9IGdldE5leHRMb2NhdGlvbih0bywgc3RhdGUpO1xuXG4gICAgZnVuY3Rpb24gcmV0cnkoKSB7XG4gICAgICBwdXNoKHRvLCBzdGF0ZSk7XG4gICAgfVxuXG4gICAgaWYgKGFsbG93VHgobmV4dEFjdGlvbiwgbmV4dExvY2F0aW9uLCByZXRyeSkpIHtcbiAgICAgIHZhciBfZ2V0SGlzdG9yeVN0YXRlQW5kVXIgPSBnZXRIaXN0b3J5U3RhdGVBbmRVcmwobmV4dExvY2F0aW9uLCBpbmRleCArIDEpLFxuICAgICAgICAgIGhpc3RvcnlTdGF0ZSA9IF9nZXRIaXN0b3J5U3RhdGVBbmRVclswXSxcbiAgICAgICAgICB1cmwgPSBfZ2V0SGlzdG9yeVN0YXRlQW5kVXJbMV07IC8vIFRPRE86IFN1cHBvcnQgZm9yY2VkIHJlbG9hZGluZ1xuICAgICAgLy8gdHJ5Li4uY2F0Y2ggYmVjYXVzZSBpT1MgbGltaXRzIHVzIHRvIDEwMCBwdXNoU3RhdGUgY2FsbHMgOi9cblxuXG4gICAgICB0cnkge1xuICAgICAgICBnbG9iYWxIaXN0b3J5LnB1c2hTdGF0ZShoaXN0b3J5U3RhdGUsICcnLCB1cmwpO1xuICAgICAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICAgICAgLy8gVGhleSBhcmUgZ29pbmcgdG8gbG9zZSBzdGF0ZSBoZXJlLCBidXQgdGhlcmUgaXMgbm8gcmVhbFxuICAgICAgICAvLyB3YXkgdG8gd2FybiB0aGVtIGFib3V0IGl0IHNpbmNlIHRoZSBwYWdlIHdpbGwgcmVmcmVzaC4uLlxuICAgICAgICB3aW5kb3cubG9jYXRpb24uYXNzaWduKHVybCk7XG4gICAgICB9XG5cbiAgICAgIGFwcGx5VHgobmV4dEFjdGlvbik7XG4gICAgfVxuICB9XG5cbiAgZnVuY3Rpb24gcmVwbGFjZSh0bywgc3RhdGUpIHtcbiAgICB2YXIgbmV4dEFjdGlvbiA9IEFjdGlvbi5SZXBsYWNlO1xuICAgIHZhciBuZXh0TG9jYXRpb24gPSBnZXROZXh0TG9jYXRpb24odG8sIHN0YXRlKTtcblxuICAgIGZ1bmN0aW9uIHJldHJ5KCkge1xuICAgICAgcmVwbGFjZSh0bywgc3RhdGUpO1xuICAgIH1cblxuICAgIGlmIChhbGxvd1R4KG5leHRBY3Rpb24sIG5leHRMb2NhdGlvbiwgcmV0cnkpKSB7XG4gICAgICB2YXIgX2dldEhpc3RvcnlTdGF0ZUFuZFVyMiA9IGdldEhpc3RvcnlTdGF0ZUFuZFVybChuZXh0TG9jYXRpb24sIGluZGV4KSxcbiAgICAgICAgICBoaXN0b3J5U3RhdGUgPSBfZ2V0SGlzdG9yeVN0YXRlQW5kVXIyWzBdLFxuICAgICAgICAgIHVybCA9IF9nZXRIaXN0b3J5U3RhdGVBbmRVcjJbMV07IC8vIFRPRE86IFN1cHBvcnQgZm9yY2VkIHJlbG9hZGluZ1xuXG5cbiAgICAgIGdsb2JhbEhpc3RvcnkucmVwbGFjZVN0YXRlKGhpc3RvcnlTdGF0ZSwgJycsIHVybCk7XG4gICAgICBhcHBseVR4KG5leHRBY3Rpb24pO1xuICAgIH1cbiAgfVxuXG4gIGZ1bmN0aW9uIGdvKGRlbHRhKSB7XG4gICAgZ2xvYmFsSGlzdG9yeS5nbyhkZWx0YSk7XG4gIH1cblxuICB2YXIgaGlzdG9yeSA9IHtcbiAgICBnZXQgYWN0aW9uKCkge1xuICAgICAgcmV0dXJuIGFjdGlvbjtcbiAgICB9LFxuXG4gICAgZ2V0IGxvY2F0aW9uKCkge1xuICAgICAgcmV0dXJuIGxvY2F0aW9uO1xuICAgIH0sXG5cbiAgICBjcmVhdGVIcmVmOiBjcmVhdGVIcmVmLFxuICAgIHB1c2g6IHB1c2gsXG4gICAgcmVwbGFjZTogcmVwbGFjZSxcbiAgICBnbzogZ28sXG4gICAgYmFjazogZnVuY3Rpb24gYmFjaygpIHtcbiAgICAgIGdvKC0xKTtcbiAgICB9LFxuICAgIGZvcndhcmQ6IGZ1bmN0aW9uIGZvcndhcmQoKSB7XG4gICAgICBnbygxKTtcbiAgICB9LFxuICAgIGxpc3RlbjogZnVuY3Rpb24gbGlzdGVuKGxpc3RlbmVyKSB7XG4gICAgICByZXR1cm4gbGlzdGVuZXJzLnB1c2gobGlzdGVuZXIpO1xuICAgIH0sXG4gICAgYmxvY2s6IGZ1bmN0aW9uIGJsb2NrKGJsb2NrZXIpIHtcbiAgICAgIHZhciB1bmJsb2NrID0gYmxvY2tlcnMucHVzaChibG9ja2VyKTtcblxuICAgICAgaWYgKGJsb2NrZXJzLmxlbmd0aCA9PT0gMSkge1xuICAgICAgICB3aW5kb3cuYWRkRXZlbnRMaXN0ZW5lcihCZWZvcmVVbmxvYWRFdmVudFR5cGUsIHByb21wdEJlZm9yZVVubG9hZCk7XG4gICAgICB9XG5cbiAgICAgIHJldHVybiBmdW5jdGlvbiAoKSB7XG4gICAgICAgIHVuYmxvY2soKTsgLy8gUmVtb3ZlIHRoZSBiZWZvcmV1bmxvYWQgbGlzdGVuZXIgc28gdGhlIGRvY3VtZW50IG1heVxuICAgICAgICAvLyBzdGlsbCBiZSBzYWx2YWdlYWJsZSBpbiB0aGUgcGFnZWhpZGUgZXZlbnQuXG4gICAgICAgIC8vIFNlZSBodHRwczovL2h0bWwuc3BlYy53aGF0d2cub3JnLyN1bmxvYWRpbmctZG9jdW1lbnRzXG5cbiAgICAgICAgaWYgKCFibG9ja2Vycy5sZW5ndGgpIHtcbiAgICAgICAgICB3aW5kb3cucmVtb3ZlRXZlbnRMaXN0ZW5lcihCZWZvcmVVbmxvYWRFdmVudFR5cGUsIHByb21wdEJlZm9yZVVubG9hZCk7XG4gICAgICAgIH1cbiAgICAgIH07XG4gICAgfVxuICB9O1xuICByZXR1cm4gaGlzdG9yeTtcbn1cbi8qKlxyXG4gKiBIYXNoIGhpc3Rvcnkgc3RvcmVzIHRoZSBsb2NhdGlvbiBpbiB3aW5kb3cubG9jYXRpb24uaGFzaC4gVGhpcyBtYWtlcyBpdCBpZGVhbFxyXG4gKiBmb3Igc2l0dWF0aW9ucyB3aGVyZSB5b3UgZG9uJ3Qgd2FudCB0byBzZW5kIHRoZSBsb2NhdGlvbiB0byB0aGUgc2VydmVyIGZvclxyXG4gKiBzb21lIHJlYXNvbiwgZWl0aGVyIGJlY2F1c2UgeW91IGRvIGNhbm5vdCBjb25maWd1cmUgaXQgb3IgdGhlIFVSTCBzcGFjZSBpc1xyXG4gKiByZXNlcnZlZCBmb3Igc29tZXRoaW5nIGVsc2UuXHJcbiAqXHJcbiAqIEBzZWUgaHR0cHM6Ly9naXRodWIuY29tL3JlbWl4LXJ1bi9oaXN0b3J5L3RyZWUvbWFpbi9kb2NzL2FwaS1yZWZlcmVuY2UubWQjY3JlYXRlaGFzaGhpc3RvcnlcclxuICovXG5cbmZ1bmN0aW9uIGNyZWF0ZUhhc2hIaXN0b3J5KG9wdGlvbnMpIHtcbiAgaWYgKG9wdGlvbnMgPT09IHZvaWQgMCkge1xuICAgIG9wdGlvbnMgPSB7fTtcbiAgfVxuXG4gIHZhciBfb3B0aW9uczIgPSBvcHRpb25zLFxuICAgICAgX29wdGlvbnMyJHdpbmRvdyA9IF9vcHRpb25zMi53aW5kb3csXG4gICAgICB3aW5kb3cgPSBfb3B0aW9uczIkd2luZG93ID09PSB2b2lkIDAgPyBkb2N1bWVudC5kZWZhdWx0VmlldyA6IF9vcHRpb25zMiR3aW5kb3c7XG4gIHZhciBnbG9iYWxIaXN0b3J5ID0gd2luZG93Lmhpc3Rvcnk7XG5cbiAgZnVuY3Rpb24gZ2V0SW5kZXhBbmRMb2NhdGlvbigpIHtcbiAgICB2YXIgX3BhcnNlUGF0aCA9IHBhcnNlUGF0aCh3aW5kb3cubG9jYXRpb24uaGFzaC5zdWJzdHIoMSkpLFxuICAgICAgICBfcGFyc2VQYXRoJHBhdGhuYW1lID0gX3BhcnNlUGF0aC5wYXRobmFtZSxcbiAgICAgICAgcGF0aG5hbWUgPSBfcGFyc2VQYXRoJHBhdGhuYW1lID09PSB2b2lkIDAgPyAnLycgOiBfcGFyc2VQYXRoJHBhdGhuYW1lLFxuICAgICAgICBfcGFyc2VQYXRoJHNlYXJjaCA9IF9wYXJzZVBhdGguc2VhcmNoLFxuICAgICAgICBzZWFyY2ggPSBfcGFyc2VQYXRoJHNlYXJjaCA9PT0gdm9pZCAwID8gJycgOiBfcGFyc2VQYXRoJHNlYXJjaCxcbiAgICAgICAgX3BhcnNlUGF0aCRoYXNoID0gX3BhcnNlUGF0aC5oYXNoLFxuICAgICAgICBoYXNoID0gX3BhcnNlUGF0aCRoYXNoID09PSB2b2lkIDAgPyAnJyA6IF9wYXJzZVBhdGgkaGFzaDtcblxuICAgIHZhciBzdGF0ZSA9IGdsb2JhbEhpc3Rvcnkuc3RhdGUgfHwge307XG4gICAgcmV0dXJuIFtzdGF0ZS5pZHgsIHJlYWRPbmx5KHtcbiAgICAgIHBhdGhuYW1lOiBwYXRobmFtZSxcbiAgICAgIHNlYXJjaDogc2VhcmNoLFxuICAgICAgaGFzaDogaGFzaCxcbiAgICAgIHN0YXRlOiBzdGF0ZS51c3IgfHwgbnVsbCxcbiAgICAgIGtleTogc3RhdGUua2V5IHx8ICdkZWZhdWx0J1xuICAgIH0pXTtcbiAgfVxuXG4gIHZhciBibG9ja2VkUG9wVHggPSBudWxsO1xuXG4gIGZ1bmN0aW9uIGhhbmRsZVBvcCgpIHtcbiAgICBpZiAoYmxvY2tlZFBvcFR4KSB7XG4gICAgICBibG9ja2Vycy5jYWxsKGJsb2NrZWRQb3BUeCk7XG4gICAgICBibG9ja2VkUG9wVHggPSBudWxsO1xuICAgIH0gZWxzZSB7XG4gICAgICB2YXIgbmV4dEFjdGlvbiA9IEFjdGlvbi5Qb3A7XG5cbiAgICAgIHZhciBfZ2V0SW5kZXhBbmRMb2NhdGlvbjQgPSBnZXRJbmRleEFuZExvY2F0aW9uKCksXG4gICAgICAgICAgbmV4dEluZGV4ID0gX2dldEluZGV4QW5kTG9jYXRpb240WzBdLFxuICAgICAgICAgIG5leHRMb2NhdGlvbiA9IF9nZXRJbmRleEFuZExvY2F0aW9uNFsxXTtcblxuICAgICAgaWYgKGJsb2NrZXJzLmxlbmd0aCkge1xuICAgICAgICBpZiAobmV4dEluZGV4ICE9IG51bGwpIHtcbiAgICAgICAgICB2YXIgZGVsdGEgPSBpbmRleCAtIG5leHRJbmRleDtcblxuICAgICAgICAgIGlmIChkZWx0YSkge1xuICAgICAgICAgICAgLy8gUmV2ZXJ0IHRoZSBQT1BcbiAgICAgICAgICAgIGJsb2NrZWRQb3BUeCA9IHtcbiAgICAgICAgICAgICAgYWN0aW9uOiBuZXh0QWN0aW9uLFxuICAgICAgICAgICAgICBsb2NhdGlvbjogbmV4dExvY2F0aW9uLFxuICAgICAgICAgICAgICByZXRyeTogZnVuY3Rpb24gcmV0cnkoKSB7XG4gICAgICAgICAgICAgICAgZ28oZGVsdGEgKiAtMSk7XG4gICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH07XG4gICAgICAgICAgICBnbyhkZWx0YSk7XG4gICAgICAgICAgfVxuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIC8vIFRyeWluZyB0byBQT1AgdG8gYSBsb2NhdGlvbiB3aXRoIG5vIGluZGV4LiBXZSBkaWQgbm90IGNyZWF0ZVxuICAgICAgICAgIC8vIHRoaXMgbG9jYXRpb24sIHNvIHdlIGNhbid0IGVmZmVjdGl2ZWx5IGJsb2NrIHRoZSBuYXZpZ2F0aW9uLlxuICAgICAgICAgIHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIiA/IHdhcm5pbmcoZmFsc2UsIC8vIFRPRE86IFdyaXRlIHVwIGEgZG9jIHRoYXQgZXhwbGFpbnMgb3VyIGJsb2NraW5nIHN0cmF0ZWd5IGluXG4gICAgICAgICAgLy8gZGV0YWlsIGFuZCBsaW5rIHRvIGl0IGhlcmUgc28gcGVvcGxlIGNhbiB1bmRlcnN0YW5kIGJldHRlclxuICAgICAgICAgIC8vIHdoYXQgaXMgZ29pbmcgb24gYW5kIGhvdyB0byBhdm9pZCBpdC5cbiAgICAgICAgICBcIllvdSBhcmUgdHJ5aW5nIHRvIGJsb2NrIGEgUE9QIG5hdmlnYXRpb24gdG8gYSBsb2NhdGlvbiB0aGF0IHdhcyBub3QgXCIgKyBcImNyZWF0ZWQgYnkgdGhlIGhpc3RvcnkgbGlicmFyeS4gVGhlIGJsb2NrIHdpbGwgZmFpbCBzaWxlbnRseSBpbiBcIiArIFwicHJvZHVjdGlvbiwgYnV0IGluIGdlbmVyYWwgeW91IHNob3VsZCBkbyBhbGwgbmF2aWdhdGlvbiB3aXRoIHRoZSBcIiArIFwiaGlzdG9yeSBsaWJyYXJ5IChpbnN0ZWFkIG9mIHVzaW5nIHdpbmRvdy5oaXN0b3J5LnB1c2hTdGF0ZSBkaXJlY3RseSkgXCIgKyBcInRvIGF2b2lkIHRoaXMgc2l0dWF0aW9uLlwiKSA6IHZvaWQgMDtcbiAgICAgICAgfVxuICAgICAgfSBlbHNlIHtcbiAgICAgICAgYXBwbHlUeChuZXh0QWN0aW9uKTtcbiAgICAgIH1cbiAgICB9XG4gIH1cblxuICB3aW5kb3cuYWRkRXZlbnRMaXN0ZW5lcihQb3BTdGF0ZUV2ZW50VHlwZSwgaGFuZGxlUG9wKTsgLy8gcG9wc3RhdGUgZG9lcyBub3QgZmlyZSBvbiBoYXNoY2hhbmdlIGluIElFIDExIGFuZCBvbGQgKHRyaWRlbnQpIEVkZ2VcbiAgLy8gaHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZGUvZG9jcy9XZWIvQVBJL1dpbmRvdy9wb3BzdGF0ZV9ldmVudFxuXG4gIHdpbmRvdy5hZGRFdmVudExpc3RlbmVyKEhhc2hDaGFuZ2VFdmVudFR5cGUsIGZ1bmN0aW9uICgpIHtcbiAgICB2YXIgX2dldEluZGV4QW5kTG9jYXRpb241ID0gZ2V0SW5kZXhBbmRMb2NhdGlvbigpLFxuICAgICAgICBuZXh0TG9jYXRpb24gPSBfZ2V0SW5kZXhBbmRMb2NhdGlvbjVbMV07IC8vIElnbm9yZSBleHRyYW5lb3VzIGhhc2hjaGFuZ2UgZXZlbnRzLlxuXG5cbiAgICBpZiAoY3JlYXRlUGF0aChuZXh0TG9jYXRpb24pICE9PSBjcmVhdGVQYXRoKGxvY2F0aW9uKSkge1xuICAgICAgaGFuZGxlUG9wKCk7XG4gICAgfVxuICB9KTtcbiAgdmFyIGFjdGlvbiA9IEFjdGlvbi5Qb3A7XG5cbiAgdmFyIF9nZXRJbmRleEFuZExvY2F0aW9uNiA9IGdldEluZGV4QW5kTG9jYXRpb24oKSxcbiAgICAgIGluZGV4ID0gX2dldEluZGV4QW5kTG9jYXRpb242WzBdLFxuICAgICAgbG9jYXRpb24gPSBfZ2V0SW5kZXhBbmRMb2NhdGlvbjZbMV07XG5cbiAgdmFyIGxpc3RlbmVycyA9IGNyZWF0ZUV2ZW50cygpO1xuICB2YXIgYmxvY2tlcnMgPSBjcmVhdGVFdmVudHMoKTtcblxuICBpZiAoaW5kZXggPT0gbnVsbCkge1xuICAgIGluZGV4ID0gMDtcbiAgICBnbG9iYWxIaXN0b3J5LnJlcGxhY2VTdGF0ZShfZXh0ZW5kcyh7fSwgZ2xvYmFsSGlzdG9yeS5zdGF0ZSwge1xuICAgICAgaWR4OiBpbmRleFxuICAgIH0pLCAnJyk7XG4gIH1cblxuICBmdW5jdGlvbiBnZXRCYXNlSHJlZigpIHtcbiAgICB2YXIgYmFzZSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJ2Jhc2UnKTtcbiAgICB2YXIgaHJlZiA9ICcnO1xuXG4gICAgaWYgKGJhc2UgJiYgYmFzZS5nZXRBdHRyaWJ1dGUoJ2hyZWYnKSkge1xuICAgICAgdmFyIHVybCA9IHdpbmRvdy5sb2NhdGlvbi5ocmVmO1xuICAgICAgdmFyIGhhc2hJbmRleCA9IHVybC5pbmRleE9mKCcjJyk7XG4gICAgICBocmVmID0gaGFzaEluZGV4ID09PSAtMSA/IHVybCA6IHVybC5zbGljZSgwLCBoYXNoSW5kZXgpO1xuICAgIH1cblxuICAgIHJldHVybiBocmVmO1xuICB9XG5cbiAgZnVuY3Rpb24gY3JlYXRlSHJlZih0bykge1xuICAgIHJldHVybiBnZXRCYXNlSHJlZigpICsgJyMnICsgKHR5cGVvZiB0byA9PT0gJ3N0cmluZycgPyB0byA6IGNyZWF0ZVBhdGgodG8pKTtcbiAgfVxuXG4gIGZ1bmN0aW9uIGdldE5leHRMb2NhdGlvbih0bywgc3RhdGUpIHtcbiAgICBpZiAoc3RhdGUgPT09IHZvaWQgMCkge1xuICAgICAgc3RhdGUgPSBudWxsO1xuICAgIH1cblxuICAgIHJldHVybiByZWFkT25seShfZXh0ZW5kcyh7XG4gICAgICBwYXRobmFtZTogbG9jYXRpb24ucGF0aG5hbWUsXG4gICAgICBoYXNoOiAnJyxcbiAgICAgIHNlYXJjaDogJydcbiAgICB9LCB0eXBlb2YgdG8gPT09ICdzdHJpbmcnID8gcGFyc2VQYXRoKHRvKSA6IHRvLCB7XG4gICAgICBzdGF0ZTogc3RhdGUsXG4gICAgICBrZXk6IGNyZWF0ZUtleSgpXG4gICAgfSkpO1xuICB9XG5cbiAgZnVuY3Rpb24gZ2V0SGlzdG9yeVN0YXRlQW5kVXJsKG5leHRMb2NhdGlvbiwgaW5kZXgpIHtcbiAgICByZXR1cm4gW3tcbiAgICAgIHVzcjogbmV4dExvY2F0aW9uLnN0YXRlLFxuICAgICAga2V5OiBuZXh0TG9jYXRpb24ua2V5LFxuICAgICAgaWR4OiBpbmRleFxuICAgIH0sIGNyZWF0ZUhyZWYobmV4dExvY2F0aW9uKV07XG4gIH1cblxuICBmdW5jdGlvbiBhbGxvd1R4KGFjdGlvbiwgbG9jYXRpb24sIHJldHJ5KSB7XG4gICAgcmV0dXJuICFibG9ja2Vycy5sZW5ndGggfHwgKGJsb2NrZXJzLmNhbGwoe1xuICAgICAgYWN0aW9uOiBhY3Rpb24sXG4gICAgICBsb2NhdGlvbjogbG9jYXRpb24sXG4gICAgICByZXRyeTogcmV0cnlcbiAgICB9KSwgZmFsc2UpO1xuICB9XG5cbiAgZnVuY3Rpb24gYXBwbHlUeChuZXh0QWN0aW9uKSB7XG4gICAgYWN0aW9uID0gbmV4dEFjdGlvbjtcblxuICAgIHZhciBfZ2V0SW5kZXhBbmRMb2NhdGlvbjcgPSBnZXRJbmRleEFuZExvY2F0aW9uKCk7XG5cbiAgICBpbmRleCA9IF9nZXRJbmRleEFuZExvY2F0aW9uN1swXTtcbiAgICBsb2NhdGlvbiA9IF9nZXRJbmRleEFuZExvY2F0aW9uN1sxXTtcbiAgICBsaXN0ZW5lcnMuY2FsbCh7XG4gICAgICBhY3Rpb246IGFjdGlvbixcbiAgICAgIGxvY2F0aW9uOiBsb2NhdGlvblxuICAgIH0pO1xuICB9XG5cbiAgZnVuY3Rpb24gcHVzaCh0bywgc3RhdGUpIHtcbiAgICB2YXIgbmV4dEFjdGlvbiA9IEFjdGlvbi5QdXNoO1xuICAgIHZhciBuZXh0TG9jYXRpb24gPSBnZXROZXh0TG9jYXRpb24odG8sIHN0YXRlKTtcblxuICAgIGZ1bmN0aW9uIHJldHJ5KCkge1xuICAgICAgcHVzaCh0bywgc3RhdGUpO1xuICAgIH1cblxuICAgIHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIiA/IHdhcm5pbmcobmV4dExvY2F0aW9uLnBhdGhuYW1lLmNoYXJBdCgwKSA9PT0gJy8nLCBcIlJlbGF0aXZlIHBhdGhuYW1lcyBhcmUgbm90IHN1cHBvcnRlZCBpbiBoYXNoIGhpc3RvcnkucHVzaChcIiArIEpTT04uc3RyaW5naWZ5KHRvKSArIFwiKVwiKSA6IHZvaWQgMDtcblxuICAgIGlmIChhbGxvd1R4KG5leHRBY3Rpb24sIG5leHRMb2NhdGlvbiwgcmV0cnkpKSB7XG4gICAgICB2YXIgX2dldEhpc3RvcnlTdGF0ZUFuZFVyMyA9IGdldEhpc3RvcnlTdGF0ZUFuZFVybChuZXh0TG9jYXRpb24sIGluZGV4ICsgMSksXG4gICAgICAgICAgaGlzdG9yeVN0YXRlID0gX2dldEhpc3RvcnlTdGF0ZUFuZFVyM1swXSxcbiAgICAgICAgICB1cmwgPSBfZ2V0SGlzdG9yeVN0YXRlQW5kVXIzWzFdOyAvLyBUT0RPOiBTdXBwb3J0IGZvcmNlZCByZWxvYWRpbmdcbiAgICAgIC8vIHRyeS4uLmNhdGNoIGJlY2F1c2UgaU9TIGxpbWl0cyB1cyB0byAxMDAgcHVzaFN0YXRlIGNhbGxzIDovXG5cblxuICAgICAgdHJ5IHtcbiAgICAgICAgZ2xvYmFsSGlzdG9yeS5wdXNoU3RhdGUoaGlzdG9yeVN0YXRlLCAnJywgdXJsKTtcbiAgICAgIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgICAgIC8vIFRoZXkgYXJlIGdvaW5nIHRvIGxvc2Ugc3RhdGUgaGVyZSwgYnV0IHRoZXJlIGlzIG5vIHJlYWxcbiAgICAgICAgLy8gd2F5IHRvIHdhcm4gdGhlbSBhYm91dCBpdCBzaW5jZSB0aGUgcGFnZSB3aWxsIHJlZnJlc2guLi5cbiAgICAgICAgd2luZG93LmxvY2F0aW9uLmFzc2lnbih1cmwpO1xuICAgICAgfVxuXG4gICAgICBhcHBseVR4KG5leHRBY3Rpb24pO1xuICAgIH1cbiAgfVxuXG4gIGZ1bmN0aW9uIHJlcGxhY2UodG8sIHN0YXRlKSB7XG4gICAgdmFyIG5leHRBY3Rpb24gPSBBY3Rpb24uUmVwbGFjZTtcbiAgICB2YXIgbmV4dExvY2F0aW9uID0gZ2V0TmV4dExvY2F0aW9uKHRvLCBzdGF0ZSk7XG5cbiAgICBmdW5jdGlvbiByZXRyeSgpIHtcbiAgICAgIHJlcGxhY2UodG8sIHN0YXRlKTtcbiAgICB9XG5cbiAgICBwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIgPyB3YXJuaW5nKG5leHRMb2NhdGlvbi5wYXRobmFtZS5jaGFyQXQoMCkgPT09ICcvJywgXCJSZWxhdGl2ZSBwYXRobmFtZXMgYXJlIG5vdCBzdXBwb3J0ZWQgaW4gaGFzaCBoaXN0b3J5LnJlcGxhY2UoXCIgKyBKU09OLnN0cmluZ2lmeSh0bykgKyBcIilcIikgOiB2b2lkIDA7XG5cbiAgICBpZiAoYWxsb3dUeChuZXh0QWN0aW9uLCBuZXh0TG9jYXRpb24sIHJldHJ5KSkge1xuICAgICAgdmFyIF9nZXRIaXN0b3J5U3RhdGVBbmRVcjQgPSBnZXRIaXN0b3J5U3RhdGVBbmRVcmwobmV4dExvY2F0aW9uLCBpbmRleCksXG4gICAgICAgICAgaGlzdG9yeVN0YXRlID0gX2dldEhpc3RvcnlTdGF0ZUFuZFVyNFswXSxcbiAgICAgICAgICB1cmwgPSBfZ2V0SGlzdG9yeVN0YXRlQW5kVXI0WzFdOyAvLyBUT0RPOiBTdXBwb3J0IGZvcmNlZCByZWxvYWRpbmdcblxuXG4gICAgICBnbG9iYWxIaXN0b3J5LnJlcGxhY2VTdGF0ZShoaXN0b3J5U3RhdGUsICcnLCB1cmwpO1xuICAgICAgYXBwbHlUeChuZXh0QWN0aW9uKTtcbiAgICB9XG4gIH1cblxuICBmdW5jdGlvbiBnbyhkZWx0YSkge1xuICAgIGdsb2JhbEhpc3RvcnkuZ28oZGVsdGEpO1xuICB9XG5cbiAgdmFyIGhpc3RvcnkgPSB7XG4gICAgZ2V0IGFjdGlvbigpIHtcbiAgICAgIHJldHVybiBhY3Rpb247XG4gICAgfSxcblxuICAgIGdldCBsb2NhdGlvbigpIHtcbiAgICAgIHJldHVybiBsb2NhdGlvbjtcbiAgICB9LFxuXG4gICAgY3JlYXRlSHJlZjogY3JlYXRlSHJlZixcbiAgICBwdXNoOiBwdXNoLFxuICAgIHJlcGxhY2U6IHJlcGxhY2UsXG4gICAgZ286IGdvLFxuICAgIGJhY2s6IGZ1bmN0aW9uIGJhY2soKSB7XG4gICAgICBnbygtMSk7XG4gICAgfSxcbiAgICBmb3J3YXJkOiBmdW5jdGlvbiBmb3J3YXJkKCkge1xuICAgICAgZ28oMSk7XG4gICAgfSxcbiAgICBsaXN0ZW46IGZ1bmN0aW9uIGxpc3RlbihsaXN0ZW5lcikge1xuICAgICAgcmV0dXJuIGxpc3RlbmVycy5wdXNoKGxpc3RlbmVyKTtcbiAgICB9LFxuICAgIGJsb2NrOiBmdW5jdGlvbiBibG9jayhibG9ja2VyKSB7XG4gICAgICB2YXIgdW5ibG9jayA9IGJsb2NrZXJzLnB1c2goYmxvY2tlcik7XG5cbiAgICAgIGlmIChibG9ja2Vycy5sZW5ndGggPT09IDEpIHtcbiAgICAgICAgd2luZG93LmFkZEV2ZW50TGlzdGVuZXIoQmVmb3JlVW5sb2FkRXZlbnRUeXBlLCBwcm9tcHRCZWZvcmVVbmxvYWQpO1xuICAgICAgfVxuXG4gICAgICByZXR1cm4gZnVuY3Rpb24gKCkge1xuICAgICAgICB1bmJsb2NrKCk7IC8vIFJlbW92ZSB0aGUgYmVmb3JldW5sb2FkIGxpc3RlbmVyIHNvIHRoZSBkb2N1bWVudCBtYXlcbiAgICAgICAgLy8gc3RpbGwgYmUgc2FsdmFnZWFibGUgaW4gdGhlIHBhZ2VoaWRlIGV2ZW50LlxuICAgICAgICAvLyBTZWUgaHR0cHM6Ly9odG1sLnNwZWMud2hhdHdnLm9yZy8jdW5sb2FkaW5nLWRvY3VtZW50c1xuXG4gICAgICAgIGlmICghYmxvY2tlcnMubGVuZ3RoKSB7XG4gICAgICAgICAgd2luZG93LnJlbW92ZUV2ZW50TGlzdGVuZXIoQmVmb3JlVW5sb2FkRXZlbnRUeXBlLCBwcm9tcHRCZWZvcmVVbmxvYWQpO1xuICAgICAgICB9XG4gICAgICB9O1xuICAgIH1cbiAgfTtcbiAgcmV0dXJuIGhpc3Rvcnk7XG59XG4vKipcclxuICogTWVtb3J5IGhpc3Rvcnkgc3RvcmVzIHRoZSBjdXJyZW50IGxvY2F0aW9uIGluIG1lbW9yeS4gSXQgaXMgZGVzaWduZWQgZm9yIHVzZVxyXG4gKiBpbiBzdGF0ZWZ1bCBub24tYnJvd3NlciBlbnZpcm9ubWVudHMgbGlrZSB0ZXN0cyBhbmQgUmVhY3QgTmF0aXZlLlxyXG4gKlxyXG4gKiBAc2VlIGh0dHBzOi8vZ2l0aHViLmNvbS9yZW1peC1ydW4vaGlzdG9yeS90cmVlL21haW4vZG9jcy9hcGktcmVmZXJlbmNlLm1kI2NyZWF0ZW1lbW9yeWhpc3RvcnlcclxuICovXG5cbmZ1bmN0aW9uIGNyZWF0ZU1lbW9yeUhpc3Rvcnkob3B0aW9ucykge1xuICBpZiAob3B0aW9ucyA9PT0gdm9pZCAwKSB7XG4gICAgb3B0aW9ucyA9IHt9O1xuICB9XG5cbiAgdmFyIF9vcHRpb25zMyA9IG9wdGlvbnMsXG4gICAgICBfb3B0aW9uczMkaW5pdGlhbEVudHIgPSBfb3B0aW9uczMuaW5pdGlhbEVudHJpZXMsXG4gICAgICBpbml0aWFsRW50cmllcyA9IF9vcHRpb25zMyRpbml0aWFsRW50ciA9PT0gdm9pZCAwID8gWycvJ10gOiBfb3B0aW9uczMkaW5pdGlhbEVudHIsXG4gICAgICBpbml0aWFsSW5kZXggPSBfb3B0aW9uczMuaW5pdGlhbEluZGV4O1xuICB2YXIgZW50cmllcyA9IGluaXRpYWxFbnRyaWVzLm1hcChmdW5jdGlvbiAoZW50cnkpIHtcbiAgICB2YXIgbG9jYXRpb24gPSByZWFkT25seShfZXh0ZW5kcyh7XG4gICAgICBwYXRobmFtZTogJy8nLFxuICAgICAgc2VhcmNoOiAnJyxcbiAgICAgIGhhc2g6ICcnLFxuICAgICAgc3RhdGU6IG51bGwsXG4gICAgICBrZXk6IGNyZWF0ZUtleSgpXG4gICAgfSwgdHlwZW9mIGVudHJ5ID09PSAnc3RyaW5nJyA/IHBhcnNlUGF0aChlbnRyeSkgOiBlbnRyeSkpO1xuICAgIHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIiA/IHdhcm5pbmcobG9jYXRpb24ucGF0aG5hbWUuY2hhckF0KDApID09PSAnLycsIFwiUmVsYXRpdmUgcGF0aG5hbWVzIGFyZSBub3Qgc3VwcG9ydGVkIGluIGNyZWF0ZU1lbW9yeUhpc3RvcnkoeyBpbml0aWFsRW50cmllcyB9KSAoaW52YWxpZCBlbnRyeTogXCIgKyBKU09OLnN0cmluZ2lmeShlbnRyeSkgKyBcIilcIikgOiB2b2lkIDA7XG4gICAgcmV0dXJuIGxvY2F0aW9uO1xuICB9KTtcbiAgdmFyIGluZGV4ID0gY2xhbXAoaW5pdGlhbEluZGV4ID09IG51bGwgPyBlbnRyaWVzLmxlbmd0aCAtIDEgOiBpbml0aWFsSW5kZXgsIDAsIGVudHJpZXMubGVuZ3RoIC0gMSk7XG4gIHZhciBhY3Rpb24gPSBBY3Rpb24uUG9wO1xuICB2YXIgbG9jYXRpb24gPSBlbnRyaWVzW2luZGV4XTtcbiAgdmFyIGxpc3RlbmVycyA9IGNyZWF0ZUV2ZW50cygpO1xuICB2YXIgYmxvY2tlcnMgPSBjcmVhdGVFdmVudHMoKTtcblxuICBmdW5jdGlvbiBjcmVhdGVIcmVmKHRvKSB7XG4gICAgcmV0dXJuIHR5cGVvZiB0byA9PT0gJ3N0cmluZycgPyB0byA6IGNyZWF0ZVBhdGgodG8pO1xuICB9XG5cbiAgZnVuY3Rpb24gZ2V0TmV4dExvY2F0aW9uKHRvLCBzdGF0ZSkge1xuICAgIGlmIChzdGF0ZSA9PT0gdm9pZCAwKSB7XG4gICAgICBzdGF0ZSA9IG51bGw7XG4gICAgfVxuXG4gICAgcmV0dXJuIHJlYWRPbmx5KF9leHRlbmRzKHtcbiAgICAgIHBhdGhuYW1lOiBsb2NhdGlvbi5wYXRobmFtZSxcbiAgICAgIHNlYXJjaDogJycsXG4gICAgICBoYXNoOiAnJ1xuICAgIH0sIHR5cGVvZiB0byA9PT0gJ3N0cmluZycgPyBwYXJzZVBhdGgodG8pIDogdG8sIHtcbiAgICAgIHN0YXRlOiBzdGF0ZSxcbiAgICAgIGtleTogY3JlYXRlS2V5KClcbiAgICB9KSk7XG4gIH1cblxuICBmdW5jdGlvbiBhbGxvd1R4KGFjdGlvbiwgbG9jYXRpb24sIHJldHJ5KSB7XG4gICAgcmV0dXJuICFibG9ja2Vycy5sZW5ndGggfHwgKGJsb2NrZXJzLmNhbGwoe1xuICAgICAgYWN0aW9uOiBhY3Rpb24sXG4gICAgICBsb2NhdGlvbjogbG9jYXRpb24sXG4gICAgICByZXRyeTogcmV0cnlcbiAgICB9KSwgZmFsc2UpO1xuICB9XG5cbiAgZnVuY3Rpb24gYXBwbHlUeChuZXh0QWN0aW9uLCBuZXh0TG9jYXRpb24pIHtcbiAgICBhY3Rpb24gPSBuZXh0QWN0aW9uO1xuICAgIGxvY2F0aW9uID0gbmV4dExvY2F0aW9uO1xuICAgIGxpc3RlbmVycy5jYWxsKHtcbiAgICAgIGFjdGlvbjogYWN0aW9uLFxuICAgICAgbG9jYXRpb246IGxvY2F0aW9uXG4gICAgfSk7XG4gIH1cblxuICBmdW5jdGlvbiBwdXNoKHRvLCBzdGF0ZSkge1xuICAgIHZhciBuZXh0QWN0aW9uID0gQWN0aW9uLlB1c2g7XG4gICAgdmFyIG5leHRMb2NhdGlvbiA9IGdldE5leHRMb2NhdGlvbih0bywgc3RhdGUpO1xuXG4gICAgZnVuY3Rpb24gcmV0cnkoKSB7XG4gICAgICBwdXNoKHRvLCBzdGF0ZSk7XG4gICAgfVxuXG4gICAgcHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiID8gd2FybmluZyhsb2NhdGlvbi5wYXRobmFtZS5jaGFyQXQoMCkgPT09ICcvJywgXCJSZWxhdGl2ZSBwYXRobmFtZXMgYXJlIG5vdCBzdXBwb3J0ZWQgaW4gbWVtb3J5IGhpc3RvcnkucHVzaChcIiArIEpTT04uc3RyaW5naWZ5KHRvKSArIFwiKVwiKSA6IHZvaWQgMDtcblxuICAgIGlmIChhbGxvd1R4KG5leHRBY3Rpb24sIG5leHRMb2NhdGlvbiwgcmV0cnkpKSB7XG4gICAgICBpbmRleCArPSAxO1xuICAgICAgZW50cmllcy5zcGxpY2UoaW5kZXgsIGVudHJpZXMubGVuZ3RoLCBuZXh0TG9jYXRpb24pO1xuICAgICAgYXBwbHlUeChuZXh0QWN0aW9uLCBuZXh0TG9jYXRpb24pO1xuICAgIH1cbiAgfVxuXG4gIGZ1bmN0aW9uIHJlcGxhY2UodG8sIHN0YXRlKSB7XG4gICAgdmFyIG5leHRBY3Rpb24gPSBBY3Rpb24uUmVwbGFjZTtcbiAgICB2YXIgbmV4dExvY2F0aW9uID0gZ2V0TmV4dExvY2F0aW9uKHRvLCBzdGF0ZSk7XG5cbiAgICBmdW5jdGlvbiByZXRyeSgpIHtcbiAgICAgIHJlcGxhY2UodG8sIHN0YXRlKTtcbiAgICB9XG5cbiAgICBwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIgPyB3YXJuaW5nKGxvY2F0aW9uLnBhdGhuYW1lLmNoYXJBdCgwKSA9PT0gJy8nLCBcIlJlbGF0aXZlIHBhdGhuYW1lcyBhcmUgbm90IHN1cHBvcnRlZCBpbiBtZW1vcnkgaGlzdG9yeS5yZXBsYWNlKFwiICsgSlNPTi5zdHJpbmdpZnkodG8pICsgXCIpXCIpIDogdm9pZCAwO1xuXG4gICAgaWYgKGFsbG93VHgobmV4dEFjdGlvbiwgbmV4dExvY2F0aW9uLCByZXRyeSkpIHtcbiAgICAgIGVudHJpZXNbaW5kZXhdID0gbmV4dExvY2F0aW9uO1xuICAgICAgYXBwbHlUeChuZXh0QWN0aW9uLCBuZXh0TG9jYXRpb24pO1xuICAgIH1cbiAgfVxuXG4gIGZ1bmN0aW9uIGdvKGRlbHRhKSB7XG4gICAgdmFyIG5leHRJbmRleCA9IGNsYW1wKGluZGV4ICsgZGVsdGEsIDAsIGVudHJpZXMubGVuZ3RoIC0gMSk7XG4gICAgdmFyIG5leHRBY3Rpb24gPSBBY3Rpb24uUG9wO1xuICAgIHZhciBuZXh0TG9jYXRpb24gPSBlbnRyaWVzW25leHRJbmRleF07XG5cbiAgICBmdW5jdGlvbiByZXRyeSgpIHtcbiAgICAgIGdvKGRlbHRhKTtcbiAgICB9XG5cbiAgICBpZiAoYWxsb3dUeChuZXh0QWN0aW9uLCBuZXh0TG9jYXRpb24sIHJldHJ5KSkge1xuICAgICAgaW5kZXggPSBuZXh0SW5kZXg7XG4gICAgICBhcHBseVR4KG5leHRBY3Rpb24sIG5leHRMb2NhdGlvbik7XG4gICAgfVxuICB9XG5cbiAgdmFyIGhpc3RvcnkgPSB7XG4gICAgZ2V0IGluZGV4KCkge1xuICAgICAgcmV0dXJuIGluZGV4O1xuICAgIH0sXG5cbiAgICBnZXQgYWN0aW9uKCkge1xuICAgICAgcmV0dXJuIGFjdGlvbjtcbiAgICB9LFxuXG4gICAgZ2V0IGxvY2F0aW9uKCkge1xuICAgICAgcmV0dXJuIGxvY2F0aW9uO1xuICAgIH0sXG5cbiAgICBjcmVhdGVIcmVmOiBjcmVhdGVIcmVmLFxuICAgIHB1c2g6IHB1c2gsXG4gICAgcmVwbGFjZTogcmVwbGFjZSxcbiAgICBnbzogZ28sXG4gICAgYmFjazogZnVuY3Rpb24gYmFjaygpIHtcbiAgICAgIGdvKC0xKTtcbiAgICB9LFxuICAgIGZvcndhcmQ6IGZ1bmN0aW9uIGZvcndhcmQoKSB7XG4gICAgICBnbygxKTtcbiAgICB9LFxuICAgIGxpc3RlbjogZnVuY3Rpb24gbGlzdGVuKGxpc3RlbmVyKSB7XG4gICAgICByZXR1cm4gbGlzdGVuZXJzLnB1c2gobGlzdGVuZXIpO1xuICAgIH0sXG4gICAgYmxvY2s6IGZ1bmN0aW9uIGJsb2NrKGJsb2NrZXIpIHtcbiAgICAgIHJldHVybiBibG9ja2Vycy5wdXNoKGJsb2NrZXIpO1xuICAgIH1cbiAgfTtcbiAgcmV0dXJuIGhpc3Rvcnk7XG59IC8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBVVElMU1xuLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy9cblxuZnVuY3Rpb24gY2xhbXAobiwgbG93ZXJCb3VuZCwgdXBwZXJCb3VuZCkge1xuICByZXR1cm4gTWF0aC5taW4oTWF0aC5tYXgobiwgbG93ZXJCb3VuZCksIHVwcGVyQm91bmQpO1xufVxuXG5mdW5jdGlvbiBwcm9tcHRCZWZvcmVVbmxvYWQoZXZlbnQpIHtcbiAgLy8gQ2FuY2VsIHRoZSBldmVudC5cbiAgZXZlbnQucHJldmVudERlZmF1bHQoKTsgLy8gQ2hyb21lIChhbmQgbGVnYWN5IElFKSByZXF1aXJlcyByZXR1cm5WYWx1ZSB0byBiZSBzZXQuXG5cbiAgZXZlbnQucmV0dXJuVmFsdWUgPSAnJztcbn1cblxuZnVuY3Rpb24gY3JlYXRlRXZlbnRzKCkge1xuICB2YXIgaGFuZGxlcnMgPSBbXTtcbiAgcmV0dXJuIHtcbiAgICBnZXQgbGVuZ3RoKCkge1xuICAgICAgcmV0dXJuIGhhbmRsZXJzLmxlbmd0aDtcbiAgICB9LFxuXG4gICAgcHVzaDogZnVuY3Rpb24gcHVzaChmbikge1xuICAgICAgaGFuZGxlcnMucHVzaChmbik7XG4gICAgICByZXR1cm4gZnVuY3Rpb24gKCkge1xuICAgICAgICBoYW5kbGVycyA9IGhhbmRsZXJzLmZpbHRlcihmdW5jdGlvbiAoaGFuZGxlcikge1xuICAgICAgICAgIHJldHVybiBoYW5kbGVyICE9PSBmbjtcbiAgICAgICAgfSk7XG4gICAgICB9O1xuICAgIH0sXG4gICAgY2FsbDogZnVuY3Rpb24gY2FsbChhcmcpIHtcbiAgICAgIGhhbmRsZXJzLmZvckVhY2goZnVuY3Rpb24gKGZuKSB7XG4gICAgICAgIHJldHVybiBmbiAmJiBmbihhcmcpO1xuICAgICAgfSk7XG4gICAgfVxuICB9O1xufVxuXG5mdW5jdGlvbiBjcmVhdGVLZXkoKSB7XG4gIHJldHVybiBNYXRoLnJhbmRvbSgpLnRvU3RyaW5nKDM2KS5zdWJzdHIoMiwgOCk7XG59XG4vKipcclxuICogQ3JlYXRlcyBhIHN0cmluZyBVUkwgcGF0aCBmcm9tIHRoZSBnaXZlbiBwYXRobmFtZSwgc2VhcmNoLCBhbmQgaGFzaCBjb21wb25lbnRzLlxyXG4gKlxyXG4gKiBAc2VlIGh0dHBzOi8vZ2l0aHViLmNvbS9yZW1peC1ydW4vaGlzdG9yeS90cmVlL21haW4vZG9jcy9hcGktcmVmZXJlbmNlLm1kI2NyZWF0ZXBhdGhcclxuICovXG5cblxuZnVuY3Rpb24gY3JlYXRlUGF0aChfcmVmKSB7XG4gIHZhciBfcmVmJHBhdGhuYW1lID0gX3JlZi5wYXRobmFtZSxcbiAgICAgIHBhdGhuYW1lID0gX3JlZiRwYXRobmFtZSA9PT0gdm9pZCAwID8gJy8nIDogX3JlZiRwYXRobmFtZSxcbiAgICAgIF9yZWYkc2VhcmNoID0gX3JlZi5zZWFyY2gsXG4gICAgICBzZWFyY2ggPSBfcmVmJHNlYXJjaCA9PT0gdm9pZCAwID8gJycgOiBfcmVmJHNlYXJjaCxcbiAgICAgIF9yZWYkaGFzaCA9IF9yZWYuaGFzaCxcbiAgICAgIGhhc2ggPSBfcmVmJGhhc2ggPT09IHZvaWQgMCA/ICcnIDogX3JlZiRoYXNoO1xuICBpZiAoc2VhcmNoICYmIHNlYXJjaCAhPT0gJz8nKSBwYXRobmFtZSArPSBzZWFyY2guY2hhckF0KDApID09PSAnPycgPyBzZWFyY2ggOiAnPycgKyBzZWFyY2g7XG4gIGlmIChoYXNoICYmIGhhc2ggIT09ICcjJykgcGF0aG5hbWUgKz0gaGFzaC5jaGFyQXQoMCkgPT09ICcjJyA/IGhhc2ggOiAnIycgKyBoYXNoO1xuICByZXR1cm4gcGF0aG5hbWU7XG59XG4vKipcclxuICogUGFyc2VzIGEgc3RyaW5nIFVSTCBwYXRoIGludG8gaXRzIHNlcGFyYXRlIHBhdGhuYW1lLCBzZWFyY2gsIGFuZCBoYXNoIGNvbXBvbmVudHMuXHJcbiAqXHJcbiAqIEBzZWUgaHR0cHM6Ly9naXRodWIuY29tL3JlbWl4LXJ1bi9oaXN0b3J5L3RyZWUvbWFpbi9kb2NzL2FwaS1yZWZlcmVuY2UubWQjcGFyc2VwYXRoXHJcbiAqL1xuXG5mdW5jdGlvbiBwYXJzZVBhdGgocGF0aCkge1xuICB2YXIgcGFyc2VkUGF0aCA9IHt9O1xuXG4gIGlmIChwYXRoKSB7XG4gICAgdmFyIGhhc2hJbmRleCA9IHBhdGguaW5kZXhPZignIycpO1xuXG4gICAgaWYgKGhhc2hJbmRleCA+PSAwKSB7XG4gICAgICBwYXJzZWRQYXRoLmhhc2ggPSBwYXRoLnN1YnN0cihoYXNoSW5kZXgpO1xuICAgICAgcGF0aCA9IHBhdGguc3Vic3RyKDAsIGhhc2hJbmRleCk7XG4gICAgfVxuXG4gICAgdmFyIHNlYXJjaEluZGV4ID0gcGF0aC5pbmRleE9mKCc/Jyk7XG5cbiAgICBpZiAoc2VhcmNoSW5kZXggPj0gMCkge1xuICAgICAgcGFyc2VkUGF0aC5zZWFyY2ggPSBwYXRoLnN1YnN0cihzZWFyY2hJbmRleCk7XG4gICAgICBwYXRoID0gcGF0aC5zdWJzdHIoMCwgc2VhcmNoSW5kZXgpO1xuICAgIH1cblxuICAgIGlmIChwYXRoKSB7XG4gICAgICBwYXJzZWRQYXRoLnBhdGhuYW1lID0gcGF0aDtcbiAgICB9XG4gIH1cblxuICByZXR1cm4gcGFyc2VkUGF0aDtcbn1cblxuZXhwb3J0IHsgQWN0aW9uLCBjcmVhdGVCcm93c2VySGlzdG9yeSwgY3JlYXRlSGFzaEhpc3RvcnksIGNyZWF0ZU1lbW9yeUhpc3RvcnksIGNyZWF0ZVBhdGgsIHBhcnNlUGF0aCB9O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9aW5kZXguanMubWFwXG4iLCIvKipcbiAqIFJlYWN0IFJvdXRlciB2Ni4zLjBcbiAqXG4gKiBDb3B5cmlnaHQgKGMpIFJlbWl4IFNvZnR3YXJlIEluYy5cbiAqXG4gKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZSBmb3VuZCBpbiB0aGVcbiAqIExJQ0VOU0UubWQgZmlsZSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBzb3VyY2UgdHJlZS5cbiAqXG4gKiBAbGljZW5zZSBNSVRcbiAqL1xuaW1wb3J0IHsgcGFyc2VQYXRoLCBjcmVhdGVNZW1vcnlIaXN0b3J5LCBBY3Rpb24gfSBmcm9tICdoaXN0b3J5JztcbmV4cG9ydCB7IEFjdGlvbiBhcyBOYXZpZ2F0aW9uVHlwZSwgY3JlYXRlUGF0aCwgcGFyc2VQYXRoIH0gZnJvbSAnaGlzdG9yeSc7XG5pbXBvcnQgeyBjcmVhdGVDb250ZXh0LCB1c2VDb250ZXh0LCB1c2VNZW1vLCB1c2VSZWYsIHVzZUVmZmVjdCwgdXNlQ2FsbGJhY2ssIGNyZWF0ZUVsZW1lbnQsIHVzZVN0YXRlLCB1c2VMYXlvdXRFZmZlY3QsIENoaWxkcmVuLCBpc1ZhbGlkRWxlbWVudCwgRnJhZ21lbnQgfSBmcm9tICdyZWFjdCc7XG5cbmNvbnN0IE5hdmlnYXRpb25Db250ZXh0ID0gLyojX19QVVJFX18qL2NyZWF0ZUNvbnRleHQobnVsbCk7XG5cbmlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIpIHtcbiAgTmF2aWdhdGlvbkNvbnRleHQuZGlzcGxheU5hbWUgPSBcIk5hdmlnYXRpb25cIjtcbn1cblxuY29uc3QgTG9jYXRpb25Db250ZXh0ID0gLyojX19QVVJFX18qL2NyZWF0ZUNvbnRleHQobnVsbCk7XG5cbmlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIpIHtcbiAgTG9jYXRpb25Db250ZXh0LmRpc3BsYXlOYW1lID0gXCJMb2NhdGlvblwiO1xufVxuXG5jb25zdCBSb3V0ZUNvbnRleHQgPSAvKiNfX1BVUkVfXyovY3JlYXRlQ29udGV4dCh7XG4gIG91dGxldDogbnVsbCxcbiAgbWF0Y2hlczogW11cbn0pO1xuXG5pZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiKSB7XG4gIFJvdXRlQ29udGV4dC5kaXNwbGF5TmFtZSA9IFwiUm91dGVcIjtcbn1cblxuZnVuY3Rpb24gaW52YXJpYW50KGNvbmQsIG1lc3NhZ2UpIHtcbiAgaWYgKCFjb25kKSB0aHJvdyBuZXcgRXJyb3IobWVzc2FnZSk7XG59XG5mdW5jdGlvbiB3YXJuaW5nKGNvbmQsIG1lc3NhZ2UpIHtcbiAgaWYgKCFjb25kKSB7XG4gICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLWNvbnNvbGVcbiAgICBpZiAodHlwZW9mIGNvbnNvbGUgIT09IFwidW5kZWZpbmVkXCIpIGNvbnNvbGUud2FybihtZXNzYWdlKTtcblxuICAgIHRyeSB7XG4gICAgICAvLyBXZWxjb21lIHRvIGRlYnVnZ2luZyBSZWFjdCBSb3V0ZXIhXG4gICAgICAvL1xuICAgICAgLy8gVGhpcyBlcnJvciBpcyB0aHJvd24gYXMgYSBjb252ZW5pZW5jZSBzbyB5b3UgY2FuIG1vcmUgZWFzaWx5XG4gICAgICAvLyBmaW5kIHRoZSBzb3VyY2UgZm9yIGEgd2FybmluZyB0aGF0IGFwcGVhcnMgaW4gdGhlIGNvbnNvbGUgYnlcbiAgICAgIC8vIGVuYWJsaW5nIFwicGF1c2Ugb24gZXhjZXB0aW9uc1wiIGluIHlvdXIgSmF2YVNjcmlwdCBkZWJ1Z2dlci5cbiAgICAgIHRocm93IG5ldyBFcnJvcihtZXNzYWdlKTsgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLWVtcHR5XG4gICAgfSBjYXRjaCAoZSkge31cbiAgfVxufVxuY29uc3QgYWxyZWFkeVdhcm5lZCA9IHt9O1xuZnVuY3Rpb24gd2FybmluZ09uY2Uoa2V5LCBjb25kLCBtZXNzYWdlKSB7XG4gIGlmICghY29uZCAmJiAhYWxyZWFkeVdhcm5lZFtrZXldKSB7XG4gICAgYWxyZWFkeVdhcm5lZFtrZXldID0gdHJ1ZTtcbiAgICBwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIgPyB3YXJuaW5nKGZhbHNlLCBtZXNzYWdlKSA6IHZvaWQgMDtcbiAgfVxufVxuXG4vKipcbiAqIFJldHVybnMgYSBwYXRoIHdpdGggcGFyYW1zIGludGVycG9sYXRlZC5cbiAqXG4gKiBAc2VlIGh0dHBzOi8vcmVhY3Ryb3V0ZXIuY29tL2RvY3MvZW4vdjYvYXBpI2dlbmVyYXRlcGF0aFxuICovXG5mdW5jdGlvbiBnZW5lcmF0ZVBhdGgocGF0aCwgcGFyYW1zKSB7XG4gIGlmIChwYXJhbXMgPT09IHZvaWQgMCkge1xuICAgIHBhcmFtcyA9IHt9O1xuICB9XG5cbiAgcmV0dXJuIHBhdGgucmVwbGFjZSgvOihcXHcrKS9nLCAoXywga2V5KSA9PiB7XG4gICAgIShwYXJhbXNba2V5XSAhPSBudWxsKSA/IHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIiA/IGludmFyaWFudChmYWxzZSwgXCJNaXNzaW5nIFxcXCI6XCIgKyBrZXkgKyBcIlxcXCIgcGFyYW1cIikgOiBpbnZhcmlhbnQoZmFsc2UpIDogdm9pZCAwO1xuICAgIHJldHVybiBwYXJhbXNba2V5XTtcbiAgfSkucmVwbGFjZSgvXFwvKlxcKiQvLCBfID0+IHBhcmFtc1tcIipcIl0gPT0gbnVsbCA/IFwiXCIgOiBwYXJhbXNbXCIqXCJdLnJlcGxhY2UoL15cXC8qLywgXCIvXCIpKTtcbn1cbi8qKlxuICogQSBSb3V0ZU1hdGNoIGNvbnRhaW5zIGluZm8gYWJvdXQgaG93IGEgcm91dGUgbWF0Y2hlZCBhIFVSTC5cbiAqL1xuXG4vKipcbiAqIE1hdGNoZXMgdGhlIGdpdmVuIHJvdXRlcyB0byBhIGxvY2F0aW9uIGFuZCByZXR1cm5zIHRoZSBtYXRjaCBkYXRhLlxuICpcbiAqIEBzZWUgaHR0cHM6Ly9yZWFjdHJvdXRlci5jb20vZG9jcy9lbi92Ni9hcGkjbWF0Y2hyb3V0ZXNcbiAqL1xuZnVuY3Rpb24gbWF0Y2hSb3V0ZXMocm91dGVzLCBsb2NhdGlvbkFyZywgYmFzZW5hbWUpIHtcbiAgaWYgKGJhc2VuYW1lID09PSB2b2lkIDApIHtcbiAgICBiYXNlbmFtZSA9IFwiL1wiO1xuICB9XG5cbiAgbGV0IGxvY2F0aW9uID0gdHlwZW9mIGxvY2F0aW9uQXJnID09PSBcInN0cmluZ1wiID8gcGFyc2VQYXRoKGxvY2F0aW9uQXJnKSA6IGxvY2F0aW9uQXJnO1xuICBsZXQgcGF0aG5hbWUgPSBzdHJpcEJhc2VuYW1lKGxvY2F0aW9uLnBhdGhuYW1lIHx8IFwiL1wiLCBiYXNlbmFtZSk7XG5cbiAgaWYgKHBhdGhuYW1lID09IG51bGwpIHtcbiAgICByZXR1cm4gbnVsbDtcbiAgfVxuXG4gIGxldCBicmFuY2hlcyA9IGZsYXR0ZW5Sb3V0ZXMocm91dGVzKTtcbiAgcmFua1JvdXRlQnJhbmNoZXMoYnJhbmNoZXMpO1xuICBsZXQgbWF0Y2hlcyA9IG51bGw7XG5cbiAgZm9yIChsZXQgaSA9IDA7IG1hdGNoZXMgPT0gbnVsbCAmJiBpIDwgYnJhbmNoZXMubGVuZ3RoOyArK2kpIHtcbiAgICBtYXRjaGVzID0gbWF0Y2hSb3V0ZUJyYW5jaChicmFuY2hlc1tpXSwgcGF0aG5hbWUpO1xuICB9XG5cbiAgcmV0dXJuIG1hdGNoZXM7XG59XG5cbmZ1bmN0aW9uIGZsYXR0ZW5Sb3V0ZXMocm91dGVzLCBicmFuY2hlcywgcGFyZW50c01ldGEsIHBhcmVudFBhdGgpIHtcbiAgaWYgKGJyYW5jaGVzID09PSB2b2lkIDApIHtcbiAgICBicmFuY2hlcyA9IFtdO1xuICB9XG5cbiAgaWYgKHBhcmVudHNNZXRhID09PSB2b2lkIDApIHtcbiAgICBwYXJlbnRzTWV0YSA9IFtdO1xuICB9XG5cbiAgaWYgKHBhcmVudFBhdGggPT09IHZvaWQgMCkge1xuICAgIHBhcmVudFBhdGggPSBcIlwiO1xuICB9XG5cbiAgcm91dGVzLmZvckVhY2goKHJvdXRlLCBpbmRleCkgPT4ge1xuICAgIGxldCBtZXRhID0ge1xuICAgICAgcmVsYXRpdmVQYXRoOiByb3V0ZS5wYXRoIHx8IFwiXCIsXG4gICAgICBjYXNlU2Vuc2l0aXZlOiByb3V0ZS5jYXNlU2Vuc2l0aXZlID09PSB0cnVlLFxuICAgICAgY2hpbGRyZW5JbmRleDogaW5kZXgsXG4gICAgICByb3V0ZVxuICAgIH07XG5cbiAgICBpZiAobWV0YS5yZWxhdGl2ZVBhdGguc3RhcnRzV2l0aChcIi9cIikpIHtcbiAgICAgICFtZXRhLnJlbGF0aXZlUGF0aC5zdGFydHNXaXRoKHBhcmVudFBhdGgpID8gcHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiID8gaW52YXJpYW50KGZhbHNlLCBcIkFic29sdXRlIHJvdXRlIHBhdGggXFxcIlwiICsgbWV0YS5yZWxhdGl2ZVBhdGggKyBcIlxcXCIgbmVzdGVkIHVuZGVyIHBhdGggXCIgKyAoXCJcXFwiXCIgKyBwYXJlbnRQYXRoICsgXCJcXFwiIGlzIG5vdCB2YWxpZC4gQW4gYWJzb2x1dGUgY2hpbGQgcm91dGUgcGF0aCBcIikgKyBcIm11c3Qgc3RhcnQgd2l0aCB0aGUgY29tYmluZWQgcGF0aCBvZiBhbGwgaXRzIHBhcmVudCByb3V0ZXMuXCIpIDogaW52YXJpYW50KGZhbHNlKSA6IHZvaWQgMDtcbiAgICAgIG1ldGEucmVsYXRpdmVQYXRoID0gbWV0YS5yZWxhdGl2ZVBhdGguc2xpY2UocGFyZW50UGF0aC5sZW5ndGgpO1xuICAgIH1cblxuICAgIGxldCBwYXRoID0gam9pblBhdGhzKFtwYXJlbnRQYXRoLCBtZXRhLnJlbGF0aXZlUGF0aF0pO1xuICAgIGxldCByb3V0ZXNNZXRhID0gcGFyZW50c01ldGEuY29uY2F0KG1ldGEpOyAvLyBBZGQgdGhlIGNoaWxkcmVuIGJlZm9yZSBhZGRpbmcgdGhpcyByb3V0ZSB0byB0aGUgYXJyYXkgc28gd2UgdHJhdmVyc2UgdGhlXG4gICAgLy8gcm91dGUgdHJlZSBkZXB0aC1maXJzdCBhbmQgY2hpbGQgcm91dGVzIGFwcGVhciBiZWZvcmUgdGhlaXIgcGFyZW50cyBpblxuICAgIC8vIHRoZSBcImZsYXR0ZW5lZFwiIHZlcnNpb24uXG5cbiAgICBpZiAocm91dGUuY2hpbGRyZW4gJiYgcm91dGUuY2hpbGRyZW4ubGVuZ3RoID4gMCkge1xuICAgICAgIShyb3V0ZS5pbmRleCAhPT0gdHJ1ZSkgPyBwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIgPyBpbnZhcmlhbnQoZmFsc2UsIFwiSW5kZXggcm91dGVzIG11c3Qgbm90IGhhdmUgY2hpbGQgcm91dGVzLiBQbGVhc2UgcmVtb3ZlIFwiICsgKFwiYWxsIGNoaWxkIHJvdXRlcyBmcm9tIHJvdXRlIHBhdGggXFxcIlwiICsgcGF0aCArIFwiXFxcIi5cIikpIDogaW52YXJpYW50KGZhbHNlKSA6IHZvaWQgMDtcbiAgICAgIGZsYXR0ZW5Sb3V0ZXMocm91dGUuY2hpbGRyZW4sIGJyYW5jaGVzLCByb3V0ZXNNZXRhLCBwYXRoKTtcbiAgICB9IC8vIFJvdXRlcyB3aXRob3V0IGEgcGF0aCBzaG91bGRuJ3QgZXZlciBtYXRjaCBieSB0aGVtc2VsdmVzIHVubGVzcyB0aGV5IGFyZVxuICAgIC8vIGluZGV4IHJvdXRlcywgc28gZG9uJ3QgYWRkIHRoZW0gdG8gdGhlIGxpc3Qgb2YgcG9zc2libGUgYnJhbmNoZXMuXG5cblxuICAgIGlmIChyb3V0ZS5wYXRoID09IG51bGwgJiYgIXJvdXRlLmluZGV4KSB7XG4gICAgICByZXR1cm47XG4gICAgfVxuXG4gICAgYnJhbmNoZXMucHVzaCh7XG4gICAgICBwYXRoLFxuICAgICAgc2NvcmU6IGNvbXB1dGVTY29yZShwYXRoLCByb3V0ZS5pbmRleCksXG4gICAgICByb3V0ZXNNZXRhXG4gICAgfSk7XG4gIH0pO1xuICByZXR1cm4gYnJhbmNoZXM7XG59XG5cbmZ1bmN0aW9uIHJhbmtSb3V0ZUJyYW5jaGVzKGJyYW5jaGVzKSB7XG4gIGJyYW5jaGVzLnNvcnQoKGEsIGIpID0+IGEuc2NvcmUgIT09IGIuc2NvcmUgPyBiLnNjb3JlIC0gYS5zY29yZSAvLyBIaWdoZXIgc2NvcmUgZmlyc3RcbiAgOiBjb21wYXJlSW5kZXhlcyhhLnJvdXRlc01ldGEubWFwKG1ldGEgPT4gbWV0YS5jaGlsZHJlbkluZGV4KSwgYi5yb3V0ZXNNZXRhLm1hcChtZXRhID0+IG1ldGEuY2hpbGRyZW5JbmRleCkpKTtcbn1cblxuY29uc3QgcGFyYW1SZSA9IC9eOlxcdyskLztcbmNvbnN0IGR5bmFtaWNTZWdtZW50VmFsdWUgPSAzO1xuY29uc3QgaW5kZXhSb3V0ZVZhbHVlID0gMjtcbmNvbnN0IGVtcHR5U2VnbWVudFZhbHVlID0gMTtcbmNvbnN0IHN0YXRpY1NlZ21lbnRWYWx1ZSA9IDEwO1xuY29uc3Qgc3BsYXRQZW5hbHR5ID0gLTI7XG5cbmNvbnN0IGlzU3BsYXQgPSBzID0+IHMgPT09IFwiKlwiO1xuXG5mdW5jdGlvbiBjb21wdXRlU2NvcmUocGF0aCwgaW5kZXgpIHtcbiAgbGV0IHNlZ21lbnRzID0gcGF0aC5zcGxpdChcIi9cIik7XG4gIGxldCBpbml0aWFsU2NvcmUgPSBzZWdtZW50cy5sZW5ndGg7XG5cbiAgaWYgKHNlZ21lbnRzLnNvbWUoaXNTcGxhdCkpIHtcbiAgICBpbml0aWFsU2NvcmUgKz0gc3BsYXRQZW5hbHR5O1xuICB9XG5cbiAgaWYgKGluZGV4KSB7XG4gICAgaW5pdGlhbFNjb3JlICs9IGluZGV4Um91dGVWYWx1ZTtcbiAgfVxuXG4gIHJldHVybiBzZWdtZW50cy5maWx0ZXIocyA9PiAhaXNTcGxhdChzKSkucmVkdWNlKChzY29yZSwgc2VnbWVudCkgPT4gc2NvcmUgKyAocGFyYW1SZS50ZXN0KHNlZ21lbnQpID8gZHluYW1pY1NlZ21lbnRWYWx1ZSA6IHNlZ21lbnQgPT09IFwiXCIgPyBlbXB0eVNlZ21lbnRWYWx1ZSA6IHN0YXRpY1NlZ21lbnRWYWx1ZSksIGluaXRpYWxTY29yZSk7XG59XG5cbmZ1bmN0aW9uIGNvbXBhcmVJbmRleGVzKGEsIGIpIHtcbiAgbGV0IHNpYmxpbmdzID0gYS5sZW5ndGggPT09IGIubGVuZ3RoICYmIGEuc2xpY2UoMCwgLTEpLmV2ZXJ5KChuLCBpKSA9PiBuID09PSBiW2ldKTtcbiAgcmV0dXJuIHNpYmxpbmdzID8gLy8gSWYgdHdvIHJvdXRlcyBhcmUgc2libGluZ3MsIHdlIHNob3VsZCB0cnkgdG8gbWF0Y2ggdGhlIGVhcmxpZXIgc2libGluZ1xuICAvLyBmaXJzdC4gVGhpcyBhbGxvd3MgcGVvcGxlIHRvIGhhdmUgZmluZS1ncmFpbmVkIGNvbnRyb2wgb3ZlciB0aGUgbWF0Y2hpbmdcbiAgLy8gYmVoYXZpb3IgYnkgc2ltcGx5IHB1dHRpbmcgcm91dGVzIHdpdGggaWRlbnRpY2FsIHBhdGhzIGluIHRoZSBvcmRlciB0aGV5XG4gIC8vIHdhbnQgdGhlbSB0cmllZC5cbiAgYVthLmxlbmd0aCAtIDFdIC0gYltiLmxlbmd0aCAtIDFdIDogLy8gT3RoZXJ3aXNlLCBpdCBkb2Vzbid0IHJlYWxseSBtYWtlIHNlbnNlIHRvIHJhbmsgbm9uLXNpYmxpbmdzIGJ5IGluZGV4LFxuICAvLyBzbyB0aGV5IHNvcnQgZXF1YWxseS5cbiAgMDtcbn1cblxuZnVuY3Rpb24gbWF0Y2hSb3V0ZUJyYW5jaChicmFuY2gsIHBhdGhuYW1lKSB7XG4gIGxldCB7XG4gICAgcm91dGVzTWV0YVxuICB9ID0gYnJhbmNoO1xuICBsZXQgbWF0Y2hlZFBhcmFtcyA9IHt9O1xuICBsZXQgbWF0Y2hlZFBhdGhuYW1lID0gXCIvXCI7XG4gIGxldCBtYXRjaGVzID0gW107XG5cbiAgZm9yIChsZXQgaSA9IDA7IGkgPCByb3V0ZXNNZXRhLmxlbmd0aDsgKytpKSB7XG4gICAgbGV0IG1ldGEgPSByb3V0ZXNNZXRhW2ldO1xuICAgIGxldCBlbmQgPSBpID09PSByb3V0ZXNNZXRhLmxlbmd0aCAtIDE7XG4gICAgbGV0IHJlbWFpbmluZ1BhdGhuYW1lID0gbWF0Y2hlZFBhdGhuYW1lID09PSBcIi9cIiA/IHBhdGhuYW1lIDogcGF0aG5hbWUuc2xpY2UobWF0Y2hlZFBhdGhuYW1lLmxlbmd0aCkgfHwgXCIvXCI7XG4gICAgbGV0IG1hdGNoID0gbWF0Y2hQYXRoKHtcbiAgICAgIHBhdGg6IG1ldGEucmVsYXRpdmVQYXRoLFxuICAgICAgY2FzZVNlbnNpdGl2ZTogbWV0YS5jYXNlU2Vuc2l0aXZlLFxuICAgICAgZW5kXG4gICAgfSwgcmVtYWluaW5nUGF0aG5hbWUpO1xuICAgIGlmICghbWF0Y2gpIHJldHVybiBudWxsO1xuICAgIE9iamVjdC5hc3NpZ24obWF0Y2hlZFBhcmFtcywgbWF0Y2gucGFyYW1zKTtcbiAgICBsZXQgcm91dGUgPSBtZXRhLnJvdXRlO1xuICAgIG1hdGNoZXMucHVzaCh7XG4gICAgICBwYXJhbXM6IG1hdGNoZWRQYXJhbXMsXG4gICAgICBwYXRobmFtZTogam9pblBhdGhzKFttYXRjaGVkUGF0aG5hbWUsIG1hdGNoLnBhdGhuYW1lXSksXG4gICAgICBwYXRobmFtZUJhc2U6IG5vcm1hbGl6ZVBhdGhuYW1lKGpvaW5QYXRocyhbbWF0Y2hlZFBhdGhuYW1lLCBtYXRjaC5wYXRobmFtZUJhc2VdKSksXG4gICAgICByb3V0ZVxuICAgIH0pO1xuXG4gICAgaWYgKG1hdGNoLnBhdGhuYW1lQmFzZSAhPT0gXCIvXCIpIHtcbiAgICAgIG1hdGNoZWRQYXRobmFtZSA9IGpvaW5QYXRocyhbbWF0Y2hlZFBhdGhuYW1lLCBtYXRjaC5wYXRobmFtZUJhc2VdKTtcbiAgICB9XG4gIH1cblxuICByZXR1cm4gbWF0Y2hlcztcbn1cbi8qKlxuICogQSBQYXRoUGF0dGVybiBpcyB1c2VkIHRvIG1hdGNoIG9uIHNvbWUgcG9ydGlvbiBvZiBhIFVSTCBwYXRobmFtZS5cbiAqL1xuXG5cbi8qKlxuICogUGVyZm9ybXMgcGF0dGVybiBtYXRjaGluZyBvbiBhIFVSTCBwYXRobmFtZSBhbmQgcmV0dXJucyBpbmZvcm1hdGlvbiBhYm91dFxuICogdGhlIG1hdGNoLlxuICpcbiAqIEBzZWUgaHR0cHM6Ly9yZWFjdHJvdXRlci5jb20vZG9jcy9lbi92Ni9hcGkjbWF0Y2hwYXRoXG4gKi9cbmZ1bmN0aW9uIG1hdGNoUGF0aChwYXR0ZXJuLCBwYXRobmFtZSkge1xuICBpZiAodHlwZW9mIHBhdHRlcm4gPT09IFwic3RyaW5nXCIpIHtcbiAgICBwYXR0ZXJuID0ge1xuICAgICAgcGF0aDogcGF0dGVybixcbiAgICAgIGNhc2VTZW5zaXRpdmU6IGZhbHNlLFxuICAgICAgZW5kOiB0cnVlXG4gICAgfTtcbiAgfVxuXG4gIGxldCBbbWF0Y2hlciwgcGFyYW1OYW1lc10gPSBjb21waWxlUGF0aChwYXR0ZXJuLnBhdGgsIHBhdHRlcm4uY2FzZVNlbnNpdGl2ZSwgcGF0dGVybi5lbmQpO1xuICBsZXQgbWF0Y2ggPSBwYXRobmFtZS5tYXRjaChtYXRjaGVyKTtcbiAgaWYgKCFtYXRjaCkgcmV0dXJuIG51bGw7XG4gIGxldCBtYXRjaGVkUGF0aG5hbWUgPSBtYXRjaFswXTtcbiAgbGV0IHBhdGhuYW1lQmFzZSA9IG1hdGNoZWRQYXRobmFtZS5yZXBsYWNlKC8oLilcXC8rJC8sIFwiJDFcIik7XG4gIGxldCBjYXB0dXJlR3JvdXBzID0gbWF0Y2guc2xpY2UoMSk7XG4gIGxldCBwYXJhbXMgPSBwYXJhbU5hbWVzLnJlZHVjZSgobWVtbywgcGFyYW1OYW1lLCBpbmRleCkgPT4ge1xuICAgIC8vIFdlIG5lZWQgdG8gY29tcHV0ZSB0aGUgcGF0aG5hbWVCYXNlIGhlcmUgdXNpbmcgdGhlIHJhdyBzcGxhdCB2YWx1ZVxuICAgIC8vIGluc3RlYWQgb2YgdXNpbmcgcGFyYW1zW1wiKlwiXSBsYXRlciBiZWNhdXNlIGl0IHdpbGwgYmUgZGVjb2RlZCB0aGVuXG4gICAgaWYgKHBhcmFtTmFtZSA9PT0gXCIqXCIpIHtcbiAgICAgIGxldCBzcGxhdFZhbHVlID0gY2FwdHVyZUdyb3Vwc1tpbmRleF0gfHwgXCJcIjtcbiAgICAgIHBhdGhuYW1lQmFzZSA9IG1hdGNoZWRQYXRobmFtZS5zbGljZSgwLCBtYXRjaGVkUGF0aG5hbWUubGVuZ3RoIC0gc3BsYXRWYWx1ZS5sZW5ndGgpLnJlcGxhY2UoLyguKVxcLyskLywgXCIkMVwiKTtcbiAgICB9XG5cbiAgICBtZW1vW3BhcmFtTmFtZV0gPSBzYWZlbHlEZWNvZGVVUklDb21wb25lbnQoY2FwdHVyZUdyb3Vwc1tpbmRleF0gfHwgXCJcIiwgcGFyYW1OYW1lKTtcbiAgICByZXR1cm4gbWVtbztcbiAgfSwge30pO1xuICByZXR1cm4ge1xuICAgIHBhcmFtcyxcbiAgICBwYXRobmFtZTogbWF0Y2hlZFBhdGhuYW1lLFxuICAgIHBhdGhuYW1lQmFzZSxcbiAgICBwYXR0ZXJuXG4gIH07XG59XG5cbmZ1bmN0aW9uIGNvbXBpbGVQYXRoKHBhdGgsIGNhc2VTZW5zaXRpdmUsIGVuZCkge1xuICBpZiAoY2FzZVNlbnNpdGl2ZSA9PT0gdm9pZCAwKSB7XG4gICAgY2FzZVNlbnNpdGl2ZSA9IGZhbHNlO1xuICB9XG5cbiAgaWYgKGVuZCA9PT0gdm9pZCAwKSB7XG4gICAgZW5kID0gdHJ1ZTtcbiAgfVxuXG4gIHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIiA/IHdhcm5pbmcocGF0aCA9PT0gXCIqXCIgfHwgIXBhdGguZW5kc1dpdGgoXCIqXCIpIHx8IHBhdGguZW5kc1dpdGgoXCIvKlwiKSwgXCJSb3V0ZSBwYXRoIFxcXCJcIiArIHBhdGggKyBcIlxcXCIgd2lsbCBiZSB0cmVhdGVkIGFzIGlmIGl0IHdlcmUgXCIgKyAoXCJcXFwiXCIgKyBwYXRoLnJlcGxhY2UoL1xcKiQvLCBcIi8qXCIpICsgXCJcXFwiIGJlY2F1c2UgdGhlIGAqYCBjaGFyYWN0ZXIgbXVzdCBcIikgKyBcImFsd2F5cyBmb2xsb3cgYSBgL2AgaW4gdGhlIHBhdHRlcm4uIFRvIGdldCByaWQgb2YgdGhpcyB3YXJuaW5nLCBcIiArIChcInBsZWFzZSBjaGFuZ2UgdGhlIHJvdXRlIHBhdGggdG8gXFxcIlwiICsgcGF0aC5yZXBsYWNlKC9cXCokLywgXCIvKlwiKSArIFwiXFxcIi5cIikpIDogdm9pZCAwO1xuICBsZXQgcGFyYW1OYW1lcyA9IFtdO1xuICBsZXQgcmVnZXhwU291cmNlID0gXCJeXCIgKyBwYXRoLnJlcGxhY2UoL1xcLypcXCo/JC8sIFwiXCIpIC8vIElnbm9yZSB0cmFpbGluZyAvIGFuZCAvKiwgd2UnbGwgaGFuZGxlIGl0IGJlbG93XG4gIC5yZXBsYWNlKC9eXFwvKi8sIFwiL1wiKSAvLyBNYWtlIHN1cmUgaXQgaGFzIGEgbGVhZGluZyAvXG4gIC5yZXBsYWNlKC9bXFxcXC4qK14kP3t9fCgpW1xcXV0vZywgXCJcXFxcJCZcIikgLy8gRXNjYXBlIHNwZWNpYWwgcmVnZXggY2hhcnNcbiAgLnJlcGxhY2UoLzooXFx3KykvZywgKF8sIHBhcmFtTmFtZSkgPT4ge1xuICAgIHBhcmFtTmFtZXMucHVzaChwYXJhbU5hbWUpO1xuICAgIHJldHVybiBcIihbXlxcXFwvXSspXCI7XG4gIH0pO1xuXG4gIGlmIChwYXRoLmVuZHNXaXRoKFwiKlwiKSkge1xuICAgIHBhcmFtTmFtZXMucHVzaChcIipcIik7XG4gICAgcmVnZXhwU291cmNlICs9IHBhdGggPT09IFwiKlwiIHx8IHBhdGggPT09IFwiLypcIiA/IFwiKC4qKSRcIiAvLyBBbHJlYWR5IG1hdGNoZWQgdGhlIGluaXRpYWwgLywganVzdCBtYXRjaCB0aGUgcmVzdFxuICAgIDogXCIoPzpcXFxcLyguKyl8XFxcXC8qKSRcIjsgLy8gRG9uJ3QgaW5jbHVkZSB0aGUgLyBpbiBwYXJhbXNbXCIqXCJdXG4gIH0gZWxzZSB7XG4gICAgcmVnZXhwU291cmNlICs9IGVuZCA/IFwiXFxcXC8qJFwiIC8vIFdoZW4gbWF0Y2hpbmcgdG8gdGhlIGVuZCwgaWdub3JlIHRyYWlsaW5nIHNsYXNoZXNcbiAgICA6IC8vIE90aGVyd2lzZSwgbWF0Y2ggYSB3b3JkIGJvdW5kYXJ5IG9yIGEgcHJvY2VlZGluZyAvLiBUaGUgd29yZCBib3VuZGFyeSByZXN0cmljdHNcbiAgICAvLyBwYXJlbnQgcm91dGVzIHRvIG1hdGNoaW5nIG9ubHkgdGhlaXIgb3duIHdvcmRzIGFuZCBub3RoaW5nIG1vcmUsIGUuZy4gcGFyZW50XG4gICAgLy8gcm91dGUgXCIvaG9tZVwiIHNob3VsZCBub3QgbWF0Y2ggXCIvaG9tZTJcIi5cbiAgICAvLyBBZGRpdGlvbmFsbHksIGFsbG93IHBhdGhzIHN0YXJ0aW5nIHdpdGggYC5gLCBgLWAsIGB+YCwgYW5kIHVybC1lbmNvZGVkIGVudGl0aWVzLFxuICAgIC8vIGJ1dCBkbyBub3QgY29uc3VtZSB0aGUgY2hhcmFjdGVyIGluIHRoZSBtYXRjaGVkIHBhdGggc28gdGhleSBjYW4gbWF0Y2ggYWdhaW5zdFxuICAgIC8vIG5lc3RlZCBwYXRocy5cbiAgICBcIig/Oig/PVsufi1dfCVbMC05QS1GXXsyfSl8XFxcXGJ8XFxcXC98JClcIjtcbiAgfVxuXG4gIGxldCBtYXRjaGVyID0gbmV3IFJlZ0V4cChyZWdleHBTb3VyY2UsIGNhc2VTZW5zaXRpdmUgPyB1bmRlZmluZWQgOiBcImlcIik7XG4gIHJldHVybiBbbWF0Y2hlciwgcGFyYW1OYW1lc107XG59XG5cbmZ1bmN0aW9uIHNhZmVseURlY29kZVVSSUNvbXBvbmVudCh2YWx1ZSwgcGFyYW1OYW1lKSB7XG4gIHRyeSB7XG4gICAgcmV0dXJuIGRlY29kZVVSSUNvbXBvbmVudCh2YWx1ZSk7XG4gIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgcHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiID8gd2FybmluZyhmYWxzZSwgXCJUaGUgdmFsdWUgZm9yIHRoZSBVUkwgcGFyYW0gXFxcIlwiICsgcGFyYW1OYW1lICsgXCJcXFwiIHdpbGwgbm90IGJlIGRlY29kZWQgYmVjYXVzZVwiICsgKFwiIHRoZSBzdHJpbmcgXFxcIlwiICsgdmFsdWUgKyBcIlxcXCIgaXMgYSBtYWxmb3JtZWQgVVJMIHNlZ21lbnQuIFRoaXMgaXMgcHJvYmFibHlcIikgKyAoXCIgZHVlIHRvIGEgYmFkIHBlcmNlbnQgZW5jb2RpbmcgKFwiICsgZXJyb3IgKyBcIikuXCIpKSA6IHZvaWQgMDtcbiAgICByZXR1cm4gdmFsdWU7XG4gIH1cbn1cbi8qKlxuICogUmV0dXJucyBhIHJlc29sdmVkIHBhdGggb2JqZWN0IHJlbGF0aXZlIHRvIHRoZSBnaXZlbiBwYXRobmFtZS5cbiAqXG4gKiBAc2VlIGh0dHBzOi8vcmVhY3Ryb3V0ZXIuY29tL2RvY3MvZW4vdjYvYXBpI3Jlc29sdmVwYXRoXG4gKi9cblxuXG5mdW5jdGlvbiByZXNvbHZlUGF0aCh0bywgZnJvbVBhdGhuYW1lKSB7XG4gIGlmIChmcm9tUGF0aG5hbWUgPT09IHZvaWQgMCkge1xuICAgIGZyb21QYXRobmFtZSA9IFwiL1wiO1xuICB9XG5cbiAgbGV0IHtcbiAgICBwYXRobmFtZTogdG9QYXRobmFtZSxcbiAgICBzZWFyY2ggPSBcIlwiLFxuICAgIGhhc2ggPSBcIlwiXG4gIH0gPSB0eXBlb2YgdG8gPT09IFwic3RyaW5nXCIgPyBwYXJzZVBhdGgodG8pIDogdG87XG4gIGxldCBwYXRobmFtZSA9IHRvUGF0aG5hbWUgPyB0b1BhdGhuYW1lLnN0YXJ0c1dpdGgoXCIvXCIpID8gdG9QYXRobmFtZSA6IHJlc29sdmVQYXRobmFtZSh0b1BhdGhuYW1lLCBmcm9tUGF0aG5hbWUpIDogZnJvbVBhdGhuYW1lO1xuICByZXR1cm4ge1xuICAgIHBhdGhuYW1lLFxuICAgIHNlYXJjaDogbm9ybWFsaXplU2VhcmNoKHNlYXJjaCksXG4gICAgaGFzaDogbm9ybWFsaXplSGFzaChoYXNoKVxuICB9O1xufVxuXG5mdW5jdGlvbiByZXNvbHZlUGF0aG5hbWUocmVsYXRpdmVQYXRoLCBmcm9tUGF0aG5hbWUpIHtcbiAgbGV0IHNlZ21lbnRzID0gZnJvbVBhdGhuYW1lLnJlcGxhY2UoL1xcLyskLywgXCJcIikuc3BsaXQoXCIvXCIpO1xuICBsZXQgcmVsYXRpdmVTZWdtZW50cyA9IHJlbGF0aXZlUGF0aC5zcGxpdChcIi9cIik7XG4gIHJlbGF0aXZlU2VnbWVudHMuZm9yRWFjaChzZWdtZW50ID0+IHtcbiAgICBpZiAoc2VnbWVudCA9PT0gXCIuLlwiKSB7XG4gICAgICAvLyBLZWVwIHRoZSByb290IFwiXCIgc2VnbWVudCBzbyB0aGUgcGF0aG5hbWUgc3RhcnRzIGF0IC9cbiAgICAgIGlmIChzZWdtZW50cy5sZW5ndGggPiAxKSBzZWdtZW50cy5wb3AoKTtcbiAgICB9IGVsc2UgaWYgKHNlZ21lbnQgIT09IFwiLlwiKSB7XG4gICAgICBzZWdtZW50cy5wdXNoKHNlZ21lbnQpO1xuICAgIH1cbiAgfSk7XG4gIHJldHVybiBzZWdtZW50cy5sZW5ndGggPiAxID8gc2VnbWVudHMuam9pbihcIi9cIikgOiBcIi9cIjtcbn1cblxuZnVuY3Rpb24gcmVzb2x2ZVRvKHRvQXJnLCByb3V0ZVBhdGhuYW1lcywgbG9jYXRpb25QYXRobmFtZSkge1xuICBsZXQgdG8gPSB0eXBlb2YgdG9BcmcgPT09IFwic3RyaW5nXCIgPyBwYXJzZVBhdGgodG9BcmcpIDogdG9Bcmc7XG4gIGxldCB0b1BhdGhuYW1lID0gdG9BcmcgPT09IFwiXCIgfHwgdG8ucGF0aG5hbWUgPT09IFwiXCIgPyBcIi9cIiA6IHRvLnBhdGhuYW1lOyAvLyBJZiBhIHBhdGhuYW1lIGlzIGV4cGxpY2l0bHkgcHJvdmlkZWQgaW4gYHRvYCwgaXQgc2hvdWxkIGJlIHJlbGF0aXZlIHRvIHRoZVxuICAvLyByb3V0ZSBjb250ZXh0LiBUaGlzIGlzIGV4cGxhaW5lZCBpbiBgTm90ZSBvbiBgPExpbmsgdG8+YCB2YWx1ZXNgIGluIG91clxuICAvLyBtaWdyYXRpb24gZ3VpZGUgZnJvbSB2NSBhcyBhIG1lYW5zIG9mIGRpc2FtYmlndWF0aW9uIGJldHdlZW4gYHRvYCB2YWx1ZXNcbiAgLy8gdGhhdCBiZWdpbiB3aXRoIGAvYCBhbmQgdGhvc2UgdGhhdCBkbyBub3QuIEhvd2V2ZXIsIHRoaXMgaXMgcHJvYmxlbWF0aWMgZm9yXG4gIC8vIGB0b2AgdmFsdWVzIHRoYXQgZG8gbm90IHByb3ZpZGUgYSBwYXRobmFtZS4gYHRvYCBjYW4gc2ltcGx5IGJlIGEgc2VhcmNoIG9yXG4gIC8vIGhhc2ggc3RyaW5nLCBpbiB3aGljaCBjYXNlIHdlIHNob3VsZCBhc3N1bWUgdGhhdCB0aGUgbmF2aWdhdGlvbiBpcyByZWxhdGl2ZVxuICAvLyB0byB0aGUgY3VycmVudCBsb2NhdGlvbidzIHBhdGhuYW1lIGFuZCAqbm90KiB0aGUgcm91dGUgcGF0aG5hbWUuXG5cbiAgbGV0IGZyb207XG5cbiAgaWYgKHRvUGF0aG5hbWUgPT0gbnVsbCkge1xuICAgIGZyb20gPSBsb2NhdGlvblBhdGhuYW1lO1xuICB9IGVsc2Uge1xuICAgIGxldCByb3V0ZVBhdGhuYW1lSW5kZXggPSByb3V0ZVBhdGhuYW1lcy5sZW5ndGggLSAxO1xuXG4gICAgaWYgKHRvUGF0aG5hbWUuc3RhcnRzV2l0aChcIi4uXCIpKSB7XG4gICAgICBsZXQgdG9TZWdtZW50cyA9IHRvUGF0aG5hbWUuc3BsaXQoXCIvXCIpOyAvLyBFYWNoIGxlYWRpbmcgLi4gc2VnbWVudCBtZWFucyBcImdvIHVwIG9uZSByb3V0ZVwiIGluc3RlYWQgb2YgXCJnbyB1cCBvbmVcbiAgICAgIC8vIFVSTCBzZWdtZW50XCIuICBUaGlzIGlzIGEga2V5IGRpZmZlcmVuY2UgZnJvbSBob3cgPGEgaHJlZj4gd29ya3MgYW5kIGFcbiAgICAgIC8vIG1ham9yIHJlYXNvbiB3ZSBjYWxsIHRoaXMgYSBcInRvXCIgdmFsdWUgaW5zdGVhZCBvZiBhIFwiaHJlZlwiLlxuXG4gICAgICB3aGlsZSAodG9TZWdtZW50c1swXSA9PT0gXCIuLlwiKSB7XG4gICAgICAgIHRvU2VnbWVudHMuc2hpZnQoKTtcbiAgICAgICAgcm91dGVQYXRobmFtZUluZGV4IC09IDE7XG4gICAgICB9XG5cbiAgICAgIHRvLnBhdGhuYW1lID0gdG9TZWdtZW50cy5qb2luKFwiL1wiKTtcbiAgICB9IC8vIElmIHRoZXJlIGFyZSBtb3JlIFwiLi5cIiBzZWdtZW50cyB0aGFuIHBhcmVudCByb3V0ZXMsIHJlc29sdmUgcmVsYXRpdmUgdG9cbiAgICAvLyB0aGUgcm9vdCAvIFVSTC5cblxuXG4gICAgZnJvbSA9IHJvdXRlUGF0aG5hbWVJbmRleCA+PSAwID8gcm91dGVQYXRobmFtZXNbcm91dGVQYXRobmFtZUluZGV4XSA6IFwiL1wiO1xuICB9XG5cbiAgbGV0IHBhdGggPSByZXNvbHZlUGF0aCh0bywgZnJvbSk7IC8vIEVuc3VyZSB0aGUgcGF0aG5hbWUgaGFzIGEgdHJhaWxpbmcgc2xhc2ggaWYgdGhlIG9yaWdpbmFsIHRvIHZhbHVlIGhhZCBvbmUuXG5cbiAgaWYgKHRvUGF0aG5hbWUgJiYgdG9QYXRobmFtZSAhPT0gXCIvXCIgJiYgdG9QYXRobmFtZS5lbmRzV2l0aChcIi9cIikgJiYgIXBhdGgucGF0aG5hbWUuZW5kc1dpdGgoXCIvXCIpKSB7XG4gICAgcGF0aC5wYXRobmFtZSArPSBcIi9cIjtcbiAgfVxuXG4gIHJldHVybiBwYXRoO1xufVxuZnVuY3Rpb24gZ2V0VG9QYXRobmFtZSh0bykge1xuICAvLyBFbXB0eSBzdHJpbmdzIHNob3VsZCBiZSB0cmVhdGVkIHRoZSBzYW1lIGFzIC8gcGF0aHNcbiAgcmV0dXJuIHRvID09PSBcIlwiIHx8IHRvLnBhdGhuYW1lID09PSBcIlwiID8gXCIvXCIgOiB0eXBlb2YgdG8gPT09IFwic3RyaW5nXCIgPyBwYXJzZVBhdGgodG8pLnBhdGhuYW1lIDogdG8ucGF0aG5hbWU7XG59XG5mdW5jdGlvbiBzdHJpcEJhc2VuYW1lKHBhdGhuYW1lLCBiYXNlbmFtZSkge1xuICBpZiAoYmFzZW5hbWUgPT09IFwiL1wiKSByZXR1cm4gcGF0aG5hbWU7XG5cbiAgaWYgKCFwYXRobmFtZS50b0xvd2VyQ2FzZSgpLnN0YXJ0c1dpdGgoYmFzZW5hbWUudG9Mb3dlckNhc2UoKSkpIHtcbiAgICByZXR1cm4gbnVsbDtcbiAgfVxuXG4gIGxldCBuZXh0Q2hhciA9IHBhdGhuYW1lLmNoYXJBdChiYXNlbmFtZS5sZW5ndGgpO1xuXG4gIGlmIChuZXh0Q2hhciAmJiBuZXh0Q2hhciAhPT0gXCIvXCIpIHtcbiAgICAvLyBwYXRobmFtZSBkb2VzIG5vdCBzdGFydCB3aXRoIGJhc2VuYW1lL1xuICAgIHJldHVybiBudWxsO1xuICB9XG5cbiAgcmV0dXJuIHBhdGhuYW1lLnNsaWNlKGJhc2VuYW1lLmxlbmd0aCkgfHwgXCIvXCI7XG59XG5jb25zdCBqb2luUGF0aHMgPSBwYXRocyA9PiBwYXRocy5qb2luKFwiL1wiKS5yZXBsYWNlKC9cXC9cXC8rL2csIFwiL1wiKTtcbmNvbnN0IG5vcm1hbGl6ZVBhdGhuYW1lID0gcGF0aG5hbWUgPT4gcGF0aG5hbWUucmVwbGFjZSgvXFwvKyQvLCBcIlwiKS5yZXBsYWNlKC9eXFwvKi8sIFwiL1wiKTtcblxuY29uc3Qgbm9ybWFsaXplU2VhcmNoID0gc2VhcmNoID0+ICFzZWFyY2ggfHwgc2VhcmNoID09PSBcIj9cIiA/IFwiXCIgOiBzZWFyY2guc3RhcnRzV2l0aChcIj9cIikgPyBzZWFyY2ggOiBcIj9cIiArIHNlYXJjaDtcblxuY29uc3Qgbm9ybWFsaXplSGFzaCA9IGhhc2ggPT4gIWhhc2ggfHwgaGFzaCA9PT0gXCIjXCIgPyBcIlwiIDogaGFzaC5zdGFydHNXaXRoKFwiI1wiKSA/IGhhc2ggOiBcIiNcIiArIGhhc2g7XG5cbi8qKlxuICogUmV0dXJucyB0aGUgZnVsbCBocmVmIGZvciB0aGUgZ2l2ZW4gXCJ0b1wiIHZhbHVlLiBUaGlzIGlzIHVzZWZ1bCBmb3IgYnVpbGRpbmdcbiAqIGN1c3RvbSBsaW5rcyB0aGF0IGFyZSBhbHNvIGFjY2Vzc2libGUgYW5kIHByZXNlcnZlIHJpZ2h0LWNsaWNrIGJlaGF2aW9yLlxuICpcbiAqIEBzZWUgaHR0cHM6Ly9yZWFjdHJvdXRlci5jb20vZG9jcy9lbi92Ni9hcGkjdXNlaHJlZlxuICovXG5cbmZ1bmN0aW9uIHVzZUhyZWYodG8pIHtcbiAgIXVzZUluUm91dGVyQ29udGV4dCgpID8gcHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiID8gaW52YXJpYW50KGZhbHNlLCAvLyBUT0RPOiBUaGlzIGVycm9yIGlzIHByb2JhYmx5IGJlY2F1c2UgdGhleSBzb21laG93IGhhdmUgMiB2ZXJzaW9ucyBvZiB0aGVcbiAgLy8gcm91dGVyIGxvYWRlZC4gV2UgY2FuIGhlbHAgdGhlbSB1bmRlcnN0YW5kIGhvdyB0byBhdm9pZCB0aGF0LlxuICBcInVzZUhyZWYoKSBtYXkgYmUgdXNlZCBvbmx5IGluIHRoZSBjb250ZXh0IG9mIGEgPFJvdXRlcj4gY29tcG9uZW50LlwiKSA6IGludmFyaWFudChmYWxzZSkgOiB2b2lkIDA7XG4gIGxldCB7XG4gICAgYmFzZW5hbWUsXG4gICAgbmF2aWdhdG9yXG4gIH0gPSB1c2VDb250ZXh0KE5hdmlnYXRpb25Db250ZXh0KTtcbiAgbGV0IHtcbiAgICBoYXNoLFxuICAgIHBhdGhuYW1lLFxuICAgIHNlYXJjaFxuICB9ID0gdXNlUmVzb2x2ZWRQYXRoKHRvKTtcbiAgbGV0IGpvaW5lZFBhdGhuYW1lID0gcGF0aG5hbWU7XG5cbiAgaWYgKGJhc2VuYW1lICE9PSBcIi9cIikge1xuICAgIGxldCB0b1BhdGhuYW1lID0gZ2V0VG9QYXRobmFtZSh0byk7XG4gICAgbGV0IGVuZHNXaXRoU2xhc2ggPSB0b1BhdGhuYW1lICE9IG51bGwgJiYgdG9QYXRobmFtZS5lbmRzV2l0aChcIi9cIik7XG4gICAgam9pbmVkUGF0aG5hbWUgPSBwYXRobmFtZSA9PT0gXCIvXCIgPyBiYXNlbmFtZSArIChlbmRzV2l0aFNsYXNoID8gXCIvXCIgOiBcIlwiKSA6IGpvaW5QYXRocyhbYmFzZW5hbWUsIHBhdGhuYW1lXSk7XG4gIH1cblxuICByZXR1cm4gbmF2aWdhdG9yLmNyZWF0ZUhyZWYoe1xuICAgIHBhdGhuYW1lOiBqb2luZWRQYXRobmFtZSxcbiAgICBzZWFyY2gsXG4gICAgaGFzaFxuICB9KTtcbn1cbi8qKlxuICogUmV0dXJucyB0cnVlIGlmIHRoaXMgY29tcG9uZW50IGlzIGEgZGVzY2VuZGFudCBvZiBhIDxSb3V0ZXI+LlxuICpcbiAqIEBzZWUgaHR0cHM6Ly9yZWFjdHJvdXRlci5jb20vZG9jcy9lbi92Ni9hcGkjdXNlaW5yb3V0ZXJjb250ZXh0XG4gKi9cblxuZnVuY3Rpb24gdXNlSW5Sb3V0ZXJDb250ZXh0KCkge1xuICByZXR1cm4gdXNlQ29udGV4dChMb2NhdGlvbkNvbnRleHQpICE9IG51bGw7XG59XG4vKipcbiAqIFJldHVybnMgdGhlIGN1cnJlbnQgbG9jYXRpb24gb2JqZWN0LCB3aGljaCByZXByZXNlbnRzIHRoZSBjdXJyZW50IFVSTCBpbiB3ZWJcbiAqIGJyb3dzZXJzLlxuICpcbiAqIE5vdGU6IElmIHlvdSdyZSB1c2luZyB0aGlzIGl0IG1heSBtZWFuIHlvdSdyZSBkb2luZyBzb21lIG9mIHlvdXIgb3duXG4gKiBcInJvdXRpbmdcIiBpbiB5b3VyIGFwcCwgYW5kIHdlJ2QgbGlrZSB0byBrbm93IHdoYXQgeW91ciB1c2UgY2FzZSBpcy4gV2UgbWF5XG4gKiBiZSBhYmxlIHRvIHByb3ZpZGUgc29tZXRoaW5nIGhpZ2hlci1sZXZlbCB0byBiZXR0ZXIgc3VpdCB5b3VyIG5lZWRzLlxuICpcbiAqIEBzZWUgaHR0cHM6Ly9yZWFjdHJvdXRlci5jb20vZG9jcy9lbi92Ni9hcGkjdXNlbG9jYXRpb25cbiAqL1xuXG5mdW5jdGlvbiB1c2VMb2NhdGlvbigpIHtcbiAgIXVzZUluUm91dGVyQ29udGV4dCgpID8gcHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiID8gaW52YXJpYW50KGZhbHNlLCAvLyBUT0RPOiBUaGlzIGVycm9yIGlzIHByb2JhYmx5IGJlY2F1c2UgdGhleSBzb21laG93IGhhdmUgMiB2ZXJzaW9ucyBvZiB0aGVcbiAgLy8gcm91dGVyIGxvYWRlZC4gV2UgY2FuIGhlbHAgdGhlbSB1bmRlcnN0YW5kIGhvdyB0byBhdm9pZCB0aGF0LlxuICBcInVzZUxvY2F0aW9uKCkgbWF5IGJlIHVzZWQgb25seSBpbiB0aGUgY29udGV4dCBvZiBhIDxSb3V0ZXI+IGNvbXBvbmVudC5cIikgOiBpbnZhcmlhbnQoZmFsc2UpIDogdm9pZCAwO1xuICByZXR1cm4gdXNlQ29udGV4dChMb2NhdGlvbkNvbnRleHQpLmxvY2F0aW9uO1xufVxuLyoqXG4gKiBSZXR1cm5zIHRoZSBjdXJyZW50IG5hdmlnYXRpb24gYWN0aW9uIHdoaWNoIGRlc2NyaWJlcyBob3cgdGhlIHJvdXRlciBjYW1lIHRvXG4gKiB0aGUgY3VycmVudCBsb2NhdGlvbiwgZWl0aGVyIGJ5IGEgcG9wLCBwdXNoLCBvciByZXBsYWNlIG9uIHRoZSBoaXN0b3J5IHN0YWNrLlxuICpcbiAqIEBzZWUgaHR0cHM6Ly9yZWFjdHJvdXRlci5jb20vZG9jcy9lbi92Ni9hcGkjdXNlbmF2aWdhdGlvbnR5cGVcbiAqL1xuXG5mdW5jdGlvbiB1c2VOYXZpZ2F0aW9uVHlwZSgpIHtcbiAgcmV0dXJuIHVzZUNvbnRleHQoTG9jYXRpb25Db250ZXh0KS5uYXZpZ2F0aW9uVHlwZTtcbn1cbi8qKlxuICogUmV0dXJucyB0cnVlIGlmIHRoZSBVUkwgZm9yIHRoZSBnaXZlbiBcInRvXCIgdmFsdWUgbWF0Y2hlcyB0aGUgY3VycmVudCBVUkwuXG4gKiBUaGlzIGlzIHVzZWZ1bCBmb3IgY29tcG9uZW50cyB0aGF0IG5lZWQgdG8ga25vdyBcImFjdGl2ZVwiIHN0YXRlLCBlLmcuXG4gKiA8TmF2TGluaz4uXG4gKlxuICogQHNlZSBodHRwczovL3JlYWN0cm91dGVyLmNvbS9kb2NzL2VuL3Y2L2FwaSN1c2VtYXRjaFxuICovXG5cbmZ1bmN0aW9uIHVzZU1hdGNoKHBhdHRlcm4pIHtcbiAgIXVzZUluUm91dGVyQ29udGV4dCgpID8gcHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiID8gaW52YXJpYW50KGZhbHNlLCAvLyBUT0RPOiBUaGlzIGVycm9yIGlzIHByb2JhYmx5IGJlY2F1c2UgdGhleSBzb21laG93IGhhdmUgMiB2ZXJzaW9ucyBvZiB0aGVcbiAgLy8gcm91dGVyIGxvYWRlZC4gV2UgY2FuIGhlbHAgdGhlbSB1bmRlcnN0YW5kIGhvdyB0byBhdm9pZCB0aGF0LlxuICBcInVzZU1hdGNoKCkgbWF5IGJlIHVzZWQgb25seSBpbiB0aGUgY29udGV4dCBvZiBhIDxSb3V0ZXI+IGNvbXBvbmVudC5cIikgOiBpbnZhcmlhbnQoZmFsc2UpIDogdm9pZCAwO1xuICBsZXQge1xuICAgIHBhdGhuYW1lXG4gIH0gPSB1c2VMb2NhdGlvbigpO1xuICByZXR1cm4gdXNlTWVtbygoKSA9PiBtYXRjaFBhdGgocGF0dGVybiwgcGF0aG5hbWUpLCBbcGF0aG5hbWUsIHBhdHRlcm5dKTtcbn1cbi8qKlxuICogVGhlIGludGVyZmFjZSBmb3IgdGhlIG5hdmlnYXRlKCkgZnVuY3Rpb24gcmV0dXJuZWQgZnJvbSB1c2VOYXZpZ2F0ZSgpLlxuICovXG5cbi8qKlxuICogUmV0dXJucyBhbiBpbXBlcmF0aXZlIG1ldGhvZCBmb3IgY2hhbmdpbmcgdGhlIGxvY2F0aW9uLiBVc2VkIGJ5IDxMaW5rPnMsIGJ1dFxuICogbWF5IGFsc28gYmUgdXNlZCBieSBvdGhlciBlbGVtZW50cyB0byBjaGFuZ2UgdGhlIGxvY2F0aW9uLlxuICpcbiAqIEBzZWUgaHR0cHM6Ly9yZWFjdHJvdXRlci5jb20vZG9jcy9lbi92Ni9hcGkjdXNlbmF2aWdhdGVcbiAqL1xuZnVuY3Rpb24gdXNlTmF2aWdhdGUoKSB7XG4gICF1c2VJblJvdXRlckNvbnRleHQoKSA/IHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIiA/IGludmFyaWFudChmYWxzZSwgLy8gVE9ETzogVGhpcyBlcnJvciBpcyBwcm9iYWJseSBiZWNhdXNlIHRoZXkgc29tZWhvdyBoYXZlIDIgdmVyc2lvbnMgb2YgdGhlXG4gIC8vIHJvdXRlciBsb2FkZWQuIFdlIGNhbiBoZWxwIHRoZW0gdW5kZXJzdGFuZCBob3cgdG8gYXZvaWQgdGhhdC5cbiAgXCJ1c2VOYXZpZ2F0ZSgpIG1heSBiZSB1c2VkIG9ubHkgaW4gdGhlIGNvbnRleHQgb2YgYSA8Um91dGVyPiBjb21wb25lbnQuXCIpIDogaW52YXJpYW50KGZhbHNlKSA6IHZvaWQgMDtcbiAgbGV0IHtcbiAgICBiYXNlbmFtZSxcbiAgICBuYXZpZ2F0b3JcbiAgfSA9IHVzZUNvbnRleHQoTmF2aWdhdGlvbkNvbnRleHQpO1xuICBsZXQge1xuICAgIG1hdGNoZXNcbiAgfSA9IHVzZUNvbnRleHQoUm91dGVDb250ZXh0KTtcbiAgbGV0IHtcbiAgICBwYXRobmFtZTogbG9jYXRpb25QYXRobmFtZVxuICB9ID0gdXNlTG9jYXRpb24oKTtcbiAgbGV0IHJvdXRlUGF0aG5hbWVzSnNvbiA9IEpTT04uc3RyaW5naWZ5KG1hdGNoZXMubWFwKG1hdGNoID0+IG1hdGNoLnBhdGhuYW1lQmFzZSkpO1xuICBsZXQgYWN0aXZlUmVmID0gdXNlUmVmKGZhbHNlKTtcbiAgdXNlRWZmZWN0KCgpID0+IHtcbiAgICBhY3RpdmVSZWYuY3VycmVudCA9IHRydWU7XG4gIH0pO1xuICBsZXQgbmF2aWdhdGUgPSB1c2VDYWxsYmFjayhmdW5jdGlvbiAodG8sIG9wdGlvbnMpIHtcbiAgICBpZiAob3B0aW9ucyA9PT0gdm9pZCAwKSB7XG4gICAgICBvcHRpb25zID0ge307XG4gICAgfVxuXG4gICAgcHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiID8gd2FybmluZyhhY3RpdmVSZWYuY3VycmVudCwgXCJZb3Ugc2hvdWxkIGNhbGwgbmF2aWdhdGUoKSBpbiBhIFJlYWN0LnVzZUVmZmVjdCgpLCBub3Qgd2hlbiBcIiArIFwieW91ciBjb21wb25lbnQgaXMgZmlyc3QgcmVuZGVyZWQuXCIpIDogdm9pZCAwO1xuICAgIGlmICghYWN0aXZlUmVmLmN1cnJlbnQpIHJldHVybjtcblxuICAgIGlmICh0eXBlb2YgdG8gPT09IFwibnVtYmVyXCIpIHtcbiAgICAgIG5hdmlnYXRvci5nbyh0byk7XG4gICAgICByZXR1cm47XG4gICAgfVxuXG4gICAgbGV0IHBhdGggPSByZXNvbHZlVG8odG8sIEpTT04ucGFyc2Uocm91dGVQYXRobmFtZXNKc29uKSwgbG9jYXRpb25QYXRobmFtZSk7XG5cbiAgICBpZiAoYmFzZW5hbWUgIT09IFwiL1wiKSB7XG4gICAgICBwYXRoLnBhdGhuYW1lID0gam9pblBhdGhzKFtiYXNlbmFtZSwgcGF0aC5wYXRobmFtZV0pO1xuICAgIH1cblxuICAgICghIW9wdGlvbnMucmVwbGFjZSA/IG5hdmlnYXRvci5yZXBsYWNlIDogbmF2aWdhdG9yLnB1c2gpKHBhdGgsIG9wdGlvbnMuc3RhdGUpO1xuICB9LCBbYmFzZW5hbWUsIG5hdmlnYXRvciwgcm91dGVQYXRobmFtZXNKc29uLCBsb2NhdGlvblBhdGhuYW1lXSk7XG4gIHJldHVybiBuYXZpZ2F0ZTtcbn1cbmNvbnN0IE91dGxldENvbnRleHQgPSAvKiNfX1BVUkVfXyovY3JlYXRlQ29udGV4dChudWxsKTtcbi8qKlxuICogUmV0dXJucyB0aGUgY29udGV4dCAoaWYgcHJvdmlkZWQpIGZvciB0aGUgY2hpbGQgcm91dGUgYXQgdGhpcyBsZXZlbCBvZiB0aGUgcm91dGVcbiAqIGhpZXJhcmNoeS5cbiAqIEBzZWUgaHR0cHM6Ly9yZWFjdHJvdXRlci5jb20vZG9jcy9lbi92Ni9hcGkjdXNlb3V0bGV0Y29udGV4dFxuICovXG5cbmZ1bmN0aW9uIHVzZU91dGxldENvbnRleHQoKSB7XG4gIHJldHVybiB1c2VDb250ZXh0KE91dGxldENvbnRleHQpO1xufVxuLyoqXG4gKiBSZXR1cm5zIHRoZSBlbGVtZW50IGZvciB0aGUgY2hpbGQgcm91dGUgYXQgdGhpcyBsZXZlbCBvZiB0aGUgcm91dGVcbiAqIGhpZXJhcmNoeS4gVXNlZCBpbnRlcm5hbGx5IGJ5IDxPdXRsZXQ+IHRvIHJlbmRlciBjaGlsZCByb3V0ZXMuXG4gKlxuICogQHNlZSBodHRwczovL3JlYWN0cm91dGVyLmNvbS9kb2NzL2VuL3Y2L2FwaSN1c2VvdXRsZXRcbiAqL1xuXG5mdW5jdGlvbiB1c2VPdXRsZXQoY29udGV4dCkge1xuICBsZXQgb3V0bGV0ID0gdXNlQ29udGV4dChSb3V0ZUNvbnRleHQpLm91dGxldDtcblxuICBpZiAob3V0bGV0KSB7XG4gICAgcmV0dXJuIC8qI19fUFVSRV9fKi9jcmVhdGVFbGVtZW50KE91dGxldENvbnRleHQuUHJvdmlkZXIsIHtcbiAgICAgIHZhbHVlOiBjb250ZXh0XG4gICAgfSwgb3V0bGV0KTtcbiAgfVxuXG4gIHJldHVybiBvdXRsZXQ7XG59XG4vKipcbiAqIFJldHVybnMgYW4gb2JqZWN0IG9mIGtleS92YWx1ZSBwYWlycyBvZiB0aGUgZHluYW1pYyBwYXJhbXMgZnJvbSB0aGUgY3VycmVudFxuICogVVJMIHRoYXQgd2VyZSBtYXRjaGVkIGJ5IHRoZSByb3V0ZSBwYXRoLlxuICpcbiAqIEBzZWUgaHR0cHM6Ly9yZWFjdHJvdXRlci5jb20vZG9jcy9lbi92Ni9hcGkjdXNlcGFyYW1zXG4gKi9cblxuZnVuY3Rpb24gdXNlUGFyYW1zKCkge1xuICBsZXQge1xuICAgIG1hdGNoZXNcbiAgfSA9IHVzZUNvbnRleHQoUm91dGVDb250ZXh0KTtcbiAgbGV0IHJvdXRlTWF0Y2ggPSBtYXRjaGVzW21hdGNoZXMubGVuZ3RoIC0gMV07XG4gIHJldHVybiByb3V0ZU1hdGNoID8gcm91dGVNYXRjaC5wYXJhbXMgOiB7fTtcbn1cbi8qKlxuICogUmVzb2x2ZXMgdGhlIHBhdGhuYW1lIG9mIHRoZSBnaXZlbiBgdG9gIHZhbHVlIGFnYWluc3QgdGhlIGN1cnJlbnQgbG9jYXRpb24uXG4gKlxuICogQHNlZSBodHRwczovL3JlYWN0cm91dGVyLmNvbS9kb2NzL2VuL3Y2L2FwaSN1c2VyZXNvbHZlZHBhdGhcbiAqL1xuXG5mdW5jdGlvbiB1c2VSZXNvbHZlZFBhdGgodG8pIHtcbiAgbGV0IHtcbiAgICBtYXRjaGVzXG4gIH0gPSB1c2VDb250ZXh0KFJvdXRlQ29udGV4dCk7XG4gIGxldCB7XG4gICAgcGF0aG5hbWU6IGxvY2F0aW9uUGF0aG5hbWVcbiAgfSA9IHVzZUxvY2F0aW9uKCk7XG4gIGxldCByb3V0ZVBhdGhuYW1lc0pzb24gPSBKU09OLnN0cmluZ2lmeShtYXRjaGVzLm1hcChtYXRjaCA9PiBtYXRjaC5wYXRobmFtZUJhc2UpKTtcbiAgcmV0dXJuIHVzZU1lbW8oKCkgPT4gcmVzb2x2ZVRvKHRvLCBKU09OLnBhcnNlKHJvdXRlUGF0aG5hbWVzSnNvbiksIGxvY2F0aW9uUGF0aG5hbWUpLCBbdG8sIHJvdXRlUGF0aG5hbWVzSnNvbiwgbG9jYXRpb25QYXRobmFtZV0pO1xufVxuLyoqXG4gKiBSZXR1cm5zIHRoZSBlbGVtZW50IG9mIHRoZSByb3V0ZSB0aGF0IG1hdGNoZWQgdGhlIGN1cnJlbnQgbG9jYXRpb24sIHByZXBhcmVkXG4gKiB3aXRoIHRoZSBjb3JyZWN0IGNvbnRleHQgdG8gcmVuZGVyIHRoZSByZW1haW5kZXIgb2YgdGhlIHJvdXRlIHRyZWUuIFJvdXRlXG4gKiBlbGVtZW50cyBpbiB0aGUgdHJlZSBtdXN0IHJlbmRlciBhbiA8T3V0bGV0PiB0byByZW5kZXIgdGhlaXIgY2hpbGQgcm91dGUnc1xuICogZWxlbWVudC5cbiAqXG4gKiBAc2VlIGh0dHBzOi8vcmVhY3Ryb3V0ZXIuY29tL2RvY3MvZW4vdjYvYXBpI3VzZXJvdXRlc1xuICovXG5cbmZ1bmN0aW9uIHVzZVJvdXRlcyhyb3V0ZXMsIGxvY2F0aW9uQXJnKSB7XG4gICF1c2VJblJvdXRlckNvbnRleHQoKSA/IHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIiA/IGludmFyaWFudChmYWxzZSwgLy8gVE9ETzogVGhpcyBlcnJvciBpcyBwcm9iYWJseSBiZWNhdXNlIHRoZXkgc29tZWhvdyBoYXZlIDIgdmVyc2lvbnMgb2YgdGhlXG4gIC8vIHJvdXRlciBsb2FkZWQuIFdlIGNhbiBoZWxwIHRoZW0gdW5kZXJzdGFuZCBob3cgdG8gYXZvaWQgdGhhdC5cbiAgXCJ1c2VSb3V0ZXMoKSBtYXkgYmUgdXNlZCBvbmx5IGluIHRoZSBjb250ZXh0IG9mIGEgPFJvdXRlcj4gY29tcG9uZW50LlwiKSA6IGludmFyaWFudChmYWxzZSkgOiB2b2lkIDA7XG4gIGxldCB7XG4gICAgbWF0Y2hlczogcGFyZW50TWF0Y2hlc1xuICB9ID0gdXNlQ29udGV4dChSb3V0ZUNvbnRleHQpO1xuICBsZXQgcm91dGVNYXRjaCA9IHBhcmVudE1hdGNoZXNbcGFyZW50TWF0Y2hlcy5sZW5ndGggLSAxXTtcbiAgbGV0IHBhcmVudFBhcmFtcyA9IHJvdXRlTWF0Y2ggPyByb3V0ZU1hdGNoLnBhcmFtcyA6IHt9O1xuICBsZXQgcGFyZW50UGF0aG5hbWUgPSByb3V0ZU1hdGNoID8gcm91dGVNYXRjaC5wYXRobmFtZSA6IFwiL1wiO1xuICBsZXQgcGFyZW50UGF0aG5hbWVCYXNlID0gcm91dGVNYXRjaCA/IHJvdXRlTWF0Y2gucGF0aG5hbWVCYXNlIDogXCIvXCI7XG4gIGxldCBwYXJlbnRSb3V0ZSA9IHJvdXRlTWF0Y2ggJiYgcm91dGVNYXRjaC5yb3V0ZTtcblxuICBpZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiKSB7XG4gICAgLy8gWW91IHdvbid0IGdldCBhIHdhcm5pbmcgYWJvdXQgMiBkaWZmZXJlbnQgPFJvdXRlcz4gdW5kZXIgYSA8Um91dGU+XG4gICAgLy8gd2l0aG91dCBhIHRyYWlsaW5nICosIGJ1dCB0aGlzIGlzIGEgYmVzdC1lZmZvcnQgd2FybmluZyBhbnl3YXkgc2luY2Ugd2VcbiAgICAvLyBjYW5ub3QgZXZlbiBnaXZlIHRoZSB3YXJuaW5nIHVubGVzcyB0aGV5IGxhbmQgYXQgdGhlIHBhcmVudCByb3V0ZS5cbiAgICAvL1xuICAgIC8vIEV4YW1wbGU6XG4gICAgLy9cbiAgICAvLyA8Um91dGVzPlxuICAgIC8vICAgey8qIFRoaXMgcm91dGUgcGF0aCBNVVNUIGVuZCB3aXRoIC8qIGJlY2F1c2Ugb3RoZXJ3aXNlXG4gICAgLy8gICAgICAgaXQgd2lsbCBuZXZlciBtYXRjaCAvYmxvZy9wb3N0LzEyMyAqL31cbiAgICAvLyAgIDxSb3V0ZSBwYXRoPVwiYmxvZ1wiIGVsZW1lbnQ9ezxCbG9nIC8+fSAvPlxuICAgIC8vICAgPFJvdXRlIHBhdGg9XCJibG9nL2ZlZWRcIiBlbGVtZW50PXs8QmxvZ0ZlZWQgLz59IC8+XG4gICAgLy8gPC9Sb3V0ZXM+XG4gICAgLy9cbiAgICAvLyBmdW5jdGlvbiBCbG9nKCkge1xuICAgIC8vICAgcmV0dXJuIChcbiAgICAvLyAgICAgPFJvdXRlcz5cbiAgICAvLyAgICAgICA8Um91dGUgcGF0aD1cInBvc3QvOmlkXCIgZWxlbWVudD17PFBvc3QgLz59IC8+XG4gICAgLy8gICAgIDwvUm91dGVzPlxuICAgIC8vICAgKTtcbiAgICAvLyB9XG4gICAgbGV0IHBhcmVudFBhdGggPSBwYXJlbnRSb3V0ZSAmJiBwYXJlbnRSb3V0ZS5wYXRoIHx8IFwiXCI7XG4gICAgd2FybmluZ09uY2UocGFyZW50UGF0aG5hbWUsICFwYXJlbnRSb3V0ZSB8fCBwYXJlbnRQYXRoLmVuZHNXaXRoKFwiKlwiKSwgXCJZb3UgcmVuZGVyZWQgZGVzY2VuZGFudCA8Um91dGVzPiAob3IgY2FsbGVkIGB1c2VSb3V0ZXMoKWApIGF0IFwiICsgKFwiXFxcIlwiICsgcGFyZW50UGF0aG5hbWUgKyBcIlxcXCIgKHVuZGVyIDxSb3V0ZSBwYXRoPVxcXCJcIiArIHBhcmVudFBhdGggKyBcIlxcXCI+KSBidXQgdGhlIFwiKSArIFwicGFyZW50IHJvdXRlIHBhdGggaGFzIG5vIHRyYWlsaW5nIFxcXCIqXFxcIi4gVGhpcyBtZWFucyBpZiB5b3UgbmF2aWdhdGUgXCIgKyBcImRlZXBlciwgdGhlIHBhcmVudCB3b24ndCBtYXRjaCBhbnltb3JlIGFuZCB0aGVyZWZvcmUgdGhlIGNoaWxkIFwiICsgXCJyb3V0ZXMgd2lsbCBuZXZlciByZW5kZXIuXFxuXFxuXCIgKyAoXCJQbGVhc2UgY2hhbmdlIHRoZSBwYXJlbnQgPFJvdXRlIHBhdGg9XFxcIlwiICsgcGFyZW50UGF0aCArIFwiXFxcIj4gdG8gPFJvdXRlIFwiKSArIChcInBhdGg9XFxcIlwiICsgKHBhcmVudFBhdGggPT09IFwiL1wiID8gXCIqXCIgOiBwYXJlbnRQYXRoICsgXCIvKlwiKSArIFwiXFxcIj4uXCIpKTtcbiAgfVxuXG4gIGxldCBsb2NhdGlvbkZyb21Db250ZXh0ID0gdXNlTG9jYXRpb24oKTtcbiAgbGV0IGxvY2F0aW9uO1xuXG4gIGlmIChsb2NhdGlvbkFyZykge1xuICAgIHZhciBfcGFyc2VkTG9jYXRpb25BcmckcGE7XG5cbiAgICBsZXQgcGFyc2VkTG9jYXRpb25BcmcgPSB0eXBlb2YgbG9jYXRpb25BcmcgPT09IFwic3RyaW5nXCIgPyBwYXJzZVBhdGgobG9jYXRpb25BcmcpIDogbG9jYXRpb25Bcmc7XG4gICAgIShwYXJlbnRQYXRobmFtZUJhc2UgPT09IFwiL1wiIHx8ICgoX3BhcnNlZExvY2F0aW9uQXJnJHBhID0gcGFyc2VkTG9jYXRpb25BcmcucGF0aG5hbWUpID09IG51bGwgPyB2b2lkIDAgOiBfcGFyc2VkTG9jYXRpb25BcmckcGEuc3RhcnRzV2l0aChwYXJlbnRQYXRobmFtZUJhc2UpKSkgPyBwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIgPyBpbnZhcmlhbnQoZmFsc2UsIFwiV2hlbiBvdmVycmlkaW5nIHRoZSBsb2NhdGlvbiB1c2luZyBgPFJvdXRlcyBsb2NhdGlvbj5gIG9yIGB1c2VSb3V0ZXMocm91dGVzLCBsb2NhdGlvbilgLCBcIiArIFwidGhlIGxvY2F0aW9uIHBhdGhuYW1lIG11c3QgYmVnaW4gd2l0aCB0aGUgcG9ydGlvbiBvZiB0aGUgVVJMIHBhdGhuYW1lIHRoYXQgd2FzIFwiICsgKFwibWF0Y2hlZCBieSBhbGwgcGFyZW50IHJvdXRlcy4gVGhlIGN1cnJlbnQgcGF0aG5hbWUgYmFzZSBpcyBcXFwiXCIgKyBwYXJlbnRQYXRobmFtZUJhc2UgKyBcIlxcXCIgXCIpICsgKFwiYnV0IHBhdGhuYW1lIFxcXCJcIiArIHBhcnNlZExvY2F0aW9uQXJnLnBhdGhuYW1lICsgXCJcXFwiIHdhcyBnaXZlbiBpbiB0aGUgYGxvY2F0aW9uYCBwcm9wLlwiKSkgOiBpbnZhcmlhbnQoZmFsc2UpIDogdm9pZCAwO1xuICAgIGxvY2F0aW9uID0gcGFyc2VkTG9jYXRpb25Bcmc7XG4gIH0gZWxzZSB7XG4gICAgbG9jYXRpb24gPSBsb2NhdGlvbkZyb21Db250ZXh0O1xuICB9XG5cbiAgbGV0IHBhdGhuYW1lID0gbG9jYXRpb24ucGF0aG5hbWUgfHwgXCIvXCI7XG4gIGxldCByZW1haW5pbmdQYXRobmFtZSA9IHBhcmVudFBhdGhuYW1lQmFzZSA9PT0gXCIvXCIgPyBwYXRobmFtZSA6IHBhdGhuYW1lLnNsaWNlKHBhcmVudFBhdGhuYW1lQmFzZS5sZW5ndGgpIHx8IFwiL1wiO1xuICBsZXQgbWF0Y2hlcyA9IG1hdGNoUm91dGVzKHJvdXRlcywge1xuICAgIHBhdGhuYW1lOiByZW1haW5pbmdQYXRobmFtZVxuICB9KTtcblxuICBpZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiKSB7XG4gICAgcHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiID8gd2FybmluZyhwYXJlbnRSb3V0ZSB8fCBtYXRjaGVzICE9IG51bGwsIFwiTm8gcm91dGVzIG1hdGNoZWQgbG9jYXRpb24gXFxcIlwiICsgbG9jYXRpb24ucGF0aG5hbWUgKyBsb2NhdGlvbi5zZWFyY2ggKyBsb2NhdGlvbi5oYXNoICsgXCJcXFwiIFwiKSA6IHZvaWQgMDtcbiAgICBwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIgPyB3YXJuaW5nKG1hdGNoZXMgPT0gbnVsbCB8fCBtYXRjaGVzW21hdGNoZXMubGVuZ3RoIC0gMV0ucm91dGUuZWxlbWVudCAhPT0gdW5kZWZpbmVkLCBcIk1hdGNoZWQgbGVhZiByb3V0ZSBhdCBsb2NhdGlvbiBcXFwiXCIgKyBsb2NhdGlvbi5wYXRobmFtZSArIGxvY2F0aW9uLnNlYXJjaCArIGxvY2F0aW9uLmhhc2ggKyBcIlxcXCIgZG9lcyBub3QgaGF2ZSBhbiBlbGVtZW50LiBcIiArIFwiVGhpcyBtZWFucyBpdCB3aWxsIHJlbmRlciBhbiA8T3V0bGV0IC8+IHdpdGggYSBudWxsIHZhbHVlIGJ5IGRlZmF1bHQgcmVzdWx0aW5nIGluIGFuIFxcXCJlbXB0eVxcXCIgcGFnZS5cIikgOiB2b2lkIDA7XG4gIH1cblxuICByZXR1cm4gX3JlbmRlck1hdGNoZXMobWF0Y2hlcyAmJiBtYXRjaGVzLm1hcChtYXRjaCA9PiBPYmplY3QuYXNzaWduKHt9LCBtYXRjaCwge1xuICAgIHBhcmFtczogT2JqZWN0LmFzc2lnbih7fSwgcGFyZW50UGFyYW1zLCBtYXRjaC5wYXJhbXMpLFxuICAgIHBhdGhuYW1lOiBqb2luUGF0aHMoW3BhcmVudFBhdGhuYW1lQmFzZSwgbWF0Y2gucGF0aG5hbWVdKSxcbiAgICBwYXRobmFtZUJhc2U6IG1hdGNoLnBhdGhuYW1lQmFzZSA9PT0gXCIvXCIgPyBwYXJlbnRQYXRobmFtZUJhc2UgOiBqb2luUGF0aHMoW3BhcmVudFBhdGhuYW1lQmFzZSwgbWF0Y2gucGF0aG5hbWVCYXNlXSlcbiAgfSkpLCBwYXJlbnRNYXRjaGVzKTtcbn1cbmZ1bmN0aW9uIF9yZW5kZXJNYXRjaGVzKG1hdGNoZXMsIHBhcmVudE1hdGNoZXMpIHtcbiAgaWYgKHBhcmVudE1hdGNoZXMgPT09IHZvaWQgMCkge1xuICAgIHBhcmVudE1hdGNoZXMgPSBbXTtcbiAgfVxuXG4gIGlmIChtYXRjaGVzID09IG51bGwpIHJldHVybiBudWxsO1xuICByZXR1cm4gbWF0Y2hlcy5yZWR1Y2VSaWdodCgob3V0bGV0LCBtYXRjaCwgaW5kZXgpID0+IHtcbiAgICByZXR1cm4gLyojX19QVVJFX18qL2NyZWF0ZUVsZW1lbnQoUm91dGVDb250ZXh0LlByb3ZpZGVyLCB7XG4gICAgICBjaGlsZHJlbjogbWF0Y2gucm91dGUuZWxlbWVudCAhPT0gdW5kZWZpbmVkID8gbWF0Y2gucm91dGUuZWxlbWVudCA6IG91dGxldCxcbiAgICAgIHZhbHVlOiB7XG4gICAgICAgIG91dGxldCxcbiAgICAgICAgbWF0Y2hlczogcGFyZW50TWF0Y2hlcy5jb25jYXQobWF0Y2hlcy5zbGljZSgwLCBpbmRleCArIDEpKVxuICAgICAgfVxuICAgIH0pO1xuICB9LCBudWxsKTtcbn1cblxuLyoqXG4gKiBBIDxSb3V0ZXI+IHRoYXQgc3RvcmVzIGFsbCBlbnRyaWVzIGluIG1lbW9yeS5cbiAqXG4gKiBAc2VlIGh0dHBzOi8vcmVhY3Ryb3V0ZXIuY29tL2RvY3MvZW4vdjYvYXBpI21lbW9yeXJvdXRlclxuICovXG5mdW5jdGlvbiBNZW1vcnlSb3V0ZXIoX3JlZikge1xuICBsZXQge1xuICAgIGJhc2VuYW1lLFxuICAgIGNoaWxkcmVuLFxuICAgIGluaXRpYWxFbnRyaWVzLFxuICAgIGluaXRpYWxJbmRleFxuICB9ID0gX3JlZjtcbiAgbGV0IGhpc3RvcnlSZWYgPSB1c2VSZWYoKTtcblxuICBpZiAoaGlzdG9yeVJlZi5jdXJyZW50ID09IG51bGwpIHtcbiAgICBoaXN0b3J5UmVmLmN1cnJlbnQgPSBjcmVhdGVNZW1vcnlIaXN0b3J5KHtcbiAgICAgIGluaXRpYWxFbnRyaWVzLFxuICAgICAgaW5pdGlhbEluZGV4XG4gICAgfSk7XG4gIH1cblxuICBsZXQgaGlzdG9yeSA9IGhpc3RvcnlSZWYuY3VycmVudDtcbiAgbGV0IFtzdGF0ZSwgc2V0U3RhdGVdID0gdXNlU3RhdGUoe1xuICAgIGFjdGlvbjogaGlzdG9yeS5hY3Rpb24sXG4gICAgbG9jYXRpb246IGhpc3RvcnkubG9jYXRpb25cbiAgfSk7XG4gIHVzZUxheW91dEVmZmVjdCgoKSA9PiBoaXN0b3J5Lmxpc3RlbihzZXRTdGF0ZSksIFtoaXN0b3J5XSk7XG4gIHJldHVybiAvKiNfX1BVUkVfXyovY3JlYXRlRWxlbWVudChSb3V0ZXIsIHtcbiAgICBiYXNlbmFtZTogYmFzZW5hbWUsXG4gICAgY2hpbGRyZW46IGNoaWxkcmVuLFxuICAgIGxvY2F0aW9uOiBzdGF0ZS5sb2NhdGlvbixcbiAgICBuYXZpZ2F0aW9uVHlwZTogc3RhdGUuYWN0aW9uLFxuICAgIG5hdmlnYXRvcjogaGlzdG9yeVxuICB9KTtcbn1cblxuLyoqXG4gKiBDaGFuZ2VzIHRoZSBjdXJyZW50IGxvY2F0aW9uLlxuICpcbiAqIE5vdGU6IFRoaXMgQVBJIGlzIG1vc3RseSB1c2VmdWwgaW4gUmVhY3QuQ29tcG9uZW50IHN1YmNsYXNzZXMgdGhhdCBhcmUgbm90XG4gKiBhYmxlIHRvIHVzZSBob29rcy4gSW4gZnVuY3Rpb25hbCBjb21wb25lbnRzLCB3ZSByZWNvbW1lbmQgeW91IHVzZSB0aGVcbiAqIGB1c2VOYXZpZ2F0ZWAgaG9vayBpbnN0ZWFkLlxuICpcbiAqIEBzZWUgaHR0cHM6Ly9yZWFjdHJvdXRlci5jb20vZG9jcy9lbi92Ni9hcGkjbmF2aWdhdGVcbiAqL1xuZnVuY3Rpb24gTmF2aWdhdGUoX3JlZjIpIHtcbiAgbGV0IHtcbiAgICB0byxcbiAgICByZXBsYWNlLFxuICAgIHN0YXRlXG4gIH0gPSBfcmVmMjtcbiAgIXVzZUluUm91dGVyQ29udGV4dCgpID8gcHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiID8gaW52YXJpYW50KGZhbHNlLCAvLyBUT0RPOiBUaGlzIGVycm9yIGlzIHByb2JhYmx5IGJlY2F1c2UgdGhleSBzb21laG93IGhhdmUgMiB2ZXJzaW9ucyBvZlxuICAvLyB0aGUgcm91dGVyIGxvYWRlZC4gV2UgY2FuIGhlbHAgdGhlbSB1bmRlcnN0YW5kIGhvdyB0byBhdm9pZCB0aGF0LlxuICBcIjxOYXZpZ2F0ZT4gbWF5IGJlIHVzZWQgb25seSBpbiB0aGUgY29udGV4dCBvZiBhIDxSb3V0ZXI+IGNvbXBvbmVudC5cIikgOiBpbnZhcmlhbnQoZmFsc2UpIDogdm9pZCAwO1xuICBwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIgPyB3YXJuaW5nKCF1c2VDb250ZXh0KE5hdmlnYXRpb25Db250ZXh0KS5zdGF0aWMsIFwiPE5hdmlnYXRlPiBtdXN0IG5vdCBiZSB1c2VkIG9uIHRoZSBpbml0aWFsIHJlbmRlciBpbiBhIDxTdGF0aWNSb3V0ZXI+LiBcIiArIFwiVGhpcyBpcyBhIG5vLW9wLCBidXQgeW91IHNob3VsZCBtb2RpZnkgeW91ciBjb2RlIHNvIHRoZSA8TmF2aWdhdGU+IGlzIFwiICsgXCJvbmx5IGV2ZXIgcmVuZGVyZWQgaW4gcmVzcG9uc2UgdG8gc29tZSB1c2VyIGludGVyYWN0aW9uIG9yIHN0YXRlIGNoYW5nZS5cIikgOiB2b2lkIDA7XG4gIGxldCBuYXZpZ2F0ZSA9IHVzZU5hdmlnYXRlKCk7XG4gIHVzZUVmZmVjdCgoKSA9PiB7XG4gICAgbmF2aWdhdGUodG8sIHtcbiAgICAgIHJlcGxhY2UsXG4gICAgICBzdGF0ZVxuICAgIH0pO1xuICB9KTtcbiAgcmV0dXJuIG51bGw7XG59XG5cbi8qKlxuICogUmVuZGVycyB0aGUgY2hpbGQgcm91dGUncyBlbGVtZW50LCBpZiB0aGVyZSBpcyBvbmUuXG4gKlxuICogQHNlZSBodHRwczovL3JlYWN0cm91dGVyLmNvbS9kb2NzL2VuL3Y2L2FwaSNvdXRsZXRcbiAqL1xuZnVuY3Rpb24gT3V0bGV0KHByb3BzKSB7XG4gIHJldHVybiB1c2VPdXRsZXQocHJvcHMuY29udGV4dCk7XG59XG5cbi8qKlxuICogRGVjbGFyZXMgYW4gZWxlbWVudCB0aGF0IHNob3VsZCBiZSByZW5kZXJlZCBhdCBhIGNlcnRhaW4gVVJMIHBhdGguXG4gKlxuICogQHNlZSBodHRwczovL3JlYWN0cm91dGVyLmNvbS9kb2NzL2VuL3Y2L2FwaSNyb3V0ZVxuICovXG5mdW5jdGlvbiBSb3V0ZShfcHJvcHMpIHtcbiAgIHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIiA/IGludmFyaWFudChmYWxzZSwgXCJBIDxSb3V0ZT4gaXMgb25seSBldmVyIHRvIGJlIHVzZWQgYXMgdGhlIGNoaWxkIG9mIDxSb3V0ZXM+IGVsZW1lbnQsIFwiICsgXCJuZXZlciByZW5kZXJlZCBkaXJlY3RseS4gUGxlYXNlIHdyYXAgeW91ciA8Um91dGU+IGluIGEgPFJvdXRlcz4uXCIpIDogaW52YXJpYW50KGZhbHNlKSA7XG59XG5cbi8qKlxuICogUHJvdmlkZXMgbG9jYXRpb24gY29udGV4dCBmb3IgdGhlIHJlc3Qgb2YgdGhlIGFwcC5cbiAqXG4gKiBOb3RlOiBZb3UgdXN1YWxseSB3b24ndCByZW5kZXIgYSA8Um91dGVyPiBkaXJlY3RseS4gSW5zdGVhZCwgeW91J2xsIHJlbmRlciBhXG4gKiByb3V0ZXIgdGhhdCBpcyBtb3JlIHNwZWNpZmljIHRvIHlvdXIgZW52aXJvbm1lbnQgc3VjaCBhcyBhIDxCcm93c2VyUm91dGVyPlxuICogaW4gd2ViIGJyb3dzZXJzIG9yIGEgPFN0YXRpY1JvdXRlcj4gZm9yIHNlcnZlciByZW5kZXJpbmcuXG4gKlxuICogQHNlZSBodHRwczovL3JlYWN0cm91dGVyLmNvbS9kb2NzL2VuL3Y2L2FwaSNyb3V0ZXJcbiAqL1xuZnVuY3Rpb24gUm91dGVyKF9yZWYzKSB7XG4gIGxldCB7XG4gICAgYmFzZW5hbWU6IGJhc2VuYW1lUHJvcCA9IFwiL1wiLFxuICAgIGNoaWxkcmVuID0gbnVsbCxcbiAgICBsb2NhdGlvbjogbG9jYXRpb25Qcm9wLFxuICAgIG5hdmlnYXRpb25UeXBlID0gQWN0aW9uLlBvcCxcbiAgICBuYXZpZ2F0b3IsXG4gICAgc3RhdGljOiBzdGF0aWNQcm9wID0gZmFsc2VcbiAgfSA9IF9yZWYzO1xuICAhIXVzZUluUm91dGVyQ29udGV4dCgpID8gcHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiID8gaW52YXJpYW50KGZhbHNlLCBcIllvdSBjYW5ub3QgcmVuZGVyIGEgPFJvdXRlcj4gaW5zaWRlIGFub3RoZXIgPFJvdXRlcj4uXCIgKyBcIiBZb3Ugc2hvdWxkIG5ldmVyIGhhdmUgbW9yZSB0aGFuIG9uZSBpbiB5b3VyIGFwcC5cIikgOiBpbnZhcmlhbnQoZmFsc2UpIDogdm9pZCAwO1xuICBsZXQgYmFzZW5hbWUgPSBub3JtYWxpemVQYXRobmFtZShiYXNlbmFtZVByb3ApO1xuICBsZXQgbmF2aWdhdGlvbkNvbnRleHQgPSB1c2VNZW1vKCgpID0+ICh7XG4gICAgYmFzZW5hbWUsXG4gICAgbmF2aWdhdG9yLFxuICAgIHN0YXRpYzogc3RhdGljUHJvcFxuICB9KSwgW2Jhc2VuYW1lLCBuYXZpZ2F0b3IsIHN0YXRpY1Byb3BdKTtcblxuICBpZiAodHlwZW9mIGxvY2F0aW9uUHJvcCA9PT0gXCJzdHJpbmdcIikge1xuICAgIGxvY2F0aW9uUHJvcCA9IHBhcnNlUGF0aChsb2NhdGlvblByb3ApO1xuICB9XG5cbiAgbGV0IHtcbiAgICBwYXRobmFtZSA9IFwiL1wiLFxuICAgIHNlYXJjaCA9IFwiXCIsXG4gICAgaGFzaCA9IFwiXCIsXG4gICAgc3RhdGUgPSBudWxsLFxuICAgIGtleSA9IFwiZGVmYXVsdFwiXG4gIH0gPSBsb2NhdGlvblByb3A7XG4gIGxldCBsb2NhdGlvbiA9IHVzZU1lbW8oKCkgPT4ge1xuICAgIGxldCB0cmFpbGluZ1BhdGhuYW1lID0gc3RyaXBCYXNlbmFtZShwYXRobmFtZSwgYmFzZW5hbWUpO1xuXG4gICAgaWYgKHRyYWlsaW5nUGF0aG5hbWUgPT0gbnVsbCkge1xuICAgICAgcmV0dXJuIG51bGw7XG4gICAgfVxuXG4gICAgcmV0dXJuIHtcbiAgICAgIHBhdGhuYW1lOiB0cmFpbGluZ1BhdGhuYW1lLFxuICAgICAgc2VhcmNoLFxuICAgICAgaGFzaCxcbiAgICAgIHN0YXRlLFxuICAgICAga2V5XG4gICAgfTtcbiAgfSwgW2Jhc2VuYW1lLCBwYXRobmFtZSwgc2VhcmNoLCBoYXNoLCBzdGF0ZSwga2V5XSk7XG4gIHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIiA/IHdhcm5pbmcobG9jYXRpb24gIT0gbnVsbCwgXCI8Um91dGVyIGJhc2VuYW1lPVxcXCJcIiArIGJhc2VuYW1lICsgXCJcXFwiPiBpcyBub3QgYWJsZSB0byBtYXRjaCB0aGUgVVJMIFwiICsgKFwiXFxcIlwiICsgcGF0aG5hbWUgKyBzZWFyY2ggKyBoYXNoICsgXCJcXFwiIGJlY2F1c2UgaXQgZG9lcyBub3Qgc3RhcnQgd2l0aCB0aGUgXCIpICsgXCJiYXNlbmFtZSwgc28gdGhlIDxSb3V0ZXI+IHdvbid0IHJlbmRlciBhbnl0aGluZy5cIikgOiB2b2lkIDA7XG5cbiAgaWYgKGxvY2F0aW9uID09IG51bGwpIHtcbiAgICByZXR1cm4gbnVsbDtcbiAgfVxuXG4gIHJldHVybiAvKiNfX1BVUkVfXyovY3JlYXRlRWxlbWVudChOYXZpZ2F0aW9uQ29udGV4dC5Qcm92aWRlciwge1xuICAgIHZhbHVlOiBuYXZpZ2F0aW9uQ29udGV4dFxuICB9LCAvKiNfX1BVUkVfXyovY3JlYXRlRWxlbWVudChMb2NhdGlvbkNvbnRleHQuUHJvdmlkZXIsIHtcbiAgICBjaGlsZHJlbjogY2hpbGRyZW4sXG4gICAgdmFsdWU6IHtcbiAgICAgIGxvY2F0aW9uLFxuICAgICAgbmF2aWdhdGlvblR5cGVcbiAgICB9XG4gIH0pKTtcbn1cblxuLyoqXG4gKiBBIGNvbnRhaW5lciBmb3IgYSBuZXN0ZWQgdHJlZSBvZiA8Um91dGU+IGVsZW1lbnRzIHRoYXQgcmVuZGVycyB0aGUgYnJhbmNoXG4gKiB0aGF0IGJlc3QgbWF0Y2hlcyB0aGUgY3VycmVudCBsb2NhdGlvbi5cbiAqXG4gKiBAc2VlIGh0dHBzOi8vcmVhY3Ryb3V0ZXIuY29tL2RvY3MvZW4vdjYvYXBpI3JvdXRlc1xuICovXG5mdW5jdGlvbiBSb3V0ZXMoX3JlZjQpIHtcbiAgbGV0IHtcbiAgICBjaGlsZHJlbixcbiAgICBsb2NhdGlvblxuICB9ID0gX3JlZjQ7XG4gIHJldHVybiB1c2VSb3V0ZXMoY3JlYXRlUm91dGVzRnJvbUNoaWxkcmVuKGNoaWxkcmVuKSwgbG9jYXRpb24pO1xufSAvLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBVVElMU1xuLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vL1xuXG4vKipcbiAqIENyZWF0ZXMgYSByb3V0ZSBjb25maWcgZnJvbSBhIFJlYWN0IFwiY2hpbGRyZW5cIiBvYmplY3QsIHdoaWNoIGlzIHVzdWFsbHlcbiAqIGVpdGhlciBhIGA8Um91dGU+YCBlbGVtZW50IG9yIGFuIGFycmF5IG9mIHRoZW0uIFVzZWQgaW50ZXJuYWxseSBieVxuICogYDxSb3V0ZXM+YCB0byBjcmVhdGUgYSByb3V0ZSBjb25maWcgZnJvbSBpdHMgY2hpbGRyZW4uXG4gKlxuICogQHNlZSBodHRwczovL3JlYWN0cm91dGVyLmNvbS9kb2NzL2VuL3Y2L2FwaSNjcmVhdGVyb3V0ZXNmcm9tY2hpbGRyZW5cbiAqL1xuXG5mdW5jdGlvbiBjcmVhdGVSb3V0ZXNGcm9tQ2hpbGRyZW4oY2hpbGRyZW4pIHtcbiAgbGV0IHJvdXRlcyA9IFtdO1xuICBDaGlsZHJlbi5mb3JFYWNoKGNoaWxkcmVuLCBlbGVtZW50ID0+IHtcbiAgICBpZiAoISAvKiNfX1BVUkVfXyovaXNWYWxpZEVsZW1lbnQoZWxlbWVudCkpIHtcbiAgICAgIC8vIElnbm9yZSBub24tZWxlbWVudHMuIFRoaXMgYWxsb3dzIHBlb3BsZSB0byBtb3JlIGVhc2lseSBpbmxpbmVcbiAgICAgIC8vIGNvbmRpdGlvbmFscyBpbiB0aGVpciByb3V0ZSBjb25maWcuXG4gICAgICByZXR1cm47XG4gICAgfVxuXG4gICAgaWYgKGVsZW1lbnQudHlwZSA9PT0gRnJhZ21lbnQpIHtcbiAgICAgIC8vIFRyYW5zcGFyZW50bHkgc3VwcG9ydCBSZWFjdC5GcmFnbWVudCBhbmQgaXRzIGNoaWxkcmVuLlxuICAgICAgcm91dGVzLnB1c2guYXBwbHkocm91dGVzLCBjcmVhdGVSb3V0ZXNGcm9tQ2hpbGRyZW4oZWxlbWVudC5wcm9wcy5jaGlsZHJlbikpO1xuICAgICAgcmV0dXJuO1xuICAgIH1cblxuICAgICEoZWxlbWVudC50eXBlID09PSBSb3V0ZSkgPyBwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIgPyBpbnZhcmlhbnQoZmFsc2UsIFwiW1wiICsgKHR5cGVvZiBlbGVtZW50LnR5cGUgPT09IFwic3RyaW5nXCIgPyBlbGVtZW50LnR5cGUgOiBlbGVtZW50LnR5cGUubmFtZSkgKyBcIl0gaXMgbm90IGEgPFJvdXRlPiBjb21wb25lbnQuIEFsbCBjb21wb25lbnQgY2hpbGRyZW4gb2YgPFJvdXRlcz4gbXVzdCBiZSBhIDxSb3V0ZT4gb3IgPFJlYWN0LkZyYWdtZW50PlwiKSA6IGludmFyaWFudChmYWxzZSkgOiB2b2lkIDA7XG4gICAgbGV0IHJvdXRlID0ge1xuICAgICAgY2FzZVNlbnNpdGl2ZTogZWxlbWVudC5wcm9wcy5jYXNlU2Vuc2l0aXZlLFxuICAgICAgZWxlbWVudDogZWxlbWVudC5wcm9wcy5lbGVtZW50LFxuICAgICAgaW5kZXg6IGVsZW1lbnQucHJvcHMuaW5kZXgsXG4gICAgICBwYXRoOiBlbGVtZW50LnByb3BzLnBhdGhcbiAgICB9O1xuXG4gICAgaWYgKGVsZW1lbnQucHJvcHMuY2hpbGRyZW4pIHtcbiAgICAgIHJvdXRlLmNoaWxkcmVuID0gY3JlYXRlUm91dGVzRnJvbUNoaWxkcmVuKGVsZW1lbnQucHJvcHMuY2hpbGRyZW4pO1xuICAgIH1cblxuICAgIHJvdXRlcy5wdXNoKHJvdXRlKTtcbiAgfSk7XG4gIHJldHVybiByb3V0ZXM7XG59XG4vKipcbiAqIFJlbmRlcnMgdGhlIHJlc3VsdCBvZiBgbWF0Y2hSb3V0ZXMoKWAgaW50byBhIFJlYWN0IGVsZW1lbnQuXG4gKi9cblxuZnVuY3Rpb24gcmVuZGVyTWF0Y2hlcyhtYXRjaGVzKSB7XG4gIHJldHVybiBfcmVuZGVyTWF0Y2hlcyhtYXRjaGVzKTtcbn1cblxuZXhwb3J0IHsgTWVtb3J5Um91dGVyLCBOYXZpZ2F0ZSwgT3V0bGV0LCBSb3V0ZSwgUm91dGVyLCBSb3V0ZXMsIExvY2F0aW9uQ29udGV4dCBhcyBVTlNBRkVfTG9jYXRpb25Db250ZXh0LCBOYXZpZ2F0aW9uQ29udGV4dCBhcyBVTlNBRkVfTmF2aWdhdGlvbkNvbnRleHQsIFJvdXRlQ29udGV4dCBhcyBVTlNBRkVfUm91dGVDb250ZXh0LCBjcmVhdGVSb3V0ZXNGcm9tQ2hpbGRyZW4sIGdlbmVyYXRlUGF0aCwgbWF0Y2hQYXRoLCBtYXRjaFJvdXRlcywgcmVuZGVyTWF0Y2hlcywgcmVzb2x2ZVBhdGgsIHVzZUhyZWYsIHVzZUluUm91dGVyQ29udGV4dCwgdXNlTG9jYXRpb24sIHVzZU1hdGNoLCB1c2VOYXZpZ2F0ZSwgdXNlTmF2aWdhdGlvblR5cGUsIHVzZU91dGxldCwgdXNlT3V0bGV0Q29udGV4dCwgdXNlUGFyYW1zLCB1c2VSZXNvbHZlZFBhdGgsIHVzZVJvdXRlcyB9O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9aW5kZXguanMubWFwXG4iLCIvKipcbiAqIFJlYWN0IFJvdXRlciBET00gdjYuMy4wXG4gKlxuICogQ29weXJpZ2h0IChjKSBSZW1peCBTb2Z0d2FyZSBJbmMuXG4gKlxuICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UgZm91bmQgaW4gdGhlXG4gKiBMSUNFTlNFLm1kIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuXG4gKlxuICogQGxpY2Vuc2UgTUlUXG4gKi9cbmltcG9ydCB7IHVzZVJlZiwgdXNlU3RhdGUsIHVzZUxheW91dEVmZmVjdCwgY3JlYXRlRWxlbWVudCwgZm9yd2FyZFJlZiwgdXNlQ2FsbGJhY2ssIHVzZU1lbW8gfSBmcm9tICdyZWFjdCc7XG5pbXBvcnQgeyBjcmVhdGVCcm93c2VySGlzdG9yeSwgY3JlYXRlSGFzaEhpc3RvcnkgfSBmcm9tICdoaXN0b3J5JztcbmltcG9ydCB7IFJvdXRlciwgdXNlSHJlZiwgY3JlYXRlUGF0aCwgdXNlTG9jYXRpb24sIHVzZVJlc29sdmVkUGF0aCwgdXNlTmF2aWdhdGUgfSBmcm9tICdyZWFjdC1yb3V0ZXInO1xuZXhwb3J0IHsgTWVtb3J5Um91dGVyLCBOYXZpZ2F0ZSwgTmF2aWdhdGlvblR5cGUsIE91dGxldCwgUm91dGUsIFJvdXRlciwgUm91dGVzLCBVTlNBRkVfTG9jYXRpb25Db250ZXh0LCBVTlNBRkVfTmF2aWdhdGlvbkNvbnRleHQsIFVOU0FGRV9Sb3V0ZUNvbnRleHQsIGNyZWF0ZVBhdGgsIGNyZWF0ZVJvdXRlc0Zyb21DaGlsZHJlbiwgZ2VuZXJhdGVQYXRoLCBtYXRjaFBhdGgsIG1hdGNoUm91dGVzLCBwYXJzZVBhdGgsIHJlbmRlck1hdGNoZXMsIHJlc29sdmVQYXRoLCB1c2VIcmVmLCB1c2VJblJvdXRlckNvbnRleHQsIHVzZUxvY2F0aW9uLCB1c2VNYXRjaCwgdXNlTmF2aWdhdGUsIHVzZU5hdmlnYXRpb25UeXBlLCB1c2VPdXRsZXQsIHVzZU91dGxldENvbnRleHQsIHVzZVBhcmFtcywgdXNlUmVzb2x2ZWRQYXRoLCB1c2VSb3V0ZXMgfSBmcm9tICdyZWFjdC1yb3V0ZXInO1xuXG5mdW5jdGlvbiBfZXh0ZW5kcygpIHtcbiAgX2V4dGVuZHMgPSBPYmplY3QuYXNzaWduIHx8IGZ1bmN0aW9uICh0YXJnZXQpIHtcbiAgICBmb3IgKHZhciBpID0gMTsgaSA8IGFyZ3VtZW50cy5sZW5ndGg7IGkrKykge1xuICAgICAgdmFyIHNvdXJjZSA9IGFyZ3VtZW50c1tpXTtcblxuICAgICAgZm9yICh2YXIga2V5IGluIHNvdXJjZSkge1xuICAgICAgICBpZiAoT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKHNvdXJjZSwga2V5KSkge1xuICAgICAgICAgIHRhcmdldFtrZXldID0gc291cmNlW2tleV07XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG5cbiAgICByZXR1cm4gdGFyZ2V0O1xuICB9O1xuXG4gIHJldHVybiBfZXh0ZW5kcy5hcHBseSh0aGlzLCBhcmd1bWVudHMpO1xufVxuXG5mdW5jdGlvbiBfb2JqZWN0V2l0aG91dFByb3BlcnRpZXNMb29zZShzb3VyY2UsIGV4Y2x1ZGVkKSB7XG4gIGlmIChzb3VyY2UgPT0gbnVsbCkgcmV0dXJuIHt9O1xuICB2YXIgdGFyZ2V0ID0ge307XG4gIHZhciBzb3VyY2VLZXlzID0gT2JqZWN0LmtleXMoc291cmNlKTtcbiAgdmFyIGtleSwgaTtcblxuICBmb3IgKGkgPSAwOyBpIDwgc291cmNlS2V5cy5sZW5ndGg7IGkrKykge1xuICAgIGtleSA9IHNvdXJjZUtleXNbaV07XG4gICAgaWYgKGV4Y2x1ZGVkLmluZGV4T2Yoa2V5KSA+PSAwKSBjb250aW51ZTtcbiAgICB0YXJnZXRba2V5XSA9IHNvdXJjZVtrZXldO1xuICB9XG5cbiAgcmV0dXJuIHRhcmdldDtcbn1cblxuY29uc3QgX2V4Y2x1ZGVkID0gW1wib25DbGlja1wiLCBcInJlbG9hZERvY3VtZW50XCIsIFwicmVwbGFjZVwiLCBcInN0YXRlXCIsIFwidGFyZ2V0XCIsIFwidG9cIl0sXG4gICAgICBfZXhjbHVkZWQyID0gW1wiYXJpYS1jdXJyZW50XCIsIFwiY2FzZVNlbnNpdGl2ZVwiLCBcImNsYXNzTmFtZVwiLCBcImVuZFwiLCBcInN0eWxlXCIsIFwidG9cIiwgXCJjaGlsZHJlblwiXTtcblxuZnVuY3Rpb24gd2FybmluZyhjb25kLCBtZXNzYWdlKSB7XG4gIGlmICghY29uZCkge1xuICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBuby1jb25zb2xlXG4gICAgaWYgKHR5cGVvZiBjb25zb2xlICE9PSBcInVuZGVmaW5lZFwiKSBjb25zb2xlLndhcm4obWVzc2FnZSk7XG5cbiAgICB0cnkge1xuICAgICAgLy8gV2VsY29tZSB0byBkZWJ1Z2dpbmcgUmVhY3QgUm91dGVyIVxuICAgICAgLy9cbiAgICAgIC8vIFRoaXMgZXJyb3IgaXMgdGhyb3duIGFzIGEgY29udmVuaWVuY2Ugc28geW91IGNhbiBtb3JlIGVhc2lseVxuICAgICAgLy8gZmluZCB0aGUgc291cmNlIGZvciBhIHdhcm5pbmcgdGhhdCBhcHBlYXJzIGluIHRoZSBjb25zb2xlIGJ5XG4gICAgICAvLyBlbmFibGluZyBcInBhdXNlIG9uIGV4Y2VwdGlvbnNcIiBpbiB5b3VyIEphdmFTY3JpcHQgZGVidWdnZXIuXG4gICAgICB0aHJvdyBuZXcgRXJyb3IobWVzc2FnZSk7IC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBuby1lbXB0eVxuICAgIH0gY2F0Y2ggKGUpIHt9XG4gIH1cbn0gLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIENPTVBPTkVOVFNcbi8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vXG5cbi8qKlxuICogQSBgPFJvdXRlcj5gIGZvciB1c2UgaW4gd2ViIGJyb3dzZXJzLiBQcm92aWRlcyB0aGUgY2xlYW5lc3QgVVJMcy5cbiAqL1xuZnVuY3Rpb24gQnJvd3NlclJvdXRlcihfcmVmKSB7XG4gIGxldCB7XG4gICAgYmFzZW5hbWUsXG4gICAgY2hpbGRyZW4sXG4gICAgd2luZG93XG4gIH0gPSBfcmVmO1xuICBsZXQgaGlzdG9yeVJlZiA9IHVzZVJlZigpO1xuXG4gIGlmIChoaXN0b3J5UmVmLmN1cnJlbnQgPT0gbnVsbCkge1xuICAgIGhpc3RvcnlSZWYuY3VycmVudCA9IGNyZWF0ZUJyb3dzZXJIaXN0b3J5KHtcbiAgICAgIHdpbmRvd1xuICAgIH0pO1xuICB9XG5cbiAgbGV0IGhpc3RvcnkgPSBoaXN0b3J5UmVmLmN1cnJlbnQ7XG4gIGxldCBbc3RhdGUsIHNldFN0YXRlXSA9IHVzZVN0YXRlKHtcbiAgICBhY3Rpb246IGhpc3RvcnkuYWN0aW9uLFxuICAgIGxvY2F0aW9uOiBoaXN0b3J5LmxvY2F0aW9uXG4gIH0pO1xuICB1c2VMYXlvdXRFZmZlY3QoKCkgPT4gaGlzdG9yeS5saXN0ZW4oc2V0U3RhdGUpLCBbaGlzdG9yeV0pO1xuICByZXR1cm4gLyojX19QVVJFX18qL2NyZWF0ZUVsZW1lbnQoUm91dGVyLCB7XG4gICAgYmFzZW5hbWU6IGJhc2VuYW1lLFxuICAgIGNoaWxkcmVuOiBjaGlsZHJlbixcbiAgICBsb2NhdGlvbjogc3RhdGUubG9jYXRpb24sXG4gICAgbmF2aWdhdGlvblR5cGU6IHN0YXRlLmFjdGlvbixcbiAgICBuYXZpZ2F0b3I6IGhpc3RvcnlcbiAgfSk7XG59XG5cbi8qKlxuICogQSBgPFJvdXRlcj5gIGZvciB1c2UgaW4gd2ViIGJyb3dzZXJzLiBTdG9yZXMgdGhlIGxvY2F0aW9uIGluIHRoZSBoYXNoXG4gKiBwb3J0aW9uIG9mIHRoZSBVUkwgc28gaXQgaXMgbm90IHNlbnQgdG8gdGhlIHNlcnZlci5cbiAqL1xuZnVuY3Rpb24gSGFzaFJvdXRlcihfcmVmMikge1xuICBsZXQge1xuICAgIGJhc2VuYW1lLFxuICAgIGNoaWxkcmVuLFxuICAgIHdpbmRvd1xuICB9ID0gX3JlZjI7XG4gIGxldCBoaXN0b3J5UmVmID0gdXNlUmVmKCk7XG5cbiAgaWYgKGhpc3RvcnlSZWYuY3VycmVudCA9PSBudWxsKSB7XG4gICAgaGlzdG9yeVJlZi5jdXJyZW50ID0gY3JlYXRlSGFzaEhpc3Rvcnkoe1xuICAgICAgd2luZG93XG4gICAgfSk7XG4gIH1cblxuICBsZXQgaGlzdG9yeSA9IGhpc3RvcnlSZWYuY3VycmVudDtcbiAgbGV0IFtzdGF0ZSwgc2V0U3RhdGVdID0gdXNlU3RhdGUoe1xuICAgIGFjdGlvbjogaGlzdG9yeS5hY3Rpb24sXG4gICAgbG9jYXRpb246IGhpc3RvcnkubG9jYXRpb25cbiAgfSk7XG4gIHVzZUxheW91dEVmZmVjdCgoKSA9PiBoaXN0b3J5Lmxpc3RlbihzZXRTdGF0ZSksIFtoaXN0b3J5XSk7XG4gIHJldHVybiAvKiNfX1BVUkVfXyovY3JlYXRlRWxlbWVudChSb3V0ZXIsIHtcbiAgICBiYXNlbmFtZTogYmFzZW5hbWUsXG4gICAgY2hpbGRyZW46IGNoaWxkcmVuLFxuICAgIGxvY2F0aW9uOiBzdGF0ZS5sb2NhdGlvbixcbiAgICBuYXZpZ2F0aW9uVHlwZTogc3RhdGUuYWN0aW9uLFxuICAgIG5hdmlnYXRvcjogaGlzdG9yeVxuICB9KTtcbn1cblxuLyoqXG4gKiBBIGA8Um91dGVyPmAgdGhhdCBhY2NlcHRzIGEgcHJlLWluc3RhbnRpYXRlZCBoaXN0b3J5IG9iamVjdC4gSXQncyBpbXBvcnRhbnRcbiAqIHRvIG5vdGUgdGhhdCB1c2luZyB5b3VyIG93biBoaXN0b3J5IG9iamVjdCBpcyBoaWdobHkgZGlzY291cmFnZWQgYW5kIG1heSBhZGRcbiAqIHR3byB2ZXJzaW9ucyBvZiB0aGUgaGlzdG9yeSBsaWJyYXJ5IHRvIHlvdXIgYnVuZGxlcyB1bmxlc3MgeW91IHVzZSB0aGUgc2FtZVxuICogdmVyc2lvbiBvZiB0aGUgaGlzdG9yeSBsaWJyYXJ5IHRoYXQgUmVhY3QgUm91dGVyIHVzZXMgaW50ZXJuYWxseS5cbiAqL1xuZnVuY3Rpb24gSGlzdG9yeVJvdXRlcihfcmVmMykge1xuICBsZXQge1xuICAgIGJhc2VuYW1lLFxuICAgIGNoaWxkcmVuLFxuICAgIGhpc3RvcnlcbiAgfSA9IF9yZWYzO1xuICBjb25zdCBbc3RhdGUsIHNldFN0YXRlXSA9IHVzZVN0YXRlKHtcbiAgICBhY3Rpb246IGhpc3RvcnkuYWN0aW9uLFxuICAgIGxvY2F0aW9uOiBoaXN0b3J5LmxvY2F0aW9uXG4gIH0pO1xuICB1c2VMYXlvdXRFZmZlY3QoKCkgPT4gaGlzdG9yeS5saXN0ZW4oc2V0U3RhdGUpLCBbaGlzdG9yeV0pO1xuICByZXR1cm4gLyojX19QVVJFX18qL2NyZWF0ZUVsZW1lbnQoUm91dGVyLCB7XG4gICAgYmFzZW5hbWU6IGJhc2VuYW1lLFxuICAgIGNoaWxkcmVuOiBjaGlsZHJlbixcbiAgICBsb2NhdGlvbjogc3RhdGUubG9jYXRpb24sXG4gICAgbmF2aWdhdGlvblR5cGU6IHN0YXRlLmFjdGlvbixcbiAgICBuYXZpZ2F0b3I6IGhpc3RvcnlcbiAgfSk7XG59XG5cbmlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIpIHtcbiAgSGlzdG9yeVJvdXRlci5kaXNwbGF5TmFtZSA9IFwidW5zdGFibGVfSGlzdG9yeVJvdXRlclwiO1xufVxuXG5mdW5jdGlvbiBpc01vZGlmaWVkRXZlbnQoZXZlbnQpIHtcbiAgcmV0dXJuICEhKGV2ZW50Lm1ldGFLZXkgfHwgZXZlbnQuYWx0S2V5IHx8IGV2ZW50LmN0cmxLZXkgfHwgZXZlbnQuc2hpZnRLZXkpO1xufVxuXG4vKipcbiAqIFRoZSBwdWJsaWMgQVBJIGZvciByZW5kZXJpbmcgYSBoaXN0b3J5LWF3YXJlIDxhPi5cbiAqL1xuY29uc3QgTGluayA9IC8qI19fUFVSRV9fKi9mb3J3YXJkUmVmKGZ1bmN0aW9uIExpbmtXaXRoUmVmKF9yZWY0LCByZWYpIHtcbiAgbGV0IHtcbiAgICBvbkNsaWNrLFxuICAgIHJlbG9hZERvY3VtZW50LFxuICAgIHJlcGxhY2UgPSBmYWxzZSxcbiAgICBzdGF0ZSxcbiAgICB0YXJnZXQsXG4gICAgdG9cbiAgfSA9IF9yZWY0LFxuICAgICAgcmVzdCA9IF9vYmplY3RXaXRob3V0UHJvcGVydGllc0xvb3NlKF9yZWY0LCBfZXhjbHVkZWQpO1xuXG4gIGxldCBocmVmID0gdXNlSHJlZih0byk7XG4gIGxldCBpbnRlcm5hbE9uQ2xpY2sgPSB1c2VMaW5rQ2xpY2tIYW5kbGVyKHRvLCB7XG4gICAgcmVwbGFjZSxcbiAgICBzdGF0ZSxcbiAgICB0YXJnZXRcbiAgfSk7XG5cbiAgZnVuY3Rpb24gaGFuZGxlQ2xpY2soZXZlbnQpIHtcbiAgICBpZiAob25DbGljaykgb25DbGljayhldmVudCk7XG5cbiAgICBpZiAoIWV2ZW50LmRlZmF1bHRQcmV2ZW50ZWQgJiYgIXJlbG9hZERvY3VtZW50KSB7XG4gICAgICBpbnRlcm5hbE9uQ2xpY2soZXZlbnQpO1xuICAgIH1cbiAgfVxuXG4gIHJldHVybiAoXG4gICAgLyojX19QVVJFX18qL1xuICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBqc3gtYTExeS9hbmNob3ItaGFzLWNvbnRlbnRcbiAgICBjcmVhdGVFbGVtZW50KFwiYVwiLCBfZXh0ZW5kcyh7fSwgcmVzdCwge1xuICAgICAgaHJlZjogaHJlZixcbiAgICAgIG9uQ2xpY2s6IGhhbmRsZUNsaWNrLFxuICAgICAgcmVmOiByZWYsXG4gICAgICB0YXJnZXQ6IHRhcmdldFxuICAgIH0pKVxuICApO1xufSk7XG5cbmlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIpIHtcbiAgTGluay5kaXNwbGF5TmFtZSA9IFwiTGlua1wiO1xufVxuXG4vKipcbiAqIEEgPExpbms+IHdyYXBwZXIgdGhhdCBrbm93cyBpZiBpdCdzIFwiYWN0aXZlXCIgb3Igbm90LlxuICovXG5jb25zdCBOYXZMaW5rID0gLyojX19QVVJFX18qL2ZvcndhcmRSZWYoZnVuY3Rpb24gTmF2TGlua1dpdGhSZWYoX3JlZjUsIHJlZikge1xuICBsZXQge1xuICAgIFwiYXJpYS1jdXJyZW50XCI6IGFyaWFDdXJyZW50UHJvcCA9IFwicGFnZVwiLFxuICAgIGNhc2VTZW5zaXRpdmUgPSBmYWxzZSxcbiAgICBjbGFzc05hbWU6IGNsYXNzTmFtZVByb3AgPSBcIlwiLFxuICAgIGVuZCA9IGZhbHNlLFxuICAgIHN0eWxlOiBzdHlsZVByb3AsXG4gICAgdG8sXG4gICAgY2hpbGRyZW5cbiAgfSA9IF9yZWY1LFxuICAgICAgcmVzdCA9IF9vYmplY3RXaXRob3V0UHJvcGVydGllc0xvb3NlKF9yZWY1LCBfZXhjbHVkZWQyKTtcblxuICBsZXQgbG9jYXRpb24gPSB1c2VMb2NhdGlvbigpO1xuICBsZXQgcGF0aCA9IHVzZVJlc29sdmVkUGF0aCh0byk7XG4gIGxldCBsb2NhdGlvblBhdGhuYW1lID0gbG9jYXRpb24ucGF0aG5hbWU7XG4gIGxldCB0b1BhdGhuYW1lID0gcGF0aC5wYXRobmFtZTtcblxuICBpZiAoIWNhc2VTZW5zaXRpdmUpIHtcbiAgICBsb2NhdGlvblBhdGhuYW1lID0gbG9jYXRpb25QYXRobmFtZS50b0xvd2VyQ2FzZSgpO1xuICAgIHRvUGF0aG5hbWUgPSB0b1BhdGhuYW1lLnRvTG93ZXJDYXNlKCk7XG4gIH1cblxuICBsZXQgaXNBY3RpdmUgPSBsb2NhdGlvblBhdGhuYW1lID09PSB0b1BhdGhuYW1lIHx8ICFlbmQgJiYgbG9jYXRpb25QYXRobmFtZS5zdGFydHNXaXRoKHRvUGF0aG5hbWUpICYmIGxvY2F0aW9uUGF0aG5hbWUuY2hhckF0KHRvUGF0aG5hbWUubGVuZ3RoKSA9PT0gXCIvXCI7XG4gIGxldCBhcmlhQ3VycmVudCA9IGlzQWN0aXZlID8gYXJpYUN1cnJlbnRQcm9wIDogdW5kZWZpbmVkO1xuICBsZXQgY2xhc3NOYW1lO1xuXG4gIGlmICh0eXBlb2YgY2xhc3NOYW1lUHJvcCA9PT0gXCJmdW5jdGlvblwiKSB7XG4gICAgY2xhc3NOYW1lID0gY2xhc3NOYW1lUHJvcCh7XG4gICAgICBpc0FjdGl2ZVxuICAgIH0pO1xuICB9IGVsc2Uge1xuICAgIC8vIElmIHRoZSBjbGFzc05hbWUgcHJvcCBpcyBub3QgYSBmdW5jdGlvbiwgd2UgdXNlIGEgZGVmYXVsdCBgYWN0aXZlYFxuICAgIC8vIGNsYXNzIGZvciA8TmF2TGluayAvPnMgdGhhdCBhcmUgYWN0aXZlLiBJbiB2NSBgYWN0aXZlYCB3YXMgdGhlIGRlZmF1bHRcbiAgICAvLyB2YWx1ZSBmb3IgYGFjdGl2ZUNsYXNzTmFtZWAsIGJ1dCB3ZSBhcmUgcmVtb3ZpbmcgdGhhdCBBUEkgYW5kIGNhbiBzdGlsbFxuICAgIC8vIHVzZSB0aGUgb2xkIGRlZmF1bHQgYmVoYXZpb3IgZm9yIGEgY2xlYW5lciB1cGdyYWRlIHBhdGggYW5kIGtlZXAgdGhlXG4gICAgLy8gc2ltcGxlIHN0eWxpbmcgcnVsZXMgd29ya2luZyBhcyB0aGV5IGN1cnJlbnRseSBkby5cbiAgICBjbGFzc05hbWUgPSBbY2xhc3NOYW1lUHJvcCwgaXNBY3RpdmUgPyBcImFjdGl2ZVwiIDogbnVsbF0uZmlsdGVyKEJvb2xlYW4pLmpvaW4oXCIgXCIpO1xuICB9XG5cbiAgbGV0IHN0eWxlID0gdHlwZW9mIHN0eWxlUHJvcCA9PT0gXCJmdW5jdGlvblwiID8gc3R5bGVQcm9wKHtcbiAgICBpc0FjdGl2ZVxuICB9KSA6IHN0eWxlUHJvcDtcbiAgcmV0dXJuIC8qI19fUFVSRV9fKi9jcmVhdGVFbGVtZW50KExpbmssIF9leHRlbmRzKHt9LCByZXN0LCB7XG4gICAgXCJhcmlhLWN1cnJlbnRcIjogYXJpYUN1cnJlbnQsXG4gICAgY2xhc3NOYW1lOiBjbGFzc05hbWUsXG4gICAgcmVmOiByZWYsXG4gICAgc3R5bGU6IHN0eWxlLFxuICAgIHRvOiB0b1xuICB9KSwgdHlwZW9mIGNoaWxkcmVuID09PSBcImZ1bmN0aW9uXCIgPyBjaGlsZHJlbih7XG4gICAgaXNBY3RpdmVcbiAgfSkgOiBjaGlsZHJlbik7XG59KTtcblxuaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIikge1xuICBOYXZMaW5rLmRpc3BsYXlOYW1lID0gXCJOYXZMaW5rXCI7XG59IC8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBIT09LU1xuLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy9cblxuLyoqXG4gKiBIYW5kbGVzIHRoZSBjbGljayBiZWhhdmlvciBmb3Igcm91dGVyIGA8TGluaz5gIGNvbXBvbmVudHMuIFRoaXMgaXMgdXNlZnVsIGlmXG4gKiB5b3UgbmVlZCB0byBjcmVhdGUgY3VzdG9tIGA8TGluaz5gIGNvbXBvbmVudHMgd2l0aCB0aGUgc2FtZSBjbGljayBiZWhhdmlvciB3ZVxuICogdXNlIGluIG91ciBleHBvcnRlZCBgPExpbms+YC5cbiAqL1xuXG5cbmZ1bmN0aW9uIHVzZUxpbmtDbGlja0hhbmRsZXIodG8sIF90ZW1wKSB7XG4gIGxldCB7XG4gICAgdGFyZ2V0LFxuICAgIHJlcGxhY2U6IHJlcGxhY2VQcm9wLFxuICAgIHN0YXRlXG4gIH0gPSBfdGVtcCA9PT0gdm9pZCAwID8ge30gOiBfdGVtcDtcbiAgbGV0IG5hdmlnYXRlID0gdXNlTmF2aWdhdGUoKTtcbiAgbGV0IGxvY2F0aW9uID0gdXNlTG9jYXRpb24oKTtcbiAgbGV0IHBhdGggPSB1c2VSZXNvbHZlZFBhdGgodG8pO1xuICByZXR1cm4gdXNlQ2FsbGJhY2soZXZlbnQgPT4ge1xuICAgIGlmIChldmVudC5idXR0b24gPT09IDAgJiYgKCAvLyBJZ25vcmUgZXZlcnl0aGluZyBidXQgbGVmdCBjbGlja3NcbiAgICAhdGFyZ2V0IHx8IHRhcmdldCA9PT0gXCJfc2VsZlwiKSAmJiAvLyBMZXQgYnJvd3NlciBoYW5kbGUgXCJ0YXJnZXQ9X2JsYW5rXCIgZXRjLlxuICAgICFpc01vZGlmaWVkRXZlbnQoZXZlbnQpIC8vIElnbm9yZSBjbGlja3Mgd2l0aCBtb2RpZmllciBrZXlzXG4gICAgKSB7XG4gICAgICBldmVudC5wcmV2ZW50RGVmYXVsdCgpOyAvLyBJZiB0aGUgVVJMIGhhc24ndCBjaGFuZ2VkLCBhIHJlZ3VsYXIgPGE+IHdpbGwgZG8gYSByZXBsYWNlIGluc3RlYWQgb2ZcbiAgICAgIC8vIGEgcHVzaCwgc28gZG8gdGhlIHNhbWUgaGVyZS5cblxuICAgICAgbGV0IHJlcGxhY2UgPSAhIXJlcGxhY2VQcm9wIHx8IGNyZWF0ZVBhdGgobG9jYXRpb24pID09PSBjcmVhdGVQYXRoKHBhdGgpO1xuICAgICAgbmF2aWdhdGUodG8sIHtcbiAgICAgICAgcmVwbGFjZSxcbiAgICAgICAgc3RhdGVcbiAgICAgIH0pO1xuICAgIH1cbiAgfSwgW2xvY2F0aW9uLCBuYXZpZ2F0ZSwgcGF0aCwgcmVwbGFjZVByb3AsIHN0YXRlLCB0YXJnZXQsIHRvXSk7XG59XG4vKipcbiAqIEEgY29udmVuaWVudCB3cmFwcGVyIGZvciByZWFkaW5nIGFuZCB3cml0aW5nIHNlYXJjaCBwYXJhbWV0ZXJzIHZpYSB0aGVcbiAqIFVSTFNlYXJjaFBhcmFtcyBpbnRlcmZhY2UuXG4gKi9cblxuZnVuY3Rpb24gdXNlU2VhcmNoUGFyYW1zKGRlZmF1bHRJbml0KSB7XG4gIHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIiA/IHdhcm5pbmcodHlwZW9mIFVSTFNlYXJjaFBhcmFtcyAhPT0gXCJ1bmRlZmluZWRcIiwgXCJZb3UgY2Fubm90IHVzZSB0aGUgYHVzZVNlYXJjaFBhcmFtc2AgaG9vayBpbiBhIGJyb3dzZXIgdGhhdCBkb2VzIG5vdCBcIiArIFwic3VwcG9ydCB0aGUgVVJMU2VhcmNoUGFyYW1zIEFQSS4gSWYgeW91IG5lZWQgdG8gc3VwcG9ydCBJbnRlcm5ldCBcIiArIFwiRXhwbG9yZXIgMTEsIHdlIHJlY29tbWVuZCB5b3UgbG9hZCBhIHBvbHlmaWxsIHN1Y2ggYXMgXCIgKyBcImh0dHBzOi8vZ2l0aHViLmNvbS91bmdhcC91cmwtc2VhcmNoLXBhcmFtc1xcblxcblwiICsgXCJJZiB5b3UncmUgdW5zdXJlIGhvdyB0byBsb2FkIHBvbHlmaWxscywgd2UgcmVjb21tZW5kIHlvdSBjaGVjayBvdXQgXCIgKyBcImh0dHBzOi8vcG9seWZpbGwuaW8vdjMvIHdoaWNoIHByb3ZpZGVzIHNvbWUgcmVjb21tZW5kYXRpb25zIGFib3V0IGhvdyBcIiArIFwidG8gbG9hZCBwb2x5ZmlsbHMgb25seSBmb3IgdXNlcnMgdGhhdCBuZWVkIHRoZW0sIGluc3RlYWQgb2YgZm9yIGV2ZXJ5IFwiICsgXCJ1c2VyLlwiKSA6IHZvaWQgMDtcbiAgbGV0IGRlZmF1bHRTZWFyY2hQYXJhbXNSZWYgPSB1c2VSZWYoY3JlYXRlU2VhcmNoUGFyYW1zKGRlZmF1bHRJbml0KSk7XG4gIGxldCBsb2NhdGlvbiA9IHVzZUxvY2F0aW9uKCk7XG4gIGxldCBzZWFyY2hQYXJhbXMgPSB1c2VNZW1vKCgpID0+IHtcbiAgICBsZXQgc2VhcmNoUGFyYW1zID0gY3JlYXRlU2VhcmNoUGFyYW1zKGxvY2F0aW9uLnNlYXJjaCk7XG5cbiAgICBmb3IgKGxldCBrZXkgb2YgZGVmYXVsdFNlYXJjaFBhcmFtc1JlZi5jdXJyZW50LmtleXMoKSkge1xuICAgICAgaWYgKCFzZWFyY2hQYXJhbXMuaGFzKGtleSkpIHtcbiAgICAgICAgZGVmYXVsdFNlYXJjaFBhcmFtc1JlZi5jdXJyZW50LmdldEFsbChrZXkpLmZvckVhY2godmFsdWUgPT4ge1xuICAgICAgICAgIHNlYXJjaFBhcmFtcy5hcHBlbmQoa2V5LCB2YWx1ZSk7XG4gICAgICAgIH0pO1xuICAgICAgfVxuICAgIH1cblxuICAgIHJldHVybiBzZWFyY2hQYXJhbXM7XG4gIH0sIFtsb2NhdGlvbi5zZWFyY2hdKTtcbiAgbGV0IG5hdmlnYXRlID0gdXNlTmF2aWdhdGUoKTtcbiAgbGV0IHNldFNlYXJjaFBhcmFtcyA9IHVzZUNhbGxiYWNrKChuZXh0SW5pdCwgbmF2aWdhdGVPcHRpb25zKSA9PiB7XG4gICAgbmF2aWdhdGUoXCI/XCIgKyBjcmVhdGVTZWFyY2hQYXJhbXMobmV4dEluaXQpLCBuYXZpZ2F0ZU9wdGlvbnMpO1xuICB9LCBbbmF2aWdhdGVdKTtcbiAgcmV0dXJuIFtzZWFyY2hQYXJhbXMsIHNldFNlYXJjaFBhcmFtc107XG59XG5cbi8qKlxuICogQ3JlYXRlcyBhIFVSTFNlYXJjaFBhcmFtcyBvYmplY3QgdXNpbmcgdGhlIGdpdmVuIGluaXRpYWxpemVyLlxuICpcbiAqIFRoaXMgaXMgaWRlbnRpY2FsIHRvIGBuZXcgVVJMU2VhcmNoUGFyYW1zKGluaXQpYCBleGNlcHQgaXQgYWxzb1xuICogc3VwcG9ydHMgYXJyYXlzIGFzIHZhbHVlcyBpbiB0aGUgb2JqZWN0IGZvcm0gb2YgdGhlIGluaXRpYWxpemVyXG4gKiBpbnN0ZWFkIG9mIGp1c3Qgc3RyaW5ncy4gVGhpcyBpcyBjb252ZW5pZW50IHdoZW4geW91IG5lZWQgbXVsdGlwbGVcbiAqIHZhbHVlcyBmb3IgYSBnaXZlbiBrZXksIGJ1dCBkb24ndCB3YW50IHRvIHVzZSBhbiBhcnJheSBpbml0aWFsaXplci5cbiAqXG4gKiBGb3IgZXhhbXBsZSwgaW5zdGVhZCBvZjpcbiAqXG4gKiAgIGxldCBzZWFyY2hQYXJhbXMgPSBuZXcgVVJMU2VhcmNoUGFyYW1zKFtcbiAqICAgICBbJ3NvcnQnLCAnbmFtZSddLFxuICogICAgIFsnc29ydCcsICdwcmljZSddXG4gKiAgIF0pO1xuICpcbiAqIHlvdSBjYW4gZG86XG4gKlxuICogICBsZXQgc2VhcmNoUGFyYW1zID0gY3JlYXRlU2VhcmNoUGFyYW1zKHtcbiAqICAgICBzb3J0OiBbJ25hbWUnLCAncHJpY2UnXVxuICogICB9KTtcbiAqL1xuZnVuY3Rpb24gY3JlYXRlU2VhcmNoUGFyYW1zKGluaXQpIHtcbiAgaWYgKGluaXQgPT09IHZvaWQgMCkge1xuICAgIGluaXQgPSBcIlwiO1xuICB9XG5cbiAgcmV0dXJuIG5ldyBVUkxTZWFyY2hQYXJhbXModHlwZW9mIGluaXQgPT09IFwic3RyaW5nXCIgfHwgQXJyYXkuaXNBcnJheShpbml0KSB8fCBpbml0IGluc3RhbmNlb2YgVVJMU2VhcmNoUGFyYW1zID8gaW5pdCA6IE9iamVjdC5rZXlzKGluaXQpLnJlZHVjZSgobWVtbywga2V5KSA9PiB7XG4gICAgbGV0IHZhbHVlID0gaW5pdFtrZXldO1xuICAgIHJldHVybiBtZW1vLmNvbmNhdChBcnJheS5pc0FycmF5KHZhbHVlKSA/IHZhbHVlLm1hcCh2ID0+IFtrZXksIHZdKSA6IFtba2V5LCB2YWx1ZV1dKTtcbiAgfSwgW10pKTtcbn1cblxuZXhwb3J0IHsgQnJvd3NlclJvdXRlciwgSGFzaFJvdXRlciwgTGluaywgTmF2TGluaywgY3JlYXRlU2VhcmNoUGFyYW1zLCBIaXN0b3J5Um91dGVyIGFzIHVuc3RhYmxlX0hpc3RvcnlSb3V0ZXIsIHVzZUxpbmtDbGlja0hhbmRsZXIsIHVzZVNlYXJjaFBhcmFtcyB9O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9aW5kZXguanMubWFwXG4iLCJpbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnO1xyXG5pbnRlcmZhY2UgSWNvblByb3BzIHtcclxuICAgIGNsYXNzTmFtZT86IHN0cmluZztcclxufVxyXG5cclxuY29uc3QgQ2hldnJvblJpZ2h0ID0gKHByb3BzOkljb25Qcm9wcykgPT4ge1xyXG4gICAgcmV0dXJuICg8c3ZnIGNsYXNzTmFtZT17cHJvcHMuY2xhc3NOYW1lfSB3aWR0aD1cIjIwXCIgaGVpZ2h0PVwiMjBcIiB2aWV3Qm94PVwiMCAwIDIwIDIwXCIgZmlsbD1cIm5vbmVcIiB4bWxucz1cImh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnXCI+XHJcbiAgICAgICAgPHBhdGggZD1cIk03LjY0NTgyIDQuMTQ3MDhDNy44NDA3MyAzLjk1MTQ3IDguMTU3MzEgMy45NTA5IDguMzUyOTIgNC4xNDU4MkwxMy44Mzc0IDkuNjEwOEMxNC4wNTMxIDkuODI1NzQgMTQuMDUzMSAxMC4xNzUxIDEzLjgzNzQgMTAuMzlMOC4zNTI5MiAxNS44NTVDOC4xNTczMSAxNi4wNDk5IDcuODQwNzMgMTYuMDQ5MyA3LjY0NTgyIDE1Ljg1MzdDNy40NTA5IDE1LjY1ODEgNy40NTE0NyAxNS4zNDE1IDcuNjQ3MDggMTUuMTQ2NkwxMi44MTE3IDEwLjAwMDRMNy42NDcwOCA0Ljg1NDE4QzcuNDUxNDcgNC42NTkyNyA3LjQ1MDkgNC4zNDI2OSA3LjY0NTgyIDQuMTQ3MDhaXCIgZmlsbD1cIiMyMTIxMjFcIi8+XHJcbiAgICA8L3N2Zz4pO1xyXG59XHJcblxyXG5leHBvcnQgZGVmYXVsdCBDaGV2cm9uUmlnaHQ7XHJcbiIsImltcG9ydCB7IE5hdkxpbmssIHVzZUxvY2F0aW9uLCB1c2VQYXJhbXMgfSBmcm9tIFwicmVhY3Qtcm91dGVyLWRvbVwiXHJcbmltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XHJcbmltcG9ydCBDaGV2cm9uUmlnaHQgZnJvbSBcIi4uLy4uL2NvbXBvbmVudHMvaWNvbi9jaGV2cm9uUmlnaHRcIjtcclxuXHJcbmNvbnN0IEJyZWFkQ3J1bWJzID0gKCkgPT4ge1xyXG4gICAgY29uc3QgbG9jYXRpb24gPSB1c2VMb2NhdGlvbigpO1xyXG4gICAgcmV0dXJuIChcclxuICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cImVvZy1icmVhZGNydW1ic1wiPlxyXG4gICAgICAgICAgICA8TmF2TGluayB0bz1cIi9cIiBjbGFzc05hbWU9XCJlb2ctYnJlYWRjcnVtYnNfX2l0ZW1cIj5SZXBvcnQgVGVtcGxhdGVzPC9OYXZMaW5rPlxyXG4gICAgICAgICAgICB7bG9jYXRpb24ucGF0aG5hbWUuc3RhcnRzV2l0aCgnL3N0YW5kYXJkLXJlcG9ydCcpICYmIDw+XHJcbiAgICAgICAgICAgICAgICA8Q2hldnJvblJpZ2h0IGNsYXNzTmFtZT1cIm14LTFcIi8+XHJcbiAgICAgICAgICAgICAgICA8TmF2TGluayB0bz1cIi9zdGFuZGFyZC1yZXBvcnRcIiBjbGFzc05hbWU9XCJlb2ctYnJlYWRjcnVtYnNfX2l0ZW1cIj5TdGFuZGFyZCBSZXBvcnQ8L05hdkxpbms+XHJcbiAgICAgICAgICAgIDwvPn1cclxuICAgICAgICAgICAge2xvY2F0aW9uLnBhdGhuYW1lID09PSAnL3N0YW5kYXJkLXJlcG9ydC12aWV3JyAmJiA8PlxyXG4gICAgICAgICAgICAgICAgPENoZXZyb25SaWdodCBjbGFzc05hbWU9XCJteC0xXCIvPlxyXG4gICAgICAgICAgICAgICAgPE5hdkxpbmsgdG89XCIvc3RhbmRhcmQtcmVwb3J0LXZpZXdcIiBjbGFzc05hbWU9XCJlb2ctYnJlYWRjcnVtYnNfX2l0ZW1cIj5WaWV3IFJlcG9ydDwvTmF2TGluaz5cclxuICAgICAgICAgICAgPC8+fVxyXG4gICAgICAgIDwvZGl2PlxyXG4gICAgKTtcclxufVxyXG5cclxuZXhwb3J0IGRlZmF1bHQgQnJlYWRDcnVtYnM7XHJcbiIsImltcG9ydCBIZWFkZXIgZnJvbSAnLi9jb21wb25lbnRzL2hlYWRlcic7XHJcbmltcG9ydCBSZWFjdCwgeyBSZWFjdEVsZW1lbnQgfSBmcm9tICdyZWFjdCc7XHJcbmltcG9ydCBCcmVhZENydW1icyBmcm9tICcuL2NvbXBvbmVudHMvYnJlYWRDcnVtYnMnO1xyXG5cclxuaW50ZXJmYWNlIE1haW5MYXlvdXRQcm9wcyB7XHJcbiAgICBjaGlsZHJlbjogUmVhY3RFbGVtZW50XHJcbn1cclxuXHJcbmNvbnN0IE1haW5MYXlvdXQgPSAocHJvcHM6IE1haW5MYXlvdXRQcm9wcykgPT4ge1xyXG4gICAgcmV0dXJuICg8ZGl2IGNsYXNzTmFtZT1cImgtMTAwXCI+XHJcbiAgICAgICAgPEhlYWRlci8+XHJcbiAgICAgICAgPEJyZWFkQ3J1bWJzLz5cclxuICAgICAgICA8bWFpbiBjbGFzc05hbWU9J2VvZy1tYWluJz5cclxuICAgICAgICAgICAge3Byb3BzLmNoaWxkcmVufVxyXG4gICAgICAgIDwvbWFpbj5cclxuICAgIDwvZGl2Pik7XHJcbn1cclxuXHJcbmV4cG9ydCBkZWZhdWx0IE1haW5MYXlvdXQ7XHJcbiIsImltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XHJcbmltcG9ydCAnLi4vLi4vYXNzZXRzL2ltYWdlcy9zdGFuZGFyZC1yZXBvcnQucG5nJztcclxuaW1wb3J0IHsgUm91dGVyUHJvcHMsIHVzZU5hdmlnYXRlIH0gZnJvbSAncmVhY3Qtcm91dGVyLWRvbSc7XHJcblxyXG50eXBlIExhbmRpbmdQcm9wcyA9IHt9O1xyXG5cclxuY29uc3QgTGFuZGluZyA9IChwcm9wczogTGFuZGluZ1Byb3BzKSA9PiB7XHJcbiAgICBjb25zdCBuYXZpZ2F0ZSA9IHVzZU5hdmlnYXRlKCk7XHJcblxyXG4gICAgY29uc3QgaGFuZGxlU3RhbmRhcmRSZXBvcnRDbGljayA9ICgpID0+IHtcclxuICAgICAgICBuYXZpZ2F0ZSgnL3N0YW5kYXJkLXJlcG9ydCcpO1xyXG4gICAgfVxyXG5cclxuICAgIHJldHVybiAoXHJcbiAgICAgICAgPD5cclxuICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9J2VvZy1jYXJkJyBvbkNsaWNrPXtoYW5kbGVTdGFuZGFyZFJlcG9ydENsaWNrfT5cclxuICAgICAgICAgICAgICAgIDxpbWcgc3JjPScvaW1hZ2VzL3N0YW5kYXJkLXJlcG9ydC5wbmcnIGNsYXNzTmFtZT0nZW9nLWNhcmRfX2ltZycvPlxyXG4gICAgICAgICAgICAgICAgPGxhYmVsIGNsYXNzTmFtZT0nZW9nLWNhcmRfX2NhcHRpb24nPlN0YW5kYXJkIFJlcG9ydDwvbGFiZWw+XHJcbiAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgIDwvPlxyXG4gICAgKVxyXG59XHJcblxyXG5leHBvcnQgZGVmYXVsdCBMYW5kaW5nOyIsImNvbnN0IGJ1aWxkQXBpVXJsID0gdXJsRW5kcG9pbnQgPT4gYCR7d2luZG93LmxvY2F0aW9uLm9yaWdpbn0vJHt1cmxFbmRwb2ludH1gXHJcblxyXG5jb25zdCBnZXRKc29uRGF0YSA9IGFzeW5jKHVybCkgPT4ge1xyXG4gICAgY29uc3QgcmVzID0gYXdhaXQgZmV0Y2godXJsKTtcclxuICAgIGNvbnN0IGRhdGEgPSBhd2FpdCByZXMuanNvbigpO1xyXG4gICAgcmV0dXJuIGRhdGE7XHJcbn1cclxuZXhwb3J0IGNvbnN0IGdldE1vZGVsQ29uZmlnID0gYXN5bmMoKSA9PiB7XHJcbiAgICBjb25zdCB1cmwgPSBidWlsZEFwaVVybCgnZXJnY29uZmlnLmpzb24nKTtcclxuICAgIHJldHVybiBhd2FpdCBnZXRKc29uRGF0YSh1cmwpO1xyXG59XHJcblxyXG5leHBvcnQgY29uc3QgZ2V0UGFja2FnZURldGFpbHMgPSBhc3luYygpID0+IHtcclxuICAgIGNvbnN0IHVybCA9IGJ1aWxkQXBpVXJsKCdkYXRhL3BhY2thZ2UuanNvbicpO1xyXG4gICAgcmV0dXJuIGF3YWl0IGdldEpzb25EYXRhKHVybCk7XHJcbn1cclxuXHJcbmV4cG9ydCBjb25zdCBnZXRNb2RlbERldGFpbHMgPSBhc3luYyhmaWxlbmFtZSkgPT4ge1xyXG4gICAgY29uc3QgdXJsID0gYnVpbGRBcGlVcmwoYGV4cGVyaW1lbnRhbF9sb2dzLyR7ZmlsZW5hbWV9YCk7XHJcbiAgICByZXR1cm4gYXdhaXQgZ2V0SnNvbkRhdGEodXJsKTtcclxufVxyXG4iLCJleHBvcnQgY2xhc3MgUGFja2FnZURldGFpbHMge1xyXG4gICAgZXhwZXJpbWVudF9sb2dzX2RpcmVjdG9yeTogc3RyaW5nID0gJyc7XHJcbiAgICBvdXRwdXRfZGlyZWN0b3J5OiBzdHJpbmcgPSAnJztcclxuICAgIHZpc3VhbGl6YXRpb25zX2RpcmVjdG9yeTogc3RyaW5nID0gJyc7XHJcbn0iLCJleHBvcnQgY2xhc3MgTW9kZWxDb25maWcge1xyXG4gICAgdmlldzogc3RyaW5nID0gJyc7XHJcbiAgICBtb2RlbF9rZXlzOiBzdHJpbmdbXSA9IFtdO1xyXG4gICAgZmlsZXNfbGlzdDogc3RyaW5nW10gPSBbXTtcclxufSIsImltcG9ydCBSZWFjdCwgeyB1c2VFZmZlY3QsIHVzZVN0YXRlIH0gZnJvbSAncmVhY3QnO1xyXG5pbXBvcnQgeyB1c2VOYXZpZ2F0ZSB9IGZyb20gJ3JlYWN0LXJvdXRlci1kb20nO1xyXG5pbXBvcnQgeyBnZXRNb2RlbENvbmZpZywgZ2V0UGFja2FnZURldGFpbHMgfSBmcm9tICcuLi8uLi9zZXJ2aWNlcy9hcGlTZXJ2aWNlJztcclxuaW1wb3J0IHsgUGFja2FnZURldGFpbHMgfSBmcm9tICcuLi8uLi9tb2RlbHMvUGFja2FnZURldGFpbHMnO1xyXG5pbXBvcnQgeyBNb2RlbENvbmZpZyB9IGZyb20gJy4uLy4uL21vZGVscy9Nb2RlbENvbmZpZyc7XHJcblxyXG5jb25zdCBTdGFuZGFyZFJlcG9ydCA9IChwcm9wczogYW55KSA9PiB7XHJcbiAgICBjb25zdCBbY29uZmlnSnNvbiwgc2V0Q29uZmlnXSA9IHVzZVN0YXRlKG5ldyBNb2RlbENvbmZpZygpKTtcclxuICAgIGNvbnN0IFtwYWNrYWdlSnNvbiwgc2V0UGFja2FnZUNvbmZpZ10gPSB1c2VTdGF0ZShuZXcgUGFja2FnZURldGFpbHMoKSk7XHJcbiAgICBjb25zdCBuYXZpZ2F0ZSA9IHVzZU5hdmlnYXRlKClcclxuICAgIGNvbnN0IGJ1aWxkUmVwb3J0ID0gKCkgPT4ge1xyXG4gICAgICAgIG5hdmlnYXRlKCcvc3RhbmRhcmQtcmVwb3J0LXZpZXcnKVxyXG4gICAgfVxyXG4gICAgdXNlRWZmZWN0KCgpID0+IHtcclxuICAgICAgICBnZXRNb2RlbENvbmZpZygpLnRoZW4ocmVzID0+IHtcclxuICAgICAgICAgICAgc2V0Q29uZmlnKHJlcyk7XHJcbiAgICAgICAgICAgIHNldFBhY2thZ2VDb25maWcocmVzLmVyZyk7XHJcbiAgICAgICAgfSk7XHJcbiAgICB9LCBbXSlcclxuICAgIFxyXG4gICAgcmV0dXJuICg8PlxyXG4gICAgICAgIDxoMyBjbGFzc05hbWU9J3RpdGxlLTMgbWItMic+UmVwb3J0IExheW91dDwvaDM+XHJcbiAgICAgICAgPHA+e2NvbmZpZ0pzb24udmlld308L3A+XHJcbiAgICAgICAgPGgzIGNsYXNzTmFtZT0ndGl0bGUtMyBtYi0yJz5Nb2RlbCBEZXRhaWxzPC9oMz5cclxuICAgICAgICB7Y29uZmlnSnNvbi5tb2RlbF9rZXlzLm1hcCgoeDogYW55KSA9PiA8cCBjbGFzc05hbWU9J21hLTAnPnt4fTwvcD4pfVxyXG4gICAgICAgIDxoMyBjbGFzc05hbWU9J3RpdGxlLTMgbXktMic+TW9kZWwgRGV0YWlscyBEaXJlY3RvcmllczwvaDM+XHJcbiAgICAgICAgPGRpdj5cclxuICAgICAgICAgICAgPGR0IGNsYXNzTmFtZT0nZW9nLWxpc3QtZGF0YV9fbGFiZWwnPkV4cGVyaW1lbnRhbCBMb2dzIERpcmVjdG9yeTwvZHQ+XHJcbiAgICAgICAgICAgIDxkZCBjbGFzc05hbWU9J2VvZy1saXN0LWRhdGFfX3ZhbHVlJz5cclxuICAgICAgICAgICAge3BhY2thZ2VKc29uLmV4cGVyaW1lbnRfbG9nc19kaXJlY3Rvcnl9XHJcbiAgICAgICAgICAgIDwvZGQ+XHJcbiAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgPGRpdj5cclxuICAgICAgICAgICAgPGR0IGNsYXNzTmFtZT0nZW9nLWxpc3QtZGF0YV9fbGFiZWwnPk91dHB1dCBEaXJlY3Rvcnk8L2R0PlxyXG4gICAgICAgICAgICA8ZGQgY2xhc3NOYW1lPSdlb2ctbGlzdC1kYXRhX192YWx1ZSc+XHJcbiAgICAgICAgICAgIHtwYWNrYWdlSnNvbi5vdXRwdXRfZGlyZWN0b3J5fVxyXG4gICAgICAgICAgICA8L2RkPlxyXG4gICAgICAgIDwvZGl2PlxyXG4gICAgICAgIDxkaXY+XHJcbiAgICAgICAgICAgIDxkdCBjbGFzc05hbWU9J2VvZy1saXN0LWRhdGFfX2xhYmVsJz5WaXN1YWxpemF0aW9ucyBEaXJlY3Rvcnk8L2R0PlxyXG4gICAgICAgICAgICA8ZGQgY2xhc3NOYW1lPSdlb2ctbGlzdC1kYXRhX192YWx1ZSc+XHJcbiAgICAgICAgICAgIHtwYWNrYWdlSnNvbi52aXN1YWxpemF0aW9uc19kaXJlY3Rvcnl9XHJcbiAgICAgICAgICAgIDwvZGQ+XHJcbiAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgPHNwYW4gY2xhc3NOYW1lPSdmbG9hdC1sIGQtaWJsb2NrIG10LTQnPlxyXG4gICAgICAgICAgICA8YnV0dG9uIGNsYXNzTmFtZT0nZW9nLWJ0biBlb2ctYnRuLXByaW1hcnknIG9uQ2xpY2s9e2J1aWxkUmVwb3J0fT5WaWV3IFJlcG9ydCBUZW1wbGF0ZTwvYnV0dG9uPlxyXG4gICAgICAgIDwvc3Bhbj5cclxuICAgIDwvPik7XHJcbn1cclxuXHJcbmV4cG9ydCBkZWZhdWx0IFN0YW5kYXJkUmVwb3J0O1xyXG4iLCJpbXBvcnQgUmVhY3QsIHsgdXNlRWZmZWN0LCB1c2VTdGF0ZSB9IGZyb20gJ3JlYWN0JztcclxuaW1wb3J0IHsgTW9kZWxDb25maWcgfSBmcm9tICcuLi8uLi8uLi9tb2RlbHMvTW9kZWxDb25maWcnO1xyXG5pbXBvcnQgeyBnZXRNb2RlbENvbmZpZywgZ2V0TW9kZWxEZXRhaWxzIH0gZnJvbSAnLi4vLi4vLi4vc2VydmljZXMvYXBpU2VydmljZSc7XHJcbmltcG9ydCB7IGNyZWF0ZU5ld0FycmF5IH0gZnJvbSAnLi4vLi4vLi4vc2VydmljZXMvdXRpbGl0aWVzJztcclxuXHJcbmNvbnN0IEdyaWRWaWV3ID0gKCkgPT4ge1xyXG4gICAgY29uc3QgW2NvbmZpZ0pzb24sIHNldENvbmZpZ10gPSB1c2VTdGF0ZShuZXcgTW9kZWxDb25maWcoKSk7XHJcbiAgICBjb25zdCBbYWxsUnVuc0RldGFpbHMsIHNldEFsbFJ1bnNEZXRhaWxzXSA9IHVzZVN0YXRlKFtdKTtcclxuICAgIHVzZUVmZmVjdCgoKSA9PiB7XHJcbiAgICAgICAgZ2V0TW9kZWxDb25maWcoKS50aGVuKHJlcyA9PiB7XHJcbiAgICAgICAgICAgIHNldENvbmZpZyhyZXMpO1xyXG4gICAgICAgICAgICByZXMuZmlsZXNfbGlzdC5mb3JFYWNoKCh4OiBhbnkpID0+IHtcclxuICAgICAgICAgICAgICAgIGdldE1vZGVsRGV0YWlscyh4LmRldGFpbHNfZmlsZSkudGhlbihyZXMgPT4ge1xyXG4gICAgICAgICAgICAgICAgICAgIGFsbFJ1bnNEZXRhaWxzLnB1c2goeyBkZXRhaWxzSnNvbjogcmVzLCBpbWFnZV9maWxlOiB4LmltYWdlX2ZpbGV9ICk7XHJcbiAgICAgICAgICAgICAgICAgICAgc2V0QWxsUnVuc0RldGFpbHMoY3JlYXRlTmV3QXJyYXkoYWxsUnVuc0RldGFpbHMpKTtcclxuICAgICAgICAgICAgICAgIH0pO1xyXG4gICAgICAgICAgICB9KVxyXG4gICAgICAgIH0pO1xyXG4gICAgfSwgW10pXHJcbiAgICByZXR1cm4gKFxyXG4gICAgICAgIDw+XHJcbiAgICAgICAgICAgIDxoNCBjbGFzc05hbWU9J3RpdGxlLTQnPkV4cGVyaW1lbnRhbCBPdXRwdXRzPC9oND5cclxuICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9J2VvZy1ncmlkJz5cclxuICAgICAgICAgICAgICAgIHtcclxuICAgICAgICAgICAgICAgICAgICBhbGxSdW5zRGV0YWlscy5tYXAoKHg6IGFueSwgaTogbnVtYmVyKSA9PiB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGNvbnN0IGRldGFpbHNKc29uID0geC5kZXRhaWxzSnNvbjtcclxuICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIChcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYga2V5PXtgZ3JpZHJvdy0ke2l9YH0gY2xhc3NOYW1lPSdlb2ctY2FyZC1pbWcnPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxpbWcga2V5PXtgZ3JpZHJvd2ltZy0ke2l9YH0gY2xhc3NOYW1lPSdlb2ctY2FyZC1pbWdfX2ltZycgc3JjPXtgL3Zpc3VhbGl6YXRpb25zLyR7eC5pbWFnZV9maWxlfWB9Lz5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB7Y29uZmlnSnNvbi5tb2RlbF9rZXlzLm1hcCgoeTogYW55KSA9PiB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNvbnN0IG1vZGVsUGFyYW1zID0gSlNPTi5wYXJzZShkZXRhaWxzSnNvblsnbW9kZWxfcGFyYW1zJ10pXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmICh5ID09PSAnZmluYWxfYWNjdXJhY3knIHx8IHkgPT09ICdhdmVyYWdlX2xvc3MnIHx8IHkgPT09ICdtb2RlbF9maWxlbmFtZScpIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiAoPGxhYmVsIGtleT17YGdyaWRyb3dsYWJlbC0ke3l9YH0gY2xhc3NOYW1lPSdlb2ctY2FyZC1pbWdfX2NhcHRpb24nPnt5fToge2RldGFpbHNKc29uW3ldfTwvbGFiZWw+KVxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuICg8bGFiZWwga2V5PXtgZ3JpZHJvd2xhYmVsLSR7eX1gfSBjbGFzc05hbWU9J2VvZy1jYXJkLWltZ19fY2FwdGlvbic+e3l9OiB7bW9kZWxQYXJhbXNbeV19PC9sYWJlbD4pXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9KX1cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgICAgICAgICAgICAgICAgICApO1xyXG4gICAgICAgICAgICAgICAgICAgIH0pfVxyXG4gICAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICA8Lz5cclxuICAgIClcclxufVxyXG5cclxuZXhwb3J0IGRlZmF1bHQgR3JpZFZpZXc7IiwiZXhwb3J0IGNvbnN0IGlzTnVsbE9yVW5kZWZpbmVkID0gdmFsID0+IHR5cGVvZiB2YWwgPT09ICd1bmRlZmluZWQnIHx8IHZhbCA9PT0gbnVsbDtcclxuXHJcbmV4cG9ydCBjb25zdCBjcmVhdGVOZXdPYmplY3QgPSBvYmplY3QgPT4gSlNPTi5wYXJzZShKU09OLnN0cmluZ2lmeShvYmplY3QpKTtcclxuXHJcbmV4cG9ydCBjb25zdCBjcmVhdGVOZXdBcnJheSA9IGFycmF5ID0+IHtcclxuICAgIGNvbnN0IGFycmF5Q29weSA9IGFycmF5Lm1hcChhPT5jcmVhdGVOZXdPYmplY3QoYSkpO1xyXG4gICAgcmV0dXJuIGFycmF5Q29weTtcclxufTtcclxuXHJcblxyXG4iLCJpbXBvcnQgUmVhY3QsIHsgbGF6eSwgUmVhY3RFbGVtZW50IH0gZnJvbSAncmVhY3QnO1xyXG4vL2ltcG9ydCAnLi9zY3NzL2N1c3RvbS5zY3NzJ1xyXG5pbXBvcnQgTWFpbkxheW91dCBmcm9tICcuL2xheW91dHMvbWFpbkxheW91dCc7XHJcbmltcG9ydCB7IFJvdXRlLCBCcm93c2VyUm91dGVyLCBSb3V0ZXMgfSBmcm9tICdyZWFjdC1yb3V0ZXItZG9tJztcclxuaW1wb3J0IExhbmRpbmcgZnJvbSAnLi9tb2R1bGVzL2xhbmRpbmcvbGFuZGluZyc7XHJcbmltcG9ydCBTdGFuZGFyZFJlcG9ydCBmcm9tICcuL21vZHVsZXMvc3RhbmRhcmRSZXBvcnQvc3RhbmRhcmRSZXBvcnQnO1xyXG5pbXBvcnQgR3JpZFZpZXcgZnJvbSAnLi9tb2R1bGVzL3N0YW5kYXJkUmVwb3J0L2NvbXBvbmVudHMvZ3JpZFZpZXcnO1xyXG5cclxuZnVuY3Rpb24gQXBwKCk6IFJlYWN0RWxlbWVudCB7XHJcbiAgcmV0dXJuIChcclxuICAgIDw+XHJcbiAgICA8QnJvd3NlclJvdXRlcj5cclxuICAgICAgICA8TWFpbkxheW91dD5cclxuICAgICAgICAgICAgPFJvdXRlcz5cclxuICAgICAgICAgICAgICAgIDxSb3V0ZSBwYXRoPVwiL1wiIGVsZW1lbnQ9ezxMYW5kaW5nLz59Lz5cclxuICAgICAgICAgICAgICAgIDxSb3V0ZSBwYXRoPVwiL3N0YW5kYXJkLXJlcG9ydFwiIGVsZW1lbnQ9ezxTdGFuZGFyZFJlcG9ydC8+fS8+XHJcbiAgICAgICAgICAgICAgICA8Um91dGUgcGF0aD1cIi9zdGFuZGFyZC1yZXBvcnQtdmlld1wiIGVsZW1lbnQ9ezxHcmlkVmlldy8+fS8+XHJcbiAgICAgICAgICAgIDwvUm91dGVzPlxyXG4gICAgICAgIDwvTWFpbkxheW91dD5cclxuICA8L0Jyb3dzZXJSb3V0ZXI+XHJcbiAgICA8Lz5cclxuICApO1xyXG59XHJcblxyXG5leHBvcnQgZGVmYXVsdCBBcHA7XHJcbiIsImltcG9ydCBSZWFjdCBmcm9tIFwicmVhY3RcIjtcclxuaW1wb3J0IFJlYWN0RE9NIGZyb20gXCJyZWFjdC1kb21cIjtcclxuaW1wb3J0IEFwcCBmcm9tICcuL2FwcC50c3gnO1xyXG5SZWFjdERPTS5yZW5kZXIoPEFwcCAvPiwgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ3Jvb3QnKSk7IiwiXG4gICAgICBpbXBvcnQgQVBJIGZyb20gXCIhLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvaW5qZWN0U3R5bGVzSW50b1N0eWxlVGFnLmpzXCI7XG4gICAgICBpbXBvcnQgZG9tQVBJIGZyb20gXCIhLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvc3R5bGVEb21BUEkuanNcIjtcbiAgICAgIGltcG9ydCBpbnNlcnRGbiBmcm9tIFwiIS4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luc2VydEJ5U2VsZWN0b3IuanNcIjtcbiAgICAgIGltcG9ydCBzZXRBdHRyaWJ1dGVzIGZyb20gXCIhLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvc2V0QXR0cmlidXRlc1dpdGhvdXRBdHRyaWJ1dGVzLmpzXCI7XG4gICAgICBpbXBvcnQgaW5zZXJ0U3R5bGVFbGVtZW50IGZyb20gXCIhLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvaW5zZXJ0U3R5bGVFbGVtZW50LmpzXCI7XG4gICAgICBpbXBvcnQgc3R5bGVUYWdUcmFuc2Zvcm1GbiBmcm9tIFwiIS4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL3N0eWxlVGFnVHJhbnNmb3JtLmpzXCI7XG4gICAgICBpbXBvcnQgY29udGVudCwgKiBhcyBuYW1lZEV4cG9ydCBmcm9tIFwiISEuLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L2Nqcy5qcyEuLi8uLi9ub2RlX21vZHVsZXMvc2Fzcy1sb2FkZXIvZGlzdC9janMuanMhLi9jdXN0b20uc2Nzc1wiO1xuICAgICAgXG4gICAgICBcblxudmFyIG9wdGlvbnMgPSB7fTtcblxub3B0aW9ucy5zdHlsZVRhZ1RyYW5zZm9ybSA9IHN0eWxlVGFnVHJhbnNmb3JtRm47XG5vcHRpb25zLnNldEF0dHJpYnV0ZXMgPSBzZXRBdHRyaWJ1dGVzO1xuXG4gICAgICBvcHRpb25zLmluc2VydCA9IGluc2VydEZuLmJpbmQobnVsbCwgXCJoZWFkXCIpO1xuICAgIFxub3B0aW9ucy5kb21BUEkgPSBkb21BUEk7XG5vcHRpb25zLmluc2VydFN0eWxlRWxlbWVudCA9IGluc2VydFN0eWxlRWxlbWVudDtcblxudmFyIHVwZGF0ZSA9IEFQSShjb250ZW50LCBvcHRpb25zKTtcblxuXG5cbmV4cG9ydCAqIGZyb20gXCIhIS4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4uLy4uL25vZGVfbW9kdWxlcy9zYXNzLWxvYWRlci9kaXN0L2Nqcy5qcyEuL2N1c3RvbS5zY3NzXCI7XG4gICAgICAgZXhwb3J0IGRlZmF1bHQgY29udGVudCAmJiBjb250ZW50LmxvY2FscyA/IGNvbnRlbnQubG9jYWxzIDogdW5kZWZpbmVkO1xuIl0sIm5hbWVzIjpbIl90eXBlb2YiLCJvYmoiLCJTeW1ib2wiLCJpdGVyYXRvciIsImNvbnN0cnVjdG9yIiwicHJvdG90eXBlIiwiaXNEZWVwRXF1YWwiLCJpc0RlZXBTdHJpY3RFcXVhbCIsIl9yZXF1aXJlJGNvZGVzIiwiY29kZXMiLCJFUlJfQU1CSUdVT1VTX0FSR1VNRU5UIiwiRVJSX0lOVkFMSURfQVJHX1RZUEUiLCJFUlJfSU5WQUxJRF9BUkdfVkFMVUUiLCJFUlJfSU5WQUxJRF9SRVRVUk5fVkFMVUUiLCJFUlJfTUlTU0lOR19BUkdTIiwiQXNzZXJ0aW9uRXJyb3IiLCJpbnNwZWN0IiwiX3JlcXVpcmUkdHlwZXMiLCJpc1Byb21pc2UiLCJpc1JlZ0V4cCIsIm9iamVjdEFzc2lnbiIsIk9iamVjdCIsImFzc2lnbiIsIm9iamVjdElzIiwiaXMiLCJsYXp5TG9hZENvbXBhcmlzb24iLCJjb21wYXJpc29uIiwiTWFwIiwid2FybmVkIiwiYXNzZXJ0IiwibW9kdWxlIiwiZXhwb3J0cyIsIm9rIiwiTk9fRVhDRVBUSU9OX1NFTlRJTkVMIiwiaW5uZXJGYWlsIiwibWVzc2FnZSIsIkVycm9yIiwiaW5uZXJPayIsImZuIiwiYXJnTGVuIiwidmFsdWUiLCJnZW5lcmF0ZWRNZXNzYWdlIiwiZXJyIiwiYWN0dWFsIiwiZXhwZWN0ZWQiLCJvcGVyYXRvciIsInN0YWNrU3RhcnRGbiIsIl9sZW4iLCJhcmd1bWVudHMiLCJsZW5ndGgiLCJhcmdzIiwiQXJyYXkiLCJfa2V5IiwiYXBwbHkiLCJjb25jYXQiLCJmYWlsIiwiaW50ZXJuYWxNZXNzYWdlIiwiYXJnc0xlbiIsInVuZGVmaW5lZCIsIndhcm4iLCJwcm9jZXNzIiwiZW1pdFdhcm5pbmciLCJjb25zb2xlIiwiYmluZCIsImVyckFyZ3MiLCJlcXVhbCIsIm5vdEVxdWFsIiwiZGVlcEVxdWFsIiwibm90RGVlcEVxdWFsIiwiZGVlcFN0cmljdEVxdWFsIiwibm90RGVlcFN0cmljdEVxdWFsIiwic3RyaWN0RXF1YWwiLCJub3RTdHJpY3RFcXVhbCIsIkNvbXBhcmlzb24iLCJrZXlzIiwiX3RoaXMiLCJ0aGlzIiwiaW5zdGFuY2UiLCJDb25zdHJ1Y3RvciIsIlR5cGVFcnJvciIsIl9jbGFzc0NhbGxDaGVjayIsImZvckVhY2giLCJrZXkiLCJ0ZXN0IiwiY29tcGFyZUV4Y2VwdGlvbktleSIsImEiLCJiIiwibmFtZSIsImV4cGVjdGVkRXhjZXB0aW9uIiwibXNnIiwicHVzaCIsImlzUHJvdG90eXBlT2YiLCJjYWxsIiwiZ2V0QWN0dWFsIiwiZSIsImNoZWNrSXNQcm9taXNlIiwidGhlbiIsImNhdGNoIiwid2FpdEZvckFjdHVhbCIsInByb21pc2VGbiIsIlByb21pc2UiLCJyZXNvbHZlIiwicmVzdWx0UHJvbWlzZSIsImV4cGVjdHNFcnJvciIsImVycm9yIiwiZGV0YWlscyIsImZuVHlwZSIsImV4cGVjdHNOb0Vycm9yIiwic3RyaWN0IiwiX2xlbjYiLCJfa2V5NiIsInRocm93cyIsIl9sZW4yIiwiX2tleTIiLCJyZWplY3RzIiwiX2xlbjMiLCJfa2V5MyIsInJlc3VsdCIsImRvZXNOb3RUaHJvdyIsIl9sZW40IiwiX2tleTQiLCJkb2VzTm90UmVqZWN0IiwiX2xlbjUiLCJfa2V5NSIsImlmRXJyb3IiLCJuZXdFcnIiLCJvcmlnU3RhY2siLCJzdGFjayIsInRtcDIiLCJzcGxpdCIsInNoaWZ0IiwidG1wMSIsImkiLCJwb3MiLCJpbmRleE9mIiwic2xpY2UiLCJqb2luIiwiX2RlZmluZVByb3BlcnR5IiwiZGVmaW5lUHJvcGVydHkiLCJlbnVtZXJhYmxlIiwiY29uZmlndXJhYmxlIiwid3JpdGFibGUiLCJfZGVmaW5lUHJvcGVydGllcyIsInRhcmdldCIsInByb3BzIiwiZGVzY3JpcHRvciIsIl9wb3NzaWJsZUNvbnN0cnVjdG9yUmV0dXJuIiwic2VsZiIsIl9hc3NlcnRUaGlzSW5pdGlhbGl6ZWQiLCJSZWZlcmVuY2VFcnJvciIsIl93cmFwTmF0aXZlU3VwZXIiLCJDbGFzcyIsIl9jYWNoZSIsIkZ1bmN0aW9uIiwidG9TdHJpbmciLCJoYXMiLCJnZXQiLCJzZXQiLCJXcmFwcGVyIiwiX2NvbnN0cnVjdCIsIl9nZXRQcm90b3R5cGVPZiIsImNyZWF0ZSIsIl9zZXRQcm90b3R5cGVPZiIsImlzTmF0aXZlUmVmbGVjdENvbnN0cnVjdCIsIlJlZmxlY3QiLCJjb25zdHJ1Y3QiLCJzaGFtIiwiUHJveHkiLCJEYXRlIiwiUGFyZW50IiwibyIsInAiLCJzZXRQcm90b3R5cGVPZiIsIl9fcHJvdG9fXyIsImdldFByb3RvdHlwZU9mIiwiZW5kc1dpdGgiLCJzdHIiLCJzZWFyY2giLCJ0aGlzX2xlbiIsInN1YnN0cmluZyIsImJsdWUiLCJncmVlbiIsInJlZCIsIndoaXRlIiwia1JlYWRhYmxlT3BlcmF0b3IiLCJzdHJpY3RFcXVhbE9iamVjdCIsIm5vdFN0cmljdEVxdWFsT2JqZWN0Iiwibm90SWRlbnRpY2FsIiwiY29weUVycm9yIiwic291cmNlIiwiaW5zcGVjdFZhbHVlIiwidmFsIiwiY29tcGFjdCIsImN1c3RvbUluc3BlY3QiLCJkZXB0aCIsIm1heEFycmF5TGVuZ3RoIiwiSW5maW5pdHkiLCJzaG93SGlkZGVuIiwiYnJlYWtMZW5ndGgiLCJzaG93UHJveHkiLCJzb3J0ZWQiLCJnZXR0ZXJzIiwiX0Vycm9yIiwib3B0aW9ucyIsImxpbWl0Iiwic3RhY2tUcmFjZUxpbWl0IiwiU3RyaW5nIiwic3RkZXJyIiwiaXNUVFkiLCJnZXRDb2xvckRlcHRoIiwib3RoZXIiLCJyZXMiLCJsYXN0UG9zIiwiZW5kIiwic2tpcHBlZCIsImFjdHVhbEluc3BlY3RlZCIsImFjdHVhbExpbmVzIiwiZXhwZWN0ZWRMaW5lcyIsImluZGljYXRvciIsImlucHV0TGVuZ3RoIiwiY29sdW1ucyIsImNvdW50IiwiTWF0aCIsImZsb29yIiwibWF4Q291bnQiLCJsb2ciLCJyZXBlYXQiLCJwb3AiLCJtYXhMaW5lcyIsIm1heCIsIl9hY3R1YWxMaW5lcyIsInByaW50ZWRMaW5lcyIsInNraXBwZWRNc2ciLCJjdXIiLCJleHBlY3RlZExpbmUiLCJhY3R1YWxMaW5lIiwiZGl2ZXJnaW5nTGluZXMiLCJjcmVhdGVFcnJEaWZmIiwiYmFzZSIsIl9yZXMiLCJrbm93bk9wZXJhdG9ycyIsImNvZGUiLCJjYXB0dXJlU3RhY2tUcmFjZSIsInByb3RvUHJvcHMiLCJzdWJDbGFzcyIsInN1cGVyQ2xhc3MiLCJfaW5oZXJpdHMiLCJjdXN0b20iLCJyZWN1cnNlVGltZXMiLCJjdHgiLCJvd25LZXlzIiwiZ2V0T3duUHJvcGVydHlTeW1ib2xzIiwiZmlsdGVyIiwic3ltIiwiZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yIiwiX29iamVjdFNwcmVhZCIsInV0aWwiLCJjcmVhdGVFcnJvclR5cGUiLCJCYXNlIiwiTm9kZUVycm9yIiwiX0Jhc2UiLCJhcmcxIiwiYXJnMiIsImFyZzMiLCJnZXRNZXNzYWdlIiwib25lT2YiLCJ0aGluZyIsImlzQXJyYXkiLCJsZW4iLCJtYXAiLCJkZXRlcm1pbmVyIiwic3RhcnQiLCJzdWJzdHIiLCJyZXBsYWNlIiwidHlwZSIsInJlYXNvbiIsImluc3BlY3RlZCIsIlJhbmdlRXJyb3IiLCJpbnB1dCIsIl9zbGljZWRUb0FycmF5IiwiYXJyIiwiX2FycmF5V2l0aEhvbGVzIiwiX2FyciIsIl9uIiwiX2QiLCJfZSIsIl9zIiwiX2kiLCJuZXh0IiwiZG9uZSIsIl9pdGVyYWJsZVRvQXJyYXlMaW1pdCIsIl9ub25JdGVyYWJsZVJlc3QiLCJyZWdleEZsYWdzU3VwcG9ydGVkIiwiZmxhZ3MiLCJhcnJheUZyb21TZXQiLCJhcnJheSIsImFycmF5RnJvbU1hcCIsIm9iamVjdEdldE93blByb3BlcnR5U3ltYm9scyIsIm51bWJlcklzTmFOIiwiTnVtYmVyIiwiaXNOYU4iLCJ1bmN1cnJ5VGhpcyIsImYiLCJoYXNPd25Qcm9wZXJ0eSIsInByb3BlcnR5SXNFbnVtZXJhYmxlIiwib2JqZWN0VG9TdHJpbmciLCJpc0FueUFycmF5QnVmZmVyIiwiaXNBcnJheUJ1ZmZlclZpZXciLCJpc0RhdGUiLCJpc01hcCIsImlzU2V0IiwiaXNOYXRpdmVFcnJvciIsImlzQm94ZWRQcmltaXRpdmUiLCJpc051bWJlck9iamVjdCIsImlzU3RyaW5nT2JqZWN0IiwiaXNCb29sZWFuT2JqZWN0IiwiaXNCaWdJbnRPYmplY3QiLCJpc1N5bWJvbE9iamVjdCIsImlzRmxvYXQzMkFycmF5IiwiaXNGbG9hdDY0QXJyYXkiLCJpc05vbkluZGV4IiwiY2hhckNvZGVBdCIsInBvdyIsImdldE93bk5vbkluZGV4UHJvcGVydGllcyIsImNvbXBhcmUiLCJ4IiwieSIsIm1pbiIsImlubmVyRGVlcEVxdWFsIiwidmFsMSIsInZhbDIiLCJtZW1vcyIsImJ1ZjEiLCJidWYyIiwidmFsMVRhZyIsImtleXMxIiwia2V5czIiLCJrZXlDaGVjayIsImdldFRpbWUiLCJSZWdFeHAiLCJieXRlTGVuZ3RoIiwiVWludDhBcnJheSIsImJ1ZmZlciIsImJ5dGVPZmZzZXQiLCJhcmVTaW1pbGFyVHlwZWRBcnJheXMiLCJvZmZzZXQiLCJhcmVTaW1pbGFyRmxvYXRBcnJheXMiLCJfa2V5cyIsIl9rZXlzMiIsInNpemUiLCJ2YWx1ZU9mIiwiQm9vbGVhbiIsIkJpZ0ludCIsImlzRXF1YWxCb3hlZFByaW1pdGl2ZSIsImdldEVudW1lcmFibGVzIiwiayIsIml0ZXJhdGlvblR5cGUiLCJhS2V5cyIsImJLZXlzIiwic3ltYm9sS2V5c0EiLCJzeW1ib2xLZXlzQiIsIl9zeW1ib2xLZXlzQiIsInBvc2l0aW9uIiwidmFsMk1lbW9BIiwidmFsMk1lbW9CIiwiYXJlRXEiLCJvYmpFcXVpdiIsImRlbGV0ZSIsInNldEhhc0VxdWFsRWxlbWVudCIsIm1lbW8iLCJzZXRWYWx1ZXMiLCJmaW5kTG9vc2VNYXRjaGluZ1ByaW1pdGl2ZXMiLCJwcmltIiwic2V0TWlnaHRIYXZlTG9vc2VQcmltIiwiYWx0VmFsdWUiLCJtYXBNaWdodEhhdmVMb29zZVByaW0iLCJpdGVtIiwiY3VyQiIsIm1hcEhhc0VxdWFsRW50cnkiLCJrZXkxIiwiaXRlbTEiLCJrZXkyIiwiYVZhbHVlcyIsIlNldCIsImFkZCIsImJWYWx1ZXMiLCJfdmFsIiwic2V0RXF1aXYiLCJhRW50cmllcyIsIl9hRW50cmllcyRpIiwiaXRlbTIiLCJiRW50cmllcyIsIl9pMiIsIl9iRW50cmllcyRfaSIsIm1hcEVxdWl2Iiwia2V5c0EiLCJHZXRJbnRyaW5zaWMiLCJjYWxsQmluZCIsIiRpbmRleE9mIiwiYWxsb3dNaXNzaW5nIiwiaW50cmluc2ljIiwiJGFwcGx5IiwiJGNhbGwiLCIkcmVmbGVjdEFwcGx5IiwiJGdPUEQiLCIkZGVmaW5lUHJvcGVydHkiLCIkbWF4Iiwib3JpZ2luYWxGdW5jdGlvbiIsImZ1bmMiLCJkZXNjIiwiYXBwbHlCaW5kIiwibm93IiwidGltZXMiLCJnIiwid2luZG93IiwiZnVuY3Rpb25zIiwibGFiZWwiLCJ0aW1lIiwiZHVyYXRpb24iLCJmb3JtYXQiLCJvYmplY3QiLCJleHByZXNzaW9uIiwidHVwbGUiLCJfX19DU1NfTE9BREVSX0VYUE9SVF9fXyIsImlkIiwiY3NzV2l0aE1hcHBpbmdUb1N0cmluZyIsImxpc3QiLCJjb250ZW50IiwibmVlZExheWVyIiwibW9kdWxlcyIsIm1lZGlhIiwiZGVkdXBlIiwic3VwcG9ydHMiLCJsYXllciIsImFscmVhZHlJbXBvcnRlZE1vZHVsZXMiLCJfayIsImNzc01hcHBpbmciLCJidG9hIiwiYmFzZTY0IiwidW5lc2NhcGUiLCJlbmNvZGVVUklDb21wb25lbnQiLCJKU09OIiwic3RyaW5naWZ5IiwiZGF0YSIsInNvdXJjZU1hcHBpbmciLCJzb3VyY2VVUkxzIiwic291cmNlcyIsInNvdXJjZVJvb3QiLCJoYXNTeW1ib2xzIiwidG9TdHIiLCJvcmlnRGVmaW5lUHJvcGVydHkiLCJoYXNQcm9wZXJ0eURlc2NyaXB0b3JzIiwic3VwcG9ydHNEZXNjcmlwdG9ycyIsInByZWRpY2F0ZSIsImRlZmluZVByb3BlcnRpZXMiLCJwcmVkaWNhdGVzIiwiZmlyc3RTb3VyY2UiLCJ0byIsIm5leHRTb3VyY2UiLCJrZXlzQXJyYXkiLCJuZXh0SW5kZXgiLCJuZXh0S2V5IiwicG9seWZpbGwiLCJpc0NhbGxhYmxlIiwiZm9yRWFjaEFycmF5IiwicmVjZWl2ZXIiLCJmb3JFYWNoU3RyaW5nIiwic3RyaW5nIiwiY2hhckF0IiwiZm9yRWFjaE9iamVjdCIsInRoaXNBcmciLCJFUlJPUl9NRVNTQUdFIiwiZnVuY1R5cGUiLCJ0aGF0IiwiYm91bmQiLCJiaW5kZXIiLCJib3VuZExlbmd0aCIsImJvdW5kQXJncyIsIkVtcHR5IiwiaW1wbGVtZW50YXRpb24iLCIkU3ludGF4RXJyb3IiLCJTeW50YXhFcnJvciIsIiRGdW5jdGlvbiIsIiRUeXBlRXJyb3IiLCJnZXRFdmFsbGVkQ29uc3RydWN0b3IiLCJleHByZXNzaW9uU3ludGF4IiwidGhyb3dUeXBlRXJyb3IiLCJUaHJvd1R5cGVFcnJvciIsImNhbGxlZVRocm93cyIsImdPUER0aHJvd3MiLCJnZXRQcm90byIsIm5lZWRzRXZhbCIsIlR5cGVkQXJyYXkiLCJJTlRSSU5TSUNTIiwiQWdncmVnYXRlRXJyb3IiLCJBcnJheUJ1ZmZlciIsIkF0b21pY3MiLCJEYXRhVmlldyIsImRlY29kZVVSSSIsImRlY29kZVVSSUNvbXBvbmVudCIsImVuY29kZVVSSSIsImV2YWwiLCJFdmFsRXJyb3IiLCJGbG9hdDMyQXJyYXkiLCJGbG9hdDY0QXJyYXkiLCJGaW5hbGl6YXRpb25SZWdpc3RyeSIsIkludDhBcnJheSIsIkludDE2QXJyYXkiLCJJbnQzMkFycmF5IiwiaXNGaW5pdGUiLCJwYXJzZUZsb2F0IiwicGFyc2VJbnQiLCJTaGFyZWRBcnJheUJ1ZmZlciIsIlVpbnQ4Q2xhbXBlZEFycmF5IiwiVWludDE2QXJyYXkiLCJVaW50MzJBcnJheSIsIlVSSUVycm9yIiwiV2Vha01hcCIsIldlYWtSZWYiLCJXZWFrU2V0IiwiZG9FdmFsIiwiZ2VuIiwiTEVHQUNZX0FMSUFTRVMiLCJoYXNPd24iLCIkY29uY2F0IiwiJHNwbGljZUFwcGx5Iiwic3BsaWNlIiwiJHJlcGxhY2UiLCIkc3RyU2xpY2UiLCIkZXhlYyIsImV4ZWMiLCJyZVByb3BOYW1lIiwicmVFc2NhcGVDaGFyIiwic3RyaW5nVG9QYXRoIiwiZmlyc3QiLCJsYXN0IiwibWF0Y2giLCJudW1iZXIiLCJxdW90ZSIsInN1YlN0cmluZyIsImdldEJhc2VJbnRyaW5zaWMiLCJhbGlhcyIsImludHJpbnNpY05hbWUiLCJwYXJ0cyIsImludHJpbnNpY0Jhc2VOYW1lIiwiaW50cmluc2ljUmVhbE5hbWUiLCJza2lwRnVydGhlckNhY2hpbmciLCJpc093biIsInBhcnQiLCJoYXNBcnJheUxlbmd0aERlZmluZUJ1ZyIsIm9yaWdTeW1ib2wiLCJoYXNTeW1ib2xTaGFtIiwic3ltT2JqIiwiZ2V0T3duUHJvcGVydHlOYW1lcyIsInN5bXMiLCJ0b1N0cmluZ1RhZyIsImN0b3IiLCJzdXBlckN0b3IiLCJzdXBlcl8iLCJUZW1wQ3RvciIsImhhc1RvU3RyaW5nVGFnIiwiJHRvU3RyaW5nIiwiY2FsbEJvdW5kIiwiaXNTdGFuZGFyZEFyZ3VtZW50cyIsImlzTGVnYWN5QXJndW1lbnRzIiwiY2FsbGVlIiwic3VwcG9ydHNTdGFuZGFyZEFyZ3VtZW50cyIsImJhZEFycmF5TGlrZSIsImlzQ2FsbGFibGVNYXJrZXIiLCJmblRvU3RyIiwicmVmbGVjdEFwcGx5IiwiXyIsImNvbnN0cnVjdG9yUmVnZXgiLCJpc0VTNkNsYXNzRm4iLCJmblN0ciIsImRvY3VtZW50RG90QWxsIiwiZG9jdW1lbnQiLCJhbGwiLCJ0cnlGdW5jdGlvbk9iamVjdCIsInN0ckNsYXNzIiwiR2VuZXJhdG9yRnVuY3Rpb24iLCJpc0ZuUmVnZXgiLCJnZW5lcmF0b3JGdW5jIiwiZ2V0R2VuZXJhdG9yRnVuYyIsImRlZmluZSIsImdldFBvbHlmaWxsIiwic2hpbSIsIk5hTiIsImF2YWlsYWJsZVR5cGVkQXJyYXlzIiwiZ2xvYmFsVGhpcyIsInR5cGVkQXJyYXlzIiwiJHNsaWNlIiwidG9TdHJUYWdzIiwiZ09QRCIsInR5cGVkQXJyYXkiLCJwcm90byIsInN1cGVyUHJvdG8iLCJ0YWciLCJhbnlUcnVlIiwiZ2V0dGVyIiwidHJ5VHlwZWRBcnJheXMiLCJrZXlzU2hpbSIsImlzQXJncyIsImlzRW51bWVyYWJsZSIsImhhc0RvbnRFbnVtQnVnIiwiaGFzUHJvdG9FbnVtQnVnIiwiZG9udEVudW1zIiwiZXF1YWxzQ29uc3RydWN0b3JQcm90b3R5cGUiLCJleGNsdWRlZEtleXMiLCIkYXBwbGljYXRpb25DYWNoZSIsIiRjb25zb2xlIiwiJGV4dGVybmFsIiwiJGZyYW1lIiwiJGZyYW1lRWxlbWVudCIsIiRmcmFtZXMiLCIkaW5uZXJIZWlnaHQiLCIkaW5uZXJXaWR0aCIsIiRvbm1vemZ1bGxzY3JlZW5jaGFuZ2UiLCIkb25tb3pmdWxsc2NyZWVuZXJyb3IiLCIkb3V0ZXJIZWlnaHQiLCIkb3V0ZXJXaWR0aCIsIiRwYWdlWE9mZnNldCIsIiRwYWdlWU9mZnNldCIsIiRwYXJlbnQiLCIkc2Nyb2xsTGVmdCIsIiRzY3JvbGxUb3AiLCIkc2Nyb2xsWCIsIiRzY3JvbGxZIiwiJHNlbGYiLCIkd2Via2l0SW5kZXhlZERCIiwiJHdlYmtpdFN0b3JhZ2VJbmZvIiwiJHdpbmRvdyIsImhhc0F1dG9tYXRpb25FcXVhbGl0eUJ1ZyIsImlzT2JqZWN0IiwiaXNGdW5jdGlvbiIsImlzQXJndW1lbnRzIiwiaXNTdHJpbmciLCJ0aGVLZXlzIiwic2tpcFByb3RvIiwiaiIsInNraXBDb25zdHJ1Y3RvciIsImVxdWFsc0NvbnN0cnVjdG9yUHJvdG90eXBlSWZOb3RCdWdneSIsIm9yaWdLZXlzIiwib3JpZ2luYWxLZXlzIiwia2V5c1dvcmtzV2l0aEFyZ3VtZW50cyIsImNhY2hlZFNldFRpbWVvdXQiLCJjYWNoZWRDbGVhclRpbWVvdXQiLCJkZWZhdWx0U2V0VGltb3V0IiwiZGVmYXVsdENsZWFyVGltZW91dCIsInJ1blRpbWVvdXQiLCJmdW4iLCJzZXRUaW1lb3V0IiwiY2xlYXJUaW1lb3V0IiwiY3VycmVudFF1ZXVlIiwicXVldWUiLCJkcmFpbmluZyIsInF1ZXVlSW5kZXgiLCJjbGVhblVwTmV4dFRpY2siLCJkcmFpblF1ZXVlIiwidGltZW91dCIsInJ1biIsIm1hcmtlciIsInJ1bkNsZWFyVGltZW91dCIsIkl0ZW0iLCJub29wIiwibmV4dFRpY2siLCJ0aXRsZSIsImJyb3dzZXIiLCJlbnYiLCJhcmd2IiwidmVyc2lvbiIsInZlcnNpb25zIiwib24iLCJhZGRMaXN0ZW5lciIsIm9uY2UiLCJvZmYiLCJyZW1vdmVMaXN0ZW5lciIsInJlbW92ZUFsbExpc3RlbmVycyIsImVtaXQiLCJwcmVwZW5kTGlzdGVuZXIiLCJwcmVwZW5kT25jZUxpc3RlbmVyIiwibGlzdGVuZXJzIiwiYmluZGluZyIsImN3ZCIsImNoZGlyIiwiZGlyIiwidW1hc2siLCJhYSIsImNhIiwiYyIsImRhIiwiZWEiLCJmYSIsImhhIiwiaWEiLCJjcmVhdGVFbGVtZW50IiwiamEiLCJrYSIsImxhIiwibWEiLCJ2IiwiZCIsImFjY2VwdHNCb29sZWFucyIsImF0dHJpYnV0ZU5hbWUiLCJhdHRyaWJ1dGVOYW1lc3BhY2UiLCJtdXN0VXNlUHJvcGVydHkiLCJwcm9wZXJ0eU5hbWUiLCJzYW5pdGl6ZVVSTCIsInJlbW92ZUVtcHR5U3RyaW5nIiwieiIsInRvTG93ZXJDYXNlIiwicmEiLCJzYSIsInRvVXBwZXJDYXNlIiwidGEiLCJwYSIsInFhIiwib2EiLCJyZW1vdmVBdHRyaWJ1dGUiLCJzZXRBdHRyaWJ1dGUiLCJzZXRBdHRyaWJ1dGVOUyIsInhsaW5rSHJlZiIsInVhIiwiX19TRUNSRVRfSU5URVJOQUxTX0RPX05PVF9VU0VfT1JfWU9VX1dJTExfQkVfRklSRUQiLCJ2YSIsImZvciIsIndhIiwieWEiLCJ6YSIsIkFhIiwiQmEiLCJDYSIsIkRhIiwiRWEiLCJGYSIsIkdhIiwiSGEiLCJJYSIsIkphIiwiS2EiLCJMYSIsIkEiLCJNYSIsInRyaW0iLCJOYSIsIk9hIiwicHJlcGFyZVN0YWNrVHJhY2UiLCJsIiwiaCIsImRpc3BsYXlOYW1lIiwiaW5jbHVkZXMiLCJQYSIsInJlbmRlciIsIlFhIiwiJCR0eXBlb2YiLCJfY29udGV4dCIsIl9wYXlsb2FkIiwiX2luaXQiLCJSYSIsIlNhIiwiVGEiLCJub2RlTmFtZSIsIlZhIiwiX3ZhbHVlVHJhY2tlciIsImdldFZhbHVlIiwic2V0VmFsdWUiLCJzdG9wVHJhY2tpbmciLCJVYSIsIldhIiwiY2hlY2tlZCIsIlhhIiwiYWN0aXZlRWxlbWVudCIsImJvZHkiLCJZYSIsImRlZmF1bHRDaGVja2VkIiwiZGVmYXVsdFZhbHVlIiwiX3dyYXBwZXJTdGF0ZSIsImluaXRpYWxDaGVja2VkIiwiWmEiLCJpbml0aWFsVmFsdWUiLCJjb250cm9sbGVkIiwiYWIiLCJiYiIsImNiIiwiZGIiLCJvd25lckRvY3VtZW50IiwiZWIiLCJmYiIsInNlbGVjdGVkIiwiZGVmYXVsdFNlbGVjdGVkIiwiZGlzYWJsZWQiLCJnYiIsImRhbmdlcm91c2x5U2V0SW5uZXJIVE1MIiwiY2hpbGRyZW4iLCJoYiIsImliIiwiamIiLCJ0ZXh0Q29udGVudCIsImtiIiwibGIiLCJtYiIsIm5iIiwibmFtZXNwYWNlVVJJIiwiaW5uZXJIVE1MIiwiZmlyc3RDaGlsZCIsInJlbW92ZUNoaWxkIiwiYXBwZW5kQ2hpbGQiLCJNU0FwcCIsImV4ZWNVbnNhZmVMb2NhbEZ1bmN0aW9uIiwib2IiLCJsYXN0Q2hpbGQiLCJub2RlVHlwZSIsIm5vZGVWYWx1ZSIsInBiIiwiYW5pbWF0aW9uSXRlcmF0aW9uQ291bnQiLCJhc3BlY3RSYXRpbyIsImJvcmRlckltYWdlT3V0c2V0IiwiYm9yZGVySW1hZ2VTbGljZSIsImJvcmRlckltYWdlV2lkdGgiLCJib3hGbGV4IiwiYm94RmxleEdyb3VwIiwiYm94T3JkaW5hbEdyb3VwIiwiY29sdW1uQ291bnQiLCJmbGV4IiwiZmxleEdyb3ciLCJmbGV4UG9zaXRpdmUiLCJmbGV4U2hyaW5rIiwiZmxleE5lZ2F0aXZlIiwiZmxleE9yZGVyIiwiZ3JpZEFyZWEiLCJncmlkUm93IiwiZ3JpZFJvd0VuZCIsImdyaWRSb3dTcGFuIiwiZ3JpZFJvd1N0YXJ0IiwiZ3JpZENvbHVtbiIsImdyaWRDb2x1bW5FbmQiLCJncmlkQ29sdW1uU3BhbiIsImdyaWRDb2x1bW5TdGFydCIsImZvbnRXZWlnaHQiLCJsaW5lQ2xhbXAiLCJsaW5lSGVpZ2h0Iiwib3BhY2l0eSIsIm9yZGVyIiwib3JwaGFucyIsInRhYlNpemUiLCJ3aWRvd3MiLCJ6SW5kZXgiLCJ6b29tIiwiZmlsbE9wYWNpdHkiLCJmbG9vZE9wYWNpdHkiLCJzdG9wT3BhY2l0eSIsInN0cm9rZURhc2hhcnJheSIsInN0cm9rZURhc2hvZmZzZXQiLCJzdHJva2VNaXRlcmxpbWl0Iiwic3Ryb2tlT3BhY2l0eSIsInN0cm9rZVdpZHRoIiwicWIiLCJyYiIsInNiIiwic3R5bGUiLCJzZXRQcm9wZXJ0eSIsInRiIiwibWVudWl0ZW0iLCJhcmVhIiwiYnIiLCJjb2wiLCJlbWJlZCIsImhyIiwiaW1nIiwia2V5Z2VuIiwibGluayIsIm1ldGEiLCJwYXJhbSIsInRyYWNrIiwid2JyIiwidWIiLCJ2YiIsIndiIiwieGIiLCJzcmNFbGVtZW50IiwiY29ycmVzcG9uZGluZ1VzZUVsZW1lbnQiLCJwYXJlbnROb2RlIiwieWIiLCJ6YiIsIkFiIiwiQmIiLCJDYiIsInN0YXRlTm9kZSIsIkRiIiwiRWIiLCJGYiIsIkdiIiwiSGIiLCJJYiIsIkpiIiwiS2IiLCJMYiIsIk1iIiwiYWRkRXZlbnRMaXN0ZW5lciIsInJlbW92ZUV2ZW50TGlzdGVuZXIiLCJOYiIsIm0iLCJvbkVycm9yIiwiT2IiLCJQYiIsIlFiIiwiUmIiLCJTYiIsIlRiIiwiVmIiLCJhbHRlcm5hdGUiLCJyZXR1cm4iLCJXYiIsIm1lbW9pemVkU3RhdGUiLCJkZWh5ZHJhdGVkIiwiWGIiLCJaYiIsImNoaWxkIiwic2libGluZyIsImN1cnJlbnQiLCJZYiIsIiRiIiwiYWMiLCJ1bnN0YWJsZV9zY2hlZHVsZUNhbGxiYWNrIiwiYmMiLCJ1bnN0YWJsZV9jYW5jZWxDYWxsYmFjayIsImNjIiwidW5zdGFibGVfc2hvdWxkWWllbGQiLCJkYyIsInVuc3RhYmxlX3JlcXVlc3RQYWludCIsIkIiLCJ1bnN0YWJsZV9ub3ciLCJlYyIsInVuc3RhYmxlX2dldEN1cnJlbnRQcmlvcml0eUxldmVsIiwiZmMiLCJ1bnN0YWJsZV9JbW1lZGlhdGVQcmlvcml0eSIsImdjIiwidW5zdGFibGVfVXNlckJsb2NraW5nUHJpb3JpdHkiLCJoYyIsInVuc3RhYmxlX05vcm1hbFByaW9yaXR5IiwiaWMiLCJ1bnN0YWJsZV9Mb3dQcmlvcml0eSIsImpjIiwidW5zdGFibGVfSWRsZVByaW9yaXR5Iiwia2MiLCJsYyIsIm9jIiwiY2x6MzIiLCJwYyIsInFjIiwiTE4yIiwicmMiLCJzYyIsInRjIiwidWMiLCJwZW5kaW5nTGFuZXMiLCJzdXNwZW5kZWRMYW5lcyIsInBpbmdlZExhbmVzIiwiZW50YW5nbGVkTGFuZXMiLCJlbnRhbmdsZW1lbnRzIiwidmMiLCJ4YyIsInljIiwiemMiLCJBYyIsImV2ZW50VGltZXMiLCJDYyIsIkMiLCJEYyIsIkVjIiwiRmMiLCJHYyIsIkhjIiwiSWMiLCJKYyIsIktjIiwiTGMiLCJNYyIsIk5jIiwiT2MiLCJQYyIsIlFjIiwiUmMiLCJTYyIsInBvaW50ZXJJZCIsIlRjIiwibmF0aXZlRXZlbnQiLCJibG9ja2VkT24iLCJkb21FdmVudE5hbWUiLCJldmVudFN5c3RlbUZsYWdzIiwidGFyZ2V0Q29udGFpbmVycyIsIlZjIiwiV2MiLCJwcmlvcml0eSIsImlzRGVoeWRyYXRlZCIsImNvbnRhaW5lckluZm8iLCJYYyIsIlljIiwiZGlzcGF0Y2hFdmVudCIsIlpjIiwiJGMiLCJhZCIsImJkIiwiY2QiLCJSZWFjdEN1cnJlbnRCYXRjaENvbmZpZyIsImRkIiwiZWQiLCJ0cmFuc2l0aW9uIiwiZmQiLCJnZCIsImhkIiwiVWMiLCJzdG9wUHJvcGFnYXRpb24iLCJqZCIsImtkIiwibGQiLCJtZCIsIm5kIiwib2QiLCJrZXlDb2RlIiwiY2hhckNvZGUiLCJwZCIsInFkIiwicmQiLCJfcmVhY3ROYW1lIiwiX3RhcmdldEluc3QiLCJjdXJyZW50VGFyZ2V0IiwiaXNEZWZhdWx0UHJldmVudGVkIiwiZGVmYXVsdFByZXZlbnRlZCIsInJldHVyblZhbHVlIiwiaXNQcm9wYWdhdGlvblN0b3BwZWQiLCJwcmV2ZW50RGVmYXVsdCIsImNhbmNlbEJ1YmJsZSIsInBlcnNpc3QiLCJpc1BlcnNpc3RlbnQiLCJ3ZCIsInhkIiwieWQiLCJzZCIsImV2ZW50UGhhc2UiLCJidWJibGVzIiwiY2FuY2VsYWJsZSIsInRpbWVTdGFtcCIsImlzVHJ1c3RlZCIsInRkIiwidWQiLCJ2aWV3IiwiZGV0YWlsIiwidmQiLCJBZCIsInNjcmVlblgiLCJzY3JlZW5ZIiwiY2xpZW50WCIsImNsaWVudFkiLCJwYWdlWCIsInBhZ2VZIiwiY3RybEtleSIsInNoaWZ0S2V5IiwiYWx0S2V5IiwibWV0YUtleSIsImdldE1vZGlmaWVyU3RhdGUiLCJ6ZCIsImJ1dHRvbiIsImJ1dHRvbnMiLCJyZWxhdGVkVGFyZ2V0IiwiZnJvbUVsZW1lbnQiLCJ0b0VsZW1lbnQiLCJtb3ZlbWVudFgiLCJtb3ZlbWVudFkiLCJCZCIsIkRkIiwiZGF0YVRyYW5zZmVyIiwiRmQiLCJIZCIsImFuaW1hdGlvbk5hbWUiLCJlbGFwc2VkVGltZSIsInBzZXVkb0VsZW1lbnQiLCJJZCIsImNsaXBib2FyZERhdGEiLCJKZCIsIkxkIiwiTWQiLCJFc2MiLCJTcGFjZWJhciIsIkxlZnQiLCJVcCIsIlJpZ2h0IiwiRG93biIsIkRlbCIsIldpbiIsIk1lbnUiLCJBcHBzIiwiU2Nyb2xsIiwiTW96UHJpbnRhYmxlS2V5IiwiTmQiLCJPZCIsIkFsdCIsIkNvbnRyb2wiLCJNZXRhIiwiU2hpZnQiLCJQZCIsIlFkIiwiZnJvbUNoYXJDb2RlIiwibG9jYXRpb24iLCJsb2NhbGUiLCJ3aGljaCIsIlJkIiwiVGQiLCJ3aWR0aCIsImhlaWdodCIsInByZXNzdXJlIiwidGFuZ2VudGlhbFByZXNzdXJlIiwidGlsdFgiLCJ0aWx0WSIsInR3aXN0IiwicG9pbnRlclR5cGUiLCJpc1ByaW1hcnkiLCJWZCIsInRvdWNoZXMiLCJ0YXJnZXRUb3VjaGVzIiwiY2hhbmdlZFRvdWNoZXMiLCJYZCIsIllkIiwiZGVsdGFYIiwid2hlZWxEZWx0YVgiLCJkZWx0YVkiLCJ3aGVlbERlbHRhWSIsIndoZWVsRGVsdGEiLCJkZWx0YVoiLCJkZWx0YU1vZGUiLCJaZCIsIiRkIiwiYWUiLCJiZSIsImRvY3VtZW50TW9kZSIsImNlIiwiZGUiLCJlZSIsImZlIiwiZ2UiLCJoZSIsImllIiwibGUiLCJjb2xvciIsImRhdGUiLCJkYXRldGltZSIsImVtYWlsIiwibW9udGgiLCJwYXNzd29yZCIsInJhbmdlIiwidGVsIiwidGV4dCIsInVybCIsIndlZWsiLCJtZSIsIm5lIiwib2UiLCJldmVudCIsInBlIiwicWUiLCJyZSIsInNlIiwidGUiLCJ1ZSIsInZlIiwid2UiLCJ4ZSIsInllIiwiemUiLCJvbmlucHV0IiwiQWUiLCJkZXRhY2hFdmVudCIsIkJlIiwiQ2UiLCJhdHRhY2hFdmVudCIsIkRlIiwiRWUiLCJGZSIsIkhlIiwiSWUiLCJKZSIsIktlIiwibm9kZSIsIm5leHRTaWJsaW5nIiwiTGUiLCJjb250YWlucyIsImNvbXBhcmVEb2N1bWVudFBvc2l0aW9uIiwiTWUiLCJIVE1MSUZyYW1lRWxlbWVudCIsImNvbnRlbnRXaW5kb3ciLCJocmVmIiwiTmUiLCJjb250ZW50RWRpdGFibGUiLCJPZSIsImZvY3VzZWRFbGVtIiwic2VsZWN0aW9uUmFuZ2UiLCJkb2N1bWVudEVsZW1lbnQiLCJzZWxlY3Rpb25TdGFydCIsInNlbGVjdGlvbkVuZCIsImRlZmF1bHRWaWV3IiwiZ2V0U2VsZWN0aW9uIiwiZXh0ZW5kIiwicmFuZ2VDb3VudCIsImFuY2hvck5vZGUiLCJhbmNob3JPZmZzZXQiLCJmb2N1c05vZGUiLCJmb2N1c09mZnNldCIsImNyZWF0ZVJhbmdlIiwic2V0U3RhcnQiLCJyZW1vdmVBbGxSYW5nZXMiLCJhZGRSYW5nZSIsInNldEVuZCIsImVsZW1lbnQiLCJsZWZ0Iiwic2Nyb2xsTGVmdCIsInRvcCIsInNjcm9sbFRvcCIsImZvY3VzIiwiUGUiLCJRZSIsIlJlIiwiU2UiLCJUZSIsIlVlIiwiVmUiLCJXZSIsImFuaW1hdGlvbmVuZCIsImFuaW1hdGlvbml0ZXJhdGlvbiIsImFuaW1hdGlvbnN0YXJ0IiwidHJhbnNpdGlvbmVuZCIsIlhlIiwiWWUiLCJaZSIsImFuaW1hdGlvbiIsIiRlIiwiYWYiLCJiZiIsImNmIiwiZGYiLCJlZiIsImZmIiwiZ2YiLCJoZiIsImxmIiwibWYiLCJuZiIsIlViIiwibGlzdGVuZXIiLCJEIiwib2YiLCJwZiIsInFmIiwicmYiLCJyYW5kb20iLCJzZiIsImNhcHR1cmUiLCJwYXNzaXZlIiwibiIsInQiLCJKIiwidSIsInciLCJGIiwidGYiLCJ1ZiIsInBhcmVudFdpbmRvdyIsInZmIiwid2YiLCJuYSIsInhhIiwiJGEiLCJiYSIsImplIiwiY2hhciIsImtlIiwidW5zaGlmdCIsInhmIiwieWYiLCJ6ZiIsIkFmIiwiQmYiLCJDZiIsIkRmIiwiRWYiLCJfX2h0bWwiLCJGZiIsIkdmIiwiSGYiLCJKZiIsInF1ZXVlTWljcm90YXNrIiwiSWYiLCJLZiIsIkxmIiwiTWYiLCJwcmV2aW91c1NpYmxpbmciLCJOZiIsIk9mIiwiUGYiLCJRZiIsIlJmIiwiU2YiLCJUZiIsIlVmIiwiRSIsIkciLCJWZiIsIkgiLCJXZiIsIlhmIiwiWWYiLCJjb250ZXh0VHlwZXMiLCJfX3JlYWN0SW50ZXJuYWxNZW1vaXplZFVubWFza2VkQ2hpbGRDb250ZXh0IiwiX19yZWFjdEludGVybmFsTWVtb2l6ZWRNYXNrZWRDaGlsZENvbnRleHQiLCJaZiIsImNoaWxkQ29udGV4dFR5cGVzIiwiJGYiLCJhZyIsImJnIiwiZ2V0Q2hpbGRDb250ZXh0IiwiY2ciLCJfX3JlYWN0SW50ZXJuYWxNZW1vaXplZE1lcmdlZENoaWxkQ29udGV4dCIsImRnIiwiZWciLCJmZyIsImdnIiwiaGciLCJqZyIsImtnIiwibGciLCJtZyIsIm5nIiwib2ciLCJwZyIsInFnIiwicmciLCJzZyIsInRnIiwidWciLCJ2ZyIsIndnIiwieGciLCJ5ZyIsIkkiLCJ6ZyIsIkFnIiwiQmciLCJlbGVtZW50VHlwZSIsImRlbGV0aW9ucyIsIkNnIiwicGVuZGluZ1Byb3BzIiwib3ZlcmZsb3ciLCJ0cmVlQ29udGV4dCIsInJldHJ5TGFuZSIsIkRnIiwibW9kZSIsIkVnIiwiRmciLCJHZyIsIm1lbW9pemVkUHJvcHMiLCJIZyIsIklnIiwiSmciLCJLZyIsIkxnIiwiZGVmYXVsdFByb3BzIiwiTWciLCJOZyIsIk9nIiwiUGciLCJRZyIsIlJnIiwiX2N1cnJlbnRWYWx1ZSIsIlNnIiwiY2hpbGRMYW5lcyIsIlRnIiwiZGVwZW5kZW5jaWVzIiwiZmlyc3RDb250ZXh0IiwibGFuZXMiLCJVZyIsIlZnIiwiY29udGV4dCIsIm1lbW9pemVkVmFsdWUiLCJXZyIsIlhnIiwiWWciLCJpbnRlcmxlYXZlZCIsIlpnIiwiJGciLCJhaCIsInVwZGF0ZVF1ZXVlIiwiYmFzZVN0YXRlIiwiZmlyc3RCYXNlVXBkYXRlIiwibGFzdEJhc2VVcGRhdGUiLCJzaGFyZWQiLCJwZW5kaW5nIiwiZWZmZWN0cyIsImJoIiwiY2giLCJldmVudFRpbWUiLCJsYW5lIiwicGF5bG9hZCIsImNhbGxiYWNrIiwiZGgiLCJLIiwiZWgiLCJmaCIsImdoIiwicSIsInIiLCJoaCIsImloIiwiamgiLCJDb21wb25lbnQiLCJyZWZzIiwia2giLCJuaCIsImlzTW91bnRlZCIsIl9yZWFjdEludGVybmFscyIsImVucXVldWVTZXRTdGF0ZSIsIkwiLCJsaCIsIm1oIiwiZW5xdWV1ZVJlcGxhY2VTdGF0ZSIsImVucXVldWVGb3JjZVVwZGF0ZSIsIm9oIiwic2hvdWxkQ29tcG9uZW50VXBkYXRlIiwiaXNQdXJlUmVhY3RDb21wb25lbnQiLCJwaCIsImNvbnRleHRUeXBlIiwic3RhdGUiLCJ1cGRhdGVyIiwicWgiLCJjb21wb25lbnRXaWxsUmVjZWl2ZVByb3BzIiwiVU5TQUZFX2NvbXBvbmVudFdpbGxSZWNlaXZlUHJvcHMiLCJyaCIsImdldERlcml2ZWRTdGF0ZUZyb21Qcm9wcyIsImdldFNuYXBzaG90QmVmb3JlVXBkYXRlIiwiVU5TQUZFX2NvbXBvbmVudFdpbGxNb3VudCIsImNvbXBvbmVudFdpbGxNb3VudCIsImNvbXBvbmVudERpZE1vdW50Iiwic2giLCJyZWYiLCJfb3duZXIiLCJfc3RyaW5nUmVmIiwidGgiLCJ1aCIsInZoIiwiaW5kZXgiLCJ3aCIsInhoIiwieWgiLCJ6aCIsIkFoIiwiQmgiLCJDaCIsIkRoIiwiRWgiLCJGaCIsIkdoIiwiSGgiLCJJaCIsInRhZ05hbWUiLCJKaCIsIktoIiwiTGgiLCJNIiwiTWgiLCJyZXZlYWxPcmRlciIsIk5oIiwiT2giLCJfd29ya0luUHJvZ3Jlc3NWZXJzaW9uUHJpbWFyeSIsIlBoIiwiUmVhY3RDdXJyZW50RGlzcGF0Y2hlciIsIlFoIiwiUmgiLCJOIiwiTyIsIlAiLCJTaCIsIlRoIiwiVWgiLCJWaCIsIlEiLCJXaCIsIlhoIiwiWWgiLCJaaCIsIiRoIiwiYWkiLCJiaSIsImNpIiwiYmFzZVF1ZXVlIiwiZGkiLCJlaSIsImZpIiwibGFzdFJlbmRlcmVkUmVkdWNlciIsImFjdGlvbiIsImhhc0VhZ2VyU3RhdGUiLCJlYWdlclN0YXRlIiwibGFzdFJlbmRlcmVkU3RhdGUiLCJkaXNwYXRjaCIsImdpIiwiaGkiLCJpaSIsImppIiwia2kiLCJnZXRTbmFwc2hvdCIsImxpIiwibWkiLCJSIiwibmkiLCJsYXN0RWZmZWN0Iiwic3RvcmVzIiwib2kiLCJwaSIsInFpIiwicmkiLCJkZXN0cm95IiwiZGVwcyIsInNpIiwidGkiLCJ1aSIsInZpIiwid2kiLCJ4aSIsInlpIiwiemkiLCJBaSIsIkJpIiwiQ2kiLCJEaSIsIkVpIiwiRmkiLCJHaSIsIkhpIiwiSWkiLCJKaSIsInJlYWRDb250ZXh0IiwidXNlQ2FsbGJhY2siLCJ1c2VDb250ZXh0IiwidXNlRWZmZWN0IiwidXNlSW1wZXJhdGl2ZUhhbmRsZSIsInVzZUluc2VydGlvbkVmZmVjdCIsInVzZUxheW91dEVmZmVjdCIsInVzZU1lbW8iLCJ1c2VSZWR1Y2VyIiwidXNlUmVmIiwidXNlU3RhdGUiLCJ1c2VEZWJ1Z1ZhbHVlIiwidXNlRGVmZXJyZWRWYWx1ZSIsInVzZVRyYW5zaXRpb24iLCJ1c2VNdXRhYmxlU291cmNlIiwidXNlU3luY0V4dGVybmFsU3RvcmUiLCJ1c2VJZCIsInVuc3RhYmxlX2lzTmV3UmVjb25jaWxlciIsImlkZW50aWZpZXJQcmVmaXgiLCJLaSIsImRpZ2VzdCIsIkxpIiwiTWkiLCJOaSIsIk9pIiwiUGkiLCJRaSIsIlJpIiwiZ2V0RGVyaXZlZFN0YXRlRnJvbUVycm9yIiwiY29tcG9uZW50RGlkQ2F0Y2giLCJTaSIsImNvbXBvbmVudFN0YWNrIiwiVGkiLCJwaW5nQ2FjaGUiLCJVaSIsIlZpIiwiV2kiLCJYaSIsIlJlYWN0Q3VycmVudE93bmVyIiwiWWkiLCJaaSIsIiRpIiwiYWoiLCJiaiIsImNqIiwiZGoiLCJlaiIsImJhc2VMYW5lcyIsImNhY2hlUG9vbCIsInRyYW5zaXRpb25zIiwiZmoiLCJnaiIsImhqIiwiaWoiLCJqaiIsIlVOU0FGRV9jb21wb25lbnRXaWxsVXBkYXRlIiwiY29tcG9uZW50V2lsbFVwZGF0ZSIsImNvbXBvbmVudERpZFVwZGF0ZSIsImtqIiwibGoiLCJwZW5kaW5nQ29udGV4dCIsIm1qIiwiQWoiLCJDaiIsIkRqIiwibmoiLCJvaiIsInBqIiwiZmFsbGJhY2siLCJxaiIsInJqIiwidGoiLCJkYXRhc2V0IiwiZGdzdCIsInVqIiwidmoiLCJfcmVhY3RSZXRyeSIsInNqIiwic3VidHJlZUZsYWdzIiwid2oiLCJ4aiIsImlzQmFja3dhcmRzIiwicmVuZGVyaW5nIiwicmVuZGVyaW5nU3RhcnRUaW1lIiwidGFpbCIsInRhaWxNb2RlIiwieWoiLCJFaiIsIlMiLCJGaiIsIkdqIiwid2FzTXVsdGlwbGUiLCJtdWx0aXBsZSIsInN1cHByZXNzSHlkcmF0aW9uV2FybmluZyIsIm9uQ2xpY2siLCJvbmNsaWNrIiwiY3JlYXRlRWxlbWVudE5TIiwiYXV0b0ZvY3VzIiwiY3JlYXRlVGV4dE5vZGUiLCJUIiwiSGoiLCJJaiIsIkpqIiwiS2oiLCJVIiwiTGoiLCJWIiwiTWoiLCJXIiwiTmoiLCJPaiIsIlFqIiwiUmoiLCJTaiIsIlRqIiwiVWoiLCJWaiIsIldqIiwiaW5zZXJ0QmVmb3JlIiwiX3JlYWN0Um9vdENvbnRhaW5lciIsIlhqIiwiWCIsIllqIiwiWmoiLCJhayIsIm9uQ29tbWl0RmliZXJVbm1vdW50IiwiY29tcG9uZW50V2lsbFVubW91bnQiLCJiayIsImNrIiwiZGsiLCJlayIsImZrIiwiaXNIaWRkZW4iLCJnayIsImhrIiwiZGlzcGxheSIsImlrIiwiamsiLCJrayIsImxrIiwiX19yZWFjdEludGVybmFsU25hcHNob3RCZWZvcmVVcGRhdGUiLCJzcmMiLCJXayIsIm1rIiwiY2VpbCIsIm5rIiwicGsiLCJZIiwiWiIsInFrIiwicmsiLCJzayIsInRrIiwidWsiLCJ2ayIsIndrIiwieGsiLCJ5ayIsInprIiwiQWsiLCJCayIsIkNrIiwiRGsiLCJFayIsImNhbGxiYWNrTm9kZSIsImV4cGlyYXRpb25UaW1lcyIsImV4cGlyZWRMYW5lcyIsIndjIiwiY2FsbGJhY2tQcmlvcml0eSIsImlnIiwiRmsiLCJHayIsIkhrIiwiSWsiLCJKayIsIktrIiwiTGsiLCJNayIsIk5rIiwiT2siLCJQayIsImZpbmlzaGVkV29yayIsImZpbmlzaGVkTGFuZXMiLCJRayIsInRpbWVvdXRIYW5kbGUiLCJSayIsIlNrIiwiVGsiLCJVayIsIlZrIiwibXV0YWJsZVJlYWRMYW5lcyIsIkJjIiwiUGoiLCJvbkNvbW1pdEZpYmVyUm9vdCIsIm1jIiwib25SZWNvdmVyYWJsZUVycm9yIiwiWGsiLCJvblBvc3RDb21taXRGaWJlclJvb3QiLCJZayIsIlprIiwiYWwiLCJpc1JlYWN0Q29tcG9uZW50IiwicGVuZGluZ0NoaWxkcmVuIiwiYmwiLCJtdXRhYmxlU291cmNlRWFnZXJIeWRyYXRpb25EYXRhIiwiY2wiLCJjYWNoZSIsInBlbmRpbmdTdXNwZW5zZUJvdW5kYXJpZXMiLCJkbCIsImVsIiwiZmwiLCJnbCIsImhsIiwiaWwiLCJqbCIsInpqIiwiJGsiLCJsbCIsInJlcG9ydEVycm9yIiwibWwiLCJfaW50ZXJuYWxSb290IiwibmwiLCJvbCIsInBsIiwicWwiLCJzbCIsInJsIiwidW5tb3VudCIsInVuc3RhYmxlX3NjaGVkdWxlSHlkcmF0aW9uIiwicXVlcnlTZWxlY3RvckFsbCIsImZvcm0iLCJ0bCIsInVzaW5nQ2xpZW50RW50cnlQb2ludCIsIkV2ZW50cyIsInVsIiwiZmluZEZpYmVyQnlIb3N0SW5zdGFuY2UiLCJidW5kbGVUeXBlIiwicmVuZGVyZXJQYWNrYWdlTmFtZSIsInZsIiwicmVuZGVyZXJDb25maWciLCJvdmVycmlkZUhvb2tTdGF0ZSIsIm92ZXJyaWRlSG9va1N0YXRlRGVsZXRlUGF0aCIsIm92ZXJyaWRlSG9va1N0YXRlUmVuYW1lUGF0aCIsIm92ZXJyaWRlUHJvcHMiLCJvdmVycmlkZVByb3BzRGVsZXRlUGF0aCIsIm92ZXJyaWRlUHJvcHNSZW5hbWVQYXRoIiwic2V0RXJyb3JIYW5kbGVyIiwic2V0U3VzcGVuc2VIYW5kbGVyIiwic2NoZWR1bGVVcGRhdGUiLCJjdXJyZW50RGlzcGF0Y2hlclJlZiIsImZpbmRIb3N0SW5zdGFuY2VCeUZpYmVyIiwiZmluZEhvc3RJbnN0YW5jZXNGb3JSZWZyZXNoIiwic2NoZWR1bGVSZWZyZXNoIiwic2NoZWR1bGVSb290Iiwic2V0UmVmcmVzaEhhbmRsZXIiLCJnZXRDdXJyZW50RmliZXIiLCJyZWNvbmNpbGVyVmVyc2lvbiIsIl9fUkVBQ1RfREVWVE9PTFNfR0xPQkFMX0hPT0tfXyIsIndsIiwiaXNEaXNhYmxlZCIsInN1cHBvcnRzRmliZXIiLCJpbmplY3QiLCJjcmVhdGVQb3J0YWwiLCJjcmVhdGVSb290IiwidW5zdGFibGVfc3RyaWN0TW9kZSIsImZpbmRET01Ob2RlIiwiZmx1c2hTeW5jIiwiaHlkcmF0ZSIsImh5ZHJhdGVSb290IiwiaHlkcmF0ZWRTb3VyY2VzIiwiX2dldFZlcnNpb24iLCJfc291cmNlIiwidW5tb3VudENvbXBvbmVudEF0Tm9kZSIsInVuc3RhYmxlX2JhdGNoZWRVcGRhdGVzIiwidW5zdGFibGVfcmVuZGVyU3VidHJlZUludG9Db250YWluZXIiLCJjaGVja0RDRSIsInNldFN0YXRlIiwiZm9yY2VVcGRhdGUiLCJfX3NlbGYiLCJfX3NvdXJjZSIsImVzY2FwZSIsIl9zdGF0dXMiLCJfcmVzdWx0IiwiZGVmYXVsdCIsIkNoaWxkcmVuIiwidG9BcnJheSIsIm9ubHkiLCJGcmFnbWVudCIsIlByb2ZpbGVyIiwiUHVyZUNvbXBvbmVudCIsIlN0cmljdE1vZGUiLCJTdXNwZW5zZSIsImNsb25lRWxlbWVudCIsImNyZWF0ZUNvbnRleHQiLCJfY3VycmVudFZhbHVlMiIsIl90aHJlYWRDb3VudCIsIlByb3ZpZGVyIiwiQ29uc3VtZXIiLCJfZGVmYXVsdFZhbHVlIiwiX2dsb2JhbE5hbWUiLCJjcmVhdGVGYWN0b3J5IiwiY3JlYXRlUmVmIiwiZm9yd2FyZFJlZiIsImlzVmFsaWRFbGVtZW50IiwibGF6eSIsInN0YXJ0VHJhbnNpdGlvbiIsInVuc3RhYmxlX2FjdCIsInNvcnRJbmRleCIsInBlcmZvcm1hbmNlIiwic2V0SW1tZWRpYXRlIiwic3RhcnRUaW1lIiwiZXhwaXJhdGlvblRpbWUiLCJwcmlvcml0eUxldmVsIiwibmF2aWdhdG9yIiwic2NoZWR1bGluZyIsImlzSW5wdXRQZW5kaW5nIiwiTWVzc2FnZUNoYW5uZWwiLCJwb3J0MiIsInBvcnQxIiwib25tZXNzYWdlIiwicG9zdE1lc3NhZ2UiLCJ1bnN0YWJsZV9Qcm9maWxpbmciLCJ1bnN0YWJsZV9jb250aW51ZUV4ZWN1dGlvbiIsInVuc3RhYmxlX2ZvcmNlRnJhbWVSYXRlIiwidW5zdGFibGVfZ2V0Rmlyc3RDYWxsYmFja05vZGUiLCJ1bnN0YWJsZV9uZXh0IiwidW5zdGFibGVfcGF1c2VFeGVjdXRpb24iLCJ1bnN0YWJsZV9ydW5XaXRoUHJpb3JpdHkiLCJkZWxheSIsInVuc3RhYmxlX3dyYXBDYWxsYmFjayIsInN0eWxlc0luRE9NIiwiZ2V0SW5kZXhCeUlkZW50aWZpZXIiLCJpZGVudGlmaWVyIiwibW9kdWxlc1RvRG9tIiwiaWRDb3VudE1hcCIsImlkZW50aWZpZXJzIiwiaW5kZXhCeUlkZW50aWZpZXIiLCJjc3MiLCJzb3VyY2VNYXAiLCJyZWZlcmVuY2VzIiwiYWRkRWxlbWVudFN0eWxlIiwiYnlJbmRleCIsImFwaSIsImRvbUFQSSIsInVwZGF0ZSIsIm5ld09iaiIsInJlbW92ZSIsImxhc3RJZGVudGlmaWVycyIsIm5ld0xpc3QiLCJuZXdMYXN0SWRlbnRpZmllcnMiLCJfaW5kZXgiLCJpbnNlcnQiLCJzdHlsZVRhcmdldCIsInF1ZXJ5U2VsZWN0b3IiLCJjb250ZW50RG9jdW1lbnQiLCJoZWFkIiwiZ2V0VGFyZ2V0Iiwic2V0QXR0cmlidXRlcyIsImF0dHJpYnV0ZXMiLCJzdHlsZUVsZW1lbnQiLCJub25jZSIsImluc2VydFN0eWxlRWxlbWVudCIsInN0eWxlVGFnVHJhbnNmb3JtIiwicmVtb3ZlU3R5bGVFbGVtZW50Iiwic3R5bGVTaGVldCIsImNzc1RleHQiLCJhcmciLCJjb3B5IiwiZmlsbCIsInJlYWRVSW50OCIsImlzQXJndW1lbnRzT2JqZWN0IiwiaXNHZW5lcmF0b3JGdW5jdGlvbiIsIndoaWNoVHlwZWRBcnJheSIsImlzVHlwZWRBcnJheSIsIkJpZ0ludFN1cHBvcnRlZCIsIlN5bWJvbFN1cHBvcnRlZCIsIk9iamVjdFRvU3RyaW5nIiwibnVtYmVyVmFsdWUiLCJzdHJpbmdWYWx1ZSIsImJvb2xlYW5WYWx1ZSIsImJpZ0ludFZhbHVlIiwic3ltYm9sVmFsdWUiLCJjaGVja0JveGVkUHJpbWl0aXZlIiwicHJvdG90eXBlVmFsdWVPZiIsImlzTWFwVG9TdHJpbmciLCJpc1NldFRvU3RyaW5nIiwiaXNXZWFrTWFwVG9TdHJpbmciLCJpc1dlYWtTZXRUb1N0cmluZyIsImlzQXJyYXlCdWZmZXJUb1N0cmluZyIsImlzQXJyYXlCdWZmZXIiLCJ3b3JraW5nIiwiaXNEYXRhVmlld1RvU3RyaW5nIiwiaXNEYXRhVmlldyIsImlzVmlldyIsImlzVWludDhBcnJheSIsImlzVWludDhDbGFtcGVkQXJyYXkiLCJpc1VpbnQxNkFycmF5IiwiaXNVaW50MzJBcnJheSIsImlzSW50OEFycmF5IiwiaXNJbnQxNkFycmF5IiwiaXNJbnQzMkFycmF5IiwiaXNCaWdJbnQ2NEFycmF5IiwiaXNCaWdVaW50NjRBcnJheSIsImlzV2Vha01hcCIsImlzV2Vha1NldCIsIlNoYXJlZEFycmF5QnVmZmVyQ29weSIsImlzU2hhcmVkQXJyYXlCdWZmZXJUb1N0cmluZyIsImlzU2hhcmVkQXJyYXlCdWZmZXIiLCJpc0FzeW5jRnVuY3Rpb24iLCJpc01hcEl0ZXJhdG9yIiwiaXNTZXRJdGVyYXRvciIsImlzR2VuZXJhdG9yT2JqZWN0IiwiaXNXZWJBc3NlbWJseUNvbXBpbGVkTW9kdWxlIiwibWV0aG9kIiwiZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9ycyIsImRlc2NyaXB0b3JzIiwiZm9ybWF0UmVnRXhwIiwib2JqZWN0cyIsImlzTnVsbCIsImRlcHJlY2F0ZSIsIm5vRGVwcmVjYXRpb24iLCJ0aHJvd0RlcHJlY2F0aW9uIiwidHJhY2VEZXByZWNhdGlvbiIsInRyYWNlIiwiZGVidWdzIiwiZGVidWdFbnZSZWdleCIsIk5PREVfREVCVUciLCJkZWJ1Z0VudiIsIm9wdHMiLCJzZWVuIiwic3R5bGl6ZSIsInN0eWxpemVOb0NvbG9yIiwiY29sb3JzIiwiaXNCb29sZWFuIiwiX2V4dGVuZCIsImlzVW5kZWZpbmVkIiwic3R5bGl6ZVdpdGhDb2xvciIsImZvcm1hdFZhbHVlIiwic3R5bGVUeXBlIiwic3R5bGVzIiwicmV0IiwicHJpbWl0aXZlIiwic2ltcGxlIiwiaXNOdW1iZXIiLCJmb3JtYXRQcmltaXRpdmUiLCJ2aXNpYmxlS2V5cyIsImhhc2giLCJpZHgiLCJhcnJheVRvSGFzaCIsImlzRXJyb3IiLCJmb3JtYXRFcnJvciIsIm91dHB1dCIsImJyYWNlcyIsInRvVVRDU3RyaW5nIiwiZm9ybWF0UHJvcGVydHkiLCJmb3JtYXRBcnJheSIsInJlZHVjZSIsInByZXYiLCJyZWR1Y2VUb1NpbmdsZVN0cmluZyIsImxpbmUiLCJhciIsInBhZCIsImRlYnVnbG9nIiwicGlkIiwidHlwZXMiLCJpc051bGxPclVuZGVmaW5lZCIsImlzU3ltYm9sIiwiaXNQcmltaXRpdmUiLCJpc0J1ZmZlciIsIm1vbnRocyIsInRpbWVzdGFtcCIsImdldEhvdXJzIiwiZ2V0TWludXRlcyIsImdldFNlY29uZHMiLCJnZXREYXRlIiwiZ2V0TW9udGgiLCJwcm9wIiwiaW5oZXJpdHMiLCJvcmlnaW4iLCJrQ3VzdG9tUHJvbWlzaWZpZWRTeW1ib2wiLCJjYWxsYmFja2lmeU9uUmVqZWN0ZWQiLCJuZXdSZWFzb24iLCJwcm9taXNpZnkiLCJvcmlnaW5hbCIsInByb21pc2VSZXNvbHZlIiwicHJvbWlzZVJlamVjdCIsInByb21pc2UiLCJyZWplY3QiLCJjYWxsYmFja2lmeSIsImNhbGxiYWNraWZpZWQiLCJtYXliZUNiIiwicmVqIiwiZm91bmROYW1lIiwicG9zc2libGVOYW1lcyIsIm91dCIsIl9fd2VicGFja19tb2R1bGVfY2FjaGVfXyIsIl9fd2VicGFja19yZXF1aXJlX18iLCJtb2R1bGVJZCIsImNhY2hlZE1vZHVsZSIsIl9fd2VicGFja19tb2R1bGVzX18iLCJfX2VzTW9kdWxlIiwiZGVmaW5pdGlvbiIsIm5jIiwiY2xhc3NOYW1lIiwiQWN0aW9uIiwiQmVmb3JlVW5sb2FkRXZlbnRUeXBlIiwicHJvbXB0QmVmb3JlVW5sb2FkIiwiY3JlYXRlRXZlbnRzIiwiaGFuZGxlcnMiLCJoYW5kbGVyIiwiY3JlYXRlUGF0aCIsIl9yZWYiLCJfcmVmJHBhdGhuYW1lIiwicGF0aG5hbWUiLCJfcmVmJHNlYXJjaCIsIl9yZWYkaGFzaCIsInBhcnNlUGF0aCIsInBhdGgiLCJwYXJzZWRQYXRoIiwiaGFzaEluZGV4Iiwic2VhcmNoSW5kZXgiLCJOYXZpZ2F0aW9uQ29udGV4dCIsIkxvY2F0aW9uQ29udGV4dCIsIlJvdXRlQ29udGV4dCIsIm91dGxldCIsIm1hdGNoZXMiLCJpbnZhcmlhbnQiLCJjb25kIiwibWF0Y2hSb3V0ZXMiLCJyb3V0ZXMiLCJsb2NhdGlvbkFyZyIsImJhc2VuYW1lIiwic3RyaXBCYXNlbmFtZSIsImJyYW5jaGVzIiwiZmxhdHRlblJvdXRlcyIsInNvcnQiLCJzY29yZSIsImV2ZXJ5IiwiY29tcGFyZUluZGV4ZXMiLCJyb3V0ZXNNZXRhIiwiY2hpbGRyZW5JbmRleCIsInJhbmtSb3V0ZUJyYW5jaGVzIiwibWF0Y2hSb3V0ZUJyYW5jaCIsInBhcmVudHNNZXRhIiwicGFyZW50UGF0aCIsInJvdXRlIiwicmVsYXRpdmVQYXRoIiwiY2FzZVNlbnNpdGl2ZSIsInN0YXJ0c1dpdGgiLCJqb2luUGF0aHMiLCJjb21wdXRlU2NvcmUiLCJwYXJhbVJlIiwiaXNTcGxhdCIsInMiLCJzZWdtZW50cyIsImluaXRpYWxTY29yZSIsInNvbWUiLCJzZWdtZW50IiwiYnJhbmNoIiwibWF0Y2hlZFBhcmFtcyIsIm1hdGNoZWRQYXRobmFtZSIsInJlbWFpbmluZ1BhdGhuYW1lIiwibWF0Y2hQYXRoIiwicGFyYW1zIiwicGF0aG5hbWVCYXNlIiwibm9ybWFsaXplUGF0aG5hbWUiLCJwYXR0ZXJuIiwibWF0Y2hlciIsInBhcmFtTmFtZXMiLCJyZWdleHBTb3VyY2UiLCJwYXJhbU5hbWUiLCJjb21waWxlUGF0aCIsImNhcHR1cmVHcm91cHMiLCJzcGxhdFZhbHVlIiwic2FmZWx5RGVjb2RlVVJJQ29tcG9uZW50IiwicmVzb2x2ZVRvIiwidG9BcmciLCJyb3V0ZVBhdGhuYW1lcyIsImxvY2F0aW9uUGF0aG5hbWUiLCJmcm9tIiwidG9QYXRobmFtZSIsInJvdXRlUGF0aG5hbWVJbmRleCIsInRvU2VnbWVudHMiLCJmcm9tUGF0aG5hbWUiLCJyZXNvbHZlUGF0aG5hbWUiLCJub3JtYWxpemVTZWFyY2giLCJub3JtYWxpemVIYXNoIiwicmVzb2x2ZVBhdGgiLCJuZXh0Q2hhciIsInBhdGhzIiwidXNlSW5Sb3V0ZXJDb250ZXh0Iiwicm91dGVQYXRobmFtZXNKc29uIiwiYWN0aXZlUmVmIiwiZ28iLCJwYXJzZSIsInVzZVJlc29sdmVkUGF0aCIsIlJvdXRlIiwiX3Byb3BzIiwiX3JlZjMiLCJiYXNlbmFtZVByb3AiLCJsb2NhdGlvblByb3AiLCJuYXZpZ2F0aW9uVHlwZSIsIlBvcCIsInN0YXRpYyIsInN0YXRpY1Byb3AiLCJuYXZpZ2F0aW9uQ29udGV4dCIsInRyYWlsaW5nUGF0aG5hbWUiLCJSb3V0ZXMiLCJfcmVmNCIsInBhcmVudE1hdGNoZXMiLCJyb3V0ZU1hdGNoIiwicGFyZW50UGFyYW1zIiwicGFyZW50UGF0aG5hbWVCYXNlIiwibG9jYXRpb25Gcm9tQ29udGV4dCIsIl9wYXJzZWRMb2NhdGlvbkFyZyRwYSIsInBhcnNlZExvY2F0aW9uQXJnIiwicmVkdWNlUmlnaHQiLCJfcmVuZGVyTWF0Y2hlcyIsInVzZVJvdXRlcyIsImNyZWF0ZVJvdXRlc0Zyb21DaGlsZHJlbiIsIl9vYmplY3RXaXRob3V0UHJvcGVydGllc0xvb3NlIiwiZXhjbHVkZWQiLCJzb3VyY2VLZXlzIiwiX2V4Y2x1ZGVkIiwiX2V4Y2x1ZGVkMiIsIkJyb3dzZXJSb3V0ZXIiLCJoaXN0b3J5UmVmIiwiX29wdGlvbnMkd2luZG93IiwiZ2xvYmFsSGlzdG9yeSIsImhpc3RvcnkiLCJnZXRJbmRleEFuZExvY2F0aW9uIiwiX3dpbmRvdyRsb2NhdGlvbiIsInVzciIsImJsb2NrZWRQb3BUeCIsImJsb2NrZXJzIiwibmV4dEFjdGlvbiIsIl9nZXRJbmRleEFuZExvY2F0aW9uIiwibmV4dExvY2F0aW9uIiwiZGVsdGEiLCJyZXRyeSIsImFwcGx5VHgiLCJfZ2V0SW5kZXhBbmRMb2NhdGlvbjIiLCJjcmVhdGVIcmVmIiwiZ2V0TmV4dExvY2F0aW9uIiwiZ2V0SGlzdG9yeVN0YXRlQW5kVXJsIiwiYWxsb3dUeCIsIl9nZXRJbmRleEFuZExvY2F0aW9uMyIsInJlcGxhY2VTdGF0ZSIsIlB1c2giLCJfZ2V0SGlzdG9yeVN0YXRlQW5kVXIiLCJoaXN0b3J5U3RhdGUiLCJwdXNoU3RhdGUiLCJSZXBsYWNlIiwiX2dldEhpc3RvcnlTdGF0ZUFuZFVyMiIsImJhY2siLCJmb3J3YXJkIiwibGlzdGVuIiwiYmxvY2siLCJibG9ja2VyIiwidW5ibG9jayIsImNyZWF0ZUJyb3dzZXJIaXN0b3J5IiwiTGluayIsInJlbG9hZERvY3VtZW50IiwicmVzdCIsImpvaW5lZFBhdGhuYW1lIiwiZ2V0VG9QYXRobmFtZSIsImVuZHNXaXRoU2xhc2giLCJ1c2VIcmVmIiwiaW50ZXJuYWxPbkNsaWNrIiwiX3RlbXAiLCJyZXBsYWNlUHJvcCIsIm5hdmlnYXRlIiwiaXNNb2RpZmllZEV2ZW50IiwidXNlTGlua0NsaWNrSGFuZGxlciIsIk5hdkxpbmsiLCJfcmVmNSIsImFyaWFDdXJyZW50UHJvcCIsImNsYXNzTmFtZVByb3AiLCJzdHlsZVByb3AiLCJpc0FjdGl2ZSIsImFyaWFDdXJyZW50Iiwidmlld0JveCIsInhtbG5zIiwiYnVpbGRBcGlVcmwiLCJ1cmxFbmRwb2ludCIsImdldEpzb25EYXRhIiwiZmV0Y2giLCJqc29uIiwiZ2V0TW9kZWxDb25maWciLCJnZXRNb2RlbERldGFpbHMiLCJmaWxlbmFtZSIsImV4cGVyaW1lbnRfbG9nc19kaXJlY3RvcnkiLCJvdXRwdXRfZGlyZWN0b3J5IiwidmlzdWFsaXphdGlvbnNfZGlyZWN0b3J5IiwibW9kZWxfa2V5cyIsImZpbGVzX2xpc3QiLCJNb2RlbENvbmZpZyIsImNvbmZpZ0pzb24iLCJzZXRDb25maWciLCJQYWNrYWdlRGV0YWlscyIsInBhY2thZ2VKc29uIiwic2V0UGFja2FnZUNvbmZpZyIsImVyZyIsImFsbFJ1bnNEZXRhaWxzIiwic2V0QWxsUnVuc0RldGFpbHMiLCJkZXRhaWxzX2ZpbGUiLCJkZXRhaWxzSnNvbiIsImltYWdlX2ZpbGUiLCJtb2RlbFBhcmFtcyIsIlJlYWN0RE9NIiwiZ2V0RWxlbWVudEJ5SWQiXSwic291cmNlUm9vdCI6IiJ9